{
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "header",
        "name": {
          "name": "apiKey",
          "wireValue": "Authorization"
        },
        "valueType": {
          "container": {
            "optional": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "docs": "Token-based authentication with required prefix \"Bearer\"",
        "type": "header"
      }
    ]
  },
  "selfHosted": false,
  "types": {
    "AccountDetails": {
      "name": {
        "typeId": "AccountDetails",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountDetails"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsId_example_0": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "integration",
              "wireValue": "integration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsIntegration_example_0": "BambooHR"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "integration_slug",
              "wireValue": "integration_slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsIntegrationSlug_example_0": "bamboohr"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CategoryEnum",
                      "typeId": "CategoryEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_user_origin_id",
              "wireValue": "end_user_origin_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsEndUserOriginId_example_0": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_user_organization_name",
              "wireValue": "end_user_organization_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsEndUserOrganizationName_example_0": "Waystar Royco"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_user_email_address",
              "wireValue": "end_user_email_address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "email"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsEndUserEmailAddress_example_0": "kendall.roy@waystar-royco.com"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsStatus_example_0": "COMPLETE"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "webhook_listener_url",
              "wireValue": "webhook_listener_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsWebhookListenerUrl_example_0": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "is_duplicate",
              "wireValue": "is_duplicate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsIsDuplicate_example_0": true
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountDetails_example_autogenerated": {}
        }
      }
    },
    "AccountDetailsAndActions": {
      "name": {
        "typeId": "AccountDetailsAndActions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountDetailsAndActions"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsAndActionsId_example_0": "e59b1821-f85c-4e28-a6b3-1804156f3563"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "category",
              "wireValue": "category"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CategoryEnum",
                  "typeId": "CategoryEnum",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AccountDetailsAndActionsStatusEnum",
              "typeId": "AccountDetailsAndActionsStatusEnum",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status_detail",
              "wireValue": "status_detail"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsStatusDetail_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "end_user_origin_id",
              "wireValue": "end_user_origin_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsAndActionsEndUserOriginId_example_0": "3ac95cde-6c7f-4eef-afec-be710b42308d"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_user_organization_name",
              "wireValue": "end_user_organization_name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsAndActionsEndUserOrganizationName_example_0": "Foo Bar, LLC"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_user_email_address",
              "wireValue": "end_user_email_address"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsAndActionsEndUserEmailAddress_example_0": "hradmin@foobar.dev"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "webhook_listener_url",
              "wireValue": "webhook_listener_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsAndActionsWebhookListenerUrl_example_0": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "is_duplicate",
              "wireValue": "is_duplicate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountDetailsAndActionsIsDuplicate_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "integration",
              "wireValue": "integration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountDetailsAndActionsIntegration",
                  "typeId": "AccountDetailsAndActionsIntegration",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The LinkedAccount Object\n### Description\nThe `LinkedAccount` object is used to represent an end user's link with a specific integration.\n\n### Usage Example\nView a list of your organization's `LinkedAccount` objects.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountDetailsAndActions_example_autogenerated": {
            "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
            "status": "COMPLETE",
            "end_user_organization_name": "Foo Bar, LLC",
            "end_user_email_address": "hradmin@foobar.dev",
            "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
          }
        }
      }
    },
    "AccountDetailsAndActionsIntegration": {
      "name": {
        "typeId": "AccountDetailsAndActionsIntegration",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountDetailsAndActionsIntegration"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "categories",
              "wireValue": "categories"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CategoriesEnum",
                  "typeId": "CategoriesEnum",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationCategories_example_autogenerated": [
                  "hris"
                ]
              }
            }
          },
          {
            "name": {
              "name": "image",
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationImage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "square_image",
              "wireValue": "square_image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationSquareImage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "color",
              "wireValue": "color"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationColor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "slug",
              "wireValue": "slug"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationSlug_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "passthrough_available",
              "wireValue": "passthrough_available"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationPassthroughAvailable_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "available_model_operations",
              "wireValue": "available_model_operations"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ModelOperation",
                      "typeId": "ModelOperation",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountDetailsAndActionsIntegrationAvailableModelOperations_example_autogenerated": [
                  {
                    "model_name": "Candidate",
                    "available_operations": [
                      "FETCH",
                      "CREATE"
                    ],
                    "required_post_parameters": [
                      "remote_user_id"
                    ],
                    "supported_fields": [
                      "first_name",
                      "last_name",
                      "company",
                      "title"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountDetailsAndActionsIntegration_example_autogenerated": {
            "name": "string",
            "categories": [
              "hris"
            ],
            "color": "string",
            "slug": "string",
            "passthrough_available": true
          }
        }
      }
    },
    "AccountDetailsAndActionsStatusEnum": {
      "name": {
        "typeId": "AccountDetailsAndActionsStatusEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountDetailsAndActionsStatusEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "COMPLETE",
              "wireValue": "COMPLETE"
            }
          },
          {
            "name": {
              "name": "INCOMPLETE",
              "wireValue": "INCOMPLETE"
            }
          },
          {
            "name": {
              "name": "RELINK_NEEDED",
              "wireValue": "RELINK_NEEDED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `COMPLETE` - COMPLETE\n* `INCOMPLETE` - INCOMPLETE\n* `RELINK_NEEDED` - RELINK_NEEDED",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountDetailsAndActionsStatusEnum_example_autogenerated": "COMPLETE"
        }
      }
    },
    "AccountIntegration": {
      "name": {
        "typeId": "AccountIntegration",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountIntegration"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Company name.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "categories",
              "wireValue": "categories"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CategoriesEnum",
                      "typeId": "CategoriesEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Category or categories this integration belongs to. Multiple categories should be comma separated, i.e. [ats, hris].",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationCategories_example_autogenerated": [
                  "hris"
                ]
              }
            }
          },
          {
            "name": {
              "name": "image",
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uri"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Company logo in rectangular shape. <b>Upload an image with a clear background.</b>",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationImage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "square_image",
              "wireValue": "square_image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uri"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Company logo in square shape. <b>Upload an image with a white background.</b>",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationSquareImage_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "color",
              "wireValue": "color"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "maxLength": 18,
                        "pattern": "^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The color of this integration used for buttons and text throughout the app and landing pages. <b>Choose a darker, saturated color.</b>",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationColor_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "slug",
              "wireValue": "slug"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationSlug_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_in_beta",
              "wireValue": "is_in_beta"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "If checked, this integration will not appear in the linking flow, and will appear elsewhere with a Beta tag.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationIsInBeta_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "api_endpoints_to_documentation_urls",
              "wireValue": "api_endpoints_to_documentation_urls"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "type": "unknown"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Mapping of API endpoints to documentation urls for support. Example: {'GET': [['/common-model-scopes', 'https://docs.merge.dev/accounting/common-model-scopes/#common_model_scopes_retrieve'],['/common-model-actions', 'https://docs.merge.dev/accounting/common-model-actions/#common_model_actions_retrieve']], 'POST': []}",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AccountIntegrationApiEndpointsToDocumentationUrls_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountIntegration_example_autogenerated": {
            "name": "string"
          }
        }
      }
    },
    "AccountToken": {
      "name": {
        "typeId": "AccountToken",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountToken"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "account_token",
              "wireValue": "account_token"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AccountTokenAccountToken_example_0": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "integration",
              "wireValue": "integration"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AccountIntegration",
              "typeId": "AccountIntegration",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountToken_example_autogenerated": {
            "account_token": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
            "integration": {
              "name": "string"
            }
          }
        }
      }
    },
    "AccountTypeEnum": {
      "name": {
        "typeId": "AccountTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AccountTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "SAVINGS",
              "wireValue": "SAVINGS"
            }
          },
          {
            "name": {
              "name": "CHECKING",
              "wireValue": "CHECKING"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AccountTypeEnum_example_autogenerated": "SAVINGS"
        }
      }
    },
    "AvailableActions": {
      "name": {
        "typeId": "AvailableActions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AvailableActions"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "integration",
              "wireValue": "integration"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AccountIntegration",
              "typeId": "AccountIntegration",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "passthrough_available",
              "wireValue": "passthrough_available"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AvailableActionsPassthroughAvailable_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "available_model_operations",
              "wireValue": "available_model_operations"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ModelOperation",
                      "typeId": "ModelOperation",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "AvailableActionsAvailableModelOperations_example_0": [
                  {
                    "model_name": "Candidate",
                    "available_operations": [
                      "FETCH",
                      "CREATE"
                    ],
                    "required_post_parameters": [
                      "remote_user_id"
                    ],
                    "supported_fields": [
                      "first_name",
                      "last_name",
                      "company",
                      "title"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The AvailableActions Object\n### Description\nThe `Activity` object is used to see all available model/operation combinations for an integration.\n\n### Usage Example\nFetch all the actions available for the `Zenefits` integration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AvailableActions_example_autogenerated": {
            "integration": {
              "name": "string"
            },
            "passthrough_available": true
          }
        }
      }
    },
    "BankInfo": {
      "name": {
        "typeId": "BankInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfo"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoId_example_0": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoRemoteId_example_0": "123234"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee with this bank account.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoEmployee_example_0": "a3617eb4-dfe3-426f-921e-a65fc1661e10"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "account_number",
              "wireValue": "account_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 100
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The account number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoAccountNumber_example_0": "439291590"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "routing_number",
              "wireValue": "routing_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The routing number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoRoutingNumber_example_0": "089690059"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "bank_name",
              "wireValue": "bank_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The bank name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoBankName_example_0": "Chase"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "account_type",
              "wireValue": "account_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AccountTypeEnum",
                      "typeId": "AccountTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The bank account type\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_created_at",
              "wireValue": "remote_created_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "When the matching bank object was created in the third party system.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoRemoteCreatedAt_example_0": "2021-12-06T10:11:26Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BankInfoRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BankInfoRemoteData_example_0": [
                  {
                    "path": "/bank-info",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The BankInfo Object\n### Description\nThe `BankInfo` object is used to represent the Bank Account information for an Employee.\n\n### Usage Example\nFetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfo_example_autogenerated": {}
        }
      }
    },
    "Benefit": {
      "name": {
        "typeId": "Benefit",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Benefit"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitId_example_0": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee on the plan.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitEmployee_example_0": "d2f972d0-2526-434b-9409-4c3b468e08f0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "provider_name",
              "wireValue": "provider_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The name of the benefit provider.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitProviderName_example_0": "Blue Shield of California"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "benefit_plan_type",
              "wireValue": "benefit_plan_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of benefit plan",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BenefitBenefitPlanType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "employee_contribution",
              "wireValue": "employee_contribution"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's contribution.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitEmployeeContribution_example_0": 23.65
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "company_contribution",
              "wireValue": "company_contribution"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The company's contribution.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitCompanyContribution_example_0": 150
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the benefit started.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitStartDate_example_0": "2020-11-15 00:59:25.309761+00:00"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_date",
              "wireValue": "end_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the benefit ended.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitEndDate_example_0": "2021-10-15 00:23:25.309761+00:00"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "BenefitRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "BenefitRemoteData_example_0": [
                  {
                    "path": "/benefits",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Benefit Object\n### Description\nThe `Benefit` object is used to represent a benefit that an employee has enrolled in.\n\n### Usage Example\nFetch from the `LIST Benefits` endpoint and filter by `ID` to show all benefits.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Benefit_example_autogenerated": {}
        }
      }
    },
    "CategoriesEnum": {
      "name": {
        "typeId": "CategoriesEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CategoriesEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "hris",
              "wireValue": "hris"
            }
          },
          {
            "name": {
              "name": "ats",
              "wireValue": "ats"
            }
          },
          {
            "name": {
              "name": "accounting",
              "wireValue": "accounting"
            }
          },
          {
            "name": {
              "name": "ticketing",
              "wireValue": "ticketing"
            }
          },
          {
            "name": {
              "name": "crm",
              "wireValue": "crm"
            }
          },
          {
            "name": {
              "name": "mktg",
              "wireValue": "mktg"
            }
          },
          {
            "name": {
              "name": "filestorage",
              "wireValue": "filestorage"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CategoriesEnum_example_autogenerated": "hris"
        }
      }
    },
    "CategoryEnum": {
      "name": {
        "typeId": "CategoryEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CategoryEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "hris",
              "wireValue": "hris"
            }
          },
          {
            "name": {
              "name": "ats",
              "wireValue": "ats"
            }
          },
          {
            "name": {
              "name": "accounting",
              "wireValue": "accounting"
            }
          },
          {
            "name": {
              "name": "ticketing",
              "wireValue": "ticketing"
            }
          },
          {
            "name": {
              "name": "crm",
              "wireValue": "crm"
            }
          },
          {
            "name": {
              "name": "mktg",
              "wireValue": "mktg"
            }
          },
          {
            "name": {
              "name": "filestorage",
              "wireValue": "filestorage"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CategoryEnum_example_autogenerated": "hris"
        }
      }
    },
    "CommonModelScopesBodyRequest": {
      "name": {
        "typeId": "CommonModelScopesBodyRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CommonModelScopesBodyRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_id",
              "wireValue": "model_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "CommonModelScopesBodyRequestModelId_example_0": "hris.Employee"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "enabled_actions",
              "wireValue": "enabled_actions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EnabledActionsEnum",
                  "typeId": "EnabledActionsEnum",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "CommonModelScopesBodyRequestEnabledActions_example_0": [
                  "READ",
                  "WRITE"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "disabled_fields",
              "wireValue": "disabled_fields"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "minLength": 1
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "CommonModelScopesBodyRequestDisabledFields_example_0": [
                  "first_name"
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CommonModelScopesBodyRequest_example_autogenerated": {
            "model_id": "hris.Employee",
            "enabled_actions": [
              "READ",
              "WRITE"
            ],
            "disabled_fields": [
              "first_name"
            ]
          }
        }
      }
    },
    "Company": {
      "name": {
        "typeId": "Company",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Company"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyId_example_0": "1b998423-db0a-4037-a4cf-f79c60cb67b3"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "legal_name",
              "wireValue": "legal_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The company's legal name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyLegalName_example_0": "Waystar Royco, Inc."
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "display_name",
              "wireValue": "display_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The company's display name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyDisplayName_example_0": "Waystar Royco"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "eins",
              "wireValue": "eins"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {},
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The company's Employer Identification Numbers.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyEins_example_0": [
                  "12-3456789",
                  "12-3451111",
                  "11-0011000"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "CompanyRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "CompanyRemoteData_example_0": [
                  {
                    "path": "/companies",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Company Object\n### Description\nThe `Company` object is used to represent a company within the HRIS / Payroll system.\n\n### Usage Example\nFetch from the `LIST Companies` endpoint and filter by `ID` to show all companies.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Company_example_autogenerated": {}
        }
      }
    },
    "ConditionSchema": {
      "name": {
        "typeId": "ConditionSchema",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionSchema"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID of the condition schema. This ID is used when updating selective syncs for a linked account.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSchemaId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "common_model",
              "wireValue": "common_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The common model for which a condition schema is defined.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSchemaCommonModel_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "native_name",
              "wireValue": "native_name"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "User-facing *native condition* name. e.g. \"Skip Manager\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSchemaNativeName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "field_name",
              "wireValue": "field_name"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSchemaFieldName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_unique",
              "wireValue": "is_unique"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether this condition can only be applied once. If false, the condition can be AND'd together multiple times.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSchemaIsUnique_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "condition_type",
              "wireValue": "condition_type"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ConditionTypeEnum",
              "typeId": "ConditionTypeEnum",
              "inline": false,
              "type": "named"
            },
            "docs": "The type of value(s) that can be set for this condition.\n\n* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "operators",
              "wireValue": "operators"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "OperatorSchema",
                  "typeId": "OperatorSchema",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The schemas for the operators that can be used on a condition.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ConditionSchemaOperators_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionSchema_example_autogenerated": {
            "id": "string",
            "native_name": "string",
            "field_name": "string",
            "condition_type": "BOOLEAN",
            "operators": [
              {}
            ]
          }
        }
      }
    },
    "ConditionTypeEnum": {
      "name": {
        "typeId": "ConditionTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ConditionTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "BOOLEAN",
                "camelCase": {
                  "unsafeName": "boolean",
                  "safeName": "boolean_"
                },
                "snakeCase": {
                  "unsafeName": "boolean",
                  "safeName": "boolean_"
                }
              },
              "wireValue": "BOOLEAN"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "DATE",
                "pascalCase": {
                  "unsafeName": "Date",
                  "safeName": "Date_"
                }
              },
              "wireValue": "DATE"
            }
          },
          {
            "name": {
              "name": "DATE_TIME",
              "wireValue": "DATE_TIME"
            }
          },
          {
            "name": {
              "name": "INTEGER",
              "wireValue": "INTEGER"
            }
          },
          {
            "name": {
              "name": "FLOAT",
              "wireValue": "FLOAT"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "STRING",
                "camelCase": {
                  "unsafeName": "string",
                  "safeName": "string_"
                },
                "snakeCase": {
                  "unsafeName": "string",
                  "safeName": "string_"
                }
              },
              "wireValue": "STRING"
            }
          },
          {
            "name": {
              "name": "LIST_OF_STRINGS",
              "wireValue": "LIST_OF_STRINGS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `BOOLEAN` - BOOLEAN\n* `DATE` - DATE\n* `DATE_TIME` - DATE_TIME\n* `INTEGER` - INTEGER\n* `FLOAT` - FLOAT\n* `STRING` - STRING\n* `LIST_OF_STRINGS` - LIST_OF_STRINGS",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ConditionTypeEnum_example_autogenerated": "BOOLEAN"
        }
      }
    },
    "CountryEnum": {
      "name": {
        "typeId": "CountryEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "CountryEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "AF",
              "wireValue": "AF"
            }
          },
          {
            "name": {
              "name": "AX",
              "wireValue": "AX"
            }
          },
          {
            "name": {
              "name": "AL",
              "wireValue": "AL"
            }
          },
          {
            "name": {
              "name": "DZ",
              "wireValue": "DZ"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "AS",
                "camelCase": {
                  "unsafeName": "as",
                  "safeName": "as_"
                },
                "snakeCase": {
                  "unsafeName": "as",
                  "safeName": "as_"
                }
              },
              "wireValue": "AS"
            }
          },
          {
            "name": {
              "name": "AD",
              "wireValue": "AD"
            }
          },
          {
            "name": {
              "name": "AO",
              "wireValue": "AO"
            }
          },
          {
            "name": {
              "name": "AI",
              "wireValue": "AI"
            }
          },
          {
            "name": {
              "name": "AQ",
              "wireValue": "AQ"
            }
          },
          {
            "name": {
              "name": "AG",
              "wireValue": "AG"
            }
          },
          {
            "name": {
              "name": "AR",
              "wireValue": "AR"
            }
          },
          {
            "name": {
              "name": "AM",
              "wireValue": "AM"
            }
          },
          {
            "name": {
              "name": "AW",
              "wireValue": "AW"
            }
          },
          {
            "name": {
              "name": "AU",
              "wireValue": "AU"
            }
          },
          {
            "name": {
              "name": "AT",
              "wireValue": "AT"
            }
          },
          {
            "name": {
              "name": "AZ",
              "wireValue": "AZ"
            }
          },
          {
            "name": {
              "name": "BS",
              "wireValue": "BS"
            }
          },
          {
            "name": {
              "name": "BH",
              "wireValue": "BH"
            }
          },
          {
            "name": {
              "name": "BD",
              "wireValue": "BD"
            }
          },
          {
            "name": {
              "name": "BB",
              "wireValue": "BB"
            }
          },
          {
            "name": {
              "name": "BY",
              "wireValue": "BY"
            }
          },
          {
            "name": {
              "name": "BE",
              "wireValue": "BE"
            }
          },
          {
            "name": {
              "name": "BZ",
              "wireValue": "BZ"
            }
          },
          {
            "name": {
              "name": "BJ",
              "wireValue": "BJ"
            }
          },
          {
            "name": {
              "name": "BM",
              "wireValue": "BM"
            }
          },
          {
            "name": {
              "name": "BT",
              "wireValue": "BT"
            }
          },
          {
            "name": {
              "name": "BO",
              "wireValue": "BO"
            }
          },
          {
            "name": {
              "name": "BQ",
              "wireValue": "BQ"
            }
          },
          {
            "name": {
              "name": "BA",
              "wireValue": "BA"
            }
          },
          {
            "name": {
              "name": "BW",
              "wireValue": "BW"
            }
          },
          {
            "name": {
              "name": "BV",
              "wireValue": "BV"
            }
          },
          {
            "name": {
              "name": "BR",
              "wireValue": "BR"
            }
          },
          {
            "name": {
              "name": "IO",
              "wireValue": "IO"
            }
          },
          {
            "name": {
              "name": "BN",
              "wireValue": "BN"
            }
          },
          {
            "name": {
              "name": "BG",
              "wireValue": "BG"
            }
          },
          {
            "name": {
              "name": "BF",
              "wireValue": "BF"
            }
          },
          {
            "name": {
              "name": "BI",
              "wireValue": "BI"
            }
          },
          {
            "name": {
              "name": "CV",
              "wireValue": "CV"
            }
          },
          {
            "name": {
              "name": "KH",
              "wireValue": "KH"
            }
          },
          {
            "name": {
              "name": "CM",
              "wireValue": "CM"
            }
          },
          {
            "name": {
              "name": "CA",
              "wireValue": "CA"
            }
          },
          {
            "name": {
              "name": "KY",
              "wireValue": "KY"
            }
          },
          {
            "name": {
              "name": "CF",
              "wireValue": "CF"
            }
          },
          {
            "name": {
              "name": "TD",
              "wireValue": "TD"
            }
          },
          {
            "name": {
              "name": "CL",
              "wireValue": "CL"
            }
          },
          {
            "name": {
              "name": "CN",
              "wireValue": "CN"
            }
          },
          {
            "name": {
              "name": "CX",
              "wireValue": "CX"
            }
          },
          {
            "name": {
              "name": "CC",
              "wireValue": "CC"
            }
          },
          {
            "name": {
              "name": "CO",
              "wireValue": "CO"
            }
          },
          {
            "name": {
              "name": "KM",
              "wireValue": "KM"
            }
          },
          {
            "name": {
              "name": "CG",
              "wireValue": "CG"
            }
          },
          {
            "name": {
              "name": "CD",
              "wireValue": "CD"
            }
          },
          {
            "name": {
              "name": "CK",
              "wireValue": "CK"
            }
          },
          {
            "name": {
              "name": "CR",
              "wireValue": "CR"
            }
          },
          {
            "name": {
              "name": "CI",
              "wireValue": "CI"
            }
          },
          {
            "name": {
              "name": "HR",
              "wireValue": "HR"
            }
          },
          {
            "name": {
              "name": "CU",
              "wireValue": "CU"
            }
          },
          {
            "name": {
              "name": "CW",
              "wireValue": "CW"
            }
          },
          {
            "name": {
              "name": "CY",
              "wireValue": "CY"
            }
          },
          {
            "name": {
              "name": "CZ",
              "wireValue": "CZ"
            }
          },
          {
            "name": {
              "name": "DK",
              "wireValue": "DK"
            }
          },
          {
            "name": {
              "name": "DJ",
              "wireValue": "DJ"
            }
          },
          {
            "name": {
              "name": "DM",
              "wireValue": "DM"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "DO",
                "camelCase": {
                  "unsafeName": "do",
                  "safeName": "do_"
                },
                "snakeCase": {
                  "unsafeName": "do",
                  "safeName": "do_"
                }
              },
              "wireValue": "DO"
            }
          },
          {
            "name": {
              "name": "EC",
              "wireValue": "EC"
            }
          },
          {
            "name": {
              "name": "EG",
              "wireValue": "EG"
            }
          },
          {
            "name": {
              "name": "SV",
              "wireValue": "SV"
            }
          },
          {
            "name": {
              "name": "GQ",
              "wireValue": "GQ"
            }
          },
          {
            "name": {
              "name": "ER",
              "wireValue": "ER"
            }
          },
          {
            "name": {
              "name": "EE",
              "wireValue": "EE"
            }
          },
          {
            "name": {
              "name": "SZ",
              "wireValue": "SZ"
            }
          },
          {
            "name": {
              "name": "ET",
              "wireValue": "ET"
            }
          },
          {
            "name": {
              "name": "FK",
              "wireValue": "FK"
            }
          },
          {
            "name": {
              "name": "FO",
              "wireValue": "FO"
            }
          },
          {
            "name": {
              "name": "FJ",
              "wireValue": "FJ"
            }
          },
          {
            "name": {
              "name": "FI",
              "wireValue": "FI"
            }
          },
          {
            "name": {
              "name": "FR",
              "wireValue": "FR"
            }
          },
          {
            "name": {
              "name": "GF",
              "wireValue": "GF"
            }
          },
          {
            "name": {
              "name": "PF",
              "wireValue": "PF"
            }
          },
          {
            "name": {
              "name": "TF",
              "wireValue": "TF"
            }
          },
          {
            "name": {
              "name": "GA",
              "wireValue": "GA"
            }
          },
          {
            "name": {
              "name": "GM",
              "wireValue": "GM"
            }
          },
          {
            "name": {
              "name": "GE",
              "wireValue": "GE"
            }
          },
          {
            "name": {
              "name": "DE",
              "wireValue": "DE"
            }
          },
          {
            "name": {
              "name": "GH",
              "wireValue": "GH"
            }
          },
          {
            "name": {
              "name": "GI",
              "wireValue": "GI"
            }
          },
          {
            "name": {
              "name": "GR",
              "wireValue": "GR"
            }
          },
          {
            "name": {
              "name": "GL",
              "wireValue": "GL"
            }
          },
          {
            "name": {
              "name": "GD",
              "wireValue": "GD"
            }
          },
          {
            "name": {
              "name": "GP",
              "wireValue": "GP"
            }
          },
          {
            "name": {
              "name": "GU",
              "wireValue": "GU"
            }
          },
          {
            "name": {
              "name": "GT",
              "wireValue": "GT"
            }
          },
          {
            "name": {
              "name": "GG",
              "wireValue": "GG"
            }
          },
          {
            "name": {
              "name": "GN",
              "wireValue": "GN"
            }
          },
          {
            "name": {
              "name": "GW",
              "wireValue": "GW"
            }
          },
          {
            "name": {
              "name": "GY",
              "wireValue": "GY"
            }
          },
          {
            "name": {
              "name": "HT",
              "wireValue": "HT"
            }
          },
          {
            "name": {
              "name": "HM",
              "wireValue": "HM"
            }
          },
          {
            "name": {
              "name": "VA",
              "wireValue": "VA"
            }
          },
          {
            "name": {
              "name": "HN",
              "wireValue": "HN"
            }
          },
          {
            "name": {
              "name": "HK",
              "wireValue": "HK"
            }
          },
          {
            "name": {
              "name": "HU",
              "wireValue": "HU"
            }
          },
          {
            "name": {
              "name": "IS",
              "wireValue": "IS"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "IN",
                "camelCase": {
                  "unsafeName": "in",
                  "safeName": "in_"
                },
                "snakeCase": {
                  "unsafeName": "in",
                  "safeName": "in_"
                }
              },
              "wireValue": "IN"
            }
          },
          {
            "name": {
              "name": "ID",
              "wireValue": "ID"
            }
          },
          {
            "name": {
              "name": "IR",
              "wireValue": "IR"
            }
          },
          {
            "name": {
              "name": "IQ",
              "wireValue": "IQ"
            }
          },
          {
            "name": {
              "name": "IE",
              "wireValue": "IE"
            }
          },
          {
            "name": {
              "name": "IM",
              "wireValue": "IM"
            }
          },
          {
            "name": {
              "name": "IL",
              "wireValue": "IL"
            }
          },
          {
            "name": {
              "name": "IT",
              "wireValue": "IT"
            }
          },
          {
            "name": {
              "name": "JM",
              "wireValue": "JM"
            }
          },
          {
            "name": {
              "name": "JP",
              "wireValue": "JP"
            }
          },
          {
            "name": {
              "name": "JE",
              "wireValue": "JE"
            }
          },
          {
            "name": {
              "name": "JO",
              "wireValue": "JO"
            }
          },
          {
            "name": {
              "name": "KZ",
              "wireValue": "KZ"
            }
          },
          {
            "name": {
              "name": "KE",
              "wireValue": "KE"
            }
          },
          {
            "name": {
              "name": "KI",
              "wireValue": "KI"
            }
          },
          {
            "name": {
              "name": "KW",
              "wireValue": "KW"
            }
          },
          {
            "name": {
              "name": "KG",
              "wireValue": "KG"
            }
          },
          {
            "name": {
              "name": "LA",
              "wireValue": "LA"
            }
          },
          {
            "name": {
              "name": "LV",
              "wireValue": "LV"
            }
          },
          {
            "name": {
              "name": "LB",
              "wireValue": "LB"
            }
          },
          {
            "name": {
              "name": "LS",
              "wireValue": "LS"
            }
          },
          {
            "name": {
              "name": "LR",
              "wireValue": "LR"
            }
          },
          {
            "name": {
              "name": "LY",
              "wireValue": "LY"
            }
          },
          {
            "name": {
              "name": "LI",
              "wireValue": "LI"
            }
          },
          {
            "name": {
              "name": "LT",
              "wireValue": "LT"
            }
          },
          {
            "name": {
              "name": "LU",
              "wireValue": "LU"
            }
          },
          {
            "name": {
              "name": "MO",
              "wireValue": "MO"
            }
          },
          {
            "name": {
              "name": "MG",
              "wireValue": "MG"
            }
          },
          {
            "name": {
              "name": "MW",
              "wireValue": "MW"
            }
          },
          {
            "name": {
              "name": "MY",
              "wireValue": "MY"
            }
          },
          {
            "name": {
              "name": "MV",
              "wireValue": "MV"
            }
          },
          {
            "name": {
              "name": "ML",
              "wireValue": "ML"
            }
          },
          {
            "name": {
              "name": "MT",
              "wireValue": "MT"
            }
          },
          {
            "name": {
              "name": "MH",
              "wireValue": "MH"
            }
          },
          {
            "name": {
              "name": "MQ",
              "wireValue": "MQ"
            }
          },
          {
            "name": {
              "name": "MR",
              "wireValue": "MR"
            }
          },
          {
            "name": {
              "name": "MU",
              "wireValue": "MU"
            }
          },
          {
            "name": {
              "name": "YT",
              "wireValue": "YT"
            }
          },
          {
            "name": {
              "name": "MX",
              "wireValue": "MX"
            }
          },
          {
            "name": {
              "name": "FM",
              "wireValue": "FM"
            }
          },
          {
            "name": {
              "name": "MD",
              "wireValue": "MD"
            }
          },
          {
            "name": {
              "name": "MC",
              "wireValue": "MC"
            }
          },
          {
            "name": {
              "name": "MN",
              "wireValue": "MN"
            }
          },
          {
            "name": {
              "name": "ME",
              "wireValue": "ME"
            }
          },
          {
            "name": {
              "name": "MS",
              "wireValue": "MS"
            }
          },
          {
            "name": {
              "name": "MA",
              "wireValue": "MA"
            }
          },
          {
            "name": {
              "name": "MZ",
              "wireValue": "MZ"
            }
          },
          {
            "name": {
              "name": "MM",
              "wireValue": "MM"
            }
          },
          {
            "name": {
              "name": "NA",
              "wireValue": "NA"
            }
          },
          {
            "name": {
              "name": "NR",
              "wireValue": "NR"
            }
          },
          {
            "name": {
              "name": "NP",
              "wireValue": "NP"
            }
          },
          {
            "name": {
              "name": "NL",
              "wireValue": "NL"
            }
          },
          {
            "name": {
              "name": "NC",
              "wireValue": "NC"
            }
          },
          {
            "name": {
              "name": "NZ",
              "wireValue": "NZ"
            }
          },
          {
            "name": {
              "name": "NI",
              "wireValue": "NI"
            }
          },
          {
            "name": {
              "name": "NE",
              "wireValue": "NE"
            }
          },
          {
            "name": {
              "name": "NG",
              "wireValue": "NG"
            }
          },
          {
            "name": {
              "name": "NU",
              "wireValue": "NU"
            }
          },
          {
            "name": {
              "name": "NF",
              "wireValue": "NF"
            }
          },
          {
            "name": {
              "name": "KP",
              "wireValue": "KP"
            }
          },
          {
            "name": {
              "name": "MK",
              "wireValue": "MK"
            }
          },
          {
            "name": {
              "name": "MP",
              "wireValue": "MP"
            }
          },
          {
            "name": {
              "name": "NO",
              "wireValue": "NO"
            }
          },
          {
            "name": {
              "name": "OM",
              "wireValue": "OM"
            }
          },
          {
            "name": {
              "name": "PK",
              "wireValue": "PK"
            }
          },
          {
            "name": {
              "name": "PW",
              "wireValue": "PW"
            }
          },
          {
            "name": {
              "name": "PS",
              "wireValue": "PS"
            }
          },
          {
            "name": {
              "name": "PA",
              "wireValue": "PA"
            }
          },
          {
            "name": {
              "name": "PG",
              "wireValue": "PG"
            }
          },
          {
            "name": {
              "name": "PY",
              "wireValue": "PY"
            }
          },
          {
            "name": {
              "name": "PE",
              "wireValue": "PE"
            }
          },
          {
            "name": {
              "name": "PH",
              "wireValue": "PH"
            }
          },
          {
            "name": {
              "name": "PN",
              "wireValue": "PN"
            }
          },
          {
            "name": {
              "name": "PL",
              "wireValue": "PL"
            }
          },
          {
            "name": {
              "name": "PT",
              "wireValue": "PT"
            }
          },
          {
            "name": {
              "name": "PR",
              "wireValue": "PR"
            }
          },
          {
            "name": {
              "name": "QA",
              "wireValue": "QA"
            }
          },
          {
            "name": {
              "name": "RE",
              "wireValue": "RE"
            }
          },
          {
            "name": {
              "name": "RO",
              "wireValue": "RO"
            }
          },
          {
            "name": {
              "name": "RU",
              "wireValue": "RU"
            }
          },
          {
            "name": {
              "name": "RW",
              "wireValue": "RW"
            }
          },
          {
            "name": {
              "name": "BL",
              "wireValue": "BL"
            }
          },
          {
            "name": {
              "name": "SH",
              "wireValue": "SH"
            }
          },
          {
            "name": {
              "name": "KN",
              "wireValue": "KN"
            }
          },
          {
            "name": {
              "name": "LC",
              "wireValue": "LC"
            }
          },
          {
            "name": {
              "name": "MF",
              "wireValue": "MF"
            }
          },
          {
            "name": {
              "name": "PM",
              "wireValue": "PM"
            }
          },
          {
            "name": {
              "name": "VC",
              "wireValue": "VC"
            }
          },
          {
            "name": {
              "name": "WS",
              "wireValue": "WS"
            }
          },
          {
            "name": {
              "name": "SM",
              "wireValue": "SM"
            }
          },
          {
            "name": {
              "name": "ST",
              "wireValue": "ST"
            }
          },
          {
            "name": {
              "name": "SA",
              "wireValue": "SA"
            }
          },
          {
            "name": {
              "name": "SN",
              "wireValue": "SN"
            }
          },
          {
            "name": {
              "name": "RS",
              "wireValue": "RS"
            }
          },
          {
            "name": {
              "name": "SC",
              "wireValue": "SC"
            }
          },
          {
            "name": {
              "name": "SL",
              "wireValue": "SL"
            }
          },
          {
            "name": {
              "name": "SG",
              "wireValue": "SG"
            }
          },
          {
            "name": {
              "name": "SX",
              "wireValue": "SX"
            }
          },
          {
            "name": {
              "name": "SK",
              "wireValue": "SK"
            }
          },
          {
            "name": {
              "name": "SI",
              "wireValue": "SI"
            }
          },
          {
            "name": {
              "name": "SB",
              "wireValue": "SB"
            }
          },
          {
            "name": {
              "name": "SO",
              "wireValue": "SO"
            }
          },
          {
            "name": {
              "name": "ZA",
              "wireValue": "ZA"
            }
          },
          {
            "name": {
              "name": "GS",
              "wireValue": "GS"
            }
          },
          {
            "name": {
              "name": "KR",
              "wireValue": "KR"
            }
          },
          {
            "name": {
              "name": "SS",
              "wireValue": "SS"
            }
          },
          {
            "name": {
              "name": "ES",
              "wireValue": "ES"
            }
          },
          {
            "name": {
              "name": "LK",
              "wireValue": "LK"
            }
          },
          {
            "name": {
              "name": "SD",
              "wireValue": "SD"
            }
          },
          {
            "name": {
              "name": "SR",
              "wireValue": "SR"
            }
          },
          {
            "name": {
              "name": "SJ",
              "wireValue": "SJ"
            }
          },
          {
            "name": {
              "name": "SE",
              "wireValue": "SE"
            }
          },
          {
            "name": {
              "name": "CH",
              "wireValue": "CH"
            }
          },
          {
            "name": {
              "name": "SY",
              "wireValue": "SY"
            }
          },
          {
            "name": {
              "name": "TW",
              "wireValue": "TW"
            }
          },
          {
            "name": {
              "name": "TJ",
              "wireValue": "TJ"
            }
          },
          {
            "name": {
              "name": "TZ",
              "wireValue": "TZ"
            }
          },
          {
            "name": {
              "name": "TH",
              "wireValue": "TH"
            }
          },
          {
            "name": {
              "name": "TL",
              "wireValue": "TL"
            }
          },
          {
            "name": {
              "name": "TG",
              "wireValue": "TG"
            }
          },
          {
            "name": {
              "name": "TK",
              "wireValue": "TK"
            }
          },
          {
            "name": {
              "name": "TO",
              "wireValue": "TO"
            }
          },
          {
            "name": {
              "name": "TT",
              "wireValue": "TT"
            }
          },
          {
            "name": {
              "name": "TN",
              "wireValue": "TN"
            }
          },
          {
            "name": {
              "name": "TR",
              "wireValue": "TR"
            }
          },
          {
            "name": {
              "name": "TM",
              "wireValue": "TM"
            }
          },
          {
            "name": {
              "name": "TC",
              "wireValue": "TC"
            }
          },
          {
            "name": {
              "name": "TV",
              "wireValue": "TV"
            }
          },
          {
            "name": {
              "name": "UG",
              "wireValue": "UG"
            }
          },
          {
            "name": {
              "name": "UA",
              "wireValue": "UA"
            }
          },
          {
            "name": {
              "name": "AE",
              "wireValue": "AE"
            }
          },
          {
            "name": {
              "name": "GB",
              "wireValue": "GB"
            }
          },
          {
            "name": {
              "name": "UM",
              "wireValue": "UM"
            }
          },
          {
            "name": {
              "name": "US",
              "wireValue": "US"
            }
          },
          {
            "name": {
              "name": "UY",
              "wireValue": "UY"
            }
          },
          {
            "name": {
              "name": "UZ",
              "wireValue": "UZ"
            }
          },
          {
            "name": {
              "name": "VU",
              "wireValue": "VU"
            }
          },
          {
            "name": {
              "name": "VE",
              "wireValue": "VE"
            }
          },
          {
            "name": {
              "name": "VN",
              "wireValue": "VN"
            }
          },
          {
            "name": {
              "name": "VG",
              "wireValue": "VG"
            }
          },
          {
            "name": {
              "name": "VI",
              "wireValue": "VI"
            }
          },
          {
            "name": {
              "name": "WF",
              "wireValue": "WF"
            }
          },
          {
            "name": {
              "name": "EH",
              "wireValue": "EH"
            }
          },
          {
            "name": {
              "name": "YE",
              "wireValue": "YE"
            }
          },
          {
            "name": {
              "name": "ZM",
              "wireValue": "ZM"
            }
          },
          {
            "name": {
              "name": "ZW",
              "wireValue": "ZW"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "CountryEnum_example_autogenerated": "AF"
        }
      }
    },
    "DataPassthroughRequest": {
      "name": {
        "typeId": "DataPassthroughRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DataPassthroughRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "method",
              "wireValue": "method"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "MethodEnum",
              "typeId": "MethodEnum",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "path",
              "wireValue": "path"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DataPassthroughRequestPath_example_0": "/scooters"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "base_url_override",
              "wireValue": "base_url_override"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DataPassthroughRequestBaseUrlOverride_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DataPassthroughRequestData_example_0": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "multipart_form_data",
              "wireValue": "multipart_form_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "MultipartFormFieldRequest",
                          "typeId": "MultipartFormFieldRequest",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DataPassthroughRequestMultipartFormData_example_autogenerated": [
                  {
                    "name": "resume",
                    "data": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "headers",
              "wireValue": "headers"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DataPassthroughRequestHeaders_example_0": {
                  "EXTRA-HEADER": "value"
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "request_format",
              "wireValue": "request_format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFormatEnum",
                      "typeId": "RequestFormatEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "normalize_response",
              "wireValue": "normalize_response"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DataPassthroughRequestNormalizeResponse_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The DataPassthrough Object\n### Description\nThe `DataPassthrough` object is used to send information to an otherwise-unsupported third-party endpoint.\n\n### Usage Example\nCreate a `DataPassthrough` to get team hierarchies from your Rippling integration.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DataPassthroughRequest_example_autogenerated": {
            "method": "GET",
            "path": "/scooters"
          }
        }
      }
    },
    "DebugModeLog": {
      "name": {
        "typeId": "DebugModeLog",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DebugModeLog"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "log_id",
              "wireValue": "log_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DebugModeLogLogId_example_0": "99433219-8017-4acd-bb3c-ceb23d663832"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "dashboard_view",
              "wireValue": "dashboard_view"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DebugModeLogDashboardView_example_0": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "log_summary",
              "wireValue": "log_summary"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "DebugModelLogSummary",
              "typeId": "DebugModelLogSummary",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DebugModeLog_example_autogenerated": {
            "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
            "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
            "log_summary": {
              "url": "https://harvest.greenhouse.io/v1/candidates/",
              "method": "POST",
              "status_code": 200
            }
          }
        }
      }
    },
    "DebugModelLogSummary": {
      "name": {
        "typeId": "DebugModelLogSummary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "DebugModelLogSummary"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "url",
              "wireValue": "url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DebugModelLogSummaryUrl_example_0": "https://harvest.greenhouse.io/v1/candidates/"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "method",
              "wireValue": "method"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DebugModelLogSummaryMethod_example_0": "POST"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status_code",
              "wireValue": "status_code"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DebugModelLogSummaryStatusCode_example_0": 200
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "DebugModelLogSummary_example_autogenerated": {
            "url": "https://harvest.greenhouse.io/v1/candidates/",
            "method": "POST",
            "status_code": 200
          }
        }
      }
    },
    "Deduction": {
      "name": {
        "typeId": "Deduction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Deduction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionId_example_0": "5fd439fc-1b64-4755-b275-64918936c365"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionRemoteId_example_0": "93478612"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee_payroll_run",
              "wireValue": "employee_payroll_run"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionEmployeePayrollRun_example_0": "35347df1-95e7-46e2-93cc-66f1191edca5"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The deduction's name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionName_example_0": "Social Security"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee_deduction",
              "wireValue": "employee_deduction"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of money that is withheld from an employee's gross pay by the employee.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionEmployeeDeduction_example_0": 34.54
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "company_deduction",
              "wireValue": "company_deduction"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of money that is withheld on behalf of an employee by the company.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionCompanyDeduction_example_0": 78.78
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "DeductionRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "DeductionRemoteData_example_0": [
                  {
                    "path": "/payroll-deduction",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Deduction Object\n### Description\nThe `Deduction` object is used to represent an array of the wages withheld from total earnings for the purpose of paying taxes.\n\n### Usage Example\nFetch from the `LIST Deductions` endpoint and filter by `ID` to show all deductions.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Deduction_example_autogenerated": {}
        }
      }
    },
    "Earning": {
      "name": {
        "typeId": "Earning",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Earning"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EarningId_example_0": "babbced6-3a81-4775-8da2-490dc6385259"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EarningRemoteId_example_0": "52802"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee_payroll_run",
              "wireValue": "employee_payroll_run"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "EarningEmployeePayrollRun_example_0": "35347df1-95e7-46e2-93cc-66f1191edca5"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount earned.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EarningAmount_example_0": 1002.34
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EarningTypeEnum",
                      "typeId": "EarningTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of earning.\n\n* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EarningRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EarningModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EarningFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EarningRemoteData_example_autogenerated": [
                  {
                    "path": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Earning Object\n### Description\nThe `Earning` object is used to represent an array of different compensations that an employee receives within specific wage categories.\n\n### Usage Example\nFetch from the `LIST Earnings` endpoint and filter by `ID` to show all earnings.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Earning_example_autogenerated": {}
        }
      }
    },
    "EarningTypeEnum": {
      "name": {
        "typeId": "EarningTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EarningTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "SALARY",
              "wireValue": "SALARY"
            }
          },
          {
            "name": {
              "name": "REIMBURSEMENT",
              "wireValue": "REIMBURSEMENT"
            }
          },
          {
            "name": {
              "name": "OVERTIME",
              "wireValue": "OVERTIME"
            }
          },
          {
            "name": {
              "name": "BONUS",
              "wireValue": "BONUS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `SALARY` - SALARY\n* `REIMBURSEMENT` - REIMBURSEMENT\n* `OVERTIME` - OVERTIME\n* `BONUS` - BONUS",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EarningTypeEnum_example_autogenerated": "SALARY"
        }
      }
    },
    "Employee": {
      "name": {
        "typeId": "Employee",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Employee"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeId_example_0": "0958cbc6-6040-430a-848e-aafacbadf4ae"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee_number",
              "wireValue": "employee_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's number that appears in the third-party integration's UI.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeEmployeeNumber_example_0": "2"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "company",
              "wireValue": "company"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The ID of the employee's company.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeCompany_example_0": "8d9fd929-436c-4fd4-a48b-0c61f68d6178"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "first_name",
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's first name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeFirstName_example_0": "Greg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "last_name",
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's last name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeLastName_example_0": "Hirsch"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "display_full_name",
              "wireValue": "display_full_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeDisplayFullName_example_0": "Cousin Greg Hirsch"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "username",
              "wireValue": "username"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's username that appears in the remote UI.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeUsername_example_0": "cousingreg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "groups",
              "wireValue": "groups"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeGroups_example_0": [
                  "21a54124-397f-494d-985e-3c5b330b8a68"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "work_email",
              "wireValue": "work_email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 254,
                            "format": "email"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's work email.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeWorkEmail_example_0": "greg@merge.dev"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "personal_email",
              "wireValue": "personal_email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 254,
                            "format": "email"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's personal email.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePersonalEmail_example_0": "greg@gmail.com"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "mobile_phone_number",
              "wireValue": "mobile_phone_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's mobile phone number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeMobilePhoneNumber_example_0": "+1234567890"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employments",
              "wireValue": "employments"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Array of `Employment` IDs for this Employee.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeEmployments_example_0": [
                  "17a54124-287f-494d-965e-3c5b330c9a68"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "home_location",
              "wireValue": "home_location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's home address.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeHomeLocation_example_0": "d2f972d0-2526-434b-9409-4c3b468e08f0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "work_location",
              "wireValue": "work_location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's work address.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeWorkLocation_example_0": "9efbc633-3387-4306-aa55-e2c635e6bb4f"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "manager",
              "wireValue": "manager"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee ID of the employee's manager.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeManager_example_0": "0048ea5b-911e-4dff-9364-92070dea62ff"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "team",
              "wireValue": "team"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's team.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeTeam_example_0": "249c9faa-3045-4a31-953b-8f22d3613301"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_group",
              "wireValue": "pay_group"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's pay group",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayGroup_example_0": "ad1264e2-39be-4787-b749-f1aade9e3405"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "ssn",
              "wireValue": "ssn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 100
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's social security number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeSsn_example_0": "1234567890"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "GenderEnum",
                      "typeId": "GenderEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "ethnicity",
              "wireValue": "ethnicity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EthnicityEnum",
                      "typeId": "EthnicityEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "marital_status",
              "wireValue": "marital_status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "MaritalStatusEnum",
                      "typeId": "MaritalStatusEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "date_of_birth",
              "wireValue": "date_of_birth"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's date of birth.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeDateOfBirth_example_0": "1990-11-10T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "hire_date",
              "wireValue": "hire_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeHireDate_example_0": "2020-10-10T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeStartDate_example_0": "2020-10-11T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_created_at",
              "wireValue": "remote_created_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "When the third party's employee was created.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRemoteCreatedAt_example_0": "2020-10-11T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employment_status",
              "wireValue": "employment_status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EmploymentStatusEnum",
                      "typeId": "EmploymentStatusEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "termination_date",
              "wireValue": "termination_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's termination date.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeTerminationDate_example_0": "2021-10-12T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "avatar",
              "wireValue": "avatar"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 2000,
                            "format": "uri"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The URL of the employee's avatar image.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeAvatar_example_0": "http://alturl.com/h2h8m"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "custom_fields",
              "wireValue": "custom_fields"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Custom fields configured for a given model.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmployeeCustomFields_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmployeeRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRemoteData_example_0": [
                  {
                    "path": "/people",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Employee_example_autogenerated": {}
        }
      }
    },
    "EmployeeEndpointRequest": {
      "name": {
        "typeId": "EmployeeEndpointRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeeEndpointRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EmployeeRequest",
              "typeId": "EmployeeRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeeEndpointRequest_example_autogenerated": {
            "model": {}
          }
        }
      }
    },
    "EmployeePayrollRun": {
      "name": {
        "typeId": "EmployeePayrollRun",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeePayrollRun"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunId_example_0": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee whose payroll is being run.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunEmployee_example_0": "d2f972d0-2526-434b-9409-4c3b468e08f0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "payroll_run",
              "wireValue": "payroll_run"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The payroll being run.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunPayrollRun_example_0": "35347df1-95e7-46e2-93cc-66f1191edca5"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "gross_pay",
              "wireValue": "gross_pay"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The total earnings throughout a given period for an employee before any deductions are made.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunGrossPay_example_0": 1342.67
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "net_pay",
              "wireValue": "net_pay"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The take-home pay throughout a given period for an employee after deductions are made.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunNetPay_example_0": 865.78
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the payroll run started.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunStartDate_example_0": "2020-11-08T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_date",
              "wireValue": "end_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the payroll run ended.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunEndDate_example_0": "2020-11-09T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "check_date",
              "wireValue": "check_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the payroll run was checked.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunCheckDate_example_0": "2020-11-10T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "earnings",
              "wireValue": "earnings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Earning",
                      "typeId": "Earning",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunEarnings_example_0": [
                  {
                    "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "amount": 1002.34,
                    "type": "SALARY"
                  },
                  {
                    "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "amount": 8342.34,
                    "type": "OVERTIME"
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "deductions",
              "wireValue": "deductions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Deduction",
                      "typeId": "Deduction",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunDeductions_example_0": [
                  {
                    "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "name": "Social Security",
                    "employee_deduction": 34.54,
                    "company_deduction": 78.78
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "taxes",
              "wireValue": "taxes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Tax",
                      "typeId": "Tax",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunTaxes_example_0": [
                  {
                    "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                    "name": "California State Income Tax",
                    "amount": 100.25,
                    "employer_tax": "False"
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmployeePayrollRunRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeePayrollRunRemoteData_example_0": [
                  {
                    "path": "/employee-payroll",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The EmployeePayrollRun Object\n### Description\nThe `EmployeePayrollRun` object is used to represent an employee's pay statement for a specific payroll run.\n\n### Usage Example\nFetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to show all employee payroll runs.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeePayrollRun_example_autogenerated": {}
        }
      }
    },
    "EmployeeRequest": {
      "name": {
        "typeId": "EmployeeRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeeRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "employee_number",
              "wireValue": "employee_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's number that appears in the third-party integration's UI.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestEmployeeNumber_example_0": "2"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "company",
              "wireValue": "company"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The ID of the employee's company.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestCompany_example_0": "8d9fd929-436c-4fd4-a48b-0c61f68d6178"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "first_name",
              "wireValue": "first_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's first name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestFirstName_example_0": "Greg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "last_name",
              "wireValue": "last_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's last name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestLastName_example_0": "Hirsch"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "display_full_name",
              "wireValue": "display_full_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's full name, to use for display purposes. If a preferred first name is available, the full name will include the preferred first name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestDisplayFullName_example_0": "Cousin Greg Hirsch"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "username",
              "wireValue": "username"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's username that appears in the remote UI.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestUsername_example_0": "cousingreg"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "groups",
              "wireValue": "groups"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestGroups_example_0": [
                  "21a54124-397f-494d-985e-3c5b330b8a68"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "work_email",
              "wireValue": "work_email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 254,
                            "format": "email"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's work email.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestWorkEmail_example_0": "greg@merge.dev"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "personal_email",
              "wireValue": "personal_email"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 254,
                            "format": "email"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's personal email.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestPersonalEmail_example_0": "greg@gmail.com"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "mobile_phone_number",
              "wireValue": "mobile_phone_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's mobile phone number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestMobilePhoneNumber_example_0": "+1234567890"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employments",
              "wireValue": "employments"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Array of `Employment` IDs for this Employee.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestEmployments_example_0": [
                  "17a54124-287f-494d-965e-3c5b330c9a68"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "home_location",
              "wireValue": "home_location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's home address.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestHomeLocation_example_0": "d2f972d0-2526-434b-9409-4c3b468e08f0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "work_location",
              "wireValue": "work_location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's work address.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestWorkLocation_example_0": "9efbc633-3387-4306-aa55-e2c635e6bb4f"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "manager",
              "wireValue": "manager"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee ID of the employee's manager.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestManager_example_0": "0048ea5b-911e-4dff-9364-92070dea62ff"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "team",
              "wireValue": "team"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's team.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestTeam_example_0": "249c9faa-3045-4a31-953b-8f22d3613301"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_group",
              "wireValue": "pay_group"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's pay group",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestPayGroup_example_0": "ad1264e2-39be-4787-b749-f1aade9e3405"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "ssn",
              "wireValue": "ssn"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 100
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's social security number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestSsn_example_0": "1234567890"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "GenderEnum",
                      "typeId": "GenderEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's gender.\n\n* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "ethnicity",
              "wireValue": "ethnicity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EthnicityEnum",
                      "typeId": "EthnicityEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's ethnicity.\n\n* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "marital_status",
              "wireValue": "marital_status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "MaritalStatusEnum",
                      "typeId": "MaritalStatusEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's filing status as related to marital status.\n\n* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "date_of_birth",
              "wireValue": "date_of_birth"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's date of birth.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestDateOfBirth_example_0": "1990-11-10T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "hire_date",
              "wireValue": "hire_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The date that the employee was hired, usually the day that an offer letter is signed. If an employee has multiple hire dates from previous employments, this represents the most recent hire date. Note: If you're looking for the employee's start date, refer to the start_date field.",
            "availability": {
              "status": "DEPRECATED"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestHireDate_example_0": "2020-10-10T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The date that the employee started working. If an employee was rehired, the most recent start date will be returned.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestStartDate_example_0": "2020-10-11T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employment_status",
              "wireValue": "employment_status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EmploymentStatusEnum",
                      "typeId": "EmploymentStatusEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employment status of the employee.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "termination_date",
              "wireValue": "termination_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee's termination date.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestTerminationDate_example_0": "2021-10-12T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "avatar",
              "wireValue": "avatar"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "maxLength": 2000,
                            "format": "uri"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The URL of the employee's avatar image.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestAvatar_example_0": "http://alturl.com/h2h8m"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "integration_params",
              "wireValue": "integration_params"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "WRITE_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestIntegrationParams_example_0": {
                  "unique_integration_field": "unique_integration_field_value"
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "linked_account_params",
              "wireValue": "linked_account_params"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "WRITE_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmployeeRequestLinkedAccountParams_example_0": {
                  "unique_linked_account_field": "unique_linked_account_field_value"
                }
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Employee Object\n### Description\nThe `Employee` object is used to represent any person who has been employed by a company.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and filter by `ID` to show all employees.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeeRequest_example_autogenerated": {}
        }
      }
    },
    "EmployeeResponse": {
      "name": {
        "typeId": "EmployeeResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeeResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "Employee",
              "typeId": "Employee",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "warnings",
              "wireValue": "warnings"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WarningValidationProblem",
                  "typeId": "WarningValidationProblem",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmployeeResponseWarnings_example_autogenerated": [
                  {
                    "title": "Unrecognized Field",
                    "detail": "An unrecognized field, age, was passed in with request data.",
                    "problem_type": "UNRECOGNIZED_FIELD"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "errors",
              "wireValue": "errors"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ErrorValidationProblem",
                  "typeId": "ErrorValidationProblem",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmployeeResponseErrors_example_autogenerated": [
                  {
                    "title": "Missing Required Field",
                    "detail": "custom_fields is a required field on model.",
                    "problem_type": "MISSING_REQUIRED_FIELD"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "logs",
              "wireValue": "logs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "DebugModeLog",
                      "typeId": "DebugModeLog",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmployeeResponseLogs_example_autogenerated": [
                  {
                    "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                    "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                    "log_summary": {
                      "url": "https://harvest.greenhouse.io/v1/candidates/",
                      "method": "POST",
                      "status_code": 200
                    }
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeeResponse_example_autogenerated": {
            "model": {},
            "warnings": [
              {
                "title": "Unrecognized Field",
                "detail": "An unrecognized field, age, was passed in with request data.",
                "problem_type": "UNRECOGNIZED_FIELD"
              }
            ],
            "errors": [
              {
                "title": "Missing Required Field",
                "detail": "custom_fields is a required field on model.",
                "problem_type": "MISSING_REQUIRED_FIELD"
              }
            ]
          }
        }
      }
    },
    "Employment": {
      "name": {
        "typeId": "Employment",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Employment"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentId_example_0": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee holding this position.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentEmployee_example_0": "0958cbc6-6040-430a-848e-aafacbadf4ae"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "job_title",
              "wireValue": "job_title"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The position's title.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentJobTitle_example_0": "Executive Assistant to Tom Wambsgans"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_rate",
              "wireValue": "pay_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The position's pay rate in dollars.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentPayRate_example_0": 50000
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_period",
              "wireValue": "pay_period"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PayPeriodEnum",
                      "typeId": "PayPeriodEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The time period this pay rate encompasses.\n\n* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_frequency",
              "wireValue": "pay_frequency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PayFrequencyEnum",
                      "typeId": "PayFrequencyEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The position's pay frequency.\n\n* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_currency",
              "wireValue": "pay_currency"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PayCurrencyEnum",
                      "typeId": "PayCurrencyEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The position's currency code.\n\n* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_group",
              "wireValue": "pay_group"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employment's pay group",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentPayGroup_example_0": "d4e4837f-9900-484c-ac40-528365bb08ef"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "flsa_status",
              "wireValue": "flsa_status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "FlsaStatusEnum",
                      "typeId": "FlsaStatusEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The position's FLSA status.\n\n* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "effective_date",
              "wireValue": "effective_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The position's effective date.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentEffectiveDate_example_0": "2023-10-06T18:42:34Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employment_type",
              "wireValue": "employment_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EmploymentTypeEnum",
                      "typeId": "EmploymentTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The position's type of employment.\n\n* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EmploymentRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "EmploymentRemoteData_example_0": [
                  {
                    "path": "/jobs",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Employment Object\n### Description\nThe `Employment` object is used to represent a job position at a company.\n\nPlease note: When there is a change in pay or title, integrations with historical data will create new Employment objects while integrations without historical data will update existing ones.\n\n### Usage Example\nFetch from the `LIST Employments` endpoint and filter by `ID` to show all employees.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Employment_example_autogenerated": {}
        }
      }
    },
    "EmploymentStatusEnum": {
      "name": {
        "typeId": "EmploymentStatusEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentStatusEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "ACTIVE",
              "wireValue": "ACTIVE"
            }
          },
          {
            "name": {
              "name": "PENDING",
              "wireValue": "PENDING"
            }
          },
          {
            "name": {
              "name": "INACTIVE",
              "wireValue": "INACTIVE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentStatusEnum_example_autogenerated": "ACTIVE"
        }
      }
    },
    "EmploymentTypeEnum": {
      "name": {
        "typeId": "EmploymentTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "FULL_TIME",
              "wireValue": "FULL_TIME"
            }
          },
          {
            "name": {
              "name": "PART_TIME",
              "wireValue": "PART_TIME"
            }
          },
          {
            "name": {
              "name": "INTERN",
              "wireValue": "INTERN"
            }
          },
          {
            "name": {
              "name": "CONTRACTOR",
              "wireValue": "CONTRACTOR"
            }
          },
          {
            "name": {
              "name": "FREELANCE",
              "wireValue": "FREELANCE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `FULL_TIME` - FULL_TIME\n* `PART_TIME` - PART_TIME\n* `INTERN` - INTERN\n* `CONTRACTOR` - CONTRACTOR\n* `FREELANCE` - FREELANCE",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentTypeEnum_example_autogenerated": "FULL_TIME"
        }
      }
    },
    "EnabledActionsEnum": {
      "name": {
        "typeId": "EnabledActionsEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EnabledActionsEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "READ",
              "wireValue": "READ"
            }
          },
          {
            "name": {
              "name": "WRITE",
              "wireValue": "WRITE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `READ` - READ\n* `WRITE` - WRITE",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EnabledActionsEnum_example_autogenerated": "READ"
        }
      }
    },
    "EncodingEnum": {
      "name": {
        "typeId": "EncodingEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EncodingEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "RAW",
              "wireValue": "RAW"
            }
          },
          {
            "name": {
              "name": "BASE64",
              "wireValue": "BASE64"
            }
          },
          {
            "name": {
              "name": "GZIP_BASE64",
              "wireValue": "GZIP_BASE64"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EncodingEnum_example_autogenerated": "RAW"
        }
      }
    },
    "EndUserDetailsRequest": {
      "name": {
        "typeId": "EndUserDetailsRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EndUserDetailsRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "end_user_email_address",
              "wireValue": "end_user_email_address"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestEndUserEmailAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "end_user_organization_name",
              "wireValue": "end_user_organization_name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Your end user's organization.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestEndUserOrganizationName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "end_user_origin_id",
              "wireValue": "end_user_origin_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestEndUserOriginId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "categories",
              "wireValue": "categories"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "CategoriesEnum",
                  "typeId": "CategoriesEnum",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The integration categories to show in Merge Link.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestCategories_example_autogenerated": [
                  "hris"
                ]
              }
            }
          },
          {
            "name": {
              "name": "integration",
              "wireValue": "integration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestIntegration_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "link_expiry_mins",
              "wireValue": "link_expiry_mins"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "default": 30,
                      "validation": {
                        "max": 10080,
                        "min": 30
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestLinkExpiryMins_example_autogenerated": 30
              }
            }
          },
          {
            "name": {
              "name": "should_create_magic_link_url",
              "wireValue": "should_create_magic_link_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "default": false,
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestShouldCreateMagicLinkUrl_example_autogenerated": false
              }
            }
          },
          {
            "name": {
              "name": "common_models",
              "wireValue": "common_models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "CommonModelScopesBodyRequest",
                          "typeId": "CommonModelScopesBodyRequest",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EndUserDetailsRequestCommonModels_example_autogenerated": [
                  {
                    "model_id": "hris.Employee",
                    "enabled_actions": [
                      "READ",
                      "WRITE"
                    ],
                    "disabled_fields": [
                      "first_name"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EndUserDetailsRequest_example_autogenerated": {
            "end_user_email_address": "string",
            "end_user_organization_name": "string",
            "end_user_origin_id": "string",
            "categories": [
              "hris"
            ]
          }
        }
      }
    },
    "ErrorValidationProblem": {
      "name": {
        "typeId": "ErrorValidationProblem",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ErrorValidationProblem"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "source",
              "wireValue": "source"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ValidationProblemSource",
                  "typeId": "ValidationProblemSource",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "title",
              "wireValue": "title"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ErrorValidationProblemTitle_example_0": "Missing Required Field"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "detail",
              "wireValue": "detail"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ErrorValidationProblemDetail_example_0": "custom_fields is a required field on model."
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "problem_type",
              "wireValue": "problem_type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ErrorValidationProblemProblemType_example_0": "MISSING_REQUIRED_FIELD"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ErrorValidationProblem_example_autogenerated": {
            "title": "Missing Required Field",
            "detail": "custom_fields is a required field on model.",
            "problem_type": "MISSING_REQUIRED_FIELD"
          }
        }
      }
    },
    "EthnicityEnum": {
      "name": {
        "typeId": "EthnicityEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EthnicityEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
              "wireValue": "AMERICAN_INDIAN_OR_ALASKA_NATIVE"
            }
          },
          {
            "name": {
              "name": "ASIAN_OR_INDIAN_SUBCONTINENT",
              "wireValue": "ASIAN_OR_INDIAN_SUBCONTINENT"
            }
          },
          {
            "name": {
              "name": "BLACK_OR_AFRICAN_AMERICAN",
              "wireValue": "BLACK_OR_AFRICAN_AMERICAN"
            }
          },
          {
            "name": {
              "name": "HISPANIC_OR_LATINO",
              "wireValue": "HISPANIC_OR_LATINO"
            }
          },
          {
            "name": {
              "name": "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER",
              "wireValue": "NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER"
            }
          },
          {
            "name": {
              "name": "TWO_OR_MORE_RACES",
              "wireValue": "TWO_OR_MORE_RACES"
            }
          },
          {
            "name": {
              "name": "WHITE",
              "wireValue": "WHITE"
            }
          },
          {
            "name": {
              "name": "PREFER_NOT_TO_DISCLOSE",
              "wireValue": "PREFER_NOT_TO_DISCLOSE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `AMERICAN_INDIAN_OR_ALASKA_NATIVE` - AMERICAN_INDIAN_OR_ALASKA_NATIVE\n* `ASIAN_OR_INDIAN_SUBCONTINENT` - ASIAN_OR_INDIAN_SUBCONTINENT\n* `BLACK_OR_AFRICAN_AMERICAN` - BLACK_OR_AFRICAN_AMERICAN\n* `HISPANIC_OR_LATINO` - HISPANIC_OR_LATINO\n* `NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER` - NATIVE_HAWAIIAN_OR_OTHER_PACIFIC_ISLANDER\n* `TWO_OR_MORE_RACES` - TWO_OR_MORE_RACES\n* `WHITE` - WHITE\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthnicityEnum_example_autogenerated": "AMERICAN_INDIAN_OR_ALASKA_NATIVE"
        }
      }
    },
    "FlsaStatusEnum": {
      "name": {
        "typeId": "FlsaStatusEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "FlsaStatusEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "EXEMPT",
              "wireValue": "EXEMPT"
            }
          },
          {
            "name": {
              "name": "SALARIED_NONEXEMPT",
              "wireValue": "SALARIED_NONEXEMPT"
            }
          },
          {
            "name": {
              "name": "NONEXEMPT",
              "wireValue": "NONEXEMPT"
            }
          },
          {
            "name": {
              "name": "OWNER",
              "wireValue": "OWNER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `EXEMPT` - EXEMPT\n* `SALARIED_NONEXEMPT` - SALARIED_NONEXEMPT\n* `NONEXEMPT` - NONEXEMPT\n* `OWNER` - OWNER",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "FlsaStatusEnum_example_autogenerated": "EXEMPT"
        }
      }
    },
    "GenderEnum": {
      "name": {
        "typeId": "GenderEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GenderEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "MALE",
              "wireValue": "MALE"
            }
          },
          {
            "name": {
              "name": "FEMALE",
              "wireValue": "FEMALE"
            }
          },
          {
            "name": {
              "name": "NON-BINARY",
              "wireValue": "NON-BINARY"
            }
          },
          {
            "name": {
              "name": "OTHER",
              "wireValue": "OTHER"
            }
          },
          {
            "name": {
              "name": "PREFER_NOT_TO_DISCLOSE",
              "wireValue": "PREFER_NOT_TO_DISCLOSE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `MALE` - MALE\n* `FEMALE` - FEMALE\n* `NON-BINARY` - NON-BINARY\n* `OTHER` - OTHER\n* `PREFER_NOT_TO_DISCLOSE` - PREFER_NOT_TO_DISCLOSE",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GenderEnum_example_autogenerated": "MALE"
        }
      }
    },
    "GenerateRemoteKeyRequest": {
      "name": {
        "typeId": "GenerateRemoteKeyRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GenerateRemoteKeyRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "GenerateRemoteKeyRequestName_example_0": "Remote Deployment Key 1"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The GenerateRemoteKey Object\n### Description\nThe `GenerateRemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to create a new remote key.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GenerateRemoteKeyRequest_example_autogenerated": {
            "name": "Remote Deployment Key 1"
          }
        }
      }
    },
    "Group": {
      "name": {
        "typeId": "Group",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Group"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupId_example_0": "134e0111-0f67-44f6-98f0-597000290bb3"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupRemoteId_example_0": "800293"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "parent_group",
              "wireValue": "parent_group"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The parent group for this group.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupParentGroup_example_0": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The group name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupName_example_0": "COST_CENTER_US"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "GroupTypeEnum",
                      "typeId": "GroupTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The group type\n\n* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "GroupRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "GroupRemoteData_example_0": [
                  {
                    "path": "/group",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Group Object\n### Description\nThe `Group` object is used to represent any subset of employees, such as `PayGroup` or `Team`. Employees can be in multiple Groups.\n\n### Usage Example\nFetch from the `LIST Employee` endpoint and expand groups to view an employee's groups.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Group_example_autogenerated": {}
        }
      }
    },
    "GroupTypeEnum": {
      "name": {
        "typeId": "GroupTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "TEAM",
              "wireValue": "TEAM"
            }
          },
          {
            "name": {
              "name": "DEPARTMENT",
              "wireValue": "DEPARTMENT"
            }
          },
          {
            "name": {
              "name": "COST_CENTER",
              "wireValue": "COST_CENTER"
            }
          },
          {
            "name": {
              "name": "BUSINESS_UNIT",
              "wireValue": "BUSINESS_UNIT"
            }
          },
          {
            "name": {
              "name": "GROUP",
              "wireValue": "GROUP"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `TEAM` - TEAM\n* `DEPARTMENT` - DEPARTMENT\n* `COST_CENTER` - COST_CENTER\n* `BUSINESS_UNIT` - BUSINESS_UNIT\n* `GROUP` - GROUP",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupTypeEnum_example_autogenerated": "TEAM"
        }
      }
    },
    "IgnoreCommonModelRequest": {
      "name": {
        "typeId": "IgnoreCommonModelRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IgnoreCommonModelRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "reason",
              "wireValue": "reason"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "ReasonEnum",
              "typeId": "ReasonEnum",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "message",
              "wireValue": "message"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "minLength": 1,
                        "maxLength": 256
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IgnoreCommonModelRequestMessage_example_0": "deletion request by user id 51903790-7dfe-4053-8d63-5a10cc4ffd39"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IgnoreCommonModelRequest_example_autogenerated": {
            "reason": "GENERAL_CUSTOMER_REQUEST"
          }
        }
      }
    },
    "Issue": {
      "name": {
        "typeId": "Issue",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Issue"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "IssueId_example_0": "3fa85f64-5717-4562-b3fc-2c963f66afa6"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "IssueStatusEnum",
                  "typeId": "IssueStatusEnum",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "error_description",
              "wireValue": "error_description"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IssueErrorDescription_example_0": "string"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_user",
              "wireValue": "end_user"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "type": "unknown"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "IssueEndUser_example_0": "b82302de-852e-4e60-b050-edf9da3b7c02"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "first_incident_time",
              "wireValue": "first_incident_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IssueFirstIncidentTime_example_0": "2022-12-05T16:19:15.161Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "last_incident_time",
              "wireValue": "last_incident_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "IssueLastIncidentTime_example_0": "2022-12-05T16:19:15.161Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "is_muted",
              "wireValue": "is_muted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "IssueIsMuted_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "error_details",
              "wireValue": "error_details"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "IssueErrorDetails_example_0": [
                  "Missing employee permissions.",
                  "Missing time off permissions."
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Issue_example_autogenerated": {
            "error_description": "string"
          }
        }
      }
    },
    "IssueStatusEnum": {
      "name": {
        "typeId": "IssueStatusEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IssueStatusEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "ONGOING",
              "wireValue": "ONGOING"
            }
          },
          {
            "name": {
              "name": "RESOLVED",
              "wireValue": "RESOLVED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IssueStatusEnum_example_autogenerated": "ONGOING"
        }
      }
    },
    "LinkToken": {
      "name": {
        "typeId": "LinkToken",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkToken"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "link_token",
              "wireValue": "link_token"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "LinkTokenLinkToken_example_0": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "integration_name",
              "wireValue": "integration_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "LinkTokenIntegrationName_example_0": "Lever"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "magic_link_url",
              "wireValue": "magic_link_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "LinkTokenMagicLinkUrl_example_0": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkToken_example_autogenerated": {
            "link_token": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0"
          }
        }
      }
    },
    "LinkedAccountCondition": {
      "name": {
        "typeId": "LinkedAccountCondition",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkedAccountCondition"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "condition_schema_id",
              "wireValue": "condition_schema_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID indicating which condition schema to use for a specific condition.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionConditionSchemaId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "common_model",
              "wireValue": "common_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The common model for a specific condition.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionCommonModel_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "native_name",
              "wireValue": "native_name"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "User-facing *native condition* name. e.g. \"Skip Manager\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionNativeName_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "operator",
              "wireValue": "operator"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The operator for a specific condition.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionOperator_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "value",
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "type": "unknown"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The value for a condition.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionValue_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": "field_name",
              "wireValue": "field_name"
            },
            "valueType": {
              "container": {
                "nullable": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "nullable"
              },
              "type": "container"
            },
            "docs": "The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. \"location_type\".",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionFieldName_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkedAccountCondition_example_autogenerated": {
            "condition_schema_id": "string",
            "native_name": "string",
            "operator": "string",
            "field_name": "string"
          }
        }
      }
    },
    "LinkedAccountConditionRequest": {
      "name": {
        "typeId": "LinkedAccountConditionRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkedAccountConditionRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "condition_schema_id",
              "wireValue": "condition_schema_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The ID indicating which condition schema to use for a specific condition.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionRequestConditionSchemaId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "operator",
              "wireValue": "operator"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The operator for a specific condition.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionRequestOperator_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "value",
              "wireValue": "value"
            },
            "valueType": {
              "type": "unknown"
            },
            "docs": "The value for a specific condition.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountConditionRequestValue_example_autogenerated": null
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkedAccountConditionRequest_example_autogenerated": {
            "condition_schema_id": "string",
            "operator": "string",
            "value": null
          }
        }
      }
    },
    "LinkedAccountSelectiveSyncConfiguration": {
      "name": {
        "typeId": "LinkedAccountSelectiveSyncConfiguration",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkedAccountSelectiveSyncConfiguration"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "linked_account_conditions",
              "wireValue": "linked_account_conditions"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "LinkedAccountCondition",
                      "typeId": "LinkedAccountCondition",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The conditions belonging to a selective sync.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountSelectiveSyncConfigurationLinkedAccountConditions_example_autogenerated": [
                  {
                    "condition_schema_id": "string",
                    "native_name": "string",
                    "operator": "string",
                    "field_name": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkedAccountSelectiveSyncConfiguration_example_autogenerated": {}
        }
      }
    },
    "LinkedAccountSelectiveSyncConfigurationListRequest": {
      "name": {
        "typeId": "LinkedAccountSelectiveSyncConfigurationListRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkedAccountSelectiveSyncConfigurationListRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "sync_configurations",
              "wireValue": "sync_configurations"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LinkedAccountSelectiveSyncConfigurationRequest",
                  "typeId": "LinkedAccountSelectiveSyncConfigurationRequest",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The selective syncs associated with a linked account.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountSelectiveSyncConfigurationListRequestSyncConfigurations_example_autogenerated": [
                  {
                    "linked_account_conditions": [
                      {
                        "condition_schema_id": "string",
                        "operator": "string",
                        "value": null
                      }
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkedAccountSelectiveSyncConfigurationListRequest_example_autogenerated": {
            "sync_configurations": [
              {
                "linked_account_conditions": [
                  {
                    "condition_schema_id": "string",
                    "operator": "string",
                    "value": null
                  }
                ]
              }
            ]
          }
        }
      }
    },
    "LinkedAccountSelectiveSyncConfigurationRequest": {
      "name": {
        "typeId": "LinkedAccountSelectiveSyncConfigurationRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkedAccountSelectiveSyncConfigurationRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "linked_account_conditions",
              "wireValue": "linked_account_conditions"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LinkedAccountConditionRequest",
                  "typeId": "LinkedAccountConditionRequest",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "The conditions belonging to a selective sync.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountSelectiveSyncConfigurationRequestLinkedAccountConditions_example_autogenerated": [
                  {
                    "condition_schema_id": "string",
                    "operator": "string",
                    "value": null
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkedAccountSelectiveSyncConfigurationRequest_example_autogenerated": {
            "linked_account_conditions": [
              {
                "condition_schema_id": "string",
                "operator": "string",
                "value": null
              }
            ]
          }
        }
      }
    },
    "LinkedAccountStatus": {
      "name": {
        "typeId": "LinkedAccountStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkedAccountStatus"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "linked_account_status",
              "wireValue": "linked_account_status"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountStatusLinkedAccountStatus_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "can_make_request",
              "wireValue": "can_make_request"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LinkedAccountStatusCanMakeRequest_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkedAccountStatus_example_autogenerated": {
            "linked_account_status": "string",
            "can_make_request": true
          }
        }
      }
    },
    "Location": {
      "name": {
        "typeId": "Location",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Location"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationId_example_0": "f5e6a151-f44e-449a-afb1-8fd781905958"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationRemoteId_example_0": "93018402"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The location's name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationName_example_0": "NYC Office"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "phone_number",
              "wireValue": "phone_number"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The location's phone number.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationPhoneNumber_example_0": "+1111111111"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "street_1",
              "wireValue": "street_1"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Line 1 of the location's street address.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationStreet1_example_0": "2920 Broadway"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "street_2",
              "wireValue": "street_2"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Line 2 of the location's street address.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationStreet2_example_0": "2nd Floor"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "city",
              "wireValue": "city"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The location's city.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationCity_example_0": "New York "
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "state",
              "wireValue": "state"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The location's state. Represents a region if outside of the US.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationState_example_0": "NY"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "zip_code",
              "wireValue": "zip_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The location's zip code or postal code.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationZipCode_example_0": "10027"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "country",
              "wireValue": "country"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "CountryEnum",
                      "typeId": "CountryEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The location's country.\n\n* `AF` - Afghanistan\n* `AX` - Åland Islands\n* `AL` - Albania\n* `DZ` - Algeria\n* `AS` - American Samoa\n* `AD` - Andorra\n* `AO` - Angola\n* `AI` - Anguilla\n* `AQ` - Antarctica\n* `AG` - Antigua and Barbuda\n* `AR` - Argentina\n* `AM` - Armenia\n* `AW` - Aruba\n* `AU` - Australia\n* `AT` - Austria\n* `AZ` - Azerbaijan\n* `BS` - Bahamas\n* `BH` - Bahrain\n* `BD` - Bangladesh\n* `BB` - Barbados\n* `BY` - Belarus\n* `BE` - Belgium\n* `BZ` - Belize\n* `BJ` - Benin\n* `BM` - Bermuda\n* `BT` - Bhutan\n* `BO` - Bolivia\n* `BQ` - Bonaire, Sint Eustatius and Saba\n* `BA` - Bosnia and Herzegovina\n* `BW` - Botswana\n* `BV` - Bouvet Island\n* `BR` - Brazil\n* `IO` - British Indian Ocean Territory\n* `BN` - Brunei\n* `BG` - Bulgaria\n* `BF` - Burkina Faso\n* `BI` - Burundi\n* `CV` - Cabo Verde\n* `KH` - Cambodia\n* `CM` - Cameroon\n* `CA` - Canada\n* `KY` - Cayman Islands\n* `CF` - Central African Republic\n* `TD` - Chad\n* `CL` - Chile\n* `CN` - China\n* `CX` - Christmas Island\n* `CC` - Cocos (Keeling) Islands\n* `CO` - Colombia\n* `KM` - Comoros\n* `CG` - Congo\n* `CD` - Congo (the Democratic Republic of the)\n* `CK` - Cook Islands\n* `CR` - Costa Rica\n* `CI` - Côte d'Ivoire\n* `HR` - Croatia\n* `CU` - Cuba\n* `CW` - Curaçao\n* `CY` - Cyprus\n* `CZ` - Czechia\n* `DK` - Denmark\n* `DJ` - Djibouti\n* `DM` - Dominica\n* `DO` - Dominican Republic\n* `EC` - Ecuador\n* `EG` - Egypt\n* `SV` - El Salvador\n* `GQ` - Equatorial Guinea\n* `ER` - Eritrea\n* `EE` - Estonia\n* `SZ` - Eswatini\n* `ET` - Ethiopia\n* `FK` - Falkland Islands (Malvinas)\n* `FO` - Faroe Islands\n* `FJ` - Fiji\n* `FI` - Finland\n* `FR` - France\n* `GF` - French Guiana\n* `PF` - French Polynesia\n* `TF` - French Southern Territories\n* `GA` - Gabon\n* `GM` - Gambia\n* `GE` - Georgia\n* `DE` - Germany\n* `GH` - Ghana\n* `GI` - Gibraltar\n* `GR` - Greece\n* `GL` - Greenland\n* `GD` - Grenada\n* `GP` - Guadeloupe\n* `GU` - Guam\n* `GT` - Guatemala\n* `GG` - Guernsey\n* `GN` - Guinea\n* `GW` - Guinea-Bissau\n* `GY` - Guyana\n* `HT` - Haiti\n* `HM` - Heard Island and McDonald Islands\n* `VA` - Holy See\n* `HN` - Honduras\n* `HK` - Hong Kong\n* `HU` - Hungary\n* `IS` - Iceland\n* `IN` - India\n* `ID` - Indonesia\n* `IR` - Iran\n* `IQ` - Iraq\n* `IE` - Ireland\n* `IM` - Isle of Man\n* `IL` - Israel\n* `IT` - Italy\n* `JM` - Jamaica\n* `JP` - Japan\n* `JE` - Jersey\n* `JO` - Jordan\n* `KZ` - Kazakhstan\n* `KE` - Kenya\n* `KI` - Kiribati\n* `KW` - Kuwait\n* `KG` - Kyrgyzstan\n* `LA` - Laos\n* `LV` - Latvia\n* `LB` - Lebanon\n* `LS` - Lesotho\n* `LR` - Liberia\n* `LY` - Libya\n* `LI` - Liechtenstein\n* `LT` - Lithuania\n* `LU` - Luxembourg\n* `MO` - Macao\n* `MG` - Madagascar\n* `MW` - Malawi\n* `MY` - Malaysia\n* `MV` - Maldives\n* `ML` - Mali\n* `MT` - Malta\n* `MH` - Marshall Islands\n* `MQ` - Martinique\n* `MR` - Mauritania\n* `MU` - Mauritius\n* `YT` - Mayotte\n* `MX` - Mexico\n* `FM` - Micronesia (Federated States of)\n* `MD` - Moldova\n* `MC` - Monaco\n* `MN` - Mongolia\n* `ME` - Montenegro\n* `MS` - Montserrat\n* `MA` - Morocco\n* `MZ` - Mozambique\n* `MM` - Myanmar\n* `NA` - Namibia\n* `NR` - Nauru\n* `NP` - Nepal\n* `NL` - Netherlands\n* `NC` - New Caledonia\n* `NZ` - New Zealand\n* `NI` - Nicaragua\n* `NE` - Niger\n* `NG` - Nigeria\n* `NU` - Niue\n* `NF` - Norfolk Island\n* `KP` - North Korea\n* `MK` - North Macedonia\n* `MP` - Northern Mariana Islands\n* `NO` - Norway\n* `OM` - Oman\n* `PK` - Pakistan\n* `PW` - Palau\n* `PS` - Palestine, State of\n* `PA` - Panama\n* `PG` - Papua New Guinea\n* `PY` - Paraguay\n* `PE` - Peru\n* `PH` - Philippines\n* `PN` - Pitcairn\n* `PL` - Poland\n* `PT` - Portugal\n* `PR` - Puerto Rico\n* `QA` - Qatar\n* `RE` - Réunion\n* `RO` - Romania\n* `RU` - Russia\n* `RW` - Rwanda\n* `BL` - Saint Barthélemy\n* `SH` - Saint Helena, Ascension and Tristan da Cunha\n* `KN` - Saint Kitts and Nevis\n* `LC` - Saint Lucia\n* `MF` - Saint Martin (French part)\n* `PM` - Saint Pierre and Miquelon\n* `VC` - Saint Vincent and the Grenadines\n* `WS` - Samoa\n* `SM` - San Marino\n* `ST` - Sao Tome and Principe\n* `SA` - Saudi Arabia\n* `SN` - Senegal\n* `RS` - Serbia\n* `SC` - Seychelles\n* `SL` - Sierra Leone\n* `SG` - Singapore\n* `SX` - Sint Maarten (Dutch part)\n* `SK` - Slovakia\n* `SI` - Slovenia\n* `SB` - Solomon Islands\n* `SO` - Somalia\n* `ZA` - South Africa\n* `GS` - South Georgia and the South Sandwich Islands\n* `KR` - South Korea\n* `SS` - South Sudan\n* `ES` - Spain\n* `LK` - Sri Lanka\n* `SD` - Sudan\n* `SR` - Suriname\n* `SJ` - Svalbard and Jan Mayen\n* `SE` - Sweden\n* `CH` - Switzerland\n* `SY` - Syria\n* `TW` - Taiwan\n* `TJ` - Tajikistan\n* `TZ` - Tanzania\n* `TH` - Thailand\n* `TL` - Timor-Leste\n* `TG` - Togo\n* `TK` - Tokelau\n* `TO` - Tonga\n* `TT` - Trinidad and Tobago\n* `TN` - Tunisia\n* `TR` - Turkey\n* `TM` - Turkmenistan\n* `TC` - Turks and Caicos Islands\n* `TV` - Tuvalu\n* `UG` - Uganda\n* `UA` - Ukraine\n* `AE` - United Arab Emirates\n* `GB` - United Kingdom\n* `UM` - United States Minor Outlying Islands\n* `US` - United States of America\n* `UY` - Uruguay\n* `UZ` - Uzbekistan\n* `VU` - Vanuatu\n* `VE` - Venezuela\n* `VN` - Vietnam\n* `VG` - Virgin Islands (British)\n* `VI` - Virgin Islands (U.S.)\n* `WF` - Wallis and Futuna\n* `EH` - Western Sahara\n* `YE` - Yemen\n* `ZM` - Zambia\n* `ZW` - Zimbabwe",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "location_type",
              "wireValue": "location_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "LocationTypeEnum",
                      "typeId": "LocationTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The location's type. Can be either WORK or HOME\n\n* `HOME` - HOME\n* `WORK` - WORK",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "LocationRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "LocationRemoteData_example_0": [
                  {
                    "path": "/locations",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Location Object\n### Description\nThe `Location` object is used to represent an address that can be associated with an employee.\n\n### Usage Example\nFetch from the `LIST Locations` endpoint and filter by `ID` to show all office locations.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Location_example_autogenerated": {}
        }
      }
    },
    "LocationTypeEnum": {
      "name": {
        "typeId": "LocationTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LocationTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "HOME",
              "wireValue": "HOME"
            }
          },
          {
            "name": {
              "name": "WORK",
              "wireValue": "WORK"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `HOME` - HOME\n* `WORK` - WORK",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LocationTypeEnum_example_autogenerated": "HOME"
        }
      }
    },
    "MaritalStatusEnum": {
      "name": {
        "typeId": "MaritalStatusEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MaritalStatusEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "SINGLE",
              "wireValue": "SINGLE"
            }
          },
          {
            "name": {
              "name": "MARRIED_FILING_JOINTLY",
              "wireValue": "MARRIED_FILING_JOINTLY"
            }
          },
          {
            "name": {
              "name": "MARRIED_FILING_SEPARATELY",
              "wireValue": "MARRIED_FILING_SEPARATELY"
            }
          },
          {
            "name": {
              "name": "HEAD_OF_HOUSEHOLD",
              "wireValue": "HEAD_OF_HOUSEHOLD"
            }
          },
          {
            "name": {
              "name": "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
              "wireValue": "QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `SINGLE` - SINGLE\n* `MARRIED_FILING_JOINTLY` - MARRIED_FILING_JOINTLY\n* `MARRIED_FILING_SEPARATELY` - MARRIED_FILING_SEPARATELY\n* `HEAD_OF_HOUSEHOLD` - HEAD_OF_HOUSEHOLD\n* `QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD` - QUALIFYING_WIDOW_OR_WIDOWER_WITH_DEPENDENT_CHILD",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MaritalStatusEnum_example_autogenerated": "SINGLE"
        }
      }
    },
    "MetaResponse": {
      "name": {
        "typeId": "MetaResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MetaResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "request_schema",
              "wireValue": "request_schema"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetaResponseRequestSchema_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "remote_field_classes",
              "wireValue": "remote_field_classes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "type": "unknown"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetaResponseRemoteFieldClasses_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LinkedAccountStatus",
                  "typeId": "LinkedAccountStatus",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "has_conditional_params",
              "wireValue": "has_conditional_params"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetaResponseHasConditionalParams_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "has_required_linked_account_params",
              "wireValue": "has_required_linked_account_params"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "MetaResponseHasRequiredLinkedAccountParams_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MetaResponse_example_autogenerated": {
            "request_schema": {},
            "has_conditional_params": true,
            "has_required_linked_account_params": true
          }
        }
      }
    },
    "MethodEnum": {
      "name": {
        "typeId": "MethodEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MethodEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "GET",
                "camelCase": {
                  "unsafeName": "get",
                  "safeName": "get_"
                },
                "snakeCase": {
                  "unsafeName": "get",
                  "safeName": "get_"
                }
              },
              "wireValue": "GET"
            }
          },
          {
            "name": {
              "name": "OPTIONS",
              "wireValue": "OPTIONS"
            }
          },
          {
            "name": {
              "name": "HEAD",
              "wireValue": "HEAD"
            }
          },
          {
            "name": {
              "name": "POST",
              "wireValue": "POST"
            }
          },
          {
            "name": {
              "name": "PUT",
              "wireValue": "PUT"
            }
          },
          {
            "name": {
              "name": "PATCH",
              "wireValue": "PATCH"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "DELETE",
                "camelCase": {
                  "unsafeName": "delete",
                  "safeName": "delete_"
                },
                "snakeCase": {
                  "unsafeName": "delete",
                  "safeName": "delete_"
                }
              },
              "wireValue": "DELETE"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `GET` - GET\n* `OPTIONS` - OPTIONS\n* `HEAD` - HEAD\n* `POST` - POST\n* `PUT` - PUT\n* `PATCH` - PATCH\n* `DELETE` - DELETE",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MethodEnum_example_autogenerated": "GET"
        }
      }
    },
    "ModelOperation": {
      "name": {
        "typeId": "ModelOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ModelOperation"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_name",
              "wireValue": "model_name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ModelOperationModelName_example_0": "Candidate"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "available_operations",
              "wireValue": "available_operations"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ModelOperationAvailableOperations_example_0": [
                  "FETCH",
                  "CREATE"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "required_post_parameters",
              "wireValue": "required_post_parameters"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ModelOperationRequiredPostParameters_example_0": [
                  "remote_user_id"
                ]
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "supported_fields",
              "wireValue": "supported_fields"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "ModelOperationSupportedFields_example_0": [
                  "first_name",
                  "last_name",
                  "company",
                  "title"
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The ModelOperation Object\n### Description\nThe `ModelOperation` object is used to represent the operations that are currently supported for a given model.\n\n### Usage Example\nView what operations are supported for the `Candidate` endpoint.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ModelOperation_example_autogenerated": {
            "model_name": "Candidate",
            "available_operations": [
              "FETCH",
              "CREATE"
            ],
            "required_post_parameters": [
              "remote_user_id"
            ],
            "supported_fields": [
              "first_name",
              "last_name",
              "company",
              "title"
            ]
          }
        }
      }
    },
    "MultipartFormFieldRequest": {
      "name": {
        "typeId": "MultipartFormFieldRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "MultipartFormFieldRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The name of the form field",
            "v2Examples": {
              "userSpecifiedExamples": {
                "MultipartFormFieldRequestName_example_0": "resume"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The data for the form field.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "MultipartFormFieldRequestData_example_0": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "encoding",
              "wireValue": "encoding"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EncodingEnum",
                      "typeId": "EncodingEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The encoding of the value of `data`. Defaults to `RAW` if not defined.\n\n* `RAW` - RAW\n* `BASE64` - BASE64\n* `GZIP_BASE64` - GZIP_BASE64",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "file_name",
              "wireValue": "file_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The file name of the form field, if the field is for a file.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "MultipartFormFieldRequestFileName_example_0": "resume.pdf"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "content_type",
              "wireValue": "content_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The MIME type of the file, if the field is for a file.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "MultipartFormFieldRequestContentType_example_0": "application/pdf"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The MultipartFormField Object\n### Description\nThe `MultipartFormField` object is used to represent fields in an HTTP request using `multipart/form-data`.\n\n### Usage Example\nCreate a `MultipartFormField` to define a multipart form entry.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "MultipartFormFieldRequest_example_autogenerated": {
            "name": "resume",
            "data": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
          }
        }
      }
    },
    "OperatorSchema": {
      "name": {
        "typeId": "OperatorSchema",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "OperatorSchema"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "operator",
              "wireValue": "operator"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The operator for which an operator schema is defined.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OperatorSchemaOperator_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_unique",
              "wireValue": "is_unique"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether the operator can be repeated multiple times.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "OperatorSchemaIsUnique_example_autogenerated": true
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "OperatorSchema_example_autogenerated": {}
        }
      }
    },
    "PaginatedAccountDetailsAndActionsList": {
      "name": {
        "typeId": "PaginatedAccountDetailsAndActionsList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedAccountDetailsAndActionsList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedAccountDetailsAndActionsListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedAccountDetailsAndActionsListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AccountDetailsAndActions",
                      "typeId": "AccountDetailsAndActions",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedAccountDetailsAndActionsListResults_example_autogenerated": [
                  {
                    "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                    "status": "COMPLETE",
                    "end_user_organization_name": "Foo Bar, LLC",
                    "end_user_email_address": "hradmin@foobar.dev",
                    "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedAccountDetailsAndActionsList_example_autogenerated": {}
        }
      }
    },
    "PaginatedBankInfoList": {
      "name": {
        "typeId": "PaginatedBankInfoList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedBankInfoList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedBankInfoListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedBankInfoListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BankInfo",
                      "typeId": "BankInfo",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedBankInfoListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedBankInfoList_example_autogenerated": {}
        }
      }
    },
    "PaginatedBenefitList": {
      "name": {
        "typeId": "PaginatedBenefitList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedBenefitList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedBenefitListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedBenefitListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Benefit",
                      "typeId": "Benefit",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedBenefitListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedBenefitList_example_autogenerated": {}
        }
      }
    },
    "PaginatedCompanyList": {
      "name": {
        "typeId": "PaginatedCompanyList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedCompanyList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedCompanyListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedCompanyListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Company",
                      "typeId": "Company",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedCompanyListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedCompanyList_example_autogenerated": {}
        }
      }
    },
    "PaginatedConditionSchemaList": {
      "name": {
        "typeId": "PaginatedConditionSchemaList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedConditionSchemaList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedConditionSchemaListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedConditionSchemaListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ConditionSchema",
                      "typeId": "ConditionSchema",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedConditionSchemaListResults_example_autogenerated": [
                  {
                    "id": "string",
                    "native_name": "string",
                    "field_name": "string",
                    "condition_type": "BOOLEAN",
                    "operators": [
                      {}
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedConditionSchemaList_example_autogenerated": {}
        }
      }
    },
    "PaginatedEmployeeList": {
      "name": {
        "typeId": "PaginatedEmployeeList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedEmployeeList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedEmployeeListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedEmployeeListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Employee",
                      "typeId": "Employee",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedEmployeeListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedEmployeeList_example_autogenerated": {}
        }
      }
    },
    "PaginatedEmployeePayrollRunList": {
      "name": {
        "typeId": "PaginatedEmployeePayrollRunList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedEmployeePayrollRunList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedEmployeePayrollRunListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedEmployeePayrollRunListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EmployeePayrollRun",
                      "typeId": "EmployeePayrollRun",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedEmployeePayrollRunListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedEmployeePayrollRunList_example_autogenerated": {}
        }
      }
    },
    "PaginatedEmploymentList": {
      "name": {
        "typeId": "PaginatedEmploymentList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedEmploymentList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedEmploymentListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedEmploymentListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Employment",
                      "typeId": "Employment",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedEmploymentListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedEmploymentList_example_autogenerated": {}
        }
      }
    },
    "PaginatedGroupList": {
      "name": {
        "typeId": "PaginatedGroupList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedGroupList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedGroupListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedGroupListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Group",
                      "typeId": "Group",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedGroupListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedGroupList_example_autogenerated": {}
        }
      }
    },
    "PaginatedIssueList": {
      "name": {
        "typeId": "PaginatedIssueList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedIssueList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedIssueListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedIssueListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Issue",
                      "typeId": "Issue",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedIssueListResults_example_autogenerated": [
                  {
                    "error_description": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedIssueList_example_autogenerated": {}
        }
      }
    },
    "PaginatedLocationList": {
      "name": {
        "typeId": "PaginatedLocationList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedLocationList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedLocationListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedLocationListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Location",
                      "typeId": "Location",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedLocationListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedLocationList_example_autogenerated": {}
        }
      }
    },
    "PaginatedPayGroupList": {
      "name": {
        "typeId": "PaginatedPayGroupList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedPayGroupList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedPayGroupListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedPayGroupListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PayGroup",
                      "typeId": "PayGroup",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedPayGroupListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedPayGroupList_example_autogenerated": {}
        }
      }
    },
    "PaginatedPayrollRunList": {
      "name": {
        "typeId": "PaginatedPayrollRunList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedPayrollRunList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedPayrollRunListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedPayrollRunListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PayrollRun",
                      "typeId": "PayrollRun",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedPayrollRunListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedPayrollRunList_example_autogenerated": {}
        }
      }
    },
    "PaginatedSyncStatusList": {
      "name": {
        "typeId": "PaginatedSyncStatusList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedSyncStatusList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedSyncStatusListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedSyncStatusListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SyncStatus",
                      "typeId": "SyncStatus",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedSyncStatusListResults_example_autogenerated": [
                  {
                    "model_name": "Employee",
                    "model_id": "hris.Employee",
                    "status": "SYNCING",
                    "is_initial_sync": true
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedSyncStatusList_example_autogenerated": {}
        }
      }
    },
    "PaginatedTeamList": {
      "name": {
        "typeId": "PaginatedTeamList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedTeamList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedTeamListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedTeamListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Team",
                      "typeId": "Team",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedTeamListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedTeamList_example_autogenerated": {}
        }
      }
    },
    "PaginatedTimeOffBalanceList": {
      "name": {
        "typeId": "PaginatedTimeOffBalanceList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedTimeOffBalanceList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedTimeOffBalanceListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedTimeOffBalanceListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOffBalance",
                      "typeId": "TimeOffBalance",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedTimeOffBalanceListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedTimeOffBalanceList_example_autogenerated": {}
        }
      }
    },
    "PaginatedTimeOffList": {
      "name": {
        "typeId": "PaginatedTimeOffList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PaginatedTimeOffList"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "next",
              "wireValue": "next"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedTimeOffListNext_example_0": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "previous",
              "wireValue": "previous"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "PaginatedTimeOffListPrevious_example_0": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOff",
                      "typeId": "TimeOff",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PaginatedTimeOffListResults_example_autogenerated": [
                  {}
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PaginatedTimeOffList_example_autogenerated": {}
        }
      }
    },
    "PayCurrencyEnum": {
      "name": {
        "typeId": "PayCurrencyEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayCurrencyEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "XUA",
              "wireValue": "XUA"
            }
          },
          {
            "name": {
              "name": "AFN",
              "wireValue": "AFN"
            }
          },
          {
            "name": {
              "name": "AFA",
              "wireValue": "AFA"
            }
          },
          {
            "name": {
              "name": "ALL",
              "wireValue": "ALL"
            }
          },
          {
            "name": {
              "name": "ALK",
              "wireValue": "ALK"
            }
          },
          {
            "name": {
              "name": "DZD",
              "wireValue": "DZD"
            }
          },
          {
            "name": {
              "name": "ADP",
              "wireValue": "ADP"
            }
          },
          {
            "name": {
              "name": "AOA",
              "wireValue": "AOA"
            }
          },
          {
            "name": {
              "name": "AOK",
              "wireValue": "AOK"
            }
          },
          {
            "name": {
              "name": "AON",
              "wireValue": "AON"
            }
          },
          {
            "name": {
              "name": "AOR",
              "wireValue": "AOR"
            }
          },
          {
            "name": {
              "name": "ARA",
              "wireValue": "ARA"
            }
          },
          {
            "name": {
              "name": "ARS",
              "wireValue": "ARS"
            }
          },
          {
            "name": {
              "name": "ARM",
              "wireValue": "ARM"
            }
          },
          {
            "name": {
              "name": "ARP",
              "wireValue": "ARP"
            }
          },
          {
            "name": {
              "name": "ARL",
              "wireValue": "ARL"
            }
          },
          {
            "name": {
              "name": "AMD",
              "wireValue": "AMD"
            }
          },
          {
            "name": {
              "name": "AWG",
              "wireValue": "AWG"
            }
          },
          {
            "name": {
              "name": "AUD",
              "wireValue": "AUD"
            }
          },
          {
            "name": {
              "name": "ATS",
              "wireValue": "ATS"
            }
          },
          {
            "name": {
              "name": "AZN",
              "wireValue": "AZN"
            }
          },
          {
            "name": {
              "name": "AZM",
              "wireValue": "AZM"
            }
          },
          {
            "name": {
              "name": "BSD",
              "wireValue": "BSD"
            }
          },
          {
            "name": {
              "name": "BHD",
              "wireValue": "BHD"
            }
          },
          {
            "name": {
              "name": "BDT",
              "wireValue": "BDT"
            }
          },
          {
            "name": {
              "name": "BBD",
              "wireValue": "BBD"
            }
          },
          {
            "name": {
              "name": "BYN",
              "wireValue": "BYN"
            }
          },
          {
            "name": {
              "name": "BYB",
              "wireValue": "BYB"
            }
          },
          {
            "name": {
              "name": "BYR",
              "wireValue": "BYR"
            }
          },
          {
            "name": {
              "name": "BEF",
              "wireValue": "BEF"
            }
          },
          {
            "name": {
              "name": "BEC",
              "wireValue": "BEC"
            }
          },
          {
            "name": {
              "name": "BEL",
              "wireValue": "BEL"
            }
          },
          {
            "name": {
              "name": "BZD",
              "wireValue": "BZD"
            }
          },
          {
            "name": {
              "name": "BMD",
              "wireValue": "BMD"
            }
          },
          {
            "name": {
              "name": "BTN",
              "wireValue": "BTN"
            }
          },
          {
            "name": {
              "name": "BOB",
              "wireValue": "BOB"
            }
          },
          {
            "name": {
              "name": "BOL",
              "wireValue": "BOL"
            }
          },
          {
            "name": {
              "name": "BOV",
              "wireValue": "BOV"
            }
          },
          {
            "name": {
              "name": "BOP",
              "wireValue": "BOP"
            }
          },
          {
            "name": {
              "name": "BAM",
              "wireValue": "BAM"
            }
          },
          {
            "name": {
              "name": "BAD",
              "wireValue": "BAD"
            }
          },
          {
            "name": {
              "name": "BAN",
              "wireValue": "BAN"
            }
          },
          {
            "name": {
              "name": "BWP",
              "wireValue": "BWP"
            }
          },
          {
            "name": {
              "name": "BRC",
              "wireValue": "BRC"
            }
          },
          {
            "name": {
              "name": "BRZ",
              "wireValue": "BRZ"
            }
          },
          {
            "name": {
              "name": "BRE",
              "wireValue": "BRE"
            }
          },
          {
            "name": {
              "name": "BRR",
              "wireValue": "BRR"
            }
          },
          {
            "name": {
              "name": "BRN",
              "wireValue": "BRN"
            }
          },
          {
            "name": {
              "name": "BRB",
              "wireValue": "BRB"
            }
          },
          {
            "name": {
              "name": "BRL",
              "wireValue": "BRL"
            }
          },
          {
            "name": {
              "name": "GBP",
              "wireValue": "GBP"
            }
          },
          {
            "name": {
              "name": "BND",
              "wireValue": "BND"
            }
          },
          {
            "name": {
              "name": "BGL",
              "wireValue": "BGL"
            }
          },
          {
            "name": {
              "name": "BGN",
              "wireValue": "BGN"
            }
          },
          {
            "name": {
              "name": "BGO",
              "wireValue": "BGO"
            }
          },
          {
            "name": {
              "name": "BGM",
              "wireValue": "BGM"
            }
          },
          {
            "name": {
              "name": "BUK",
              "wireValue": "BUK"
            }
          },
          {
            "name": {
              "name": "BIF",
              "wireValue": "BIF"
            }
          },
          {
            "name": {
              "name": "XPF",
              "wireValue": "XPF"
            }
          },
          {
            "name": {
              "name": "KHR",
              "wireValue": "KHR"
            }
          },
          {
            "name": {
              "name": "CAD",
              "wireValue": "CAD"
            }
          },
          {
            "name": {
              "name": "CVE",
              "wireValue": "CVE"
            }
          },
          {
            "name": {
              "name": "KYD",
              "wireValue": "KYD"
            }
          },
          {
            "name": {
              "name": "XAF",
              "wireValue": "XAF"
            }
          },
          {
            "name": {
              "name": "CLE",
              "wireValue": "CLE"
            }
          },
          {
            "name": {
              "name": "CLP",
              "wireValue": "CLP"
            }
          },
          {
            "name": {
              "name": "CLF",
              "wireValue": "CLF"
            }
          },
          {
            "name": {
              "name": "CNX",
              "wireValue": "CNX"
            }
          },
          {
            "name": {
              "name": "CNY",
              "wireValue": "CNY"
            }
          },
          {
            "name": {
              "name": "CNH",
              "wireValue": "CNH"
            }
          },
          {
            "name": {
              "name": "COP",
              "wireValue": "COP"
            }
          },
          {
            "name": {
              "name": "COU",
              "wireValue": "COU"
            }
          },
          {
            "name": {
              "name": "KMF",
              "wireValue": "KMF"
            }
          },
          {
            "name": {
              "name": "CDF",
              "wireValue": "CDF"
            }
          },
          {
            "name": {
              "name": "CRC",
              "wireValue": "CRC"
            }
          },
          {
            "name": {
              "name": "HRD",
              "wireValue": "HRD"
            }
          },
          {
            "name": {
              "name": "HRK",
              "wireValue": "HRK"
            }
          },
          {
            "name": {
              "name": "CUC",
              "wireValue": "CUC"
            }
          },
          {
            "name": {
              "name": "CUP",
              "wireValue": "CUP"
            }
          },
          {
            "name": {
              "name": "CYP",
              "wireValue": "CYP"
            }
          },
          {
            "name": {
              "name": "CZK",
              "wireValue": "CZK"
            }
          },
          {
            "name": {
              "name": "CSK",
              "wireValue": "CSK"
            }
          },
          {
            "name": {
              "name": "DKK",
              "wireValue": "DKK"
            }
          },
          {
            "name": {
              "name": "DJF",
              "wireValue": "DJF"
            }
          },
          {
            "name": {
              "name": "DOP",
              "wireValue": "DOP"
            }
          },
          {
            "name": {
              "name": "NLG",
              "wireValue": "NLG"
            }
          },
          {
            "name": {
              "name": "XCD",
              "wireValue": "XCD"
            }
          },
          {
            "name": {
              "name": "DDM",
              "wireValue": "DDM"
            }
          },
          {
            "name": {
              "name": "ECS",
              "wireValue": "ECS"
            }
          },
          {
            "name": {
              "name": "ECV",
              "wireValue": "ECV"
            }
          },
          {
            "name": {
              "name": "EGP",
              "wireValue": "EGP"
            }
          },
          {
            "name": {
              "name": "GQE",
              "wireValue": "GQE"
            }
          },
          {
            "name": {
              "name": "ERN",
              "wireValue": "ERN"
            }
          },
          {
            "name": {
              "name": "EEK",
              "wireValue": "EEK"
            }
          },
          {
            "name": {
              "name": "ETB",
              "wireValue": "ETB"
            }
          },
          {
            "name": {
              "name": "EUR",
              "wireValue": "EUR"
            }
          },
          {
            "name": {
              "name": "XBA",
              "wireValue": "XBA"
            }
          },
          {
            "name": {
              "name": "XEU",
              "wireValue": "XEU"
            }
          },
          {
            "name": {
              "name": "XBB",
              "wireValue": "XBB"
            }
          },
          {
            "name": {
              "name": "XBC",
              "wireValue": "XBC"
            }
          },
          {
            "name": {
              "name": "XBD",
              "wireValue": "XBD"
            }
          },
          {
            "name": {
              "name": "FKP",
              "wireValue": "FKP"
            }
          },
          {
            "name": {
              "name": "FJD",
              "wireValue": "FJD"
            }
          },
          {
            "name": {
              "name": "FIM",
              "wireValue": "FIM"
            }
          },
          {
            "name": {
              "name": "FRF",
              "wireValue": "FRF"
            }
          },
          {
            "name": {
              "name": "XFO",
              "wireValue": "XFO"
            }
          },
          {
            "name": {
              "name": "XFU",
              "wireValue": "XFU"
            }
          },
          {
            "name": {
              "name": "GMD",
              "wireValue": "GMD"
            }
          },
          {
            "name": {
              "name": "GEK",
              "wireValue": "GEK"
            }
          },
          {
            "name": {
              "name": "GEL",
              "wireValue": "GEL"
            }
          },
          {
            "name": {
              "name": "DEM",
              "wireValue": "DEM"
            }
          },
          {
            "name": {
              "name": "GHS",
              "wireValue": "GHS"
            }
          },
          {
            "name": {
              "name": "GHC",
              "wireValue": "GHC"
            }
          },
          {
            "name": {
              "name": "GIP",
              "wireValue": "GIP"
            }
          },
          {
            "name": {
              "name": "XAU",
              "wireValue": "XAU"
            }
          },
          {
            "name": {
              "name": "GRD",
              "wireValue": "GRD"
            }
          },
          {
            "name": {
              "name": "GTQ",
              "wireValue": "GTQ"
            }
          },
          {
            "name": {
              "name": "GWP",
              "wireValue": "GWP"
            }
          },
          {
            "name": {
              "name": "GNF",
              "wireValue": "GNF"
            }
          },
          {
            "name": {
              "name": "GNS",
              "wireValue": "GNS"
            }
          },
          {
            "name": {
              "name": "GYD",
              "wireValue": "GYD"
            }
          },
          {
            "name": {
              "name": "HTG",
              "wireValue": "HTG"
            }
          },
          {
            "name": {
              "name": "HNL",
              "wireValue": "HNL"
            }
          },
          {
            "name": {
              "name": "HKD",
              "wireValue": "HKD"
            }
          },
          {
            "name": {
              "name": "HUF",
              "wireValue": "HUF"
            }
          },
          {
            "name": {
              "name": "IMP",
              "wireValue": "IMP"
            }
          },
          {
            "name": {
              "name": "ISK",
              "wireValue": "ISK"
            }
          },
          {
            "name": {
              "name": "ISJ",
              "wireValue": "ISJ"
            }
          },
          {
            "name": {
              "name": "INR",
              "wireValue": "INR"
            }
          },
          {
            "name": {
              "name": "IDR",
              "wireValue": "IDR"
            }
          },
          {
            "name": {
              "name": "IRR",
              "wireValue": "IRR"
            }
          },
          {
            "name": {
              "name": "IQD",
              "wireValue": "IQD"
            }
          },
          {
            "name": {
              "name": "IEP",
              "wireValue": "IEP"
            }
          },
          {
            "name": {
              "name": "ILS",
              "wireValue": "ILS"
            }
          },
          {
            "name": {
              "name": "ILP",
              "wireValue": "ILP"
            }
          },
          {
            "name": {
              "name": "ILR",
              "wireValue": "ILR"
            }
          },
          {
            "name": {
              "name": "ITL",
              "wireValue": "ITL"
            }
          },
          {
            "name": {
              "name": "JMD",
              "wireValue": "JMD"
            }
          },
          {
            "name": {
              "name": "JPY",
              "wireValue": "JPY"
            }
          },
          {
            "name": {
              "name": "JOD",
              "wireValue": "JOD"
            }
          },
          {
            "name": {
              "name": "KZT",
              "wireValue": "KZT"
            }
          },
          {
            "name": {
              "name": "KES",
              "wireValue": "KES"
            }
          },
          {
            "name": {
              "name": "KWD",
              "wireValue": "KWD"
            }
          },
          {
            "name": {
              "name": "KGS",
              "wireValue": "KGS"
            }
          },
          {
            "name": {
              "name": "LAK",
              "wireValue": "LAK"
            }
          },
          {
            "name": {
              "name": "LVL",
              "wireValue": "LVL"
            }
          },
          {
            "name": {
              "name": "LVR",
              "wireValue": "LVR"
            }
          },
          {
            "name": {
              "name": "LBP",
              "wireValue": "LBP"
            }
          },
          {
            "name": {
              "name": "LSL",
              "wireValue": "LSL"
            }
          },
          {
            "name": {
              "name": "LRD",
              "wireValue": "LRD"
            }
          },
          {
            "name": {
              "name": "LYD",
              "wireValue": "LYD"
            }
          },
          {
            "name": {
              "name": "LTL",
              "wireValue": "LTL"
            }
          },
          {
            "name": {
              "name": "LTT",
              "wireValue": "LTT"
            }
          },
          {
            "name": {
              "name": "LUL",
              "wireValue": "LUL"
            }
          },
          {
            "name": {
              "name": "LUC",
              "wireValue": "LUC"
            }
          },
          {
            "name": {
              "name": "LUF",
              "wireValue": "LUF"
            }
          },
          {
            "name": {
              "name": "MOP",
              "wireValue": "MOP"
            }
          },
          {
            "name": {
              "name": "MKD",
              "wireValue": "MKD"
            }
          },
          {
            "name": {
              "name": "MKN",
              "wireValue": "MKN"
            }
          },
          {
            "name": {
              "name": "MGA",
              "wireValue": "MGA"
            }
          },
          {
            "name": {
              "name": "MGF",
              "wireValue": "MGF"
            }
          },
          {
            "name": {
              "name": "MWK",
              "wireValue": "MWK"
            }
          },
          {
            "name": {
              "name": "MYR",
              "wireValue": "MYR"
            }
          },
          {
            "name": {
              "name": "MVR",
              "wireValue": "MVR"
            }
          },
          {
            "name": {
              "name": "MVP",
              "wireValue": "MVP"
            }
          },
          {
            "name": {
              "name": "MLF",
              "wireValue": "MLF"
            }
          },
          {
            "name": {
              "name": "MTL",
              "wireValue": "MTL"
            }
          },
          {
            "name": {
              "name": "MTP",
              "wireValue": "MTP"
            }
          },
          {
            "name": {
              "name": "MRU",
              "wireValue": "MRU"
            }
          },
          {
            "name": {
              "name": "MRO",
              "wireValue": "MRO"
            }
          },
          {
            "name": {
              "name": "MUR",
              "wireValue": "MUR"
            }
          },
          {
            "name": {
              "name": "MXV",
              "wireValue": "MXV"
            }
          },
          {
            "name": {
              "name": "MXN",
              "wireValue": "MXN"
            }
          },
          {
            "name": {
              "name": "MXP",
              "wireValue": "MXP"
            }
          },
          {
            "name": {
              "name": "MDC",
              "wireValue": "MDC"
            }
          },
          {
            "name": {
              "name": "MDL",
              "wireValue": "MDL"
            }
          },
          {
            "name": {
              "name": "MCF",
              "wireValue": "MCF"
            }
          },
          {
            "name": {
              "name": "MNT",
              "wireValue": "MNT"
            }
          },
          {
            "name": {
              "name": "MAD",
              "wireValue": "MAD"
            }
          },
          {
            "name": {
              "name": "MAF",
              "wireValue": "MAF"
            }
          },
          {
            "name": {
              "name": "MZE",
              "wireValue": "MZE"
            }
          },
          {
            "name": {
              "name": "MZN",
              "wireValue": "MZN"
            }
          },
          {
            "name": {
              "name": "MZM",
              "wireValue": "MZM"
            }
          },
          {
            "name": {
              "name": "MMK",
              "wireValue": "MMK"
            }
          },
          {
            "name": {
              "name": "NAD",
              "wireValue": "NAD"
            }
          },
          {
            "name": {
              "name": "NPR",
              "wireValue": "NPR"
            }
          },
          {
            "name": {
              "name": "ANG",
              "wireValue": "ANG"
            }
          },
          {
            "name": {
              "name": "TWD",
              "wireValue": "TWD"
            }
          },
          {
            "name": {
              "name": "NZD",
              "wireValue": "NZD"
            }
          },
          {
            "name": {
              "name": "NIO",
              "wireValue": "NIO"
            }
          },
          {
            "name": {
              "name": "NIC",
              "wireValue": "NIC"
            }
          },
          {
            "name": {
              "name": "NGN",
              "wireValue": "NGN"
            }
          },
          {
            "name": {
              "name": "KPW",
              "wireValue": "KPW"
            }
          },
          {
            "name": {
              "name": "NOK",
              "wireValue": "NOK"
            }
          },
          {
            "name": {
              "name": "OMR",
              "wireValue": "OMR"
            }
          },
          {
            "name": {
              "name": "PKR",
              "wireValue": "PKR"
            }
          },
          {
            "name": {
              "name": "XPD",
              "wireValue": "XPD"
            }
          },
          {
            "name": {
              "name": "PAB",
              "wireValue": "PAB"
            }
          },
          {
            "name": {
              "name": "PGK",
              "wireValue": "PGK"
            }
          },
          {
            "name": {
              "name": "PYG",
              "wireValue": "PYG"
            }
          },
          {
            "name": {
              "name": "PEI",
              "wireValue": "PEI"
            }
          },
          {
            "name": {
              "name": "PEN",
              "wireValue": "PEN"
            }
          },
          {
            "name": {
              "name": "PES",
              "wireValue": "PES"
            }
          },
          {
            "name": {
              "name": "PHP",
              "wireValue": "PHP"
            }
          },
          {
            "name": {
              "name": "XPT",
              "wireValue": "XPT"
            }
          },
          {
            "name": {
              "name": "PLN",
              "wireValue": "PLN"
            }
          },
          {
            "name": {
              "name": "PLZ",
              "wireValue": "PLZ"
            }
          },
          {
            "name": {
              "name": "PTE",
              "wireValue": "PTE"
            }
          },
          {
            "name": {
              "name": "GWE",
              "wireValue": "GWE"
            }
          },
          {
            "name": {
              "name": "QAR",
              "wireValue": "QAR"
            }
          },
          {
            "name": {
              "name": "XRE",
              "wireValue": "XRE"
            }
          },
          {
            "name": {
              "name": "RHD",
              "wireValue": "RHD"
            }
          },
          {
            "name": {
              "name": "RON",
              "wireValue": "RON"
            }
          },
          {
            "name": {
              "name": "ROL",
              "wireValue": "ROL"
            }
          },
          {
            "name": {
              "name": "RUB",
              "wireValue": "RUB"
            }
          },
          {
            "name": {
              "name": "RUR",
              "wireValue": "RUR"
            }
          },
          {
            "name": {
              "name": "RWF",
              "wireValue": "RWF"
            }
          },
          {
            "name": {
              "name": "SVC",
              "wireValue": "SVC"
            }
          },
          {
            "name": {
              "name": "WST",
              "wireValue": "WST"
            }
          },
          {
            "name": {
              "name": "SAR",
              "wireValue": "SAR"
            }
          },
          {
            "name": {
              "name": "RSD",
              "wireValue": "RSD"
            }
          },
          {
            "name": {
              "name": "CSD",
              "wireValue": "CSD"
            }
          },
          {
            "name": {
              "name": "SCR",
              "wireValue": "SCR"
            }
          },
          {
            "name": {
              "name": "SLL",
              "wireValue": "SLL"
            }
          },
          {
            "name": {
              "name": "XAG",
              "wireValue": "XAG"
            }
          },
          {
            "name": {
              "name": "SGD",
              "wireValue": "SGD"
            }
          },
          {
            "name": {
              "name": "SKK",
              "wireValue": "SKK"
            }
          },
          {
            "name": {
              "name": "SIT",
              "wireValue": "SIT"
            }
          },
          {
            "name": {
              "name": "SBD",
              "wireValue": "SBD"
            }
          },
          {
            "name": {
              "name": "SOS",
              "wireValue": "SOS"
            }
          },
          {
            "name": {
              "name": "ZAR",
              "wireValue": "ZAR"
            }
          },
          {
            "name": {
              "name": "ZAL",
              "wireValue": "ZAL"
            }
          },
          {
            "name": {
              "name": "KRH",
              "wireValue": "KRH"
            }
          },
          {
            "name": {
              "name": "KRW",
              "wireValue": "KRW"
            }
          },
          {
            "name": {
              "name": "KRO",
              "wireValue": "KRO"
            }
          },
          {
            "name": {
              "name": "SSP",
              "wireValue": "SSP"
            }
          },
          {
            "name": {
              "name": "SUR",
              "wireValue": "SUR"
            }
          },
          {
            "name": {
              "name": "ESP",
              "wireValue": "ESP"
            }
          },
          {
            "name": {
              "name": "ESA",
              "wireValue": "ESA"
            }
          },
          {
            "name": {
              "name": "ESB",
              "wireValue": "ESB"
            }
          },
          {
            "name": {
              "name": "XDR",
              "wireValue": "XDR"
            }
          },
          {
            "name": {
              "name": "LKR",
              "wireValue": "LKR"
            }
          },
          {
            "name": {
              "name": "SHP",
              "wireValue": "SHP"
            }
          },
          {
            "name": {
              "name": "XSU",
              "wireValue": "XSU"
            }
          },
          {
            "name": {
              "name": "SDD",
              "wireValue": "SDD"
            }
          },
          {
            "name": {
              "name": "SDG",
              "wireValue": "SDG"
            }
          },
          {
            "name": {
              "name": "SDP",
              "wireValue": "SDP"
            }
          },
          {
            "name": {
              "name": "SRD",
              "wireValue": "SRD"
            }
          },
          {
            "name": {
              "name": "SRG",
              "wireValue": "SRG"
            }
          },
          {
            "name": {
              "name": "SZL",
              "wireValue": "SZL"
            }
          },
          {
            "name": {
              "name": "SEK",
              "wireValue": "SEK"
            }
          },
          {
            "name": {
              "name": "CHF",
              "wireValue": "CHF"
            }
          },
          {
            "name": {
              "name": "SYP",
              "wireValue": "SYP"
            }
          },
          {
            "name": {
              "name": "STN",
              "wireValue": "STN"
            }
          },
          {
            "name": {
              "name": "STD",
              "wireValue": "STD"
            }
          },
          {
            "name": {
              "name": "TVD",
              "wireValue": "TVD"
            }
          },
          {
            "name": {
              "name": "TJR",
              "wireValue": "TJR"
            }
          },
          {
            "name": {
              "name": "TJS",
              "wireValue": "TJS"
            }
          },
          {
            "name": {
              "name": "TZS",
              "wireValue": "TZS"
            }
          },
          {
            "name": {
              "name": "XTS",
              "wireValue": "XTS"
            }
          },
          {
            "name": {
              "name": "THB",
              "wireValue": "THB"
            }
          },
          {
            "name": {
              "name": "XXX",
              "wireValue": "XXX"
            }
          },
          {
            "name": {
              "name": "TPE",
              "wireValue": "TPE"
            }
          },
          {
            "name": {
              "name": "TOP",
              "wireValue": "TOP"
            }
          },
          {
            "name": {
              "name": "TTD",
              "wireValue": "TTD"
            }
          },
          {
            "name": {
              "name": "TND",
              "wireValue": "TND"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "TRY",
                "camelCase": {
                  "unsafeName": "try",
                  "safeName": "try_"
                },
                "snakeCase": {
                  "unsafeName": "try",
                  "safeName": "try_"
                }
              },
              "wireValue": "TRY"
            }
          },
          {
            "name": {
              "name": "TRL",
              "wireValue": "TRL"
            }
          },
          {
            "name": {
              "name": "TMT",
              "wireValue": "TMT"
            }
          },
          {
            "name": {
              "name": "TMM",
              "wireValue": "TMM"
            }
          },
          {
            "name": {
              "name": "USD",
              "wireValue": "USD"
            }
          },
          {
            "name": {
              "name": "USN",
              "wireValue": "USN"
            }
          },
          {
            "name": {
              "name": "USS",
              "wireValue": "USS"
            }
          },
          {
            "name": {
              "name": "UGX",
              "wireValue": "UGX"
            }
          },
          {
            "name": {
              "name": "UGS",
              "wireValue": "UGS"
            }
          },
          {
            "name": {
              "name": "UAH",
              "wireValue": "UAH"
            }
          },
          {
            "name": {
              "name": "UAK",
              "wireValue": "UAK"
            }
          },
          {
            "name": {
              "name": "AED",
              "wireValue": "AED"
            }
          },
          {
            "name": {
              "name": "UYW",
              "wireValue": "UYW"
            }
          },
          {
            "name": {
              "name": "UYU",
              "wireValue": "UYU"
            }
          },
          {
            "name": {
              "name": "UYP",
              "wireValue": "UYP"
            }
          },
          {
            "name": {
              "name": "UYI",
              "wireValue": "UYI"
            }
          },
          {
            "name": {
              "name": "UZS",
              "wireValue": "UZS"
            }
          },
          {
            "name": {
              "name": "VUV",
              "wireValue": "VUV"
            }
          },
          {
            "name": {
              "name": "VES",
              "wireValue": "VES"
            }
          },
          {
            "name": {
              "name": "VEB",
              "wireValue": "VEB"
            }
          },
          {
            "name": {
              "name": "VEF",
              "wireValue": "VEF"
            }
          },
          {
            "name": {
              "name": "VND",
              "wireValue": "VND"
            }
          },
          {
            "name": {
              "name": "VNN",
              "wireValue": "VNN"
            }
          },
          {
            "name": {
              "name": "CHE",
              "wireValue": "CHE"
            }
          },
          {
            "name": {
              "name": "CHW",
              "wireValue": "CHW"
            }
          },
          {
            "name": {
              "name": "XOF",
              "wireValue": "XOF"
            }
          },
          {
            "name": {
              "name": "YDD",
              "wireValue": "YDD"
            }
          },
          {
            "name": {
              "name": "YER",
              "wireValue": "YER"
            }
          },
          {
            "name": {
              "name": "YUN",
              "wireValue": "YUN"
            }
          },
          {
            "name": {
              "name": "YUD",
              "wireValue": "YUD"
            }
          },
          {
            "name": {
              "name": "YUM",
              "wireValue": "YUM"
            }
          },
          {
            "name": {
              "name": "YUR",
              "wireValue": "YUR"
            }
          },
          {
            "name": {
              "name": "ZWN",
              "wireValue": "ZWN"
            }
          },
          {
            "name": {
              "name": "ZRN",
              "wireValue": "ZRN"
            }
          },
          {
            "name": {
              "name": "ZRZ",
              "wireValue": "ZRZ"
            }
          },
          {
            "name": {
              "name": "ZMW",
              "wireValue": "ZMW"
            }
          },
          {
            "name": {
              "name": "ZMK",
              "wireValue": "ZMK"
            }
          },
          {
            "name": {
              "name": "ZWD",
              "wireValue": "ZWD"
            }
          },
          {
            "name": {
              "name": "ZWR",
              "wireValue": "ZWR"
            }
          },
          {
            "name": {
              "name": "ZWL",
              "wireValue": "ZWL"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `XUA` - ADB Unit of Account\n* `AFN` - Afghan Afghani\n* `AFA` - Afghan Afghani (1927–2002)\n* `ALL` - Albanian Lek\n* `ALK` - Albanian Lek (1946–1965)\n* `DZD` - Algerian Dinar\n* `ADP` - Andorran Peseta\n* `AOA` - Angolan Kwanza\n* `AOK` - Angolan Kwanza (1977–1991)\n* `AON` - Angolan New Kwanza (1990–2000)\n* `AOR` - Angolan Readjusted Kwanza (1995–1999)\n* `ARA` - Argentine Austral\n* `ARS` - Argentine Peso\n* `ARM` - Argentine Peso (1881–1970)\n* `ARP` - Argentine Peso (1983–1985)\n* `ARL` - Argentine Peso Ley (1970–1983)\n* `AMD` - Armenian Dram\n* `AWG` - Aruban Florin\n* `AUD` - Australian Dollar\n* `ATS` - Austrian Schilling\n* `AZN` - Azerbaijani Manat\n* `AZM` - Azerbaijani Manat (1993–2006)\n* `BSD` - Bahamian Dollar\n* `BHD` - Bahraini Dinar\n* `BDT` - Bangladeshi Taka\n* `BBD` - Barbadian Dollar\n* `BYN` - Belarusian Ruble\n* `BYB` - Belarusian Ruble (1994–1999)\n* `BYR` - Belarusian Ruble (2000–2016)\n* `BEF` - Belgian Franc\n* `BEC` - Belgian Franc (convertible)\n* `BEL` - Belgian Franc (financial)\n* `BZD` - Belize Dollar\n* `BMD` - Bermudan Dollar\n* `BTN` - Bhutanese Ngultrum\n* `BOB` - Bolivian Boliviano\n* `BOL` - Bolivian Boliviano (1863–1963)\n* `BOV` - Bolivian Mvdol\n* `BOP` - Bolivian Peso\n* `BAM` - Bosnia-Herzegovina Convertible Mark\n* `BAD` - Bosnia-Herzegovina Dinar (1992–1994)\n* `BAN` - Bosnia-Herzegovina New Dinar (1994–1997)\n* `BWP` - Botswanan Pula\n* `BRC` - Brazilian Cruzado (1986–1989)\n* `BRZ` - Brazilian Cruzeiro (1942–1967)\n* `BRE` - Brazilian Cruzeiro (1990–1993)\n* `BRR` - Brazilian Cruzeiro (1993–1994)\n* `BRN` - Brazilian New Cruzado (1989–1990)\n* `BRB` - Brazilian New Cruzeiro (1967–1986)\n* `BRL` - Brazilian Real\n* `GBP` - British Pound\n* `BND` - Brunei Dollar\n* `BGL` - Bulgarian Hard Lev\n* `BGN` - Bulgarian Lev\n* `BGO` - Bulgarian Lev (1879–1952)\n* `BGM` - Bulgarian Socialist Lev\n* `BUK` - Burmese Kyat\n* `BIF` - Burundian Franc\n* `XPF` - CFP Franc\n* `KHR` - Cambodian Riel\n* `CAD` - Canadian Dollar\n* `CVE` - Cape Verdean Escudo\n* `KYD` - Cayman Islands Dollar\n* `XAF` - Central African CFA Franc\n* `CLE` - Chilean Escudo\n* `CLP` - Chilean Peso\n* `CLF` - Chilean Unit of Account (UF)\n* `CNX` - Chinese People’s Bank Dollar\n* `CNY` - Chinese Yuan\n* `CNH` - Chinese Yuan (offshore)\n* `COP` - Colombian Peso\n* `COU` - Colombian Real Value Unit\n* `KMF` - Comorian Franc\n* `CDF` - Congolese Franc\n* `CRC` - Costa Rican Colón\n* `HRD` - Croatian Dinar\n* `HRK` - Croatian Kuna\n* `CUC` - Cuban Convertible Peso\n* `CUP` - Cuban Peso\n* `CYP` - Cypriot Pound\n* `CZK` - Czech Koruna\n* `CSK` - Czechoslovak Hard Koruna\n* `DKK` - Danish Krone\n* `DJF` - Djiboutian Franc\n* `DOP` - Dominican Peso\n* `NLG` - Dutch Guilder\n* `XCD` - East Caribbean Dollar\n* `DDM` - East German Mark\n* `ECS` - Ecuadorian Sucre\n* `ECV` - Ecuadorian Unit of Constant Value\n* `EGP` - Egyptian Pound\n* `GQE` - Equatorial Guinean Ekwele\n* `ERN` - Eritrean Nakfa\n* `EEK` - Estonian Kroon\n* `ETB` - Ethiopian Birr\n* `EUR` - Euro\n* `XBA` - European Composite Unit\n* `XEU` - European Currency Unit\n* `XBB` - European Monetary Unit\n* `XBC` - European Unit of Account (XBC)\n* `XBD` - European Unit of Account (XBD)\n* `FKP` - Falkland Islands Pound\n* `FJD` - Fijian Dollar\n* `FIM` - Finnish Markka\n* `FRF` - French Franc\n* `XFO` - French Gold Franc\n* `XFU` - French UIC-Franc\n* `GMD` - Gambian Dalasi\n* `GEK` - Georgian Kupon Larit\n* `GEL` - Georgian Lari\n* `DEM` - German Mark\n* `GHS` - Ghanaian Cedi\n* `GHC` - Ghanaian Cedi (1979–2007)\n* `GIP` - Gibraltar Pound\n* `XAU` - Gold\n* `GRD` - Greek Drachma\n* `GTQ` - Guatemalan Quetzal\n* `GWP` - Guinea-Bissau Peso\n* `GNF` - Guinean Franc\n* `GNS` - Guinean Syli\n* `GYD` - Guyanaese Dollar\n* `HTG` - Haitian Gourde\n* `HNL` - Honduran Lempira\n* `HKD` - Hong Kong Dollar\n* `HUF` - Hungarian Forint\n* `IMP` - IMP\n* `ISK` - Icelandic Króna\n* `ISJ` - Icelandic Króna (1918–1981)\n* `INR` - Indian Rupee\n* `IDR` - Indonesian Rupiah\n* `IRR` - Iranian Rial\n* `IQD` - Iraqi Dinar\n* `IEP` - Irish Pound\n* `ILS` - Israeli New Shekel\n* `ILP` - Israeli Pound\n* `ILR` - Israeli Shekel (1980–1985)\n* `ITL` - Italian Lira\n* `JMD` - Jamaican Dollar\n* `JPY` - Japanese Yen\n* `JOD` - Jordanian Dinar\n* `KZT` - Kazakhstani Tenge\n* `KES` - Kenyan Shilling\n* `KWD` - Kuwaiti Dinar\n* `KGS` - Kyrgystani Som\n* `LAK` - Laotian Kip\n* `LVL` - Latvian Lats\n* `LVR` - Latvian Ruble\n* `LBP` - Lebanese Pound\n* `LSL` - Lesotho Loti\n* `LRD` - Liberian Dollar\n* `LYD` - Libyan Dinar\n* `LTL` - Lithuanian Litas\n* `LTT` - Lithuanian Talonas\n* `LUL` - Luxembourg Financial Franc\n* `LUC` - Luxembourgian Convertible Franc\n* `LUF` - Luxembourgian Franc\n* `MOP` - Macanese Pataca\n* `MKD` - Macedonian Denar\n* `MKN` - Macedonian Denar (1992–1993)\n* `MGA` - Malagasy Ariary\n* `MGF` - Malagasy Franc\n* `MWK` - Malawian Kwacha\n* `MYR` - Malaysian Ringgit\n* `MVR` - Maldivian Rufiyaa\n* `MVP` - Maldivian Rupee (1947–1981)\n* `MLF` - Malian Franc\n* `MTL` - Maltese Lira\n* `MTP` - Maltese Pound\n* `MRU` - Mauritanian Ouguiya\n* `MRO` - Mauritanian Ouguiya (1973–2017)\n* `MUR` - Mauritian Rupee\n* `MXV` - Mexican Investment Unit\n* `MXN` - Mexican Peso\n* `MXP` - Mexican Silver Peso (1861–1992)\n* `MDC` - Moldovan Cupon\n* `MDL` - Moldovan Leu\n* `MCF` - Monegasque Franc\n* `MNT` - Mongolian Tugrik\n* `MAD` - Moroccan Dirham\n* `MAF` - Moroccan Franc\n* `MZE` - Mozambican Escudo\n* `MZN` - Mozambican Metical\n* `MZM` - Mozambican Metical (1980–2006)\n* `MMK` - Myanmar Kyat\n* `NAD` - Namibian Dollar\n* `NPR` - Nepalese Rupee\n* `ANG` - Netherlands Antillean Guilder\n* `TWD` - New Taiwan Dollar\n* `NZD` - New Zealand Dollar\n* `NIO` - Nicaraguan Córdoba\n* `NIC` - Nicaraguan Córdoba (1988–1991)\n* `NGN` - Nigerian Naira\n* `KPW` - North Korean Won\n* `NOK` - Norwegian Krone\n* `OMR` - Omani Rial\n* `PKR` - Pakistani Rupee\n* `XPD` - Palladium\n* `PAB` - Panamanian Balboa\n* `PGK` - Papua New Guinean Kina\n* `PYG` - Paraguayan Guarani\n* `PEI` - Peruvian Inti\n* `PEN` - Peruvian Sol\n* `PES` - Peruvian Sol (1863–1965)\n* `PHP` - Philippine Peso\n* `XPT` - Platinum\n* `PLN` - Polish Zloty\n* `PLZ` - Polish Zloty (1950–1995)\n* `PTE` - Portuguese Escudo\n* `GWE` - Portuguese Guinea Escudo\n* `QAR` - Qatari Rial\n* `XRE` - RINET Funds\n* `RHD` - Rhodesian Dollar\n* `RON` - Romanian Leu\n* `ROL` - Romanian Leu (1952–2006)\n* `RUB` - Russian Ruble\n* `RUR` - Russian Ruble (1991–1998)\n* `RWF` - Rwandan Franc\n* `SVC` - Salvadoran Colón\n* `WST` - Samoan Tala\n* `SAR` - Saudi Riyal\n* `RSD` - Serbian Dinar\n* `CSD` - Serbian Dinar (2002–2006)\n* `SCR` - Seychellois Rupee\n* `SLL` - Sierra Leonean Leone\n* `XAG` - Silver\n* `SGD` - Singapore Dollar\n* `SKK` - Slovak Koruna\n* `SIT` - Slovenian Tolar\n* `SBD` - Solomon Islands Dollar\n* `SOS` - Somali Shilling\n* `ZAR` - South African Rand\n* `ZAL` - South African Rand (financial)\n* `KRH` - South Korean Hwan (1953–1962)\n* `KRW` - South Korean Won\n* `KRO` - South Korean Won (1945–1953)\n* `SSP` - South Sudanese Pound\n* `SUR` - Soviet Rouble\n* `ESP` - Spanish Peseta\n* `ESA` - Spanish Peseta (A account)\n* `ESB` - Spanish Peseta (convertible account)\n* `XDR` - Special Drawing Rights\n* `LKR` - Sri Lankan Rupee\n* `SHP` - St. Helena Pound\n* `XSU` - Sucre\n* `SDD` - Sudanese Dinar (1992–2007)\n* `SDG` - Sudanese Pound\n* `SDP` - Sudanese Pound (1957–1998)\n* `SRD` - Surinamese Dollar\n* `SRG` - Surinamese Guilder\n* `SZL` - Swazi Lilangeni\n* `SEK` - Swedish Krona\n* `CHF` - Swiss Franc\n* `SYP` - Syrian Pound\n* `STN` - São Tomé & Príncipe Dobra\n* `STD` - São Tomé & Príncipe Dobra (1977–2017)\n* `TVD` - TVD\n* `TJR` - Tajikistani Ruble\n* `TJS` - Tajikistani Somoni\n* `TZS` - Tanzanian Shilling\n* `XTS` - Testing Currency Code\n* `THB` - Thai Baht\n* `XXX` - The codes assigned for transactions where no currency is involved\n* `TPE` - Timorese Escudo\n* `TOP` - Tongan Paʻanga\n* `TTD` - Trinidad & Tobago Dollar\n* `TND` - Tunisian Dinar\n* `TRY` - Turkish Lira\n* `TRL` - Turkish Lira (1922–2005)\n* `TMT` - Turkmenistani Manat\n* `TMM` - Turkmenistani Manat (1993–2009)\n* `USD` - US Dollar\n* `USN` - US Dollar (Next day)\n* `USS` - US Dollar (Same day)\n* `UGX` - Ugandan Shilling\n* `UGS` - Ugandan Shilling (1966–1987)\n* `UAH` - Ukrainian Hryvnia\n* `UAK` - Ukrainian Karbovanets\n* `AED` - United Arab Emirates Dirham\n* `UYW` - Uruguayan Nominal Wage Index Unit\n* `UYU` - Uruguayan Peso\n* `UYP` - Uruguayan Peso (1975–1993)\n* `UYI` - Uruguayan Peso (Indexed Units)\n* `UZS` - Uzbekistani Som\n* `VUV` - Vanuatu Vatu\n* `VES` - Venezuelan Bolívar\n* `VEB` - Venezuelan Bolívar (1871–2008)\n* `VEF` - Venezuelan Bolívar (2008–2018)\n* `VND` - Vietnamese Dong\n* `VNN` - Vietnamese Dong (1978–1985)\n* `CHE` - WIR Euro\n* `CHW` - WIR Franc\n* `XOF` - West African CFA Franc\n* `YDD` - Yemeni Dinar\n* `YER` - Yemeni Rial\n* `YUN` - Yugoslavian Convertible Dinar (1990–1992)\n* `YUD` - Yugoslavian Hard Dinar (1966–1990)\n* `YUM` - Yugoslavian New Dinar (1994–2002)\n* `YUR` - Yugoslavian Reformed Dinar (1992–1993)\n* `ZWN` - ZWN\n* `ZRN` - Zairean New Zaire (1993–1998)\n* `ZRZ` - Zairean Zaire (1971–1993)\n* `ZMW` - Zambian Kwacha\n* `ZMK` - Zambian Kwacha (1968–2012)\n* `ZWD` - Zimbabwean Dollar (1980–2008)\n* `ZWR` - Zimbabwean Dollar (2008)\n* `ZWL` - Zimbabwean Dollar (2009)",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayCurrencyEnum_example_autogenerated": "XUA"
        }
      }
    },
    "PayFrequencyEnum": {
      "name": {
        "typeId": "PayFrequencyEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayFrequencyEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "WEEKLY",
              "wireValue": "WEEKLY"
            }
          },
          {
            "name": {
              "name": "BIWEEKLY",
              "wireValue": "BIWEEKLY"
            }
          },
          {
            "name": {
              "name": "MONTHLY",
              "wireValue": "MONTHLY"
            }
          },
          {
            "name": {
              "name": "QUARTERLY",
              "wireValue": "QUARTERLY"
            }
          },
          {
            "name": {
              "name": "SEMIANNUALLY",
              "wireValue": "SEMIANNUALLY"
            }
          },
          {
            "name": {
              "name": "ANNUALLY",
              "wireValue": "ANNUALLY"
            }
          },
          {
            "name": {
              "name": "THIRTEEN-MONTHLY",
              "wireValue": "THIRTEEN-MONTHLY"
            }
          },
          {
            "name": {
              "name": "PRO_RATA",
              "wireValue": "PRO_RATA"
            }
          },
          {
            "name": {
              "name": "SEMIMONTHLY",
              "wireValue": "SEMIMONTHLY"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `WEEKLY` - WEEKLY\n* `BIWEEKLY` - BIWEEKLY\n* `MONTHLY` - MONTHLY\n* `QUARTERLY` - QUARTERLY\n* `SEMIANNUALLY` - SEMIANNUALLY\n* `ANNUALLY` - ANNUALLY\n* `THIRTEEN-MONTHLY` - THIRTEEN-MONTHLY\n* `PRO_RATA` - PRO_RATA\n* `SEMIMONTHLY` - SEMIMONTHLY",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayFrequencyEnum_example_autogenerated": "WEEKLY"
        }
      }
    },
    "PayGroup": {
      "name": {
        "typeId": "PayGroup",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayGroup"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayGroupId_example_0": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayGroupRemoteId_example_0": "800293"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "pay_group_name",
              "wireValue": "pay_group_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The pay group name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayGroupPayGroupName_example_0": "contractor"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PayGroupRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayGroupModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayGroupFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayGroupRemoteData_example_0": [
                  {
                    "path": "/pay-group",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The PayGroup Object\n### Description\nThe `PayGroup` object is used to represent a subset of employees that are put together for payroll processing purposes.\n\n### Usage Example\nFetch from the `LIST PayGroup` endpoint and filter by `ID` to show all pay group information.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayGroup_example_autogenerated": {}
        }
      }
    },
    "PayPeriodEnum": {
      "name": {
        "typeId": "PayPeriodEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayPeriodEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "HOUR",
              "wireValue": "HOUR"
            }
          },
          {
            "name": {
              "name": "DAY",
              "wireValue": "DAY"
            }
          },
          {
            "name": {
              "name": "WEEK",
              "wireValue": "WEEK"
            }
          },
          {
            "name": {
              "name": "EVERY_TWO_WEEKS",
              "wireValue": "EVERY_TWO_WEEKS"
            }
          },
          {
            "name": {
              "name": "SEMIMONTHLY",
              "wireValue": "SEMIMONTHLY"
            }
          },
          {
            "name": {
              "name": "MONTH",
              "wireValue": "MONTH"
            }
          },
          {
            "name": {
              "name": "QUARTER",
              "wireValue": "QUARTER"
            }
          },
          {
            "name": {
              "name": "EVERY_SIX_MONTHS",
              "wireValue": "EVERY_SIX_MONTHS"
            }
          },
          {
            "name": {
              "name": "YEAR",
              "wireValue": "YEAR"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `HOUR` - HOUR\n* `DAY` - DAY\n* `WEEK` - WEEK\n* `EVERY_TWO_WEEKS` - EVERY_TWO_WEEKS\n* `SEMIMONTHLY` - SEMIMONTHLY\n* `MONTH` - MONTH\n* `QUARTER` - QUARTER\n* `EVERY_SIX_MONTHS` - EVERY_SIX_MONTHS\n* `YEAR` - YEAR",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayPeriodEnum_example_autogenerated": "HOUR"
        }
      }
    },
    "PayrollRun": {
      "name": {
        "typeId": "PayrollRun",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayrollRun"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunId_example_0": "37336947-b3d4-4a4c-a310-ab6ab510e079"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "run_state",
              "wireValue": "run_state"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RunStateEnum",
                      "typeId": "RunStateEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The state of the payroll run\n\n* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "run_type",
              "wireValue": "run_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RunTypeEnum",
                      "typeId": "RunTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of the payroll run\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_date",
              "wireValue": "start_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the payroll run started.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunStartDate_example_0": "2020-11-08T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_date",
              "wireValue": "end_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the payroll run ended.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunEndDate_example_0": "2020-11-15T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "check_date",
              "wireValue": "check_date"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time the payroll run was checked.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunCheckDate_example_0": "2020-11-15T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "PayrollRunRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "PayrollRunRemoteData_example_0": [
                  {
                    "path": "/payroll",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The PayrollRun Object\n### Description\nThe `PayrollRun` object is used to represent a group of pay statements for a specific pay schedule.\n\n### Usage Example\nFetch from the `LIST PayrollRuns` endpoint and filter by `ID` to show all payroll runs.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayrollRun_example_autogenerated": {}
        }
      }
    },
    "PolicyTypeEnum": {
      "name": {
        "typeId": "PolicyTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PolicyTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "VACATION",
              "wireValue": "VACATION"
            }
          },
          {
            "name": {
              "name": "SICK",
              "wireValue": "SICK"
            }
          },
          {
            "name": {
              "name": "PERSONAL",
              "wireValue": "PERSONAL"
            }
          },
          {
            "name": {
              "name": "JURY_DUTY",
              "wireValue": "JURY_DUTY"
            }
          },
          {
            "name": {
              "name": "VOLUNTEER",
              "wireValue": "VOLUNTEER"
            }
          },
          {
            "name": {
              "name": "BEREAVEMENT",
              "wireValue": "BEREAVEMENT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PolicyTypeEnum_example_autogenerated": "VACATION"
        }
      }
    },
    "ReasonEnum": {
      "name": {
        "typeId": "ReasonEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ReasonEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "GENERAL_CUSTOMER_REQUEST",
              "wireValue": "GENERAL_CUSTOMER_REQUEST"
            }
          },
          {
            "name": {
              "name": "GDPR",
              "wireValue": "GDPR"
            }
          },
          {
            "name": {
              "name": "OTHER",
              "wireValue": "OTHER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `GENERAL_CUSTOMER_REQUEST` - GENERAL_CUSTOMER_REQUEST\n* `GDPR` - GDPR\n* `OTHER` - OTHER",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ReasonEnum_example_autogenerated": "GENERAL_CUSTOMER_REQUEST"
        }
      }
    },
    "RemoteData": {
      "name": {
        "typeId": "RemoteData",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RemoteData"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "path",
              "wireValue": "path"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RemoteDataPath_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "data",
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "type": "unknown"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "RemoteDataData_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RemoteData_example_autogenerated": {
            "path": "string"
          }
        }
      }
    },
    "RemoteKey": {
      "name": {
        "typeId": "RemoteKey",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RemoteKey"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteKeyName_example_0": "Remote Deployment Key 1"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteKeyKey_example_0": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The RemoteKey Object\n### Description\nThe `RemoteKey` object is used to represent a request for a new remote key.\n\n### Usage Example\nPost a `GenerateRemoteKey` to receive a new `RemoteKey`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RemoteKey_example_autogenerated": {
            "name": "Remote Deployment Key 1",
            "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
          }
        }
      }
    },
    "RemoteKeyForRegenerationRequest": {
      "name": {
        "typeId": "RemoteKeyForRegenerationRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RemoteKeyForRegenerationRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteKeyForRegenerationRequestName_example_0": "Remote Deployment Key 1"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The RemoteKeyForRegeneration Object\n### Description\nThe `RemoteKeyForRegeneration` object is used to exchange an old remote key for a new one\n\n### Usage Example\nPost a `RemoteKeyForRegeneration` to swap out an old remote key for a new one",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RemoteKeyForRegenerationRequest_example_autogenerated": {
            "name": "Remote Deployment Key 1"
          }
        }
      }
    },
    "RemoteResponse": {
      "name": {
        "typeId": "RemoteResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RemoteResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "method",
              "wireValue": "method"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteResponseMethod_example_0": "GET"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "path",
              "wireValue": "path"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteResponsePath_example_0": "/scooters"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "validation": {},
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteResponseStatus_example_0": 200
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "response",
              "wireValue": "response"
            },
            "valueType": {
              "type": "unknown"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteResponseResponse_example_0": null
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "response_headers",
              "wireValue": "response_headers"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "type": "unknown"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteResponseResponseHeaders_example_0": {
                  "X-Page-Token": "value"
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "response_type",
              "wireValue": "response_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ResponseTypeEnum",
                  "typeId": "ResponseTypeEnum",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "headers",
              "wireValue": "headers"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "keyType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "valueType": {
                      "type": "unknown"
                    },
                    "type": "map"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "RemoteResponseHeaders_example_0": {
                  "EXTRA-HEADER": "value",
                  "Authorization": "<redacted>"
                }
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The RemoteResponse Object\n### Description\nThe `RemoteResponse` object is used to represent information returned from a third-party endpoint.\n\n### Usage Example\nView the `RemoteResponse` returned from your `DataPassthrough`.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RemoteResponse_example_autogenerated": {
            "method": "GET",
            "path": "/scooters",
            "status": 200,
            "response": null
          }
        }
      }
    },
    "RequestFormatEnum": {
      "name": {
        "typeId": "RequestFormatEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RequestFormatEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "JSON",
              "wireValue": "JSON"
            }
          },
          {
            "name": {
              "name": "XML",
              "wireValue": "XML"
            }
          },
          {
            "name": {
              "name": "MULTIPART",
              "wireValue": "MULTIPART"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `JSON` - JSON\n* `XML` - XML\n* `MULTIPART` - MULTIPART",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RequestFormatEnum_example_autogenerated": "JSON"
        }
      }
    },
    "RequestTypeEnum": {
      "name": {
        "typeId": "RequestTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RequestTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "VACATION",
              "wireValue": "VACATION"
            }
          },
          {
            "name": {
              "name": "SICK",
              "wireValue": "SICK"
            }
          },
          {
            "name": {
              "name": "PERSONAL",
              "wireValue": "PERSONAL"
            }
          },
          {
            "name": {
              "name": "JURY_DUTY",
              "wireValue": "JURY_DUTY"
            }
          },
          {
            "name": {
              "name": "VOLUNTEER",
              "wireValue": "VOLUNTEER"
            }
          },
          {
            "name": {
              "name": "BEREAVEMENT",
              "wireValue": "BEREAVEMENT"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RequestTypeEnum_example_autogenerated": "VACATION"
        }
      }
    },
    "ResponseTypeEnum": {
      "name": {
        "typeId": "ResponseTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ResponseTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "JSON",
              "wireValue": "JSON"
            }
          },
          {
            "name": {
              "name": "BASE64_GZIP",
              "wireValue": "BASE64_GZIP"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `JSON` - JSON\n* `BASE64_GZIP` - BASE64_GZIP",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ResponseTypeEnum_example_autogenerated": "JSON"
        }
      }
    },
    "RunStateEnum": {
      "name": {
        "typeId": "RunStateEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RunStateEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "PAID",
              "wireValue": "PAID"
            }
          },
          {
            "name": {
              "name": "DRAFT",
              "wireValue": "DRAFT"
            }
          },
          {
            "name": {
              "name": "APPROVED",
              "wireValue": "APPROVED"
            }
          },
          {
            "name": {
              "name": "FAILED",
              "wireValue": "FAILED"
            }
          },
          {
            "name": {
              "name": "CLOSED",
              "wireValue": "CLOSED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `PAID` - PAID\n* `DRAFT` - DRAFT\n* `APPROVED` - APPROVED\n* `FAILED` - FAILED\n* `CLOSED` - CLOSED",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RunStateEnum_example_autogenerated": "PAID"
        }
      }
    },
    "RunTypeEnum": {
      "name": {
        "typeId": "RunTypeEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "RunTypeEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "REGULAR",
              "wireValue": "REGULAR"
            }
          },
          {
            "name": {
              "name": "OFF_CYCLE",
              "wireValue": "OFF_CYCLE"
            }
          },
          {
            "name": {
              "name": "CORRECTION",
              "wireValue": "CORRECTION"
            }
          },
          {
            "name": {
              "name": "TERMINATION",
              "wireValue": "TERMINATION"
            }
          },
          {
            "name": {
              "name": "SIGN_ON_BONUS",
              "wireValue": "SIGN_ON_BONUS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "RunTypeEnum_example_autogenerated": "REGULAR"
        }
      }
    },
    "SelectiveSyncConfigurationsUsageEnum": {
      "name": {
        "typeId": "SelectiveSyncConfigurationsUsageEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SelectiveSyncConfigurationsUsageEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "IN_NEXT_SYNC",
              "wireValue": "IN_NEXT_SYNC"
            }
          },
          {
            "name": {
              "name": "IN_LAST_SYNC",
              "wireValue": "IN_LAST_SYNC"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `IN_NEXT_SYNC` - IN_NEXT_SYNC\n* `IN_LAST_SYNC` - IN_LAST_SYNC",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SelectiveSyncConfigurationsUsageEnum_example_autogenerated": "IN_NEXT_SYNC"
        }
      }
    },
    "SyncStatus": {
      "name": {
        "typeId": "SyncStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SyncStatus"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model_name",
              "wireValue": "model_name"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SyncStatusModelName_example_0": "Employee"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "model_id",
              "wireValue": "model_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SyncStatusModelId_example_0": "hris.Employee"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "last_sync_start",
              "wireValue": "last_sync_start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SyncStatusLastSyncStart_example_0": "2021-03-30T19:44:18.695973Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "next_sync_start",
              "wireValue": "next_sync_start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SyncStatusNextSyncStart_example_0": "2021-03-30T20:44:18.662942Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "SyncStatusStatusEnum",
              "typeId": "SyncStatusStatusEnum",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "is_initial_sync",
              "wireValue": "is_initial_sync"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "SyncStatusIsInitialSync_example_0": true
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "selective_sync_configurations_usage",
              "wireValue": "selective_sync_configurations_usage"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "SelectiveSyncConfigurationsUsageEnum",
                  "typeId": "SelectiveSyncConfigurationsUsageEnum",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The SyncStatus Object\n### Description\nThe `SyncStatus` object is used to represent the syncing state of an account\n\n### Usage Example\nView the `SyncStatus` for an account to see how recently its models were synced.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SyncStatus_example_autogenerated": {
            "model_name": "Employee",
            "model_id": "hris.Employee",
            "status": "SYNCING",
            "is_initial_sync": true
          }
        }
      }
    },
    "SyncStatusStatusEnum": {
      "name": {
        "typeId": "SyncStatusStatusEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "SyncStatusStatusEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "SYNCING",
              "wireValue": "SYNCING"
            }
          },
          {
            "name": {
              "name": "DONE",
              "wireValue": "DONE"
            }
          },
          {
            "name": {
              "name": "FAILED",
              "wireValue": "FAILED"
            }
          },
          {
            "name": {
              "name": "DISABLED",
              "wireValue": "DISABLED"
            }
          },
          {
            "name": {
              "name": "PAUSED",
              "wireValue": "PAUSED"
            }
          },
          {
            "name": {
              "name": "PARTIALLY_SYNCED",
              "wireValue": "PARTIALLY_SYNCED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `SYNCING` - SYNCING\n* `DONE` - DONE\n* `FAILED` - FAILED\n* `DISABLED` - DISABLED\n* `PAUSED` - PAUSED\n* `PARTIALLY_SYNCED` - PARTIALLY_SYNCED",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "SyncStatusStatusEnum_example_autogenerated": "SYNCING"
        }
      }
    },
    "Tax": {
      "name": {
        "typeId": "Tax",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Tax"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxId_example_0": "e3a825fd-c38d-4095-a717-df98c4cb9ebc"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxRemoteId_example_0": "26806834"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee_payroll_run",
              "wireValue": "employee_payroll_run"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxEmployeePayrollRun_example_0": "35347df1-95e7-46e2-93cc-66f1191edca5"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The tax's name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxName_example_0": "California State Income Tax"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The tax amount.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxAmount_example_0": 100.25
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employer_tax",
              "wireValue": "employer_tax"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Whether or not the employer is responsible for paying the tax.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxEmployerTax_example_0": "False"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TaxRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TaxFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TaxRemoteData_example_autogenerated": [
                  {
                    "path": "string"
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Tax Object\n### Description\nThe `Tax` object is used to represent an array of the tax deductions for a given employee's payroll run.\n\n### Usage Example\nFetch from the `LIST Taxes` endpoint and filter by `ID` to show all taxes.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Tax_example_autogenerated": {}
        }
      }
    },
    "Team": {
      "name": {
        "typeId": "Team",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "Team"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TeamId_example_0": "13a72919-9fae-4f54-81ca-ddfd8712a1ba"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TeamRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The team's name.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TeamName_example_0": "Engineering"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "parent_team",
              "wireValue": "parent_team"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The team's parent team.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TeamParentTeam_example_0": "1b998423-db0a-4037-a4cf-f79c60cb67b3"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TeamRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TeamModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TeamFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TeamRemoteData_example_0": [
                  {
                    "path": "/teams",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The Team Object\n### Description\nThe `Team` object is used to represent a subdivision of the company, usually a department. Each employee will be grouped into one specific Team.\n\n### Usage Example\nIf you're building a way to filter by `Team`, you'd hit the `GET Teams` endpoint to fetch the `Teams`, and then use the `ID` of the team your user selects to filter the `GET Employees` endpoint.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Team_example_autogenerated": {}
        }
      }
    },
    "TimeOff": {
      "name": {
        "typeId": "TimeOff",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOff"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffId_example_0": "91b2b905-e866-40c8-8be2-efe53827a0aa"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee requesting time off.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffEmployee_example_0": "d2f972d0-2526-434b-9409-4c3b468e08f0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "approver",
              "wireValue": "approver"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Merge ID of the employee with the ability to approve the time off request.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffApprover_example_0": "9efbc633-3387-4306-aa55-e2c635e6bb4f"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOffStatusEnum",
                      "typeId": "TimeOffStatusEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee_note",
              "wireValue": "employee_note"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee note for this time off request.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffEmployeeNote_example_0": "Moving into the new apartment Kendall Roy gave me!"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UnitsEnum",
                      "typeId": "UnitsEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The time off quantity measured by the prescribed “units”.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffAmount_example_0": 3
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "request_type",
              "wireValue": "request_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestTypeEnum",
                      "typeId": "RequestTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_time",
              "wireValue": "start_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time of the start of the time requested off.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffStartTime_example_0": "2020-11-10T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_time",
              "wireValue": "end_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time of the end of the time requested off.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffEndTime_example_0": "2020-11-17T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimeOffRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRemoteData_example_0": [
                  {
                    "path": "/leave",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOff_example_autogenerated": {}
        }
      }
    },
    "TimeOffBalance": {
      "name": {
        "typeId": "TimeOffBalance",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalance"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "id",
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceId_example_0": "91b2b905-e866-40c8-8be2-efe53827a0aa"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_id",
              "wireValue": "remote_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The third-party API ID of the matching object.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceRemoteId_example_0": "19202938"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee the balance belongs to.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceEmployee_example_0": "d2f972d0-2526-434b-9409-4c3b468e08f0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "balance",
              "wireValue": "balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The current remaining PTO balance, always measured in terms of hours.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceBalance_example_0": 60
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "used",
              "wireValue": "used"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of PTO used in terms of hours.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceUsed_example_0": 45
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "policy_type",
              "wireValue": "policy_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PolicyTypeEnum",
                      "typeId": "PolicyTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The policy type of this time off balance.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_was_deleted",
              "wireValue": "remote_was_deleted"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Indicates whether or not this object has been deleted by third party webhooks.",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimeOffBalanceRemoteWasDeleted_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "modified_at",
              "wireValue": "modified_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date-time"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "This is the datetime that this object was last updated by Merge",
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceModifiedAt_example_0": "2021-10-16T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "field_mappings",
              "wireValue": "field_mappings"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceFieldMappings_example_0": {
                  "organization_defined_targets": {
                    "custom_key": "custom_value"
                  },
                  "linked_account_defined_targets": {
                    "custom_key": "custom_value"
                  }
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "remote_data",
              "wireValue": "remote_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "RemoteData",
                          "typeId": "RemoteData",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "READ_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffBalanceRemoteData_example_0": [
                  {
                    "path": "/leave",
                    "data": [
                      "Varies by platform"
                    ]
                  }
                ]
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The TimeOffBalance Object\n### Description\nThe `TimeOffBalance` object is used to represent current balances for an employee's Time Off plan.\n\n### Usage Example\nFetch from the `LIST TimeOffBalances` endpoint and filter by `ID` to show all time off balances.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalance_example_autogenerated": {}
        }
      }
    },
    "TimeOffEndpointRequest": {
      "name": {
        "typeId": "TimeOffEndpointRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffEndpointRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TimeOffRequest",
              "typeId": "TimeOffRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffEndpointRequest_example_autogenerated": {
            "model": {}
          }
        }
      }
    },
    "TimeOffRequest": {
      "name": {
        "typeId": "TimeOffRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee requesting time off.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestEmployee_example_0": "d2f972d0-2526-434b-9409-4c3b468e08f0"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "approver",
              "wireValue": "approver"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "uuid"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The Merge ID of the employee with the ability to approve the time off request.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestApprover_example_0": "9efbc633-3387-4306-aa55-e2c635e6bb4f"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOffStatusEnum",
                      "typeId": "TimeOffStatusEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The status of this time off request.\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "employee_note",
              "wireValue": "employee_note"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The employee note for this time off request.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestEmployeeNote_example_0": "Moving into the new apartment Kendall Roy gave me!"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UnitsEnum",
                      "typeId": "UnitsEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The measurement that the third-party integration uses to count time requested.\n\n* `HOURS` - HOURS\n* `DAYS` - DAYS",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "amount",
              "wireValue": "amount"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "validation": {},
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The time off quantity measured by the prescribed “units”.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestAmount_example_0": 3
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "request_type",
              "wireValue": "request_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestTypeEnum",
                      "typeId": "RequestTypeEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The type of time off request.\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_time",
              "wireValue": "start_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time of the start of the time requested off.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestStartTime_example_0": "2020-11-10T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_time",
              "wireValue": "end_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "format": "date-time"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The day and time of the end of the time requested off.",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestEndTime_example_0": "2020-11-17T00:00:00Z"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "integration_params",
              "wireValue": "integration_params"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "WRITE_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestIntegrationParams_example_0": {
                  "unique_integration_field": "unique_integration_field_value"
                }
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "linked_account_params",
              "wireValue": "linked_account_params"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "keyType": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "valueType": {
                          "type": "unknown"
                        },
                        "type": "map"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "propertyAccess": "WRITE_ONLY",
            "v2Examples": {
              "userSpecifiedExamples": {
                "TimeOffRequestLinkedAccountParams_example_0": {
                  "unique_linked_account_field": "unique_linked_account_field_value"
                }
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "# The TimeOff Object\n### Description\nThe `TimeOff` object is used to represent all employees' Time Off entries.\n\n### Usage Example\nFetch from the `LIST TimeOffs` endpoint and filter by `ID` to show all time off requests.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffRequest_example_autogenerated": {}
        }
      }
    },
    "TimeOffResponse": {
      "name": {
        "typeId": "TimeOffResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffResponse"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "model",
              "wireValue": "model"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TimeOff",
              "typeId": "TimeOff",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "warnings",
              "wireValue": "warnings"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WarningValidationProblem",
                  "typeId": "WarningValidationProblem",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimeOffResponseWarnings_example_autogenerated": [
                  {
                    "title": "Unrecognized Field",
                    "detail": "An unrecognized field, age, was passed in with request data.",
                    "problem_type": "UNRECOGNIZED_FIELD"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "errors",
              "wireValue": "errors"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ErrorValidationProblem",
                  "typeId": "ErrorValidationProblem",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimeOffResponseErrors_example_autogenerated": [
                  {
                    "title": "Missing Required Field",
                    "detail": "custom_fields is a required field on model.",
                    "problem_type": "MISSING_REQUIRED_FIELD"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": "logs",
              "wireValue": "logs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "DebugModeLog",
                      "typeId": "DebugModeLog",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "TimeOffResponseLogs_example_autogenerated": [
                  {
                    "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                    "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                    "log_summary": {
                      "url": "https://harvest.greenhouse.io/v1/candidates/",
                      "method": "POST",
                      "status_code": 200
                    }
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffResponse_example_autogenerated": {
            "model": {},
            "warnings": [
              {
                "title": "Unrecognized Field",
                "detail": "An unrecognized field, age, was passed in with request data.",
                "problem_type": "UNRECOGNIZED_FIELD"
              }
            ],
            "errors": [
              {
                "title": "Missing Required Field",
                "detail": "custom_fields is a required field on model.",
                "problem_type": "MISSING_REQUIRED_FIELD"
              }
            ]
          }
        }
      }
    },
    "TimeOffStatusEnum": {
      "name": {
        "typeId": "TimeOffStatusEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffStatusEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "REQUESTED",
              "wireValue": "REQUESTED"
            }
          },
          {
            "name": {
              "name": "APPROVED",
              "wireValue": "APPROVED"
            }
          },
          {
            "name": {
              "name": "DECLINED",
              "wireValue": "DECLINED"
            }
          },
          {
            "name": {
              "name": "CANCELLED",
              "wireValue": "CANCELLED"
            }
          },
          {
            "name": {
              "name": "DELETED",
              "wireValue": "DELETED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffStatusEnum_example_autogenerated": "REQUESTED"
        }
      }
    },
    "UnitsEnum": {
      "name": {
        "typeId": "UnitsEnum",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "UnitsEnum"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "HOURS",
              "wireValue": "HOURS"
            }
          },
          {
            "name": {
              "name": "DAYS",
              "wireValue": "DAYS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "* `HOURS` - HOURS\n* `DAYS` - DAYS",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "UnitsEnum_example_autogenerated": "HOURS"
        }
      }
    },
    "ValidationProblemSource": {
      "name": {
        "typeId": "ValidationProblemSource",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "ValidationProblemSource"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "pointer",
              "wireValue": "pointer"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "ValidationProblemSourcePointer_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "ValidationProblemSource_example_autogenerated": {
            "pointer": "string"
          }
        }
      }
    },
    "WarningValidationProblem": {
      "name": {
        "typeId": "WarningValidationProblem",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WarningValidationProblem"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "source",
              "wireValue": "source"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "ValidationProblemSource",
                  "typeId": "ValidationProblemSource",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "title",
              "wireValue": "title"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "WarningValidationProblemTitle_example_0": "Unrecognized Field"
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "detail",
              "wireValue": "detail"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "WarningValidationProblemDetail_example_0": "An unrecognized field, age, was passed in with request data."
              },
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "problem_type",
              "wireValue": "problem_type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "WarningValidationProblemProblemType_example_0": "UNRECOGNIZED_FIELD"
              },
              "autogeneratedExamples": {}
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WarningValidationProblem_example_autogenerated": {
            "title": "Unrecognized Field",
            "detail": "An unrecognized field, age, was passed in with request data.",
            "problem_type": "UNRECOGNIZED_FIELD"
          }
        }
      }
    },
    "WebhookReceiver": {
      "name": {
        "typeId": "WebhookReceiver",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WebhookReceiver"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "event",
              "wireValue": "event"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookReceiverEvent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_active",
              "wireValue": "is_active"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookReceiverIsActive_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookReceiverKey_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WebhookReceiver_example_autogenerated": {
            "event": "string",
            "is_active": true
          }
        }
      }
    },
    "WebhookReceiverRequest": {
      "name": {
        "typeId": "WebhookReceiverRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "WebhookReceiverRequest"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "event",
              "wireValue": "event"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "minLength": 1
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookReceiverRequestEvent_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "is_active",
              "wireValue": "is_active"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookReceiverRequestIsActive_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": "key",
              "wireValue": "key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "minLength": 1
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "WebhookReceiverRequestKey_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "WebhookReceiverRequest_example_autogenerated": {
            "event": "string",
            "is_active": true
          }
        }
      }
    },
    "BankInfoGetParametersAccountType": {
      "name": {
        "typeId": "BankInfoGetParametersAccountType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoGetParametersAccountType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "CHECKING",
              "wireValue": "CHECKING"
            }
          },
          {
            "name": {
              "name": "SAVINGS",
              "wireValue": "SAVINGS"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoGetParametersAccountType_example_autogenerated": "CHECKING"
        }
      }
    },
    "BankInfoGetParametersExpand": {
      "name": {
        "typeId": "BankInfoGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "BankInfoGetParametersOrderBy": {
      "name": {
        "typeId": "BankInfoGetParametersOrderBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoGetParametersOrderBy"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "RemoteCreatedAtDescending",
              "wireValue": "-remote_created_at"
            }
          },
          {
            "name": {
              "name": "RemoteCreatedAtAscending",
              "wireValue": "remote_created_at"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoGetParametersOrderBy_example_autogenerated": "-remote_created_at"
        }
      }
    },
    "BankInfoGetParametersRemoteFields": {
      "name": {
        "typeId": "BankInfoGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "account_type",
              "wireValue": "account_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoGetParametersRemoteFields_example_autogenerated": "account_type"
        }
      }
    },
    "BankInfoGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "BankInfoGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "account_type",
              "wireValue": "account_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoGetParametersShowEnumOrigins_example_autogenerated": "account_type"
        }
      }
    },
    "BankInfoIdGetParametersExpand": {
      "name": {
        "typeId": "BankInfoIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoIdGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "BankInfoIdGetParametersRemoteFields": {
      "name": {
        "typeId": "BankInfoIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "account_type",
              "wireValue": "account_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoIdGetParametersRemoteFields_example_autogenerated": "account_type"
        }
      }
    },
    "BankInfoIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "BankInfoIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BankInfoIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "account_type",
              "wireValue": "account_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BankInfoIdGetParametersShowEnumOrigins_example_autogenerated": "account_type"
        }
      }
    },
    "BenefitsGetParametersExpand": {
      "name": {
        "typeId": "BenefitsGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BenefitsGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BenefitsGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "BenefitsIdGetParametersExpand": {
      "name": {
        "typeId": "BenefitsIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "BenefitsIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "BenefitsIdGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "delete-account_create_Response_200": {
      "name": {
        "typeId": "delete-account_create_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "delete-account_create_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "delete-account_create_Response_200_example_autogenerated": {}
        }
      }
    },
    "EmployeePayrollRunsGetParametersExpand": {
      "name": {
        "typeId": "EmployeePayrollRunsGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeePayrollRunsGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          },
          {
            "name": {
              "name": "employee,payroll_run",
              "wireValue": "employee,payroll_run"
            }
          },
          {
            "name": {
              "name": "payroll_run",
              "wireValue": "payroll_run"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeePayrollRunsGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "EmployeePayrollRunsIdGetParametersExpand": {
      "name": {
        "typeId": "EmployeePayrollRunsIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeePayrollRunsIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          },
          {
            "name": {
              "name": "employee,payroll_run",
              "wireValue": "employee,payroll_run"
            }
          },
          {
            "name": {
              "name": "payroll_run",
              "wireValue": "payroll_run"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeePayrollRunsIdGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "EmployeesGetParametersEmploymentStatus": {
      "name": {
        "typeId": "EmployeesGetParametersEmploymentStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeesGetParametersEmploymentStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "ACTIVE",
              "wireValue": "ACTIVE"
            }
          },
          {
            "name": {
              "name": "INACTIVE",
              "wireValue": "INACTIVE"
            }
          },
          {
            "name": {
              "name": "PENDING",
              "wireValue": "PENDING"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeesGetParametersEmploymentStatus_example_autogenerated": "ACTIVE"
        }
      }
    },
    "EmployeesGetParametersExpand": {
      "name": {
        "typeId": "EmployeesGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeesGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "company",
              "wireValue": "company"
            }
          },
          {
            "name": {
              "name": "company,pay_group",
              "wireValue": "company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments",
              "wireValue": "employments"
            }
          },
          {
            "name": {
              "name": "employments,company",
              "wireValue": "employments,company"
            }
          },
          {
            "name": {
              "name": "employments,company,pay_group",
              "wireValue": "employments,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups",
              "wireValue": "employments,groups"
            }
          },
          {
            "name": {
              "name": "employments,groups,company",
              "wireValue": "employments,groups,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,company,pay_group",
              "wireValue": "employments,groups,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location",
              "wireValue": "employments,groups,home_location"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,company",
              "wireValue": "employments,groups,home_location,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,company,pay_group",
              "wireValue": "employments,groups,home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager",
              "wireValue": "employments,groups,home_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,company",
              "wireValue": "employments,groups,home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,company,pay_group",
              "wireValue": "employments,groups,home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,pay_group",
              "wireValue": "employments,groups,home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team",
              "wireValue": "employments,groups,home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team,company",
              "wireValue": "employments,groups,home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team,company,pay_group",
              "wireValue": "employments,groups,home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team,pay_group",
              "wireValue": "employments,groups,home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,pay_group",
              "wireValue": "employments,groups,home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team",
              "wireValue": "employments,groups,home_location,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team,company",
              "wireValue": "employments,groups,home_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team,company,pay_group",
              "wireValue": "employments,groups,home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team,pay_group",
              "wireValue": "employments,groups,home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location",
              "wireValue": "employments,groups,home_location,work_location"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,company",
              "wireValue": "employments,groups,home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager",
              "wireValue": "employments,groups,home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,company",
              "wireValue": "employments,groups,home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team",
              "wireValue": "employments,groups,home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team,company",
              "wireValue": "employments,groups,home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,pay_group",
              "wireValue": "employments,groups,home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team",
              "wireValue": "employments,groups,home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team,company",
              "wireValue": "employments,groups,home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team,pay_group",
              "wireValue": "employments,groups,home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager",
              "wireValue": "employments,groups,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,company",
              "wireValue": "employments,groups,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,company,pay_group",
              "wireValue": "employments,groups,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,pay_group",
              "wireValue": "employments,groups,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team",
              "wireValue": "employments,groups,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team,company",
              "wireValue": "employments,groups,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team,company,pay_group",
              "wireValue": "employments,groups,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team,pay_group",
              "wireValue": "employments,groups,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,pay_group",
              "wireValue": "employments,groups,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,team",
              "wireValue": "employments,groups,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,team,company",
              "wireValue": "employments,groups,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,team,company,pay_group",
              "wireValue": "employments,groups,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,team,pay_group",
              "wireValue": "employments,groups,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location",
              "wireValue": "employments,groups,work_location"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,company",
              "wireValue": "employments,groups,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,company,pay_group",
              "wireValue": "employments,groups,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager",
              "wireValue": "employments,groups,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,company",
              "wireValue": "employments,groups,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,company,pay_group",
              "wireValue": "employments,groups,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,pay_group",
              "wireValue": "employments,groups,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team",
              "wireValue": "employments,groups,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team,company",
              "wireValue": "employments,groups,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team,company,pay_group",
              "wireValue": "employments,groups,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team,pay_group",
              "wireValue": "employments,groups,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,pay_group",
              "wireValue": "employments,groups,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team",
              "wireValue": "employments,groups,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team,company",
              "wireValue": "employments,groups,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team,company,pay_group",
              "wireValue": "employments,groups,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team,pay_group",
              "wireValue": "employments,groups,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location",
              "wireValue": "employments,home_location"
            }
          },
          {
            "name": {
              "name": "employments,home_location,company",
              "wireValue": "employments,home_location,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,company,pay_group",
              "wireValue": "employments,home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager",
              "wireValue": "employments,home_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,company",
              "wireValue": "employments,home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,company,pay_group",
              "wireValue": "employments,home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,pay_group",
              "wireValue": "employments,home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team",
              "wireValue": "employments,home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team,company",
              "wireValue": "employments,home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team,company,pay_group",
              "wireValue": "employments,home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team,pay_group",
              "wireValue": "employments,home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,pay_group",
              "wireValue": "employments,home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team",
              "wireValue": "employments,home_location,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team,company",
              "wireValue": "employments,home_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team,company,pay_group",
              "wireValue": "employments,home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team,pay_group",
              "wireValue": "employments,home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location",
              "wireValue": "employments,home_location,work_location"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,company",
              "wireValue": "employments,home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,company,pay_group",
              "wireValue": "employments,home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager",
              "wireValue": "employments,home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,company",
              "wireValue": "employments,home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,company,pay_group",
              "wireValue": "employments,home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,pay_group",
              "wireValue": "employments,home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team",
              "wireValue": "employments,home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team,company",
              "wireValue": "employments,home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team,company,pay_group",
              "wireValue": "employments,home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team,pay_group",
              "wireValue": "employments,home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,pay_group",
              "wireValue": "employments,home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team",
              "wireValue": "employments,home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team,company",
              "wireValue": "employments,home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team,company,pay_group",
              "wireValue": "employments,home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team,pay_group",
              "wireValue": "employments,home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager",
              "wireValue": "employments,manager"
            }
          },
          {
            "name": {
              "name": "employments,manager,company",
              "wireValue": "employments,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,manager,company,pay_group",
              "wireValue": "employments,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager,pay_group",
              "wireValue": "employments,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager,team",
              "wireValue": "employments,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,manager,team,company",
              "wireValue": "employments,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,manager,team,company,pay_group",
              "wireValue": "employments,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager,team,pay_group",
              "wireValue": "employments,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,pay_group",
              "wireValue": "employments,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,team",
              "wireValue": "employments,team"
            }
          },
          {
            "name": {
              "name": "employments,team,company",
              "wireValue": "employments,team,company"
            }
          },
          {
            "name": {
              "name": "employments,team,company,pay_group",
              "wireValue": "employments,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,team,pay_group",
              "wireValue": "employments,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location",
              "wireValue": "employments,work_location"
            }
          },
          {
            "name": {
              "name": "employments,work_location,company",
              "wireValue": "employments,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,company,pay_group",
              "wireValue": "employments,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager",
              "wireValue": "employments,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,company",
              "wireValue": "employments,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,company,pay_group",
              "wireValue": "employments,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,pay_group",
              "wireValue": "employments,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team",
              "wireValue": "employments,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team,company",
              "wireValue": "employments,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team,company,pay_group",
              "wireValue": "employments,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team,pay_group",
              "wireValue": "employments,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,pay_group",
              "wireValue": "employments,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team",
              "wireValue": "employments,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team,company",
              "wireValue": "employments,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team,company,pay_group",
              "wireValue": "employments,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team,pay_group",
              "wireValue": "employments,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups",
              "wireValue": "groups"
            }
          },
          {
            "name": {
              "name": "groups,company",
              "wireValue": "groups,company"
            }
          },
          {
            "name": {
              "name": "groups,company,pay_group",
              "wireValue": "groups,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location",
              "wireValue": "groups,home_location"
            }
          },
          {
            "name": {
              "name": "groups,home_location,company",
              "wireValue": "groups,home_location,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,company,pay_group",
              "wireValue": "groups,home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager",
              "wireValue": "groups,home_location,manager"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,company",
              "wireValue": "groups,home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,company,pay_group",
              "wireValue": "groups,home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,pay_group",
              "wireValue": "groups,home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team",
              "wireValue": "groups,home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team,company",
              "wireValue": "groups,home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team,company,pay_group",
              "wireValue": "groups,home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team,pay_group",
              "wireValue": "groups,home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,pay_group",
              "wireValue": "groups,home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team",
              "wireValue": "groups,home_location,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team,company",
              "wireValue": "groups,home_location,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team,company,pay_group",
              "wireValue": "groups,home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team,pay_group",
              "wireValue": "groups,home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location",
              "wireValue": "groups,home_location,work_location"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,company",
              "wireValue": "groups,home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,company,pay_group",
              "wireValue": "groups,home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager",
              "wireValue": "groups,home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,company",
              "wireValue": "groups,home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,company,pay_group",
              "wireValue": "groups,home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,pay_group",
              "wireValue": "groups,home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team",
              "wireValue": "groups,home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team,company",
              "wireValue": "groups,home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team,company,pay_group",
              "wireValue": "groups,home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team,pay_group",
              "wireValue": "groups,home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,pay_group",
              "wireValue": "groups,home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team",
              "wireValue": "groups,home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team,company",
              "wireValue": "groups,home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team,company,pay_group",
              "wireValue": "groups,home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team,pay_group",
              "wireValue": "groups,home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager",
              "wireValue": "groups,manager"
            }
          },
          {
            "name": {
              "name": "groups,manager,company",
              "wireValue": "groups,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,manager,company,pay_group",
              "wireValue": "groups,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager,pay_group",
              "wireValue": "groups,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager,team",
              "wireValue": "groups,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,manager,team,company",
              "wireValue": "groups,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,manager,team,company,pay_group",
              "wireValue": "groups,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager,team,pay_group",
              "wireValue": "groups,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,pay_group",
              "wireValue": "groups,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,team",
              "wireValue": "groups,team"
            }
          },
          {
            "name": {
              "name": "groups,team,company",
              "wireValue": "groups,team,company"
            }
          },
          {
            "name": {
              "name": "groups,team,company,pay_group",
              "wireValue": "groups,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,team,pay_group",
              "wireValue": "groups,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location",
              "wireValue": "groups,work_location"
            }
          },
          {
            "name": {
              "name": "groups,work_location,company",
              "wireValue": "groups,work_location,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,company,pay_group",
              "wireValue": "groups,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager",
              "wireValue": "groups,work_location,manager"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,company",
              "wireValue": "groups,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,company,pay_group",
              "wireValue": "groups,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,pay_group",
              "wireValue": "groups,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team",
              "wireValue": "groups,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team,company",
              "wireValue": "groups,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team,company,pay_group",
              "wireValue": "groups,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team,pay_group",
              "wireValue": "groups,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,pay_group",
              "wireValue": "groups,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team",
              "wireValue": "groups,work_location,team"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team,company",
              "wireValue": "groups,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team,company,pay_group",
              "wireValue": "groups,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team,pay_group",
              "wireValue": "groups,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location",
              "wireValue": "home_location"
            }
          },
          {
            "name": {
              "name": "home_location,company",
              "wireValue": "home_location,company"
            }
          },
          {
            "name": {
              "name": "home_location,company,pay_group",
              "wireValue": "home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager",
              "wireValue": "home_location,manager"
            }
          },
          {
            "name": {
              "name": "home_location,manager,company",
              "wireValue": "home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "home_location,manager,company,pay_group",
              "wireValue": "home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager,pay_group",
              "wireValue": "home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team",
              "wireValue": "home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team,company",
              "wireValue": "home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team,company,pay_group",
              "wireValue": "home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team,pay_group",
              "wireValue": "home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,pay_group",
              "wireValue": "home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,team",
              "wireValue": "home_location,team"
            }
          },
          {
            "name": {
              "name": "home_location,team,company",
              "wireValue": "home_location,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,team,company,pay_group",
              "wireValue": "home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,team,pay_group",
              "wireValue": "home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location",
              "wireValue": "home_location,work_location"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,company",
              "wireValue": "home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,company,pay_group",
              "wireValue": "home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager",
              "wireValue": "home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,company",
              "wireValue": "home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,company,pay_group",
              "wireValue": "home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,pay_group",
              "wireValue": "home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team",
              "wireValue": "home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team,company",
              "wireValue": "home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team,company,pay_group",
              "wireValue": "home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team,pay_group",
              "wireValue": "home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,pay_group",
              "wireValue": "home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team",
              "wireValue": "home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team,company",
              "wireValue": "home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team,company,pay_group",
              "wireValue": "home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team,pay_group",
              "wireValue": "home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "manager",
              "wireValue": "manager"
            }
          },
          {
            "name": {
              "name": "manager,company",
              "wireValue": "manager,company"
            }
          },
          {
            "name": {
              "name": "manager,company,pay_group",
              "wireValue": "manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "manager,pay_group",
              "wireValue": "manager,pay_group"
            }
          },
          {
            "name": {
              "name": "manager,team",
              "wireValue": "manager,team"
            }
          },
          {
            "name": {
              "name": "manager,team,company",
              "wireValue": "manager,team,company"
            }
          },
          {
            "name": {
              "name": "manager,team,company,pay_group",
              "wireValue": "manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "manager,team,pay_group",
              "wireValue": "manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "pay_group",
              "wireValue": "pay_group"
            }
          },
          {
            "name": {
              "name": "team",
              "wireValue": "team"
            }
          },
          {
            "name": {
              "name": "team,company",
              "wireValue": "team,company"
            }
          },
          {
            "name": {
              "name": "team,company,pay_group",
              "wireValue": "team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "team,pay_group",
              "wireValue": "team,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location",
              "wireValue": "work_location"
            }
          },
          {
            "name": {
              "name": "work_location,company",
              "wireValue": "work_location,company"
            }
          },
          {
            "name": {
              "name": "work_location,company,pay_group",
              "wireValue": "work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager",
              "wireValue": "work_location,manager"
            }
          },
          {
            "name": {
              "name": "work_location,manager,company",
              "wireValue": "work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "work_location,manager,company,pay_group",
              "wireValue": "work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager,pay_group",
              "wireValue": "work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team",
              "wireValue": "work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team,company",
              "wireValue": "work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team,company,pay_group",
              "wireValue": "work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team,pay_group",
              "wireValue": "work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,pay_group",
              "wireValue": "work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,team",
              "wireValue": "work_location,team"
            }
          },
          {
            "name": {
              "name": "work_location,team,company",
              "wireValue": "work_location,team,company"
            }
          },
          {
            "name": {
              "name": "work_location,team,company,pay_group",
              "wireValue": "work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,team,pay_group",
              "wireValue": "work_location,team,pay_group"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeesGetParametersExpand_example_autogenerated": "company"
        }
      }
    },
    "EmployeesGetParametersRemoteFields": {
      "name": {
        "typeId": "EmployeesGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeesGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_status",
              "wireValue": "employment_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity",
              "wireValue": "employment_status,ethnicity"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender",
              "wireValue": "employment_status,ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender,marital_status",
              "wireValue": "employment_status,ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,marital_status",
              "wireValue": "employment_status,ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,gender",
              "wireValue": "employment_status,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,gender,marital_status",
              "wireValue": "employment_status,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,marital_status",
              "wireValue": "employment_status,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity",
              "wireValue": "ethnicity"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender",
              "wireValue": "ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender,marital_status",
              "wireValue": "ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity,marital_status",
              "wireValue": "ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            }
          },
          {
            "name": {
              "name": "gender,marital_status",
              "wireValue": "gender,marital_status"
            }
          },
          {
            "name": {
              "name": "marital_status",
              "wireValue": "marital_status"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeesGetParametersRemoteFields_example_autogenerated": "employment_status"
        }
      }
    },
    "EmployeesGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "EmployeesGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeesGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_status",
              "wireValue": "employment_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity",
              "wireValue": "employment_status,ethnicity"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender",
              "wireValue": "employment_status,ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender,marital_status",
              "wireValue": "employment_status,ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,marital_status",
              "wireValue": "employment_status,ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,gender",
              "wireValue": "employment_status,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,gender,marital_status",
              "wireValue": "employment_status,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,marital_status",
              "wireValue": "employment_status,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity",
              "wireValue": "ethnicity"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender",
              "wireValue": "ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender,marital_status",
              "wireValue": "ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity,marital_status",
              "wireValue": "ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            }
          },
          {
            "name": {
              "name": "gender,marital_status",
              "wireValue": "gender,marital_status"
            }
          },
          {
            "name": {
              "name": "marital_status",
              "wireValue": "marital_status"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeesGetParametersShowEnumOrigins_example_autogenerated": "employment_status"
        }
      }
    },
    "EmployeesIdGetParametersExpand": {
      "name": {
        "typeId": "EmployeesIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeesIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "company",
              "wireValue": "company"
            }
          },
          {
            "name": {
              "name": "company,pay_group",
              "wireValue": "company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments",
              "wireValue": "employments"
            }
          },
          {
            "name": {
              "name": "employments,company",
              "wireValue": "employments,company"
            }
          },
          {
            "name": {
              "name": "employments,company,pay_group",
              "wireValue": "employments,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups",
              "wireValue": "employments,groups"
            }
          },
          {
            "name": {
              "name": "employments,groups,company",
              "wireValue": "employments,groups,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,company,pay_group",
              "wireValue": "employments,groups,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location",
              "wireValue": "employments,groups,home_location"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,company",
              "wireValue": "employments,groups,home_location,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,company,pay_group",
              "wireValue": "employments,groups,home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager",
              "wireValue": "employments,groups,home_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,company",
              "wireValue": "employments,groups,home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,company,pay_group",
              "wireValue": "employments,groups,home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,pay_group",
              "wireValue": "employments,groups,home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team",
              "wireValue": "employments,groups,home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team,company",
              "wireValue": "employments,groups,home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team,company,pay_group",
              "wireValue": "employments,groups,home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,manager,team,pay_group",
              "wireValue": "employments,groups,home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,pay_group",
              "wireValue": "employments,groups,home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team",
              "wireValue": "employments,groups,home_location,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team,company",
              "wireValue": "employments,groups,home_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team,company,pay_group",
              "wireValue": "employments,groups,home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,team,pay_group",
              "wireValue": "employments,groups,home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location",
              "wireValue": "employments,groups,home_location,work_location"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,company",
              "wireValue": "employments,groups,home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager",
              "wireValue": "employments,groups,home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,company",
              "wireValue": "employments,groups,home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team",
              "wireValue": "employments,groups,home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team,company",
              "wireValue": "employments,groups,home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,manager,team,pay_group",
              "wireValue": "employments,groups,home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,pay_group",
              "wireValue": "employments,groups,home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team",
              "wireValue": "employments,groups,home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team,company",
              "wireValue": "employments,groups,home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team,company,pay_group",
              "wireValue": "employments,groups,home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,home_location,work_location,team,pay_group",
              "wireValue": "employments,groups,home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager",
              "wireValue": "employments,groups,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,company",
              "wireValue": "employments,groups,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,company,pay_group",
              "wireValue": "employments,groups,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,pay_group",
              "wireValue": "employments,groups,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team",
              "wireValue": "employments,groups,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team,company",
              "wireValue": "employments,groups,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team,company,pay_group",
              "wireValue": "employments,groups,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,manager,team,pay_group",
              "wireValue": "employments,groups,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,pay_group",
              "wireValue": "employments,groups,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,team",
              "wireValue": "employments,groups,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,team,company",
              "wireValue": "employments,groups,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,team,company,pay_group",
              "wireValue": "employments,groups,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,team,pay_group",
              "wireValue": "employments,groups,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location",
              "wireValue": "employments,groups,work_location"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,company",
              "wireValue": "employments,groups,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,company,pay_group",
              "wireValue": "employments,groups,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager",
              "wireValue": "employments,groups,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,company",
              "wireValue": "employments,groups,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,company,pay_group",
              "wireValue": "employments,groups,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,pay_group",
              "wireValue": "employments,groups,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team",
              "wireValue": "employments,groups,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team,company",
              "wireValue": "employments,groups,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team,company,pay_group",
              "wireValue": "employments,groups,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,manager,team,pay_group",
              "wireValue": "employments,groups,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,pay_group",
              "wireValue": "employments,groups,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team",
              "wireValue": "employments,groups,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team,company",
              "wireValue": "employments,groups,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team,company,pay_group",
              "wireValue": "employments,groups,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,groups,work_location,team,pay_group",
              "wireValue": "employments,groups,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location",
              "wireValue": "employments,home_location"
            }
          },
          {
            "name": {
              "name": "employments,home_location,company",
              "wireValue": "employments,home_location,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,company,pay_group",
              "wireValue": "employments,home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager",
              "wireValue": "employments,home_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,company",
              "wireValue": "employments,home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,company,pay_group",
              "wireValue": "employments,home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,pay_group",
              "wireValue": "employments,home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team",
              "wireValue": "employments,home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team,company",
              "wireValue": "employments,home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team,company,pay_group",
              "wireValue": "employments,home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,manager,team,pay_group",
              "wireValue": "employments,home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,pay_group",
              "wireValue": "employments,home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team",
              "wireValue": "employments,home_location,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team,company",
              "wireValue": "employments,home_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team,company,pay_group",
              "wireValue": "employments,home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,team,pay_group",
              "wireValue": "employments,home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location",
              "wireValue": "employments,home_location,work_location"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,company",
              "wireValue": "employments,home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,company,pay_group",
              "wireValue": "employments,home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager",
              "wireValue": "employments,home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,company",
              "wireValue": "employments,home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,company,pay_group",
              "wireValue": "employments,home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,pay_group",
              "wireValue": "employments,home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team",
              "wireValue": "employments,home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team,company",
              "wireValue": "employments,home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team,company,pay_group",
              "wireValue": "employments,home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,manager,team,pay_group",
              "wireValue": "employments,home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,pay_group",
              "wireValue": "employments,home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team",
              "wireValue": "employments,home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team,company",
              "wireValue": "employments,home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team,company,pay_group",
              "wireValue": "employments,home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,home_location,work_location,team,pay_group",
              "wireValue": "employments,home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager",
              "wireValue": "employments,manager"
            }
          },
          {
            "name": {
              "name": "employments,manager,company",
              "wireValue": "employments,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,manager,company,pay_group",
              "wireValue": "employments,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager,pay_group",
              "wireValue": "employments,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager,team",
              "wireValue": "employments,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,manager,team,company",
              "wireValue": "employments,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,manager,team,company,pay_group",
              "wireValue": "employments,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,manager,team,pay_group",
              "wireValue": "employments,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,pay_group",
              "wireValue": "employments,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,team",
              "wireValue": "employments,team"
            }
          },
          {
            "name": {
              "name": "employments,team,company",
              "wireValue": "employments,team,company"
            }
          },
          {
            "name": {
              "name": "employments,team,company,pay_group",
              "wireValue": "employments,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,team,pay_group",
              "wireValue": "employments,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location",
              "wireValue": "employments,work_location"
            }
          },
          {
            "name": {
              "name": "employments,work_location,company",
              "wireValue": "employments,work_location,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,company,pay_group",
              "wireValue": "employments,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager",
              "wireValue": "employments,work_location,manager"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,company",
              "wireValue": "employments,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,company,pay_group",
              "wireValue": "employments,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,pay_group",
              "wireValue": "employments,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team",
              "wireValue": "employments,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team,company",
              "wireValue": "employments,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team,company,pay_group",
              "wireValue": "employments,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,manager,team,pay_group",
              "wireValue": "employments,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,pay_group",
              "wireValue": "employments,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team",
              "wireValue": "employments,work_location,team"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team,company",
              "wireValue": "employments,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team,company,pay_group",
              "wireValue": "employments,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "employments,work_location,team,pay_group",
              "wireValue": "employments,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups",
              "wireValue": "groups"
            }
          },
          {
            "name": {
              "name": "groups,company",
              "wireValue": "groups,company"
            }
          },
          {
            "name": {
              "name": "groups,company,pay_group",
              "wireValue": "groups,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location",
              "wireValue": "groups,home_location"
            }
          },
          {
            "name": {
              "name": "groups,home_location,company",
              "wireValue": "groups,home_location,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,company,pay_group",
              "wireValue": "groups,home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager",
              "wireValue": "groups,home_location,manager"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,company",
              "wireValue": "groups,home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,company,pay_group",
              "wireValue": "groups,home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,pay_group",
              "wireValue": "groups,home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team",
              "wireValue": "groups,home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team,company",
              "wireValue": "groups,home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team,company,pay_group",
              "wireValue": "groups,home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,manager,team,pay_group",
              "wireValue": "groups,home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,pay_group",
              "wireValue": "groups,home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team",
              "wireValue": "groups,home_location,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team,company",
              "wireValue": "groups,home_location,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team,company,pay_group",
              "wireValue": "groups,home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,team,pay_group",
              "wireValue": "groups,home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location",
              "wireValue": "groups,home_location,work_location"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,company",
              "wireValue": "groups,home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,company,pay_group",
              "wireValue": "groups,home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager",
              "wireValue": "groups,home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,company",
              "wireValue": "groups,home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,company,pay_group",
              "wireValue": "groups,home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,pay_group",
              "wireValue": "groups,home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team",
              "wireValue": "groups,home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team,company",
              "wireValue": "groups,home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team,company,pay_group",
              "wireValue": "groups,home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,manager,team,pay_group",
              "wireValue": "groups,home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,pay_group",
              "wireValue": "groups,home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team",
              "wireValue": "groups,home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team,company",
              "wireValue": "groups,home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team,company,pay_group",
              "wireValue": "groups,home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,home_location,work_location,team,pay_group",
              "wireValue": "groups,home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager",
              "wireValue": "groups,manager"
            }
          },
          {
            "name": {
              "name": "groups,manager,company",
              "wireValue": "groups,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,manager,company,pay_group",
              "wireValue": "groups,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager,pay_group",
              "wireValue": "groups,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager,team",
              "wireValue": "groups,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,manager,team,company",
              "wireValue": "groups,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,manager,team,company,pay_group",
              "wireValue": "groups,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,manager,team,pay_group",
              "wireValue": "groups,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,pay_group",
              "wireValue": "groups,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,team",
              "wireValue": "groups,team"
            }
          },
          {
            "name": {
              "name": "groups,team,company",
              "wireValue": "groups,team,company"
            }
          },
          {
            "name": {
              "name": "groups,team,company,pay_group",
              "wireValue": "groups,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,team,pay_group",
              "wireValue": "groups,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location",
              "wireValue": "groups,work_location"
            }
          },
          {
            "name": {
              "name": "groups,work_location,company",
              "wireValue": "groups,work_location,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,company,pay_group",
              "wireValue": "groups,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager",
              "wireValue": "groups,work_location,manager"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,company",
              "wireValue": "groups,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,company,pay_group",
              "wireValue": "groups,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,pay_group",
              "wireValue": "groups,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team",
              "wireValue": "groups,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team,company",
              "wireValue": "groups,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team,company,pay_group",
              "wireValue": "groups,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,manager,team,pay_group",
              "wireValue": "groups,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,pay_group",
              "wireValue": "groups,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team",
              "wireValue": "groups,work_location,team"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team,company",
              "wireValue": "groups,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team,company,pay_group",
              "wireValue": "groups,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "groups,work_location,team,pay_group",
              "wireValue": "groups,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location",
              "wireValue": "home_location"
            }
          },
          {
            "name": {
              "name": "home_location,company",
              "wireValue": "home_location,company"
            }
          },
          {
            "name": {
              "name": "home_location,company,pay_group",
              "wireValue": "home_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager",
              "wireValue": "home_location,manager"
            }
          },
          {
            "name": {
              "name": "home_location,manager,company",
              "wireValue": "home_location,manager,company"
            }
          },
          {
            "name": {
              "name": "home_location,manager,company,pay_group",
              "wireValue": "home_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager,pay_group",
              "wireValue": "home_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team",
              "wireValue": "home_location,manager,team"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team,company",
              "wireValue": "home_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team,company,pay_group",
              "wireValue": "home_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,manager,team,pay_group",
              "wireValue": "home_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,pay_group",
              "wireValue": "home_location,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,team",
              "wireValue": "home_location,team"
            }
          },
          {
            "name": {
              "name": "home_location,team,company",
              "wireValue": "home_location,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,team,company,pay_group",
              "wireValue": "home_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,team,pay_group",
              "wireValue": "home_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location",
              "wireValue": "home_location,work_location"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,company",
              "wireValue": "home_location,work_location,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,company,pay_group",
              "wireValue": "home_location,work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager",
              "wireValue": "home_location,work_location,manager"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,company",
              "wireValue": "home_location,work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,company,pay_group",
              "wireValue": "home_location,work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,pay_group",
              "wireValue": "home_location,work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team",
              "wireValue": "home_location,work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team,company",
              "wireValue": "home_location,work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team,company,pay_group",
              "wireValue": "home_location,work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,manager,team,pay_group",
              "wireValue": "home_location,work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,pay_group",
              "wireValue": "home_location,work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team",
              "wireValue": "home_location,work_location,team"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team,company",
              "wireValue": "home_location,work_location,team,company"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team,company,pay_group",
              "wireValue": "home_location,work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "home_location,work_location,team,pay_group",
              "wireValue": "home_location,work_location,team,pay_group"
            }
          },
          {
            "name": {
              "name": "manager",
              "wireValue": "manager"
            }
          },
          {
            "name": {
              "name": "manager,company",
              "wireValue": "manager,company"
            }
          },
          {
            "name": {
              "name": "manager,company,pay_group",
              "wireValue": "manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "manager,pay_group",
              "wireValue": "manager,pay_group"
            }
          },
          {
            "name": {
              "name": "manager,team",
              "wireValue": "manager,team"
            }
          },
          {
            "name": {
              "name": "manager,team,company",
              "wireValue": "manager,team,company"
            }
          },
          {
            "name": {
              "name": "manager,team,company,pay_group",
              "wireValue": "manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "manager,team,pay_group",
              "wireValue": "manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "pay_group",
              "wireValue": "pay_group"
            }
          },
          {
            "name": {
              "name": "team",
              "wireValue": "team"
            }
          },
          {
            "name": {
              "name": "team,company",
              "wireValue": "team,company"
            }
          },
          {
            "name": {
              "name": "team,company,pay_group",
              "wireValue": "team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "team,pay_group",
              "wireValue": "team,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location",
              "wireValue": "work_location"
            }
          },
          {
            "name": {
              "name": "work_location,company",
              "wireValue": "work_location,company"
            }
          },
          {
            "name": {
              "name": "work_location,company,pay_group",
              "wireValue": "work_location,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager",
              "wireValue": "work_location,manager"
            }
          },
          {
            "name": {
              "name": "work_location,manager,company",
              "wireValue": "work_location,manager,company"
            }
          },
          {
            "name": {
              "name": "work_location,manager,company,pay_group",
              "wireValue": "work_location,manager,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager,pay_group",
              "wireValue": "work_location,manager,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team",
              "wireValue": "work_location,manager,team"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team,company",
              "wireValue": "work_location,manager,team,company"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team,company,pay_group",
              "wireValue": "work_location,manager,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,manager,team,pay_group",
              "wireValue": "work_location,manager,team,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,pay_group",
              "wireValue": "work_location,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,team",
              "wireValue": "work_location,team"
            }
          },
          {
            "name": {
              "name": "work_location,team,company",
              "wireValue": "work_location,team,company"
            }
          },
          {
            "name": {
              "name": "work_location,team,company,pay_group",
              "wireValue": "work_location,team,company,pay_group"
            }
          },
          {
            "name": {
              "name": "work_location,team,pay_group",
              "wireValue": "work_location,team,pay_group"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeesIdGetParametersExpand_example_autogenerated": "company"
        }
      }
    },
    "EmployeesIdGetParametersRemoteFields": {
      "name": {
        "typeId": "EmployeesIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeesIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_status",
              "wireValue": "employment_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity",
              "wireValue": "employment_status,ethnicity"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender",
              "wireValue": "employment_status,ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender,marital_status",
              "wireValue": "employment_status,ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,marital_status",
              "wireValue": "employment_status,ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,gender",
              "wireValue": "employment_status,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,gender,marital_status",
              "wireValue": "employment_status,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,marital_status",
              "wireValue": "employment_status,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity",
              "wireValue": "ethnicity"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender",
              "wireValue": "ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender,marital_status",
              "wireValue": "ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity,marital_status",
              "wireValue": "ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            }
          },
          {
            "name": {
              "name": "gender,marital_status",
              "wireValue": "gender,marital_status"
            }
          },
          {
            "name": {
              "name": "marital_status",
              "wireValue": "marital_status"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeesIdGetParametersRemoteFields_example_autogenerated": "employment_status"
        }
      }
    },
    "EmployeesIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "EmployeesIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmployeesIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_status",
              "wireValue": "employment_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity",
              "wireValue": "employment_status,ethnicity"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender",
              "wireValue": "employment_status,ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,gender,marital_status",
              "wireValue": "employment_status,ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,ethnicity,marital_status",
              "wireValue": "employment_status,ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,gender",
              "wireValue": "employment_status,gender"
            }
          },
          {
            "name": {
              "name": "employment_status,gender,marital_status",
              "wireValue": "employment_status,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "employment_status,marital_status",
              "wireValue": "employment_status,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity",
              "wireValue": "ethnicity"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender",
              "wireValue": "ethnicity,gender"
            }
          },
          {
            "name": {
              "name": "ethnicity,gender,marital_status",
              "wireValue": "ethnicity,gender,marital_status"
            }
          },
          {
            "name": {
              "name": "ethnicity,marital_status",
              "wireValue": "ethnicity,marital_status"
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            }
          },
          {
            "name": {
              "name": "gender,marital_status",
              "wireValue": "gender,marital_status"
            }
          },
          {
            "name": {
              "name": "marital_status",
              "wireValue": "marital_status"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmployeesIdGetParametersShowEnumOrigins_example_autogenerated": "employment_status"
        }
      }
    },
    "employees_ignoreCreate_Response_200": {
      "name": {
        "typeId": "employees_ignoreCreate_Response_200",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "employees_ignoreCreate_Response_200"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Empty response body",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "employees_ignoreCreate_Response_200_example_autogenerated": {}
        }
      }
    },
    "EmploymentsGetParametersExpand": {
      "name": {
        "typeId": "EmploymentsGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentsGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          },
          {
            "name": {
              "name": "employee,pay_group",
              "wireValue": "employee,pay_group"
            }
          },
          {
            "name": {
              "name": "pay_group",
              "wireValue": "pay_group"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentsGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "EmploymentsGetParametersOrderBy": {
      "name": {
        "typeId": "EmploymentsGetParametersOrderBy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentsGetParametersOrderBy"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "EffectiveDateDescending",
              "wireValue": "-effective_date"
            }
          },
          {
            "name": {
              "name": "EffectiveDateAscending",
              "wireValue": "effective_date"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentsGetParametersOrderBy_example_autogenerated": "-effective_date"
        }
      }
    },
    "EmploymentsGetParametersRemoteFields": {
      "name": {
        "typeId": "EmploymentsGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentsGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_type",
              "wireValue": "employment_type"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status",
              "wireValue": "employment_type,flsa_status"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency",
              "wireValue": "employment_type,flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency,pay_period",
              "wireValue": "employment_type,flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_period",
              "wireValue": "employment_type,flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency",
              "wireValue": "employment_type,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency,pay_period",
              "wireValue": "employment_type,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_period",
              "wireValue": "employment_type,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status",
              "wireValue": "flsa_status"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency",
              "wireValue": "flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency,pay_period",
              "wireValue": "flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_period",
              "wireValue": "flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_frequency",
              "wireValue": "pay_frequency"
            }
          },
          {
            "name": {
              "name": "pay_frequency,pay_period",
              "wireValue": "pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_period",
              "wireValue": "pay_period"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentsGetParametersRemoteFields_example_autogenerated": "employment_type"
        }
      }
    },
    "EmploymentsGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "EmploymentsGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentsGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_type",
              "wireValue": "employment_type"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status",
              "wireValue": "employment_type,flsa_status"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency",
              "wireValue": "employment_type,flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency,pay_period",
              "wireValue": "employment_type,flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_period",
              "wireValue": "employment_type,flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency",
              "wireValue": "employment_type,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency,pay_period",
              "wireValue": "employment_type,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_period",
              "wireValue": "employment_type,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status",
              "wireValue": "flsa_status"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency",
              "wireValue": "flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency,pay_period",
              "wireValue": "flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_period",
              "wireValue": "flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_frequency",
              "wireValue": "pay_frequency"
            }
          },
          {
            "name": {
              "name": "pay_frequency,pay_period",
              "wireValue": "pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_period",
              "wireValue": "pay_period"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentsGetParametersShowEnumOrigins_example_autogenerated": "employment_type"
        }
      }
    },
    "EmploymentsIdGetParametersExpand": {
      "name": {
        "typeId": "EmploymentsIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentsIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          },
          {
            "name": {
              "name": "employee,pay_group",
              "wireValue": "employee,pay_group"
            }
          },
          {
            "name": {
              "name": "pay_group",
              "wireValue": "pay_group"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentsIdGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "EmploymentsIdGetParametersRemoteFields": {
      "name": {
        "typeId": "EmploymentsIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentsIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_type",
              "wireValue": "employment_type"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status",
              "wireValue": "employment_type,flsa_status"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency",
              "wireValue": "employment_type,flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency,pay_period",
              "wireValue": "employment_type,flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_period",
              "wireValue": "employment_type,flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency",
              "wireValue": "employment_type,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency,pay_period",
              "wireValue": "employment_type,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_period",
              "wireValue": "employment_type,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status",
              "wireValue": "flsa_status"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency",
              "wireValue": "flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency,pay_period",
              "wireValue": "flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_period",
              "wireValue": "flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_frequency",
              "wireValue": "pay_frequency"
            }
          },
          {
            "name": {
              "name": "pay_frequency,pay_period",
              "wireValue": "pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_period",
              "wireValue": "pay_period"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentsIdGetParametersRemoteFields_example_autogenerated": "employment_type"
        }
      }
    },
    "EmploymentsIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "EmploymentsIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "EmploymentsIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employment_type",
              "wireValue": "employment_type"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status",
              "wireValue": "employment_type,flsa_status"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency",
              "wireValue": "employment_type,flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_frequency,pay_period",
              "wireValue": "employment_type,flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,flsa_status,pay_period",
              "wireValue": "employment_type,flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency",
              "wireValue": "employment_type,pay_frequency"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_frequency,pay_period",
              "wireValue": "employment_type,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "employment_type,pay_period",
              "wireValue": "employment_type,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status",
              "wireValue": "flsa_status"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency",
              "wireValue": "flsa_status,pay_frequency"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_frequency,pay_period",
              "wireValue": "flsa_status,pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "flsa_status,pay_period",
              "wireValue": "flsa_status,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_frequency",
              "wireValue": "pay_frequency"
            }
          },
          {
            "name": {
              "name": "pay_frequency,pay_period",
              "wireValue": "pay_frequency,pay_period"
            }
          },
          {
            "name": {
              "name": "pay_period",
              "wireValue": "pay_period"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EmploymentsIdGetParametersShowEnumOrigins_example_autogenerated": "employment_type"
        }
      }
    },
    "GroupsGetParametersRemoteFields": {
      "name": {
        "typeId": "GroupsGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupsGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupsGetParametersRemoteFields_example_autogenerated": "type"
        }
      }
    },
    "GroupsGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "GroupsGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupsGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupsGetParametersShowEnumOrigins_example_autogenerated": "type"
        }
      }
    },
    "GroupsIdGetParametersRemoteFields": {
      "name": {
        "typeId": "GroupsIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupsIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupsIdGetParametersRemoteFields_example_autogenerated": "type"
        }
      }
    },
    "GroupsIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "GroupsIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "GroupsIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                }
              },
              "wireValue": "type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "GroupsIdGetParametersShowEnumOrigins_example_autogenerated": "type"
        }
      }
    },
    "IssuesGetParametersStatus": {
      "name": {
        "typeId": "IssuesGetParametersStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "IssuesGetParametersStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "ONGOING",
              "wireValue": "ONGOING"
            }
          },
          {
            "name": {
              "name": "RESOLVED",
              "wireValue": "RESOLVED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "IssuesGetParametersStatus_example_autogenerated": "ONGOING"
        }
      }
    },
    "LinkedAccountsGetParametersCategory": {
      "name": {
        "typeId": "LinkedAccountsGetParametersCategory",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LinkedAccountsGetParametersCategory"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "accounting",
              "wireValue": "accounting"
            }
          },
          {
            "name": {
              "name": "ats",
              "wireValue": "ats"
            }
          },
          {
            "name": {
              "name": "crm",
              "wireValue": "crm"
            }
          },
          {
            "name": {
              "name": "filestorage",
              "wireValue": "filestorage"
            }
          },
          {
            "name": {
              "name": "hris",
              "wireValue": "hris"
            }
          },
          {
            "name": {
              "name": "mktg",
              "wireValue": "mktg"
            }
          },
          {
            "name": {
              "name": "ticketing",
              "wireValue": "ticketing"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LinkedAccountsGetParametersCategory_example_autogenerated": "accounting"
        }
      }
    },
    "LocationsGetParametersRemoteFields": {
      "name": {
        "typeId": "LocationsGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LocationsGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "location_type",
              "wireValue": "location_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LocationsGetParametersRemoteFields_example_autogenerated": "location_type"
        }
      }
    },
    "LocationsGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "LocationsGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LocationsGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "location_type",
              "wireValue": "location_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LocationsGetParametersShowEnumOrigins_example_autogenerated": "location_type"
        }
      }
    },
    "LocationsIdGetParametersRemoteFields": {
      "name": {
        "typeId": "LocationsIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LocationsIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "location_type",
              "wireValue": "location_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LocationsIdGetParametersRemoteFields_example_autogenerated": "location_type"
        }
      }
    },
    "LocationsIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "LocationsIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "LocationsIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "location_type",
              "wireValue": "location_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "LocationsIdGetParametersShowEnumOrigins_example_autogenerated": "location_type"
        }
      }
    },
    "PayrollRunsGetParametersRemoteFields": {
      "name": {
        "typeId": "PayrollRunsGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayrollRunsGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "run_state",
              "wireValue": "run_state"
            }
          },
          {
            "name": {
              "name": "run_state,run_type",
              "wireValue": "run_state,run_type"
            }
          },
          {
            "name": {
              "name": "run_type",
              "wireValue": "run_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayrollRunsGetParametersRemoteFields_example_autogenerated": "run_state"
        }
      }
    },
    "PayrollRunsGetParametersRunType": {
      "name": {
        "typeId": "PayrollRunsGetParametersRunType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayrollRunsGetParametersRunType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "CORRECTION",
              "wireValue": "CORRECTION"
            }
          },
          {
            "name": {
              "name": "OFF_CYCLE",
              "wireValue": "OFF_CYCLE"
            }
          },
          {
            "name": {
              "name": "REGULAR",
              "wireValue": "REGULAR"
            }
          },
          {
            "name": {
              "name": "SIGN_ON_BONUS",
              "wireValue": "SIGN_ON_BONUS"
            }
          },
          {
            "name": {
              "name": "TERMINATION",
              "wireValue": "TERMINATION"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayrollRunsGetParametersRunType_example_autogenerated": "CORRECTION"
        }
      }
    },
    "PayrollRunsGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "PayrollRunsGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayrollRunsGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "run_state",
              "wireValue": "run_state"
            }
          },
          {
            "name": {
              "name": "run_state,run_type",
              "wireValue": "run_state,run_type"
            }
          },
          {
            "name": {
              "name": "run_type",
              "wireValue": "run_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayrollRunsGetParametersShowEnumOrigins_example_autogenerated": "run_state"
        }
      }
    },
    "PayrollRunsIdGetParametersRemoteFields": {
      "name": {
        "typeId": "PayrollRunsIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayrollRunsIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "run_state",
              "wireValue": "run_state"
            }
          },
          {
            "name": {
              "name": "run_state,run_type",
              "wireValue": "run_state,run_type"
            }
          },
          {
            "name": {
              "name": "run_type",
              "wireValue": "run_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayrollRunsIdGetParametersRemoteFields_example_autogenerated": "run_state"
        }
      }
    },
    "PayrollRunsIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "PayrollRunsIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "PayrollRunsIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "run_state",
              "wireValue": "run_state"
            }
          },
          {
            "name": {
              "name": "run_state,run_type",
              "wireValue": "run_state,run_type"
            }
          },
          {
            "name": {
              "name": "run_type",
              "wireValue": "run_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "PayrollRunsIdGetParametersShowEnumOrigins_example_autogenerated": "run_state"
        }
      }
    },
    "TeamsGetParametersExpand": {
      "name": {
        "typeId": "TeamsGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TeamsGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "parent_team",
              "wireValue": "parent_team"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TeamsGetParametersExpand_example_autogenerated": "parent_team"
        }
      }
    },
    "TeamsIdGetParametersExpand": {
      "name": {
        "typeId": "TeamsIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TeamsIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "parent_team",
              "wireValue": "parent_team"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TeamsIdGetParametersExpand_example_autogenerated": "parent_team"
        }
      }
    },
    "TimeOffGetParametersExpand": {
      "name": {
        "typeId": "TimeOffGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "approver",
              "wireValue": "approver"
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          },
          {
            "name": {
              "name": "employee,approver",
              "wireValue": "employee,approver"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffGetParametersExpand_example_autogenerated": "approver"
        }
      }
    },
    "TimeOffGetParametersRemoteFields": {
      "name": {
        "typeId": "TimeOffGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "request_type",
              "wireValue": "request_type"
            }
          },
          {
            "name": {
              "name": "request_type,status",
              "wireValue": "request_type,status"
            }
          },
          {
            "name": {
              "name": "request_type,status,units",
              "wireValue": "request_type,status,units"
            }
          },
          {
            "name": {
              "name": "request_type,units",
              "wireValue": "request_type,units"
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            }
          },
          {
            "name": {
              "name": "status,units",
              "wireValue": "status,units"
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffGetParametersRemoteFields_example_autogenerated": "request_type"
        }
      }
    },
    "TimeOffGetParametersRequestType": {
      "name": {
        "typeId": "TimeOffGetParametersRequestType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffGetParametersRequestType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "BEREAVEMENT",
              "wireValue": "BEREAVEMENT"
            }
          },
          {
            "name": {
              "name": "JURY_DUTY",
              "wireValue": "JURY_DUTY"
            }
          },
          {
            "name": {
              "name": "PERSONAL",
              "wireValue": "PERSONAL"
            }
          },
          {
            "name": {
              "name": "SICK",
              "wireValue": "SICK"
            }
          },
          {
            "name": {
              "name": "VACATION",
              "wireValue": "VACATION"
            }
          },
          {
            "name": {
              "name": "VOLUNTEER",
              "wireValue": "VOLUNTEER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffGetParametersRequestType_example_autogenerated": "BEREAVEMENT"
        }
      }
    },
    "TimeOffGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "TimeOffGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "request_type",
              "wireValue": "request_type"
            }
          },
          {
            "name": {
              "name": "request_type,status",
              "wireValue": "request_type,status"
            }
          },
          {
            "name": {
              "name": "request_type,status,units",
              "wireValue": "request_type,status,units"
            }
          },
          {
            "name": {
              "name": "request_type,units",
              "wireValue": "request_type,units"
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            }
          },
          {
            "name": {
              "name": "status,units",
              "wireValue": "status,units"
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffGetParametersShowEnumOrigins_example_autogenerated": "request_type"
        }
      }
    },
    "TimeOffGetParametersStatus": {
      "name": {
        "typeId": "TimeOffGetParametersStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffGetParametersStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "APPROVED",
              "wireValue": "APPROVED"
            }
          },
          {
            "name": {
              "name": "CANCELLED",
              "wireValue": "CANCELLED"
            }
          },
          {
            "name": {
              "name": "DECLINED",
              "wireValue": "DECLINED"
            }
          },
          {
            "name": {
              "name": "DELETED",
              "wireValue": "DELETED"
            }
          },
          {
            "name": {
              "name": "REQUESTED",
              "wireValue": "REQUESTED"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffGetParametersStatus_example_autogenerated": "APPROVED"
        }
      }
    },
    "TimeOffBalancesGetParametersExpand": {
      "name": {
        "typeId": "TimeOffBalancesGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalancesGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalancesGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "TimeOffBalancesGetParametersPolicyType": {
      "name": {
        "typeId": "TimeOffBalancesGetParametersPolicyType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalancesGetParametersPolicyType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "BEREAVEMENT",
              "wireValue": "BEREAVEMENT"
            }
          },
          {
            "name": {
              "name": "JURY_DUTY",
              "wireValue": "JURY_DUTY"
            }
          },
          {
            "name": {
              "name": "PERSONAL",
              "wireValue": "PERSONAL"
            }
          },
          {
            "name": {
              "name": "SICK",
              "wireValue": "SICK"
            }
          },
          {
            "name": {
              "name": "VACATION",
              "wireValue": "VACATION"
            }
          },
          {
            "name": {
              "name": "VOLUNTEER",
              "wireValue": "VOLUNTEER"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalancesGetParametersPolicyType_example_autogenerated": "BEREAVEMENT"
        }
      }
    },
    "TimeOffBalancesGetParametersRemoteFields": {
      "name": {
        "typeId": "TimeOffBalancesGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalancesGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "policy_type",
              "wireValue": "policy_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalancesGetParametersRemoteFields_example_autogenerated": "policy_type"
        }
      }
    },
    "TimeOffBalancesGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "TimeOffBalancesGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalancesGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "policy_type",
              "wireValue": "policy_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalancesGetParametersShowEnumOrigins_example_autogenerated": "policy_type"
        }
      }
    },
    "TimeOffBalancesIdGetParametersExpand": {
      "name": {
        "typeId": "TimeOffBalancesIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalancesIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalancesIdGetParametersExpand_example_autogenerated": "employee"
        }
      }
    },
    "TimeOffBalancesIdGetParametersRemoteFields": {
      "name": {
        "typeId": "TimeOffBalancesIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalancesIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "policy_type",
              "wireValue": "policy_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalancesIdGetParametersRemoteFields_example_autogenerated": "policy_type"
        }
      }
    },
    "TimeOffBalancesIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "TimeOffBalancesIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffBalancesIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "policy_type",
              "wireValue": "policy_type"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffBalancesIdGetParametersShowEnumOrigins_example_autogenerated": "policy_type"
        }
      }
    },
    "TimeOffIdGetParametersExpand": {
      "name": {
        "typeId": "TimeOffIdGetParametersExpand",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffIdGetParametersExpand"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "approver",
              "wireValue": "approver"
            }
          },
          {
            "name": {
              "name": "employee",
              "wireValue": "employee"
            }
          },
          {
            "name": {
              "name": "employee,approver",
              "wireValue": "employee,approver"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffIdGetParametersExpand_example_autogenerated": "approver"
        }
      }
    },
    "TimeOffIdGetParametersRemoteFields": {
      "name": {
        "typeId": "TimeOffIdGetParametersRemoteFields",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffIdGetParametersRemoteFields"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "request_type",
              "wireValue": "request_type"
            }
          },
          {
            "name": {
              "name": "request_type,status",
              "wireValue": "request_type,status"
            }
          },
          {
            "name": {
              "name": "request_type,status,units",
              "wireValue": "request_type,status,units"
            }
          },
          {
            "name": {
              "name": "request_type,units",
              "wireValue": "request_type,units"
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            }
          },
          {
            "name": {
              "name": "status,units",
              "wireValue": "status,units"
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffIdGetParametersRemoteFields_example_autogenerated": "request_type"
        }
      }
    },
    "TimeOffIdGetParametersShowEnumOrigins": {
      "name": {
        "typeId": "TimeOffIdGetParametersShowEnumOrigins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "TimeOffIdGetParametersShowEnumOrigins"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "request_type",
              "wireValue": "request_type"
            }
          },
          {
            "name": {
              "name": "request_type,status",
              "wireValue": "request_type,status"
            }
          },
          {
            "name": {
              "name": "request_type,status,units",
              "wireValue": "request_type,status,units"
            }
          },
          {
            "name": {
              "name": "request_type,units",
              "wireValue": "request_type,units"
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            }
          },
          {
            "name": {
              "name": "status,units",
              "wireValue": "status,units"
            }
          },
          {
            "name": {
              "name": "units",
              "wireValue": "units"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "TimeOffIdGetParametersShowEnumOrigins_example_autogenerated": "request_type"
        }
      }
    }
  },
  "services": {
    "service_accountDetails": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "account-details"
          ],
          "packagePath": [],
          "file": "account-details"
        }
      },
      "displayName": "account-details",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/account-details",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/account-details",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_accountDetails.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountDetails",
                  "typeId": "AccountDetails",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "accountDetailsRetrieveExample": {
                      "id": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                      "integration": "BambooHR",
                      "integration_slug": "bamboohr",
                      "category": "hris",
                      "end_user_origin_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "end_user_organization_name": "Waystar Royco",
                      "end_user_email_address": "kendall.roy@waystar-royco.com",
                      "status": "COMPLETE",
                      "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                      "is_duplicate": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get details for a linked account.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_accountDetailsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/account-details"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                      "integration": "BambooHR",
                      "integration_slug": "bamboohr",
                      "category": "hris",
                      "end_user_origin_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "end_user_organization_name": "Waystar Royco",
                      "end_user_email_address": "kendall.roy@waystar-royco.com",
                      "status": "COMPLETE",
                      "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                      "is_duplicate": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AccountDetails",
                      "typeId": "AccountDetails",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "accountDetailsRetrieveExample": {
                          "id": "0496d4c2-42e6-4072-80b3-7b69bfdc76fd",
                          "integration": "BambooHR",
                          "integration_slug": "bamboohr",
                          "category": "hris",
                          "end_user_origin_id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "end_user_organization_name": "Waystar Royco",
                          "end_user_email_address": "kendall.roy@waystar-royco.com",
                          "status": "COMPLETE",
                          "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                          "is_duplicate": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_accountToken": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "account-token"
          ],
          "packagePath": [],
          "file": "account-token"
        }
      },
      "displayName": "account-token",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/account-token/",
            "parts": [
              {
                "pathParameter": "public_token",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "public_token",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "public_token_example": "public_token"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/account-token/",
            "parts": [
              {
                "pathParameter": "public_token",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "public_token",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "public_token_example": "public_token"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_accountToken.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AccountToken",
                  "typeId": "AccountToken",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "accountTokenRetrieveExample": {
                      "account_token": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                      "integration": {
                        "name": "string",
                        "categories": [
                          "hris"
                        ],
                        "image": "string",
                        "square_image": "string",
                        "color": "string",
                        "slug": "string",
                        "is_in_beta": true,
                        "api_endpoints_to_documentation_urls": {}
                      }
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns the account token for the end user with the provided public token.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_accountTokenRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/account-token/public_token"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "public_token": "public_token"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "account_token": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                      "integration": {
                        "name": "string",
                        "categories": [
                          "hris"
                        ],
                        "image": "string",
                        "square_image": "string",
                        "color": "string",
                        "slug": "string",
                        "is_in_beta": true,
                        "api_endpoints_to_documentation_urls": {}
                      }
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AccountToken",
                      "typeId": "AccountToken",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "accountTokenRetrieveExample": {
                          "account_token": "T9klMDQrcHdm9jrtHuOS2Nf06BIHwMNjpPXPMB",
                          "integration": {
                            "name": "string",
                            "categories": [
                              "hris"
                            ],
                            "image": "string",
                            "square_image": "string",
                            "color": "string",
                            "slug": "string",
                            "is_in_beta": true,
                            "api_endpoints_to_documentation_urls": {}
                          }
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_availableActions": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "available-actions"
          ],
          "packagePath": [],
          "file": "available-actions"
        }
      },
      "displayName": "available-actions",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/available-actions",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/available-actions",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_availableActions.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AvailableActions",
                  "typeId": "AvailableActions",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "availableActionsRetrieveExample": {
                      "integration": {
                        "name": "string",
                        "categories": [
                          "hris"
                        ],
                        "image": "string",
                        "square_image": "string",
                        "color": "string",
                        "slug": "string",
                        "is_in_beta": true,
                        "api_endpoints_to_documentation_urls": {}
                      },
                      "passthrough_available": true,
                      "available_model_operations": [
                        {
                          "model_name": "Candidate",
                          "available_operations": [
                            "FETCH",
                            "CREATE"
                          ],
                          "required_post_parameters": [
                            "remote_user_id"
                          ],
                          "supported_fields": [
                            "first_name",
                            "last_name",
                            "company",
                            "title"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of models and actions available for an account.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_availableActionsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/available-actions"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "integration": {
                        "name": "string",
                        "categories": [
                          "hris"
                        ],
                        "image": "string",
                        "square_image": "string",
                        "color": "string",
                        "slug": "string",
                        "is_in_beta": true,
                        "api_endpoints_to_documentation_urls": {}
                      },
                      "passthrough_available": true,
                      "available_model_operations": [
                        {
                          "model_name": "Candidate",
                          "available_operations": [
                            "FETCH",
                            "CREATE"
                          ],
                          "required_post_parameters": [
                            "remote_user_id"
                          ],
                          "supported_fields": [
                            "first_name",
                            "last_name",
                            "company",
                            "title"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "AvailableActions",
                      "typeId": "AvailableActions",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "availableActionsRetrieveExample": {
                          "integration": {
                            "name": "string",
                            "categories": [
                              "hris"
                            ],
                            "image": "string",
                            "square_image": "string",
                            "color": "string",
                            "slug": "string",
                            "is_in_beta": true,
                            "api_endpoints_to_documentation_urls": {}
                          },
                          "passthrough_available": true,
                          "available_model_operations": [
                            {
                              "model_name": "Candidate",
                              "available_operations": [
                                "FETCH",
                                "CREATE"
                              ],
                              "required_post_parameters": [
                                "remote_user_id"
                              ],
                              "supported_fields": [
                                "first_name",
                                "last_name",
                                "company",
                                "title"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_bankInfo": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "bank-info"
          ],
          "packagePath": [],
          "file": "bank-info"
        }
      },
      "displayName": "bank-info",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/bank-info",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "account_type",
                "wireValue": "account_type"
              },
              "docs": "If provided, will only return BankInfo's with this account type. Options: ('SAVINGS', 'CHECKING')\n\n* `SAVINGS` - SAVINGS\n* `CHECKING` - CHECKING",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoGetParametersAccountType",
                    "typeId": "BankInfoGetParametersAccountType",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_type_example": "CHECKING"
                }
              }
            },
            {
              "name": {
                "name": "bank_name",
                "wireValue": "bank_name"
              },
              "docs": "If provided, will only return BankInfo's with this bank name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "bank_name_example": "bank_name"
                }
              }
            },
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "employee_id",
                "wireValue": "employee_id"
              },
              "docs": "If provided, will only return bank accounts for this employee.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "EmployeeId": "employee_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoGetParametersExpand",
                    "typeId": "BankInfoGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee": "employee"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "order_by",
                "wireValue": "order_by"
              },
              "docs": "Overrides the default ordering for this endpoint.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoGetParametersOrderBy",
                    "typeId": "BankInfoGetParametersOrderBy",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "order_by_example": "-remote_created_at"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoGetParametersRemoteFields",
                    "typeId": "BankInfoGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesAccountType": "account_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoGetParametersShowEnumOrigins",
                    "typeId": "BankInfoGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesAccountType": "account_type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/bank-info",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankInfo.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedBankInfoList",
                  "typeId": "PaginatedBankInfoList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankInfoListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "remote_id": "123234",
                          "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                          "account_number": "439291590",
                          "routing_number": "089690059",
                          "bank_name": "Chase",
                          "account_type": "SAVINGS",
                          "remote_created_at": "2021-12-06T10:11:26Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/bank-info",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `BankInfo` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_bankInfoListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/bank-info"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "employee_id": "employee_id",
                    "expand": "employee",
                    "remote_fields": "account_type",
                    "show_enum_origins": "account_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "remote_id": "123234",
                          "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                          "account_number": "439291590",
                          "routing_number": "089690059",
                          "bank_name": "Chase",
                          "account_type": "SAVINGS",
                          "remote_created_at": "2021-12-06T10:11:26Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/bank-info",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedBankInfoList",
                      "typeId": "PaginatedBankInfoList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankInfoListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                              "remote_id": "123234",
                              "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                              "account_number": "439291590",
                              "routing_number": "089690059",
                              "bank_name": "Chase",
                              "account_type": "SAVINGS",
                              "remote_created_at": "2021-12-06T10:11:26Z",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/bank-info",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/bank-info/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoIdGetParametersExpand",
                    "typeId": "BankInfoIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee": "employee"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoIdGetParametersRemoteFields",
                    "typeId": "BankInfoIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesAccountType": "account_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BankInfoIdGetParametersShowEnumOrigins",
                    "typeId": "BankInfoIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesAccountType": "account_type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/bank-info/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_bankInfo.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "BankInfo",
                  "typeId": "BankInfo",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "bankInfoRetrieveExample": {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "123234",
                      "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                      "account_number": "439291590",
                      "routing_number": "089690059",
                      "bank_name": "Chase",
                      "account_type": "SAVINGS",
                      "remote_created_at": "2021-12-06T10:11:26Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/bank-info",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `BankInfo` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_bankInfoRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/bank-info/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "employee",
                    "remote_fields": "account_type",
                    "show_enum_origins": "account_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "123234",
                      "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                      "account_number": "439291590",
                      "routing_number": "089690059",
                      "bank_name": "Chase",
                      "account_type": "SAVINGS",
                      "remote_created_at": "2021-12-06T10:11:26Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/bank-info",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "BankInfo",
                      "typeId": "BankInfo",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "bankInfoRetrieveExample": {
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "remote_id": "123234",
                          "employee": "a3617eb4-dfe3-426f-921e-a65fc1661e10",
                          "account_number": "439291590",
                          "routing_number": "089690059",
                          "bank_name": "Chase",
                          "account_type": "SAVINGS",
                          "remote_created_at": "2021-12-06T10:11:26Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/bank-info",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_benefits": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "benefits"
          ],
          "packagePath": [],
          "file": "benefits"
        }
      },
      "displayName": "benefits",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/benefits",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "employee_id",
                "wireValue": "employee_id"
              },
              "docs": "If provided, will return the benefits associated with the employee.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "EmployeeId": "employee_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BenefitsGetParametersExpand",
                    "typeId": "BenefitsGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee": "employee"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/benefits",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_benefits.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedBenefitList",
                  "typeId": "PaginatedBenefitList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "benefitsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "provider_name": "Blue Shield of California",
                          "benefit_plan_type": "string",
                          "employee_contribution": 23.6,
                          "company_contribution": 150,
                          "start_date": "2020-11-15 00:59:25.309761+00:00",
                          "end_date": "2021-10-15 00:23:25.309761+00:00",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/benefits",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `Benefit` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_benefitsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/benefits"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "employee_id": "employee_id",
                    "expand": "employee"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "provider_name": "Blue Shield of California",
                          "benefit_plan_type": "string",
                          "employee_contribution": 23.6,
                          "company_contribution": 150,
                          "start_date": "2020-11-15 00:59:25.309761+00:00",
                          "end_date": "2021-10-15 00:23:25.309761+00:00",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/benefits",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedBenefitList",
                      "typeId": "PaginatedBenefitList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "benefitsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                              "remote_id": "19202938",
                              "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                              "provider_name": "Blue Shield of California",
                              "benefit_plan_type": "string",
                              "employee_contribution": 23.6,
                              "company_contribution": 150,
                              "start_date": "2020-11-15 00:59:25.309761+00:00",
                              "end_date": "2021-10-15 00:23:25.309761+00:00",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/benefits",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/benefits/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "BenefitsIdGetParametersExpand",
                    "typeId": "BenefitsIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee": "employee"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/benefits/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_benefits.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Benefit",
                  "typeId": "Benefit",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "benefitsRetrieveExample": {
                      "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "provider_name": "Blue Shield of California",
                      "benefit_plan_type": "string",
                      "employee_contribution": 23.6,
                      "company_contribution": 150,
                      "start_date": "2020-11-15 00:59:25.309761+00:00",
                      "end_date": "2021-10-15 00:23:25.309761+00:00",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/benefits",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `Benefit` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_benefitsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/benefits/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "employee"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "provider_name": "Blue Shield of California",
                      "benefit_plan_type": "string",
                      "employee_contribution": 23.6,
                      "company_contribution": 150,
                      "start_date": "2020-11-15 00:59:25.309761+00:00",
                      "end_date": "2021-10-15 00:23:25.309761+00:00",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/benefits",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Benefit",
                      "typeId": "Benefit",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "benefitsRetrieveExample": {
                          "id": "3fe5ae7a-f1ba-4529-b7af-84e86dc6d232",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "provider_name": "Blue Shield of California",
                          "benefit_plan_type": "string",
                          "employee_contribution": 23.6,
                          "company_contribution": 150,
                          "start_date": "2020-11-15 00:59:25.309761+00:00",
                          "end_date": "2021-10-15 00:23:25.309761+00:00",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/benefits",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_companies": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "companies"
          ],
          "packagePath": [],
          "file": "companies"
        }
      },
      "displayName": "companies",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/companies",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/companies",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_companies.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedCompanyList",
                  "typeId": "PaginatedCompanyList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "companiesListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "remote_id": "19202938",
                          "legal_name": "Waystar Royco, Inc.",
                          "display_name": "Waystar Royco",
                          "eins": [
                            "12-3456789",
                            "12-3451111",
                            "11-0011000"
                          ],
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/companies",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `Company` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_companiesListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/companies"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "remote_id": "19202938",
                          "legal_name": "Waystar Royco, Inc.",
                          "display_name": "Waystar Royco",
                          "eins": [
                            "12-3456789",
                            "12-3451111",
                            "11-0011000"
                          ],
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/companies",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedCompanyList",
                      "typeId": "PaginatedCompanyList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "companiesListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                              "remote_id": "19202938",
                              "legal_name": "Waystar Royco, Inc.",
                              "display_name": "Waystar Royco",
                              "eins": [
                                "12-3456789",
                                "12-3451111",
                                "11-0011000"
                              ],
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/companies",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/companies/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/companies/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_companies.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Company",
                  "typeId": "Company",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "companiesRetrieveExample": {
                      "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_id": "19202938",
                      "legal_name": "Waystar Royco, Inc.",
                      "display_name": "Waystar Royco",
                      "eins": [
                        "12-3456789",
                        "12-3451111",
                        "11-0011000"
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/companies",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `Company` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_companiesRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/companies/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_id": "19202938",
                      "legal_name": "Waystar Royco, Inc.",
                      "display_name": "Waystar Royco",
                      "eins": [
                        "12-3456789",
                        "12-3451111",
                        "11-0011000"
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/companies",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Company",
                      "typeId": "Company",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "companiesRetrieveExample": {
                          "id": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "remote_id": "19202938",
                          "legal_name": "Waystar Royco, Inc.",
                          "display_name": "Waystar Royco",
                          "eins": [
                            "12-3456789",
                            "12-3451111",
                            "11-0011000"
                          ],
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/companies",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_deleteAccount": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "delete-account"
          ],
          "packagePath": [],
          "file": "delete-account"
        }
      },
      "displayName": "delete-account",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/delete-account",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/delete-account",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_deleteAccount.create",
          "name": "create",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "delete-account_create_Response_200",
                  "typeId": "delete-account_create_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "No response body",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "deleteAccountCreateExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Delete a linked account.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_deleteAccountCreateExample_200": {
                "displayName": "createExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/delete-account"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "delete-account_create_Response_200",
                      "typeId": "delete-account_create_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "No response body",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "deleteAccountCreateExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_employeePayrollRuns": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "employee-payroll-runs"
          ],
          "packagePath": [],
          "file": "employee-payroll-runs"
        }
      },
      "displayName": "employee-payroll-runs",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/employee-payroll-runs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "employee_id",
                "wireValue": "employee_id"
              },
              "docs": "If provided, will only return employee payroll runs for this employee.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "EmployeeId": "employee_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "ended_after",
                "wireValue": "ended_after"
              },
              "docs": "If provided, will only return employee payroll runs ended after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ended_after_example": "ended_after"
                }
              }
            },
            {
              "name": {
                "name": "ended_before",
                "wireValue": "ended_before"
              },
              "docs": "If provided, will only return employee payroll runs ended before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ended_before_example": "ended_before"
                }
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeePayrollRunsGetParametersExpand",
                    "typeId": "EmployeePayrollRunsGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee,PayrollRun": "employee,payroll_run"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "payroll_run_id",
                "wireValue": "payroll_run_id"
              },
              "docs": "If provided, will only return employee payroll runs for this employee.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "PayrollRunId": "payroll_run_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "started_after",
                "wireValue": "started_after"
              },
              "docs": "If provided, will only return employee payroll runs started after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "started_after_example": "started_after"
                }
              }
            },
            {
              "name": {
                "name": "started_before",
                "wireValue": "started_before"
              },
              "docs": "If provided, will only return employee payroll runs started before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "started_before_example": "started_before"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employee-payroll-runs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employeePayrollRuns.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedEmployeePayrollRunList",
                  "typeId": "PaginatedEmployeePayrollRunList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeePayrollRunsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "gross_pay": 1340,
                          "net_pay": 866,
                          "start_date": "2020-11-08T00:00:00Z",
                          "end_date": "2020-11-09T00:00:00Z",
                          "check_date": "2020-11-10T00:00:00Z",
                          "earnings": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "amount": 1002.34,
                              "type": "SALARY"
                            },
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "amount": 8342.34,
                              "type": "OVERTIME"
                            }
                          ],
                          "deductions": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "name": "Social Security",
                              "employee_deduction": 34.54,
                              "company_deduction": 78.78
                            }
                          ],
                          "taxes": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "name": "California State Income Tax",
                              "amount": 100.25,
                              "employer_tax": "False"
                            }
                          ],
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/employee-payroll",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `EmployeePayrollRun` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_employeePayrollRunsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/employee-payroll-runs"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "employee_id": "employee_id",
                    "expand": "employee,payroll_run",
                    "payroll_run_id": "payroll_run_id"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "gross_pay": 1340,
                          "net_pay": 866,
                          "start_date": "2020-11-08T00:00:00Z",
                          "end_date": "2020-11-09T00:00:00Z",
                          "check_date": "2020-11-10T00:00:00Z",
                          "earnings": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "amount": 1002.34,
                              "type": "SALARY"
                            },
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "amount": 8342.34,
                              "type": "OVERTIME"
                            }
                          ],
                          "deductions": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "name": "Social Security",
                              "employee_deduction": 34.54,
                              "company_deduction": 78.78
                            }
                          ],
                          "taxes": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "name": "California State Income Tax",
                              "amount": 100.25,
                              "employer_tax": "False"
                            }
                          ],
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/employee-payroll",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedEmployeePayrollRunList",
                      "typeId": "PaginatedEmployeePayrollRunList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employeePayrollRunsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                              "remote_id": "19202938",
                              "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                              "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "gross_pay": 1340,
                              "net_pay": 866,
                              "start_date": "2020-11-08T00:00:00Z",
                              "end_date": "2020-11-09T00:00:00Z",
                              "check_date": "2020-11-10T00:00:00Z",
                              "earnings": [
                                {
                                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                  "amount": 1002.34,
                                  "type": "SALARY"
                                },
                                {
                                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                  "amount": 8342.34,
                                  "type": "OVERTIME"
                                }
                              ],
                              "deductions": [
                                {
                                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                  "name": "Social Security",
                                  "employee_deduction": 34.54,
                                  "company_deduction": 78.78
                                }
                              ],
                              "taxes": [
                                {
                                  "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                                  "name": "California State Income Tax",
                                  "amount": 100.25,
                                  "employer_tax": "False"
                                }
                              ],
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/employee-payroll",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/employee-payroll-runs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeePayrollRunsIdGetParametersExpand",
                    "typeId": "EmployeePayrollRunsIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee,PayrollRun": "employee,payroll_run"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employee-payroll-runs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employeePayrollRuns.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmployeePayrollRun",
                  "typeId": "EmployeePayrollRun",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeePayrollRunsRetrieveExample": {
                      "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "gross_pay": 1340,
                      "net_pay": 866,
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-09T00:00:00Z",
                      "check_date": "2020-11-10T00:00:00Z",
                      "earnings": [
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "amount": 1002.34,
                          "type": "SALARY"
                        },
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "amount": 8342.34,
                          "type": "OVERTIME"
                        }
                      ],
                      "deductions": [
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "Social Security",
                          "employee_deduction": 34.54,
                          "company_deduction": 78.78
                        }
                      ],
                      "taxes": [
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "California State Income Tax",
                          "amount": 100.25,
                          "employer_tax": "False"
                        }
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/employee-payroll",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns an `EmployeePayrollRun` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_employeePayrollRunsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/employee-payroll-runs/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "employee,payroll_run"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                      "gross_pay": 1340,
                      "net_pay": 866,
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-09T00:00:00Z",
                      "check_date": "2020-11-10T00:00:00Z",
                      "earnings": [
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "amount": 1002.34,
                          "type": "SALARY"
                        },
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "amount": 8342.34,
                          "type": "OVERTIME"
                        }
                      ],
                      "deductions": [
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "Social Security",
                          "employee_deduction": 34.54,
                          "company_deduction": 78.78
                        }
                      ],
                      "taxes": [
                        {
                          "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "name": "California State Income Tax",
                          "amount": 100.25,
                          "employer_tax": "False"
                        }
                      ],
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/employee-payroll",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EmployeePayrollRun",
                      "typeId": "EmployeePayrollRun",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employeePayrollRunsRetrieveExample": {
                          "id": "fb8c55b6-1cb8-4b4c-9fb6-17924231619d",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                          "gross_pay": 1340,
                          "net_pay": 866,
                          "start_date": "2020-11-08T00:00:00Z",
                          "end_date": "2020-11-09T00:00:00Z",
                          "check_date": "2020-11-10T00:00:00Z",
                          "earnings": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "amount": 1002.34,
                              "type": "SALARY"
                            },
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "amount": 8342.34,
                              "type": "OVERTIME"
                            }
                          ],
                          "deductions": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "name": "Social Security",
                              "employee_deduction": 34.54,
                              "company_deduction": 78.78
                            }
                          ],
                          "taxes": [
                            {
                              "employee_payroll_run": "35347df1-95e7-46e2-93cc-66f1191edca5",
                              "name": "California State Income Tax",
                              "amount": 100.25,
                              "employer_tax": "False"
                            }
                          ],
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/employee-payroll",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_employees": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "employees"
          ],
          "packagePath": [],
          "file": "employees"
        }
      },
      "displayName": "employees",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/employees",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "company_id",
                "wireValue": "company_id"
              },
              "docs": "If provided, will only return employees for this company.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CompanyId": "company_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "display_full_name",
                "wireValue": "display_full_name"
              },
              "docs": "If provided, will only return employees with this display name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "display_full_name_example": "display_full_name"
                }
              }
            },
            {
              "name": {
                "name": "employment_status",
                "wireValue": "employment_status"
              },
              "docs": "If provided, will only return employees with this employment status.\n\n* `ACTIVE` - ACTIVE\n* `PENDING` - PENDING\n* `INACTIVE` - INACTIVE",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeesGetParametersEmploymentStatus",
                    "typeId": "EmployeesGetParametersEmploymentStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "employment_status_example": "ACTIVE"
                }
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeesGetParametersExpand",
                    "typeId": "EmployeesGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployments,Groups,HomeLocation,WorkLocation,Manager,Team,Company,PayGroup": "employments,groups,home_location,work_location,manager,team,company,pay_group"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "first_name",
                "wireValue": "first_name"
              },
              "docs": "If provided, will only return employees with this first name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "first_name_example": "first_name"
                }
              }
            },
            {
              "name": {
                "name": "groups",
                "wireValue": "groups"
              },
              "docs": "If provided, will only return employees matching the group ids; multiple groups can be separated by commas.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "groups_example": "groups"
                }
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_sensitive_fields",
                "wireValue": "include_sensitive_fields"
              },
              "docs": "Whether to include sensitive fields (such as social security numbers) in the response.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_sensitive_fields_example": true
                }
              }
            },
            {
              "name": {
                "name": "last_name",
                "wireValue": "last_name"
              },
              "docs": "If provided, will only return employees with this last name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "last_name_example": "last_name"
                }
              }
            },
            {
              "name": {
                "name": "manager_id",
                "wireValue": "manager_id"
              },
              "docs": "If provided, will only return employees for this manager.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ManagerId": "manager_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "pay_group_id",
                "wireValue": "pay_group_id"
              },
              "docs": "If provided, will only return employees for this pay group",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "PayGroupId": "pay_group_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "personal_email",
                "wireValue": "personal_email"
              },
              "docs": "If provided, will only return Employees with this personal email",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "email"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "personal_email_example": "personal_email"
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeesGetParametersRemoteFields",
                    "typeId": "EmployeesGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": "employment_status,ethnicity,gender,marital_status"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeesGetParametersShowEnumOrigins",
                    "typeId": "EmployeesGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": "employment_status,ethnicity,gender,marital_status"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "started_after",
                "wireValue": "started_after"
              },
              "docs": "If provided, will only return employees that started after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "started_after_example": "started_after"
                }
              }
            },
            {
              "name": {
                "name": "started_before",
                "wireValue": "started_before"
              },
              "docs": "If provided, will only return employees that started before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "started_before_example": "started_before"
                }
              }
            },
            {
              "name": {
                "name": "team_id",
                "wireValue": "team_id"
              },
              "docs": "If provided, will only return employees for this team.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "TeamId": "team_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "terminated_after",
                "wireValue": "terminated_after"
              },
              "docs": "If provided, will only return employees that were terminated after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "terminated_after_example": "terminated_after"
                }
              }
            },
            {
              "name": {
                "name": "terminated_before",
                "wireValue": "terminated_before"
              },
              "docs": "If provided, will only return employees that were terminated before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "terminated_before_example": "terminated_before"
                }
              }
            },
            {
              "name": {
                "name": "work_email",
                "wireValue": "work_email"
              },
              "docs": "If provided, will only return Employees with this work email",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "email"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "work_email_example": "work_email"
                }
              }
            },
            {
              "name": {
                "name": "work_location_id",
                "wireValue": "work_location_id"
              },
              "docs": "If provided, will only return employees for this location.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "WorkLocationId": "work_location_id"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employees",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employees.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedEmployeeList",
                  "typeId": "PaginatedEmployeeList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "remote_id": "19202938",
                          "employee_number": "2",
                          "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                          "first_name": "Greg",
                          "last_name": "Hirsch",
                          "display_full_name": "Cousin Greg Hirsch",
                          "username": "cousingreg",
                          "groups": [
                            "21a54124-397f-494d-985e-3c5b330b8a68"
                          ],
                          "work_email": "greg@merge.dev",
                          "personal_email": "greg@gmail.com",
                          "mobile_phone_number": "+1234567890",
                          "employments": [
                            "17a54124-287f-494d-965e-3c5b330c9a68"
                          ],
                          "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                          "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                          "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                          "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                          "ssn": "1234567890",
                          "gender": "MALE",
                          "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                          "marital_status": "SINGLE",
                          "date_of_birth": "1990-11-10T00:00:00Z",
                          "hire_date": "2020-10-10T00:00:00Z",
                          "start_date": "2020-10-11T00:00:00Z",
                          "remote_created_at": "2020-10-11T00:00:00Z",
                          "employment_status": "ACTIVE",
                          "termination_date": "2021-10-12T00:00:00Z",
                          "avatar": "http://alturl.com/h2h8m",
                          "custom_fields": {},
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/people",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `Employee` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_employeesListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/employees"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "company_id": "company_id",
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "expand": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                    "manager_id": "manager_id",
                    "pay_group_id": "pay_group_id",
                    "remote_fields": "employment_status,ethnicity,gender,marital_status",
                    "show_enum_origins": "employment_status,ethnicity,gender,marital_status",
                    "team_id": "team_id",
                    "work_location_id": "work_location_id"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "remote_id": "19202938",
                          "employee_number": "2",
                          "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                          "first_name": "Greg",
                          "last_name": "Hirsch",
                          "display_full_name": "Cousin Greg Hirsch",
                          "username": "cousingreg",
                          "groups": [
                            "21a54124-397f-494d-985e-3c5b330b8a68"
                          ],
                          "work_email": "greg@merge.dev",
                          "personal_email": "greg@gmail.com",
                          "mobile_phone_number": "+1234567890",
                          "employments": [
                            "17a54124-287f-494d-965e-3c5b330c9a68"
                          ],
                          "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                          "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                          "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                          "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                          "ssn": "1234567890",
                          "gender": "MALE",
                          "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                          "marital_status": "SINGLE",
                          "date_of_birth": "1990-11-10T00:00:00Z",
                          "hire_date": "2020-10-10T00:00:00Z",
                          "start_date": "2020-10-11T00:00:00Z",
                          "remote_created_at": "2020-10-11T00:00:00Z",
                          "employment_status": "ACTIVE",
                          "termination_date": "2021-10-12T00:00:00Z",
                          "avatar": "http://alturl.com/h2h8m",
                          "custom_fields": {},
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/people",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedEmployeeList",
                      "typeId": "PaginatedEmployeeList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employeesListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                              "remote_id": "19202938",
                              "employee_number": "2",
                              "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                              "first_name": "Greg",
                              "last_name": "Hirsch",
                              "display_full_name": "Cousin Greg Hirsch",
                              "username": "cousingreg",
                              "groups": [
                                "21a54124-397f-494d-985e-3c5b330b8a68"
                              ],
                              "work_email": "greg@merge.dev",
                              "personal_email": "greg@gmail.com",
                              "mobile_phone_number": "+1234567890",
                              "employments": [
                                "17a54124-287f-494d-965e-3c5b330c9a68"
                              ],
                              "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                              "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                              "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                              "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                              "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                              "ssn": "1234567890",
                              "gender": "MALE",
                              "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                              "marital_status": "SINGLE",
                              "date_of_birth": "1990-11-10T00:00:00Z",
                              "hire_date": "2020-10-10T00:00:00Z",
                              "start_date": "2020-10-11T00:00:00Z",
                              "remote_created_at": "2020-10-11T00:00:00Z",
                              "employment_status": "ACTIVE",
                              "termination_date": "2021-10-12T00:00:00Z",
                              "avatar": "http://alturl.com/h2h8m",
                              "custom_fields": {},
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/people",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/employees",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "is_debug_mode",
                "wireValue": "is_debug_mode"
              },
              "docs": "Whether to include debug fields (such as log file links) in the response.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "is_debug_mode_example": true
                }
              }
            },
            {
              "name": {
                "name": "run_async",
                "wireValue": "run_async"
              },
              "docs": "Whether or not third-party updates should be run asynchronously.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "run_async_example": true
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employees",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employees.create",
          "name": "create",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EmployeeEndpointRequest",
              "typeId": "EmployeeEndpointRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "employeesCreateExample": {
                  "model": {}
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmployeeEndpointRequest",
                  "typeId": "EmployeeEndpointRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesCreateExample": {
                      "model": {}
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmployeeEndpointRequest",
                  "typeId": "EmployeeEndpointRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesCreateExample": {
                      "model": {}
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "employees_create_Request",
                "properties": [
                  {
                    "name": {
                      "name": "model",
                      "wireValue": "model"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EmployeeRequest",
                      "typeId": "EmployeeRequest",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesCreateExample": {
                      "model": {}
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EmployeeResponse",
                  "typeId": "EmployeeResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesCreateExample": {
                      "model": {
                        "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "remote_id": "19202938",
                        "employee_number": "2",
                        "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        "first_name": "Greg",
                        "last_name": "Hirsch",
                        "display_full_name": "Cousin Greg Hirsch",
                        "username": "cousingreg",
                        "groups": [
                          "21a54124-397f-494d-985e-3c5b330b8a68"
                        ],
                        "work_email": "greg@merge.dev",
                        "personal_email": "greg@gmail.com",
                        "mobile_phone_number": "+1234567890",
                        "employments": [
                          "17a54124-287f-494d-965e-3c5b330c9a68"
                        ],
                        "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                        "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                        "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                        "ssn": "1234567890",
                        "gender": "MALE",
                        "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                        "marital_status": "SINGLE",
                        "date_of_birth": "1990-11-10T00:00:00Z",
                        "hire_date": "2020-10-10T00:00:00Z",
                        "start_date": "2020-10-11T00:00:00Z",
                        "remote_created_at": "2020-10-11T00:00:00Z",
                        "employment_status": "ACTIVE",
                        "termination_date": "2021-10-12T00:00:00Z",
                        "avatar": "http://alturl.com/h2h8m",
                        "custom_fields": {},
                        "remote_was_deleted": true,
                        "modified_at": "2021-10-16T00:00:00Z",
                        "field_mappings": {},
                        "remote_data": [
                          {
                            "path": "/people",
                            "data": [
                              "Varies by platform"
                            ]
                          }
                        ]
                      },
                      "warnings": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Unrecognized Field",
                          "detail": "An unrecognized field, age, was passed in with request data.",
                          "problem_type": "UNRECOGNIZED_FIELD"
                        }
                      ],
                      "errors": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Missing Required Field",
                          "detail": "custom_fields is a required field on model.",
                          "problem_type": "MISSING_REQUIRED_FIELD"
                        }
                      ],
                      "logs": [
                        {
                          "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                          "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_summary": {
                            "url": "https://harvest.greenhouse.io/v1/candidates/",
                            "method": "POST",
                            "status_code": 200
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates an `Employee` object with the given values.",
          "v2Examples": {
            "autogeneratedExamples": {
              "employeesCreateExample_201": {
                "displayName": "employeesCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/employees"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  },
                  "requestBody": {
                    "model": {}
                  }
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "value": {
                      "model": {
                        "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                        "remote_id": "19202938",
                        "employee_number": "2",
                        "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                        "first_name": "Greg",
                        "last_name": "Hirsch",
                        "display_full_name": "Cousin Greg Hirsch",
                        "username": "cousingreg",
                        "groups": [
                          "21a54124-397f-494d-985e-3c5b330b8a68"
                        ],
                        "work_email": "greg@merge.dev",
                        "personal_email": "greg@gmail.com",
                        "mobile_phone_number": "+1234567890",
                        "employments": [
                          "17a54124-287f-494d-965e-3c5b330c9a68"
                        ],
                        "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                        "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                        "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                        "ssn": "1234567890",
                        "gender": "MALE",
                        "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                        "marital_status": "SINGLE",
                        "date_of_birth": "1990-11-10T00:00:00Z",
                        "hire_date": "2020-10-10T00:00:00Z",
                        "start_date": "2020-10-11T00:00:00Z",
                        "remote_created_at": "2020-10-11T00:00:00Z",
                        "employment_status": "ACTIVE",
                        "termination_date": "2021-10-12T00:00:00Z",
                        "avatar": "http://alturl.com/h2h8m",
                        "custom_fields": {},
                        "remote_was_deleted": true,
                        "modified_at": "2021-10-16T00:00:00Z",
                        "field_mappings": {},
                        "remote_data": [
                          {
                            "path": "/people",
                            "data": [
                              "Varies by platform"
                            ]
                          }
                        ]
                      },
                      "warnings": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Unrecognized Field",
                          "detail": "An unrecognized field, age, was passed in with request data.",
                          "problem_type": "UNRECOGNIZED_FIELD"
                        }
                      ],
                      "errors": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Missing Required Field",
                          "detail": "custom_fields is a required field on model.",
                          "problem_type": "MISSING_REQUIRED_FIELD"
                        }
                      ],
                      "logs": [
                        {
                          "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                          "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_summary": {
                            "url": "https://harvest.greenhouse.io/v1/candidates/",
                            "method": "POST",
                            "status_code": 200
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "EmployeeResponse",
                      "typeId": "EmployeeResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employeesCreateExample": {
                          "model": {
                            "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                            "remote_id": "19202938",
                            "employee_number": "2",
                            "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                            "first_name": "Greg",
                            "last_name": "Hirsch",
                            "display_full_name": "Cousin Greg Hirsch",
                            "username": "cousingreg",
                            "groups": [
                              "21a54124-397f-494d-985e-3c5b330b8a68"
                            ],
                            "work_email": "greg@merge.dev",
                            "personal_email": "greg@gmail.com",
                            "mobile_phone_number": "+1234567890",
                            "employments": [
                              "17a54124-287f-494d-965e-3c5b330c9a68"
                            ],
                            "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                            "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                            "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                            "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                            "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                            "ssn": "1234567890",
                            "gender": "MALE",
                            "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                            "marital_status": "SINGLE",
                            "date_of_birth": "1990-11-10T00:00:00Z",
                            "hire_date": "2020-10-10T00:00:00Z",
                            "start_date": "2020-10-11T00:00:00Z",
                            "remote_created_at": "2020-10-11T00:00:00Z",
                            "employment_status": "ACTIVE",
                            "termination_date": "2021-10-12T00:00:00Z",
                            "avatar": "http://alturl.com/h2h8m",
                            "custom_fields": {},
                            "remote_was_deleted": true,
                            "modified_at": "2021-10-16T00:00:00Z",
                            "field_mappings": {},
                            "remote_data": [
                              {
                                "path": "/people",
                                "data": [
                                  "Varies by platform"
                                ]
                              }
                            ]
                          },
                          "warnings": [
                            {
                              "source": {
                                "pointer": "string"
                              },
                              "title": "Unrecognized Field",
                              "detail": "An unrecognized field, age, was passed in with request data.",
                              "problem_type": "UNRECOGNIZED_FIELD"
                            }
                          ],
                          "errors": [
                            {
                              "source": {
                                "pointer": "string"
                              },
                              "title": "Missing Required Field",
                              "detail": "custom_fields is a required field on model.",
                              "problem_type": "MISSING_REQUIRED_FIELD"
                            }
                          ],
                          "logs": [
                            {
                              "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                              "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                              "log_summary": {
                                "url": "https://harvest.greenhouse.io/v1/candidates/",
                                "method": "POST",
                                "status_code": 200
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/employees/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeesIdGetParametersExpand",
                    "typeId": "EmployeesIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployments,Groups,HomeLocation,WorkLocation,Manager,Team,Company,PayGroup": "employments,groups,home_location,work_location,manager,team,company,pay_group"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_sensitive_fields",
                "wireValue": "include_sensitive_fields"
              },
              "docs": "Whether to include sensitive fields (such as social security numbers) in the response.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_sensitive_fields_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeesIdGetParametersRemoteFields",
                    "typeId": "EmployeesIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": "employment_status,ethnicity,gender,marital_status"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmployeesIdGetParametersShowEnumOrigins",
                    "typeId": "EmployeesIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentStatus,Ethnicity,Gender,MaritalStatus": "employment_status,ethnicity,gender,marital_status"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employees/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employees.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Employee",
                  "typeId": "Employee",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesRetrieveExample": {
                      "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "remote_id": "19202938",
                      "employee_number": "2",
                      "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                      "first_name": "Greg",
                      "last_name": "Hirsch",
                      "display_full_name": "Cousin Greg Hirsch",
                      "username": "cousingreg",
                      "groups": [
                        "21a54124-397f-494d-985e-3c5b330b8a68"
                      ],
                      "work_email": "greg@merge.dev",
                      "personal_email": "greg@gmail.com",
                      "mobile_phone_number": "+1234567890",
                      "employments": [
                        "17a54124-287f-494d-965e-3c5b330c9a68"
                      ],
                      "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                      "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                      "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                      "ssn": "1234567890",
                      "gender": "MALE",
                      "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                      "marital_status": "SINGLE",
                      "date_of_birth": "1990-11-10T00:00:00Z",
                      "hire_date": "2020-10-10T00:00:00Z",
                      "start_date": "2020-10-11T00:00:00Z",
                      "remote_created_at": "2020-10-11T00:00:00Z",
                      "employment_status": "ACTIVE",
                      "termination_date": "2021-10-12T00:00:00Z",
                      "avatar": "http://alturl.com/h2h8m",
                      "custom_fields": {},
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/people",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns an `Employee` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_employeesRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/employees/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "employments,groups,home_location,work_location,manager,team,company,pay_group",
                    "remote_fields": "employment_status,ethnicity,gender,marital_status",
                    "show_enum_origins": "employment_status,ethnicity,gender,marital_status"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "remote_id": "19202938",
                      "employee_number": "2",
                      "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                      "first_name": "Greg",
                      "last_name": "Hirsch",
                      "display_full_name": "Cousin Greg Hirsch",
                      "username": "cousingreg",
                      "groups": [
                        "21a54124-397f-494d-985e-3c5b330b8a68"
                      ],
                      "work_email": "greg@merge.dev",
                      "personal_email": "greg@gmail.com",
                      "mobile_phone_number": "+1234567890",
                      "employments": [
                        "17a54124-287f-494d-965e-3c5b330c9a68"
                      ],
                      "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                      "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                      "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                      "ssn": "1234567890",
                      "gender": "MALE",
                      "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                      "marital_status": "SINGLE",
                      "date_of_birth": "1990-11-10T00:00:00Z",
                      "hire_date": "2020-10-10T00:00:00Z",
                      "start_date": "2020-10-11T00:00:00Z",
                      "remote_created_at": "2020-10-11T00:00:00Z",
                      "employment_status": "ACTIVE",
                      "termination_date": "2021-10-12T00:00:00Z",
                      "avatar": "http://alturl.com/h2h8m",
                      "custom_fields": {},
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/people",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Employee",
                      "typeId": "Employee",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employeesRetrieveExample": {
                          "id": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "remote_id": "19202938",
                          "employee_number": "2",
                          "company": "8d9fd929-436c-4fd4-a48b-0c61f68d6178",
                          "first_name": "Greg",
                          "last_name": "Hirsch",
                          "display_full_name": "Cousin Greg Hirsch",
                          "username": "cousingreg",
                          "groups": [
                            "21a54124-397f-494d-985e-3c5b330b8a68"
                          ],
                          "work_email": "greg@merge.dev",
                          "personal_email": "greg@gmail.com",
                          "mobile_phone_number": "+1234567890",
                          "employments": [
                            "17a54124-287f-494d-965e-3c5b330c9a68"
                          ],
                          "home_location": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "work_location": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                          "manager": "0048ea5b-911e-4dff-9364-92070dea62ff",
                          "team": "249c9faa-3045-4a31-953b-8f22d3613301",
                          "pay_group": "ad1264e2-39be-4787-b749-f1aade9e3405",
                          "ssn": "1234567890",
                          "gender": "MALE",
                          "ethnicity": "AMERICAN_INDIAN_OR_ALASKA_NATIVE",
                          "marital_status": "SINGLE",
                          "date_of_birth": "1990-11-10T00:00:00Z",
                          "hire_date": "2020-10-10T00:00:00Z",
                          "start_date": "2020-10-11T00:00:00Z",
                          "remote_created_at": "2020-10-11T00:00:00Z",
                          "employment_status": "ACTIVE",
                          "termination_date": "2021-10-12T00:00:00Z",
                          "avatar": "http://alturl.com/h2h8m",
                          "custom_fields": {},
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/people",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/employees/ignore/",
            "parts": [
              {
                "pathParameter": "model_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "model_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "model_id_example": "model_id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employees/ignore/",
            "parts": [
              {
                "pathParameter": "model_id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "model_id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "model_id_example": "model_id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employees.ignoreCreate",
          "name": "ignoreCreate",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "IgnoreCommonModelRequest",
              "typeId": "IgnoreCommonModelRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "employeesIgnoreCreateExample": {
                  "reason": "GENERAL_CUSTOMER_REQUEST"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "IgnoreCommonModelRequest",
                  "typeId": "IgnoreCommonModelRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesIgnoreCreateExample": {
                      "reason": "GENERAL_CUSTOMER_REQUEST"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "IgnoreCommonModelRequest",
                  "typeId": "IgnoreCommonModelRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesIgnoreCreateExample": {
                      "reason": "GENERAL_CUSTOMER_REQUEST"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "employees_ignoreCreate_Request",
                "properties": [
                  {
                    "name": {
                      "name": "reason",
                      "wireValue": "reason"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "ReasonEnum",
                      "typeId": "ReasonEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "message",
                      "wireValue": "message"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {
                                "minLength": 1,
                                "maxLength": 256
                              },
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "EmployeesIgnoreModelIdPostRequestBodyContentMultipartFormDataSchemaMessage_example_0": "deletion request by user id 51903790-7dfe-4053-8d63-5a10cc4ffd39"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesIgnoreCreateExample": {
                      "reason": "GENERAL_CUSTOMER_REQUEST"
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "employees_ignoreCreate_Response_200",
                  "typeId": "employees_ignoreCreate_Response_200",
                  "inline": false,
                  "type": "named"
                },
                "docs": "No response body",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesIgnoreCreateExample": {}
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Ignores a specific row based on the `model_id` in the url. These records will have their properties set to null, and will not be updated in future syncs. The \"reason\" and \"message\" fields in the request body will be stored for audit purposes.",
          "v2Examples": {
            "autogeneratedExamples": {
              "employeesIgnoreCreateExample_200": {
                "displayName": "employeesIgnoreCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/employees/ignore/model_id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "model_id": "model_id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  },
                  "requestBody": {
                    "reason": "GENERAL_CUSTOMER_REQUEST"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {},
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "employees_ignoreCreate_Response_200",
                      "typeId": "employees_ignoreCreate_Response_200",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "No response body",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employeesIgnoreCreateExample": {}
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/employees/meta/post",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employees/meta/post",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employees.metaPostRetrieve",
          "name": "metaPostRetrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "MetaResponse",
                  "typeId": "MetaResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employeesMetaPostRetrieveExample": {
                      "request_schema": {},
                      "remote_field_classes": {},
                      "status": {
                        "linked_account_status": "string",
                        "can_make_request": true
                      },
                      "has_conditional_params": true,
                      "has_required_linked_account_params": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns metadata for `Employee` POSTs.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_employeesMetaPostRetrieveExample_200": {
                "displayName": "metaPostRetrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/employees/meta/post"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request_schema": {},
                      "remote_field_classes": {},
                      "status": {
                        "linked_account_status": "string",
                        "can_make_request": true
                      },
                      "has_conditional_params": true,
                      "has_required_linked_account_params": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "MetaResponse",
                      "typeId": "MetaResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employeesMetaPostRetrieveExample": {
                          "request_schema": {},
                          "remote_field_classes": {},
                          "status": {
                            "linked_account_status": "string",
                            "can_make_request": true
                          },
                          "has_conditional_params": true,
                          "has_required_linked_account_params": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_employments": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "employments"
          ],
          "packagePath": [],
          "file": "employments"
        }
      },
      "displayName": "employments",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/employments",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "employee_id",
                "wireValue": "employee_id"
              },
              "docs": "If provided, will only return employments for this employee.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "EmployeeId": "employee_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmploymentsGetParametersExpand",
                    "typeId": "EmploymentsGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee,PayGroup": "employee,pay_group"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "order_by",
                "wireValue": "order_by"
              },
              "docs": "Overrides the default ordering for this endpoint.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmploymentsGetParametersOrderBy",
                    "typeId": "EmploymentsGetParametersOrderBy",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "order_by_example": "-effective_date"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmploymentsGetParametersRemoteFields",
                    "typeId": "EmploymentsGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": "employment_type,flsa_status,pay_frequency,pay_period"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmploymentsGetParametersShowEnumOrigins",
                    "typeId": "EmploymentsGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": "employment_type,flsa_status,pay_frequency,pay_period"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employments",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employments.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedEmploymentList",
                  "typeId": "PaginatedEmploymentList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employmentsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                          "remote_id": "19202938",
                          "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "job_title": "Executive Assistant to Tom Wambsgans",
                          "pay_rate": 50000,
                          "pay_period": "HOUR",
                          "pay_frequency": "WEEKLY",
                          "pay_currency": "XUA",
                          "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                          "flsa_status": "EXEMPT",
                          "effective_date": "2023-10-06T18:42:34Z",
                          "employment_type": "FULL_TIME",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/jobs",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `Employment` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_employmentsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/employments"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "employee_id": "employee_id",
                    "expand": "employee,pay_group",
                    "remote_fields": "employment_type,flsa_status,pay_frequency,pay_period",
                    "show_enum_origins": "employment_type,flsa_status,pay_frequency,pay_period"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                          "remote_id": "19202938",
                          "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "job_title": "Executive Assistant to Tom Wambsgans",
                          "pay_rate": 50000,
                          "pay_period": "HOUR",
                          "pay_frequency": "WEEKLY",
                          "pay_currency": "XUA",
                          "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                          "flsa_status": "EXEMPT",
                          "effective_date": "2023-10-06T18:42:34Z",
                          "employment_type": "FULL_TIME",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/jobs",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedEmploymentList",
                      "typeId": "PaginatedEmploymentList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employmentsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                              "remote_id": "19202938",
                              "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                              "job_title": "Executive Assistant to Tom Wambsgans",
                              "pay_rate": 50000,
                              "pay_period": "HOUR",
                              "pay_frequency": "WEEKLY",
                              "pay_currency": "XUA",
                              "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                              "flsa_status": "EXEMPT",
                              "effective_date": "2023-10-06T18:42:34Z",
                              "employment_type": "FULL_TIME",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/jobs",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/employments/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmploymentsIdGetParametersExpand",
                    "typeId": "EmploymentsIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee,PayGroup": "employee,pay_group"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmploymentsIdGetParametersRemoteFields",
                    "typeId": "EmploymentsIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": "employment_type,flsa_status,pay_frequency,pay_period"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "EmploymentsIdGetParametersShowEnumOrigins",
                    "typeId": "EmploymentsIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesEmploymentType,FlsaStatus,PayFrequency,PayPeriod": "employment_type,flsa_status,pay_frequency,pay_period"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/employments/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_employments.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Employment",
                  "typeId": "Employment",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "employmentsRetrieveExample": {
                      "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                      "remote_id": "19202938",
                      "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "job_title": "Executive Assistant to Tom Wambsgans",
                      "pay_rate": 50000,
                      "pay_period": "HOUR",
                      "pay_frequency": "WEEKLY",
                      "pay_currency": "XUA",
                      "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                      "flsa_status": "EXEMPT",
                      "effective_date": "2023-10-06T18:42:34Z",
                      "employment_type": "FULL_TIME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/jobs",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns an `Employment` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_employmentsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/employments/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "employee,pay_group",
                    "remote_fields": "employment_type,flsa_status,pay_frequency,pay_period",
                    "show_enum_origins": "employment_type,flsa_status,pay_frequency,pay_period"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                      "remote_id": "19202938",
                      "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                      "job_title": "Executive Assistant to Tom Wambsgans",
                      "pay_rate": 50000,
                      "pay_period": "HOUR",
                      "pay_frequency": "WEEKLY",
                      "pay_currency": "XUA",
                      "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                      "flsa_status": "EXEMPT",
                      "effective_date": "2023-10-06T18:42:34Z",
                      "employment_type": "FULL_TIME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/jobs",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Employment",
                      "typeId": "Employment",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "employmentsRetrieveExample": {
                          "id": "65d8ffd0-211b-4ba4-b85a-fbe2ce220982",
                          "remote_id": "19202938",
                          "employee": "0958cbc6-6040-430a-848e-aafacbadf4ae",
                          "job_title": "Executive Assistant to Tom Wambsgans",
                          "pay_rate": 50000,
                          "pay_period": "HOUR",
                          "pay_frequency": "WEEKLY",
                          "pay_currency": "XUA",
                          "pay_group": "d4e4837f-9900-484c-ac40-528365bb08ef",
                          "flsa_status": "EXEMPT",
                          "effective_date": "2023-10-06T18:42:34Z",
                          "employment_type": "FULL_TIME",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/jobs",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_generateKey": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "generate-key"
          ],
          "packagePath": [],
          "file": "generate-key"
        }
      },
      "displayName": "generate-key",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/generate-key",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/generate-key",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_generateKey.create",
          "name": "create",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "GenerateRemoteKeyRequest",
              "typeId": "GenerateRemoteKeyRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "generateKeyCreateExample": {
                  "name": "Remote Deployment Key 1"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GenerateRemoteKeyRequest",
                  "typeId": "GenerateRemoteKeyRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "generateKeyCreateExample": {
                      "name": "Remote Deployment Key 1"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "GenerateRemoteKeyRequest",
                  "typeId": "GenerateRemoteKeyRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "generateKeyCreateExample": {
                      "name": "Remote Deployment Key 1"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "generate-key_create_Request",
                "properties": [
                  {
                    "name": {
                      "name": "name",
                      "wireValue": "name"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "GenerateKeyPostRequestBodyContentMultipartFormDataSchemaName_example_0": "Remote Deployment Key 1"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "generateKeyCreateExample": {
                      "name": "Remote Deployment Key 1"
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RemoteKey",
                  "typeId": "RemoteKey",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "generateKeyCreateExample": {
                      "name": "Remote Deployment Key 1",
                      "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Create a remote key.",
          "v2Examples": {
            "autogeneratedExamples": {
              "generateKeyCreateExample_200": {
                "displayName": "generateKeyCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/generate-key"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "Remote Deployment Key 1"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Remote Deployment Key 1",
                      "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RemoteKey",
                      "typeId": "RemoteKey",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "generateKeyCreateExample": {
                          "name": "Remote Deployment Key 1",
                          "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_groups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "groups"
          ],
          "packagePath": [],
          "file": "groups"
        }
      },
      "displayName": "groups",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/groups",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "GroupsGetParametersRemoteFields",
                    "typeId": "GroupsGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesType": "type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "GroupsGetParametersShowEnumOrigins",
                    "typeId": "GroupsGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesType": "type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "types",
                "wireValue": "types"
              },
              "docs": "If provided, will only return groups of these types. Multiple values can be separated by commas.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "types_example": "types"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/groups",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_groups.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedGroupList",
                  "typeId": "PaginatedGroupList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "groupsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                          "remote_id": "800293",
                          "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                          "name": "COST_CENTER_US",
                          "type": "TEAM",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/group",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `Group` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_groupsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/groups"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "remote_fields": "type",
                    "show_enum_origins": "type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                          "remote_id": "800293",
                          "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                          "name": "COST_CENTER_US",
                          "type": "TEAM",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/group",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedGroupList",
                      "typeId": "PaginatedGroupList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "groupsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                              "remote_id": "800293",
                              "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                              "name": "COST_CENTER_US",
                              "type": "TEAM",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/group",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "GroupsIdGetParametersRemoteFields",
                    "typeId": "GroupsIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesType": "type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "GroupsIdGetParametersShowEnumOrigins",
                    "typeId": "GroupsIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesType": "type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_groups.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Group",
                  "typeId": "Group",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "groupsRetrieveExample": {
                      "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                      "remote_id": "800293",
                      "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                      "name": "COST_CENTER_US",
                      "type": "TEAM",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/group",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `Group` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_groupsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/groups/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "remote_fields": "type",
                    "show_enum_origins": "type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                      "remote_id": "800293",
                      "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                      "name": "COST_CENTER_US",
                      "type": "TEAM",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/group",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Group",
                      "typeId": "Group",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "groupsRetrieveExample": {
                          "id": "134e0111-0f67-44f6-98f0-597000290bb3",
                          "remote_id": "800293",
                          "parent_group": "2ef51b11-2c4e-4b02-8d1d-50592d9e96ef",
                          "name": "COST_CENTER_US",
                          "type": "TEAM",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/group",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_issues": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "issues"
          ],
          "packagePath": [],
          "file": "issues"
        }
      },
      "displayName": "issues",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/issues",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "account_token",
                "wireValue": "account_token"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "account_token_example": "account_token"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "end_date",
                "wireValue": "end_date"
              },
              "docs": "If included, will only include issues whose most recent action occurred before this time",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "end_date_example": "end_date"
                }
              }
            },
            {
              "name": {
                "name": "end_user_organization_name",
                "wireValue": "end_user_organization_name"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "end_user_organization_name_example": "end_user_organization_name"
                }
              }
            },
            {
              "name": {
                "name": "first_incident_time_after",
                "wireValue": "first_incident_time_after"
              },
              "docs": "If provided, will only return issues whose first incident time was after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "first_incident_time_after_example": "first_incident_time_after"
                }
              }
            },
            {
              "name": {
                "name": "first_incident_time_before",
                "wireValue": "first_incident_time_before"
              },
              "docs": "If provided, will only return issues whose first incident time was before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "first_incident_time_before_example": "first_incident_time_before"
                }
              }
            },
            {
              "name": {
                "name": "include_muted",
                "wireValue": "include_muted"
              },
              "docs": "If True, will include muted issues",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_muted_example": "include_muted"
                }
              }
            },
            {
              "name": {
                "name": "integration_name",
                "wireValue": "integration_name"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "integration_name_example": "integration_name"
                }
              }
            },
            {
              "name": {
                "name": "last_incident_time_after",
                "wireValue": "last_incident_time_after"
              },
              "docs": "If provided, will only return issues whose last incident time was after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "last_incident_time_after_example": "last_incident_time_after"
                }
              }
            },
            {
              "name": {
                "name": "last_incident_time_before",
                "wireValue": "last_incident_time_before"
              },
              "docs": "If provided, will only return issues whose last incident time was before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "last_incident_time_before_example": "last_incident_time_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "start_date",
                "wireValue": "start_date"
              },
              "docs": "If included, will only include issues whose most recent action occurred after this time",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "start_date_example": "start_date"
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Status of the issue. Options: ('ONGOING', 'RESOLVED')\n\n* `ONGOING` - ONGOING\n* `RESOLVED` - RESOLVED",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "IssuesGetParametersStatus",
                    "typeId": "IssuesGetParametersStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "ONGOING"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/issues",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_issues.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedIssueList",
                  "typeId": "PaginatedIssueList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "issuesListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "status": "ONGOING",
                          "error_description": "string",
                          "end_user": {},
                          "first_incident_time": "2022-12-05T16:19:15.161Z",
                          "last_incident_time": "2022-12-05T16:19:15.161Z",
                          "is_muted": true,
                          "error_details": [
                            "Missing employee permissions.",
                            "Missing time off permissions."
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Gets issues.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_issuesListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/issues"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "status": "ONGOING",
                          "error_description": "string",
                          "end_user": {},
                          "first_incident_time": "2022-12-05T16:19:15.161Z",
                          "last_incident_time": "2022-12-05T16:19:15.161Z",
                          "is_muted": true,
                          "error_details": [
                            "Missing employee permissions.",
                            "Missing time off permissions."
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedIssueList",
                      "typeId": "PaginatedIssueList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "issuesListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                              "status": "ONGOING",
                              "error_description": "string",
                              "end_user": {},
                              "first_incident_time": "2022-12-05T16:19:15.161Z",
                              "last_incident_time": "2022-12-05T16:19:15.161Z",
                              "is_muted": true,
                              "error_details": [
                                "Missing employee permissions.",
                                "Missing time off permissions."
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/issues/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/issues/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_issues.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Issue",
                  "typeId": "Issue",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "issuesRetrieveExample": {
                      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "status": "ONGOING",
                      "error_description": "string",
                      "end_user": {},
                      "first_incident_time": "2022-12-05T16:19:15.161Z",
                      "last_incident_time": "2022-12-05T16:19:15.161Z",
                      "is_muted": true,
                      "error_details": [
                        "Missing employee permissions.",
                        "Missing time off permissions."
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get a specific issue.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_issuesRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/issues/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                      "status": "ONGOING",
                      "error_description": "string",
                      "end_user": {},
                      "first_incident_time": "2022-12-05T16:19:15.161Z",
                      "last_incident_time": "2022-12-05T16:19:15.161Z",
                      "is_muted": true,
                      "error_details": [
                        "Missing employee permissions.",
                        "Missing time off permissions."
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Issue",
                      "typeId": "Issue",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "issuesRetrieveExample": {
                          "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
                          "status": "ONGOING",
                          "error_description": "string",
                          "end_user": {},
                          "first_incident_time": "2022-12-05T16:19:15.161Z",
                          "last_incident_time": "2022-12-05T16:19:15.161Z",
                          "is_muted": true,
                          "error_details": [
                            "Missing employee permissions.",
                            "Missing time off permissions."
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_linkToken": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "link-token"
          ],
          "packagePath": [],
          "file": "link-token"
        }
      },
      "displayName": "link-token",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/link-token",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/link-token",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_linkToken.create",
          "name": "create",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "EndUserDetailsRequest",
              "typeId": "EndUserDetailsRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "linkTokenCreateExample": {
                  "end_user_email_address": "string",
                  "end_user_organization_name": "string",
                  "end_user_origin_id": "string",
                  "categories": [
                    "hris"
                  ]
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EndUserDetailsRequest",
                  "typeId": "EndUserDetailsRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "linkTokenCreateExample": {
                      "end_user_email_address": "string",
                      "end_user_organization_name": "string",
                      "end_user_origin_id": "string",
                      "categories": [
                        "hris"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "EndUserDetailsRequest",
                  "typeId": "EndUserDetailsRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "linkTokenCreateExample": {
                      "end_user_email_address": "string",
                      "end_user_organization_name": "string",
                      "end_user_origin_id": "string",
                      "categories": [
                        "hris"
                      ]
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "link-token_create_Request",
                "properties": [
                  {
                    "name": {
                      "name": "end_user_email_address",
                      "wireValue": "end_user_email_address"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1,
                            "maxLength": 100
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "Your end user's email address. This is purely for identification purposes - setting this value will not cause any emails to be sent.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaEndUserEmailAddress_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "end_user_organization_name",
                      "wireValue": "end_user_organization_name"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1,
                            "maxLength": 100
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "Your end user's organization.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaEndUserOrganizationName_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "end_user_origin_id",
                      "wireValue": "end_user_origin_id"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1,
                            "maxLength": 100
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "docs": "This unique identifier typically represents the ID for your end user in your product's database. This value must be distinct from other Linked Accounts' unique identifiers.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaEndUserOriginId_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "categories",
                      "wireValue": "categories"
                    },
                    "valueType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "CategoriesEnum",
                          "typeId": "CategoriesEnum",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "The integration categories to show in Merge Link.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaCategories_example_autogenerated": [
                          "hris"
                        ]
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "integration",
                      "wireValue": "integration"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "primitive": {
                                "v1": "STRING",
                                "v2": {
                                  "validation": {
                                    "minLength": 1
                                  },
                                  "type": "string"
                                }
                              },
                              "type": "primitive"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "The slug of a specific pre-selected integration for this linking flow token. For examples of slugs, see https://www.merge.dev/docs/basics/integration-metadata/.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaIntegration_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "link_expiry_mins",
                      "wireValue": "link_expiry_mins"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "primitive": {
                            "v1": "INTEGER",
                            "v2": {
                              "default": 30,
                              "validation": {
                                "max": 10080,
                                "min": 30
                              },
                              "type": "integer"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "An integer number of minutes between [30, 720 or 10080 if for a Magic Link URL] for how long this token is valid. Defaults to 30.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaLinkExpiryMins_example_autogenerated": 30
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "should_create_magic_link_url",
                      "wireValue": "should_create_magic_link_url"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "primitive": {
                                "v1": "BOOLEAN",
                                "v2": {
                                  "default": false,
                                  "type": "boolean"
                                }
                              },
                              "type": "primitive"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "Whether to generate a Magic Link URL. Defaults to false. For more information on Magic Link, see https://merge.dev/blog/product/integrations,-fast.-say-hello-to-magic-link/.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaShouldCreateMagicLinkUrl_example_autogenerated": false
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "common_models",
                      "wireValue": "common_models"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "container": {
                                "list": {
                                  "fernFilepath": {
                                    "allParts": [],
                                    "packagePath": []
                                  },
                                  "name": "CommonModelScopesBodyRequest",
                                  "typeId": "CommonModelScopesBodyRequest",
                                  "inline": false,
                                  "type": "named"
                                },
                                "type": "list"
                              },
                              "type": "container"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "An array of objects to specify the models and fields that will be disabled for a given Linked Account. Each object uses model_id, enabled_actions, and disabled_fields to specify the model, method, and fields that are scoped for a given Linked Account.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "LinkTokenPostRequestBodyContentMultipartFormDataSchemaCommonModels_example_autogenerated": [
                          {
                            "model_id": "hris.Employee",
                            "enabled_actions": [
                              "READ",
                              "WRITE"
                            ],
                            "disabled_fields": [
                              "first_name"
                            ]
                          }
                        ]
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "linkTokenCreateExample": {
                      "end_user_email_address": "string",
                      "end_user_organization_name": "string",
                      "end_user_origin_id": "string",
                      "categories": [
                        "hris"
                      ]
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LinkToken",
                  "typeId": "LinkToken",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "linkTokenCreateExample": {
                      "link_token": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                      "integration_name": "Lever",
                      "magic_link_url": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a link token to be used when linking a new end user.",
          "v2Examples": {
            "autogeneratedExamples": {
              "linkTokenCreateExample_200": {
                "displayName": "linkTokenCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/link-token"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "end_user_email_address": "string",
                    "end_user_organization_name": "string",
                    "end_user_origin_id": "string",
                    "categories": [
                      "hris"
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "link_token": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                      "integration_name": "Lever",
                      "magic_link_url": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "LinkToken",
                      "typeId": "LinkToken",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "linkTokenCreateExample": {
                          "link_token": "necdP7FtdASl1fQwm62be2_dM4wBG8_GactqoUV0",
                          "integration_name": "Lever",
                          "magic_link_url": "https://link.merge.dev/asdfjkl12345jsndfgi2i83n"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_linkedAccounts": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "linked-accounts"
          ],
          "packagePath": [],
          "file": "linked-accounts"
        }
      },
      "displayName": "linked-accounts",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/linked-accounts",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "category",
                "wireValue": "category"
              },
              "docs": "Options: ('hris', 'ats', 'accounting', 'ticketing', 'crm', 'mktg', 'filestorage')\n\n* `hris` - hris\n* `ats` - ats\n* `accounting` - accounting\n* `ticketing` - ticketing\n* `crm` - crm\n* `mktg` - mktg\n* `filestorage` - filestorage",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "LinkedAccountsGetParametersCategory",
                    "typeId": "LinkedAccountsGetParametersCategory",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "category_example": "accounting"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "end_user_email_address",
                "wireValue": "end_user_email_address"
              },
              "docs": "If provided, will only return linked accounts associated with the given email address.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "end_user_email_address_example": "end_user_email_address"
                }
              }
            },
            {
              "name": {
                "name": "end_user_organization_name",
                "wireValue": "end_user_organization_name"
              },
              "docs": "If provided, will only return linked accounts associated with the given organization name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "end_user_organization_name_example": "end_user_organization_name"
                }
              }
            },
            {
              "name": {
                "name": "end_user_origin_id",
                "wireValue": "end_user_origin_id"
              },
              "docs": "If provided, will only return linked accounts associated with the given origin ID.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "end_user_origin_id_example": "end_user_origin_id"
                }
              }
            },
            {
              "name": {
                "name": "end_user_origin_ids",
                "wireValue": "end_user_origin_ids"
              },
              "docs": "Comma-separated list of EndUser origin IDs, making it possible to specify multiple EndUsers at once.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "end_user_origin_ids_example": "end_user_origin_ids"
                }
              }
            },
            {
              "name": {
                "name": "id",
                "wireValue": "id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "uuid"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            },
            {
              "name": {
                "name": "ids",
                "wireValue": "ids"
              },
              "docs": "Comma-separated list of LinkedAccount IDs, making it possible to specify multiple LinkedAccounts at once.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ids_example": "ids"
                }
              }
            },
            {
              "name": {
                "name": "include_duplicates",
                "wireValue": "include_duplicates"
              },
              "docs": "If `true`, will include complete production duplicates of the account specified by the `id` query parameter in the response. `id` must be for a complete production linked account.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_duplicates_example": true
                }
              }
            },
            {
              "name": {
                "name": "integration_name",
                "wireValue": "integration_name"
              },
              "docs": "If provided, will only return linked accounts associated with the given integration name.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "integration_name_example": "integration_name"
                }
              }
            },
            {
              "name": {
                "name": "is_test_account",
                "wireValue": "is_test_account"
              },
              "docs": "If included, will only include test linked accounts. If not included, will only include non-test linked accounts.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "is_test_account_example": "is_test_account"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "Filter by status. Options: `COMPLETE`, `INCOMPLETE`, `RELINK_NEEDED`",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "status"
                }
              }
            }
          ],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/linked-accounts",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_linkedAccounts.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedAccountDetailsAndActionsList",
                  "typeId": "PaginatedAccountDetailsAndActionsList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "linkedAccountsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                          "category": "hris",
                          "status": "COMPLETE",
                          "status_detail": "string",
                          "end_user_origin_id": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                          "end_user_organization_name": "Foo Bar, LLC",
                          "end_user_email_address": "hradmin@foobar.dev",
                          "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                          "is_duplicate": true,
                          "integration": {
                            "name": "string",
                            "categories": [
                              "hris"
                            ],
                            "image": "string",
                            "square_image": "string",
                            "color": "string",
                            "slug": "string",
                            "passthrough_available": true,
                            "available_model_operations": [
                              {
                                "model_name": "Candidate",
                                "available_operations": [
                                  "FETCH",
                                  "CREATE"
                                ],
                                "required_post_parameters": [
                                  "remote_user_id"
                                ],
                                "supported_fields": [
                                  "first_name",
                                  "last_name",
                                  "company",
                                  "title"
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "List linked accounts for your organization.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_linkedAccountsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/linked-accounts"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                  },
                  "headers": {}
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                          "category": "hris",
                          "status": "COMPLETE",
                          "status_detail": "string",
                          "end_user_origin_id": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                          "end_user_organization_name": "Foo Bar, LLC",
                          "end_user_email_address": "hradmin@foobar.dev",
                          "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                          "is_duplicate": true,
                          "integration": {
                            "name": "string",
                            "categories": [
                              "hris"
                            ],
                            "image": "string",
                            "square_image": "string",
                            "color": "string",
                            "slug": "string",
                            "passthrough_available": true,
                            "available_model_operations": [
                              {
                                "model_name": "Candidate",
                                "available_operations": [
                                  "FETCH",
                                  "CREATE"
                                ],
                                "required_post_parameters": [
                                  "remote_user_id"
                                ],
                                "supported_fields": [
                                  "first_name",
                                  "last_name",
                                  "company",
                                  "title"
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedAccountDetailsAndActionsList",
                      "typeId": "PaginatedAccountDetailsAndActionsList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "linkedAccountsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "e59b1821-f85c-4e28-a6b3-1804156f3563",
                              "category": "hris",
                              "status": "COMPLETE",
                              "status_detail": "string",
                              "end_user_origin_id": "3ac95cde-6c7f-4eef-afec-be710b42308d",
                              "end_user_organization_name": "Foo Bar, LLC",
                              "end_user_email_address": "hradmin@foobar.dev",
                              "webhook_listener_url": "https://api.merge.dev/api/integrations/webhook-listener/7fc3mee0UW8ecV4",
                              "is_duplicate": true,
                              "integration": {
                                "name": "string",
                                "categories": [
                                  "hris"
                                ],
                                "image": "string",
                                "square_image": "string",
                                "color": "string",
                                "slug": "string",
                                "passthrough_available": true,
                                "available_model_operations": [
                                  {
                                    "model_name": "Candidate",
                                    "available_operations": [
                                      "FETCH",
                                      "CREATE"
                                    ],
                                    "required_post_parameters": [
                                      "remote_user_id"
                                    ],
                                    "supported_fields": [
                                      "first_name",
                                      "last_name",
                                      "company",
                                      "title"
                                    ]
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_locations": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "locations"
          ],
          "packagePath": [],
          "file": "locations"
        }
      },
      "displayName": "locations",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/locations",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "LocationsGetParametersRemoteFields",
                    "typeId": "LocationsGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesLocationType": "location_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "LocationsGetParametersShowEnumOrigins",
                    "typeId": "LocationsGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesLocationType": "location_type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/locations",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_locations.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedLocationList",
                  "typeId": "PaginatedLocationList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "locationsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                          "remote_id": "93018402",
                          "name": "NYC Office",
                          "phone_number": "+1111111111",
                          "street_1": "2920 Broadway",
                          "street_2": "2nd Floor",
                          "city": "New York ",
                          "state": "NY",
                          "zip_code": "10027",
                          "country": "AF",
                          "location_type": "HOME",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/locations",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `Location` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_locationsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/locations"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "remote_fields": "location_type",
                    "show_enum_origins": "location_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                          "remote_id": "93018402",
                          "name": "NYC Office",
                          "phone_number": "+1111111111",
                          "street_1": "2920 Broadway",
                          "street_2": "2nd Floor",
                          "city": "New York ",
                          "state": "NY",
                          "zip_code": "10027",
                          "country": "AF",
                          "location_type": "HOME",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/locations",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedLocationList",
                      "typeId": "PaginatedLocationList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "locationsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                              "remote_id": "93018402",
                              "name": "NYC Office",
                              "phone_number": "+1111111111",
                              "street_1": "2920 Broadway",
                              "street_2": "2nd Floor",
                              "city": "New York ",
                              "state": "NY",
                              "zip_code": "10027",
                              "country": "AF",
                              "location_type": "HOME",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/locations",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/locations/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "LocationsIdGetParametersRemoteFields",
                    "typeId": "LocationsIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesLocationType": "location_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "LocationsIdGetParametersShowEnumOrigins",
                    "typeId": "LocationsIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesLocationType": "location_type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/locations/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_locations.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Location",
                  "typeId": "Location",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "locationsRetrieveExample": {
                      "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                      "remote_id": "93018402",
                      "name": "NYC Office",
                      "phone_number": "+1111111111",
                      "street_1": "2920 Broadway",
                      "street_2": "2nd Floor",
                      "city": "New York ",
                      "state": "NY",
                      "zip_code": "10027",
                      "country": "AF",
                      "location_type": "HOME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/locations",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `Location` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_locationsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/locations/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "remote_fields": "location_type",
                    "show_enum_origins": "location_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                      "remote_id": "93018402",
                      "name": "NYC Office",
                      "phone_number": "+1111111111",
                      "street_1": "2920 Broadway",
                      "street_2": "2nd Floor",
                      "city": "New York ",
                      "state": "NY",
                      "zip_code": "10027",
                      "country": "AF",
                      "location_type": "HOME",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/locations",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Location",
                      "typeId": "Location",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "locationsRetrieveExample": {
                          "id": "f5e6a151-f44e-449a-afb1-8fd781905958",
                          "remote_id": "93018402",
                          "name": "NYC Office",
                          "phone_number": "+1111111111",
                          "street_1": "2920 Broadway",
                          "street_2": "2nd Floor",
                          "city": "New York ",
                          "state": "NY",
                          "zip_code": "10027",
                          "country": "AF",
                          "location_type": "HOME",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/locations",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_passthrough": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "passthrough"
          ],
          "packagePath": [],
          "file": "passthrough"
        }
      },
      "displayName": "passthrough",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/passthrough",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/passthrough",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_passthrough.create",
          "name": "create",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "DataPassthroughRequest",
              "typeId": "DataPassthroughRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "passthroughCreateExample": {
                  "method": "GET",
                  "path": "/scooters"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "DataPassthroughRequest",
                  "typeId": "DataPassthroughRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "passthroughCreateExample": {
                      "method": "GET",
                      "path": "/scooters"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "DataPassthroughRequest",
                  "typeId": "DataPassthroughRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "passthroughCreateExample": {
                      "method": "GET",
                      "path": "/scooters"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "passthrough_create_Request",
                "properties": [
                  {
                    "name": {
                      "name": "method",
                      "wireValue": "method"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "MethodEnum",
                      "typeId": "MethodEnum",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "path",
                      "wireValue": "path"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "PassthroughPostRequestBodyContentMultipartFormDataSchemaPath_example_0": "/scooters"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "base_url_override",
                      "wireValue": "base_url_override"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "primitive": {
                                "v1": "STRING",
                                "v2": {
                                  "validation": {
                                    "minLength": 1
                                  },
                                  "type": "string"
                                }
                              },
                              "type": "primitive"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "PassthroughPostRequestBodyContentMultipartFormDataSchemaBaseUrlOverride_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "data",
                      "wireValue": "data"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "primitive": {
                                "v1": "STRING",
                                "v2": {
                                  "validation": {
                                    "minLength": 1
                                  },
                                  "type": "string"
                                }
                              },
                              "type": "primitive"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "PassthroughPostRequestBodyContentMultipartFormDataSchemaData_example_0": "{\"company\": \"Lime\", \"model\": \"Gen 2.5\"}"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "multipart_form_data",
                      "wireValue": "multipart_form_data"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "container": {
                                "list": {
                                  "fernFilepath": {
                                    "allParts": [],
                                    "packagePath": []
                                  },
                                  "name": "MultipartFormFieldRequest",
                                  "typeId": "MultipartFormFieldRequest",
                                  "inline": false,
                                  "type": "named"
                                },
                                "type": "list"
                              },
                              "type": "container"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "Pass an array of `MultipartFormField` objects in here instead of using the `data` param if `request_format` is set to `MULTIPART`.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "PassthroughPostRequestBodyContentMultipartFormDataSchemaMultipartFormData_example_autogenerated": [
                          {
                            "name": "resume",
                            "data": "SW50ZWdyYXRlIGZhc3QKSW50ZWdyYXRlIG9uY2U="
                          }
                        ]
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "headers",
                      "wireValue": "headers"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "container": {
                                "keyType": {
                                  "primitive": {
                                    "v1": "STRING",
                                    "v2": {
                                      "type": "string"
                                    }
                                  },
                                  "type": "primitive"
                                },
                                "valueType": {
                                  "type": "unknown"
                                },
                                "type": "map"
                              },
                              "type": "container"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "The headers to use for the request (Merge will handle the account's authorization headers). `Content-Type` header is required for passthrough. Choose content type corresponding to expected format of receiving server.",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "PassthroughPostRequestBodyContentMultipartFormDataSchemaHeaders_example_0": {
                          "EXTRA-HEADER": "value"
                        }
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "request_format",
                      "wireValue": "request_format"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "container": {
                            "nullable": {
                              "fernFilepath": {
                                "allParts": [],
                                "packagePath": []
                              },
                              "name": "RequestFormatEnum",
                              "typeId": "RequestFormatEnum",
                              "inline": false,
                              "type": "named"
                            },
                            "type": "nullable"
                          },
                          "type": "container"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "normalize_response",
                      "wireValue": "normalize_response"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "primitive": {
                            "v1": "BOOLEAN",
                            "v2": {
                              "type": "boolean"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "docs": "Optional. If true, the response will always be an object of the form `{\"type\": T, \"value\": ...}` where `T` will be one of `string, boolean, number, null, array, object`.",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "PassthroughPostRequestBodyContentMultipartFormDataSchemaNormalizeResponse_example_autogenerated": true
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "passthroughCreateExample": {
                      "method": "GET",
                      "path": "/scooters"
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RemoteResponse",
                  "typeId": "RemoteResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "passthroughCreateExample": {
                      "method": "GET",
                      "path": "/scooters",
                      "status": 200,
                      "response": null,
                      "response_headers": {},
                      "response_type": "JSON",
                      "headers": {}
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Pull data from an endpoint not currently supported by Merge.",
          "v2Examples": {
            "autogeneratedExamples": {
              "passthroughCreateExample_200": {
                "displayName": "passthroughCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/passthrough"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  },
                  "requestBody": {
                    "method": "GET",
                    "path": "/scooters"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "method": "GET",
                      "path": "/scooters",
                      "status": 200,
                      "response": null,
                      "response_headers": {},
                      "response_type": "JSON",
                      "headers": {}
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RemoteResponse",
                      "typeId": "RemoteResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "passthroughCreateExample": {
                          "method": "GET",
                          "path": "/scooters",
                          "status": 200,
                          "response": null,
                          "response_headers": {},
                          "response_type": "JSON",
                          "headers": {}
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_payGroups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "pay-groups"
          ],
          "packagePath": [],
          "file": "pay-groups"
        }
      },
      "displayName": "pay-groups",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/pay-groups",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pay-groups",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_payGroups.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedPayGroupList",
                  "typeId": "PaginatedPayGroupList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "payGroupsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "remote_id": "800293",
                          "pay_group_name": "contractor",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/pay-group",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `PayGroup` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_payGroupsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pay-groups"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "remote_id": "800293",
                          "pay_group_name": "contractor",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/pay-group",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedPayGroupList",
                      "typeId": "PaginatedPayGroupList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "payGroupsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                              "remote_id": "800293",
                              "pay_group_name": "contractor",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/pay-group",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/pay-groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/pay-groups/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_payGroups.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PayGroup",
                  "typeId": "PayGroup",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "payGroupsRetrieveExample": {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "800293",
                      "pay_group_name": "contractor",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/pay-group",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `PayGroup` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_payGroupsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/pay-groups/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                      "remote_id": "800293",
                      "pay_group_name": "contractor",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/pay-group",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PayGroup",
                      "typeId": "PayGroup",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "payGroupsRetrieveExample": {
                          "id": "fd1e0fb5-8f92-4ec9-9f32-179cf732867d",
                          "remote_id": "800293",
                          "pay_group_name": "contractor",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/pay-group",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_payrollRuns": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "payroll-runs"
          ],
          "packagePath": [],
          "file": "payroll-runs"
        }
      },
      "displayName": "payroll-runs",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/payroll-runs",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "ended_after",
                "wireValue": "ended_after"
              },
              "docs": "If provided, will only return payroll runs ended after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ended_after_example": "ended_after"
                }
              }
            },
            {
              "name": {
                "name": "ended_before",
                "wireValue": "ended_before"
              },
              "docs": "If provided, will only return payroll runs ended before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "ended_before_example": "ended_before"
                }
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PayrollRunsGetParametersRemoteFields",
                    "typeId": "PayrollRunsGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRunState,RunType": "run_state,run_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "run_type",
                "wireValue": "run_type"
              },
              "docs": "If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')\n\n* `REGULAR` - REGULAR\n* `OFF_CYCLE` - OFF_CYCLE\n* `CORRECTION` - CORRECTION\n* `TERMINATION` - TERMINATION\n* `SIGN_ON_BONUS` - SIGN_ON_BONUS",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PayrollRunsGetParametersRunType",
                    "typeId": "PayrollRunsGetParametersRunType",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "run_type_example": "CORRECTION"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PayrollRunsGetParametersShowEnumOrigins",
                    "typeId": "PayrollRunsGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRunState,RunType": "run_state,run_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "started_after",
                "wireValue": "started_after"
              },
              "docs": "If provided, will only return payroll runs started after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "started_after_example": "started_after"
                }
              }
            },
            {
              "name": {
                "name": "started_before",
                "wireValue": "started_before"
              },
              "docs": "If provided, will only return payroll runs started before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "started_before_example": "started_before"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/payroll-runs",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_payrollRuns.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedPayrollRunList",
                  "typeId": "PaginatedPayrollRunList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "payrollRunsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                          "remote_id": "19202938",
                          "run_state": "PAID",
                          "run_type": "REGULAR",
                          "start_date": "2020-11-08T00:00:00Z",
                          "end_date": "2020-11-15T00:00:00Z",
                          "check_date": "2020-11-15T00:00:00Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/payroll",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `PayrollRun` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_payrollRunsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/payroll-runs"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "remote_fields": "run_state,run_type",
                    "show_enum_origins": "run_state,run_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                          "remote_id": "19202938",
                          "run_state": "PAID",
                          "run_type": "REGULAR",
                          "start_date": "2020-11-08T00:00:00Z",
                          "end_date": "2020-11-15T00:00:00Z",
                          "check_date": "2020-11-15T00:00:00Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/payroll",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedPayrollRunList",
                      "typeId": "PaginatedPayrollRunList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "payrollRunsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                              "remote_id": "19202938",
                              "run_state": "PAID",
                              "run_type": "REGULAR",
                              "start_date": "2020-11-08T00:00:00Z",
                              "end_date": "2020-11-15T00:00:00Z",
                              "check_date": "2020-11-15T00:00:00Z",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/payroll",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/payroll-runs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PayrollRunsIdGetParametersRemoteFields",
                    "typeId": "PayrollRunsIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRunState,RunType": "run_state,run_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "PayrollRunsIdGetParametersShowEnumOrigins",
                    "typeId": "PayrollRunsIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRunState,RunType": "run_state,run_type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/payroll-runs/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_payrollRuns.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PayrollRun",
                  "typeId": "PayrollRun",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "payrollRunsRetrieveExample": {
                      "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                      "remote_id": "19202938",
                      "run_state": "PAID",
                      "run_type": "REGULAR",
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-15T00:00:00Z",
                      "check_date": "2020-11-15T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/payroll",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `PayrollRun` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_payrollRunsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/payroll-runs/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "remote_fields": "run_state,run_type",
                    "show_enum_origins": "run_state,run_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                      "remote_id": "19202938",
                      "run_state": "PAID",
                      "run_type": "REGULAR",
                      "start_date": "2020-11-08T00:00:00Z",
                      "end_date": "2020-11-15T00:00:00Z",
                      "check_date": "2020-11-15T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/payroll",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PayrollRun",
                      "typeId": "PayrollRun",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "payrollRunsRetrieveExample": {
                          "id": "37336947-b3d4-4a4c-a310-ab6ab510e079",
                          "remote_id": "19202938",
                          "run_state": "PAID",
                          "run_type": "REGULAR",
                          "start_date": "2020-11-08T00:00:00Z",
                          "end_date": "2020-11-15T00:00:00Z",
                          "check_date": "2020-11-15T00:00:00Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/payroll",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_regenerateKey": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "regenerate-key"
          ],
          "packagePath": [],
          "file": "regenerate-key"
        }
      },
      "displayName": "regenerate-key",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/regenerate-key",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/regenerate-key",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_regenerateKey.create",
          "name": "create",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "RemoteKeyForRegenerationRequest",
              "typeId": "RemoteKeyForRegenerationRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "regenerateKeyCreateExample": {
                  "name": "Remote Deployment Key 1"
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RemoteKeyForRegenerationRequest",
                  "typeId": "RemoteKeyForRegenerationRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "regenerateKeyCreateExample": {
                      "name": "Remote Deployment Key 1"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RemoteKeyForRegenerationRequest",
                  "typeId": "RemoteKeyForRegenerationRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "regenerateKeyCreateExample": {
                      "name": "Remote Deployment Key 1"
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "regenerate-key_create_Request",
                "properties": [
                  {
                    "name": {
                      "name": "name",
                      "wireValue": "name"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "RegenerateKeyPostRequestBodyContentMultipartFormDataSchemaName_example_0": "Remote Deployment Key 1"
                      },
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "regenerateKeyCreateExample": {
                      "name": "Remote Deployment Key 1"
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "RemoteKey",
                  "typeId": "RemoteKey",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "regenerateKeyCreateExample": {
                      "name": "Remote Deployment Key 1",
                      "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Exchange remote keys.",
          "v2Examples": {
            "autogeneratedExamples": {
              "regenerateKeyCreateExample_200": {
                "displayName": "regenerateKeyCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/regenerate-key"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": {
                    "name": "Remote Deployment Key 1"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "name": "Remote Deployment Key 1",
                      "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RemoteKey",
                      "typeId": "RemoteKey",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "regenerateKeyCreateExample": {
                          "name": "Remote Deployment Key 1",
                          "key": "hXY57W0g0WkdRHjCaPvwijK63fwfN-o_Wh7f30SLTq_uPCOLo-WFcA"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_selectiveSync": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "selective-sync"
          ],
          "packagePath": [],
          "file": "selective-sync"
        }
      },
      "displayName": "selective-sync",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/selective-sync/configurations",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/selective-sync/configurations",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_selectiveSync.configurationsList",
          "name": "configurationsList",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "LinkedAccountSelectiveSyncConfiguration",
                      "typeId": "LinkedAccountSelectiveSyncConfiguration",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Employees that started on or after January 1st, 2022": [
                      {
                        "linked_account_conditions": [
                          {
                            "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                            "common_model": "hris.Employee",
                            "native_name": "Started At",
                            "operator": "GREATER_THAN_OR_EQUAL",
                            "value": null,
                            "field_name": "start_date"
                          }
                        ]
                      }
                    ]
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get a linked account's selective syncs.",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "base_Employees that started on or after January 1st, 2022_200": {
                "displayName": "Employees that started on or after January 1st, 2022",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/selective-sync/configurations"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "linked_account_conditions": [
                          {
                            "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                            "common_model": "hris.Employee",
                            "native_name": "Started At",
                            "operator": "GREATER_THAN_OR_EQUAL",
                            "value": null,
                            "field_name": "start_date"
                          }
                        ]
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "LinkedAccountSelectiveSyncConfiguration",
                          "typeId": "LinkedAccountSelectiveSyncConfiguration",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "Employees that started on or after January 1st, 2022": [
                          {
                            "linked_account_conditions": [
                              {
                                "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                "common_model": "hris.Employee",
                                "native_name": "Started At",
                                "operator": "GREATER_THAN_OR_EQUAL",
                                "value": null,
                                "field_name": "start_date"
                              }
                            ]
                          }
                        ]
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "PUT",
          "baseUrl": "Production",
          "path": {
            "head": "/selective-sync/configurations",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/selective-sync/configurations",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_selectiveSync.configurationsUpdate",
          "name": "configurationsUpdate",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "LinkedAccountSelectiveSyncConfigurationListRequest",
              "typeId": "LinkedAccountSelectiveSyncConfigurationListRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {
                "Employees that started on or after January 1st, 2022": {
                  "sync_configurations": [
                    {
                      "linked_account_conditions": [
                        {
                          "condition_schema_id": "string",
                          "operator": "string",
                          "value": null
                        }
                      ]
                    }
                  ],
                  "linked_account_conditons": [
                    {
                      "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                      "operator": "GREATER_THAN_OR_EQUAL",
                      "value": "2022-01-01T00:00:00Z"
                    }
                  ]
                }
              },
              "autogeneratedExamples": {}
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "LinkedAccountSelectiveSyncConfigurationListRequest",
                  "typeId": "LinkedAccountSelectiveSyncConfigurationListRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Employees that started on or after January 1st, 2022": {
                      "sync_configurations": [
                        {
                          "linked_account_conditions": [
                            {
                              "condition_schema_id": "string",
                              "operator": "string",
                              "value": null
                            }
                          ]
                        }
                      ],
                      "linked_account_conditons": [
                        {
                          "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                          "operator": "GREATER_THAN_OR_EQUAL",
                          "value": "2022-01-01T00:00:00Z"
                        }
                      ]
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "reference"
              }
            ]
          },
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "LinkedAccountSelectiveSyncConfiguration",
                      "typeId": "LinkedAccountSelectiveSyncConfiguration",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Employees that started on or after January 1st, 2022": [
                      {
                        "linked_account_conditions": [
                          {
                            "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                            "common_model": "hris.Employee",
                            "native_name": "Started At",
                            "operator": "GREATER_THAN_OR_EQUAL",
                            "value": null,
                            "field_name": "start_date"
                          }
                        ]
                      }
                    ]
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Replace a linked account's selective syncs.",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "Employees that started on or after January 1st, 2022_200": {
                "displayName": "Employees that started on or after January 1st, 2022",
                "request": {
                  "endpoint": {
                    "method": "PUT",
                    "path": "/selective-sync/configurations"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  },
                  "requestBody": {
                    "sync_configurations": [
                      {
                        "linked_account_conditions": [
                          {
                            "condition_schema_id": "string",
                            "operator": "string",
                            "value": null
                          }
                        ]
                      }
                    ],
                    "linked_account_conditons": [
                      {
                        "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                        "operator": "GREATER_THAN_OR_EQUAL",
                        "value": "2022-01-01T00:00:00Z"
                      }
                    ]
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "linked_account_conditions": [
                          {
                            "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                            "common_model": "hris.Employee",
                            "native_name": "Started At",
                            "operator": "GREATER_THAN_OR_EQUAL",
                            "value": null,
                            "field_name": "start_date"
                          }
                        ]
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "LinkedAccountSelectiveSyncConfiguration",
                          "typeId": "LinkedAccountSelectiveSyncConfiguration",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "Employees that started on or after January 1st, 2022": [
                          {
                            "linked_account_conditions": [
                              {
                                "condition_schema_id": "123e4567-e89b-12d3-a456-426655440000",
                                "common_model": "hris.Employee",
                                "native_name": "Started At",
                                "operator": "GREATER_THAN_OR_EQUAL",
                                "value": null,
                                "field_name": "start_date"
                              }
                            ]
                          }
                        ]
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/selective-sync/meta",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "common_model",
                "wireValue": "common_model"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "common_model_example": "common_model"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/selective-sync/meta",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_selectiveSync.metaList",
          "name": "metaList",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedConditionSchemaList",
                  "typeId": "PaginatedConditionSchemaList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {
                    "Employees that started on or after January 1st, 2022": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "123e4567-e89b-12d3-a456-426655440000",
                          "common_model": "hris.Employee",
                          "native_name": "Started At",
                          "field_name": "start_date",
                          "is_unique": true,
                          "condition_type": "DATE_TIME",
                          "operators": [
                            {
                              "operator": "GREATER_THAN_OR_EQUAL",
                              "is_unique": true
                            },
                            {
                              "operator": "LESS_THAN_OR_EQUAL",
                              "is_unique": true
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "autogeneratedExamples": {}
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get metadata for the conditions available to a linked account.",
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "base_Employees that started on or after January 1st, 2022_200": {
                "displayName": "Employees that started on or after January 1st, 2022",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/selective-sync/meta"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "123e4567-e89b-12d3-a456-426655440000",
                          "common_model": "hris.Employee",
                          "native_name": "Started At",
                          "field_name": "start_date",
                          "is_unique": true,
                          "condition_type": "DATE_TIME",
                          "operators": [
                            {
                              "operator": "GREATER_THAN_OR_EQUAL",
                              "is_unique": true
                            },
                            {
                              "operator": "LESS_THAN_OR_EQUAL",
                              "is_unique": true
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            }
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedConditionSchemaList",
                      "typeId": "PaginatedConditionSchemaList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {
                        "Employees that started on or after January 1st, 2022": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "123e4567-e89b-12d3-a456-426655440000",
                              "common_model": "hris.Employee",
                              "native_name": "Started At",
                              "field_name": "start_date",
                              "is_unique": true,
                              "condition_type": "DATE_TIME",
                              "operators": [
                                {
                                  "operator": "GREATER_THAN_OR_EQUAL",
                                  "is_unique": true
                                },
                                {
                                  "operator": "LESS_THAN_OR_EQUAL",
                                  "is_unique": true
                                }
                              ]
                            }
                          ]
                        }
                      },
                      "autogeneratedExamples": {}
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_syncStatus": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "sync-status"
          ],
          "packagePath": [],
          "file": "sync-status"
        }
      },
      "displayName": "sync-status",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/sync-status",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/sync-status",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_syncStatus.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedSyncStatusList",
                  "typeId": "PaginatedSyncStatusList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "syncStatusListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "model_name": "Employee",
                          "model_id": "hris.Employee",
                          "last_sync_start": "2021-03-30T19:44:18.695973Z",
                          "next_sync_start": "2021-03-30T20:44:18.662942Z",
                          "status": "SYNCING",
                          "is_initial_sync": true,
                          "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Get syncing status. Possible values: `DISABLED`, `DONE`, `FAILED`, `PARTIALLY_SYNCED`, `PAUSED`, `SYNCING`",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_syncStatusListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/sync-status"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "model_name": "Employee",
                          "model_id": "hris.Employee",
                          "last_sync_start": "2021-03-30T19:44:18.695973Z",
                          "next_sync_start": "2021-03-30T20:44:18.662942Z",
                          "status": "SYNCING",
                          "is_initial_sync": true,
                          "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedSyncStatusList",
                      "typeId": "PaginatedSyncStatusList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "syncStatusListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "model_name": "Employee",
                              "model_id": "hris.Employee",
                              "last_sync_start": "2021-03-30T19:44:18.695973Z",
                              "next_sync_start": "2021-03-30T20:44:18.662942Z",
                              "status": "SYNCING",
                              "is_initial_sync": true,
                              "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_forceResync": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "force-resync"
          ],
          "packagePath": [],
          "file": "force-resync"
        }
      },
      "displayName": "force-resync",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/sync-status/resync",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/sync-status/resync",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_forceResync.sync_status_resync_create",
          "name": "sync_status_resync_create",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "SyncStatus",
                      "typeId": "SyncStatus",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "forceResyncSyncStatusResyncCreateExample": [
                      {
                        "model_name": "Employee",
                        "model_id": "hris.Employee",
                        "last_sync_start": "2021-03-30T19:44:18.695973Z",
                        "next_sync_start": "2021-03-30T20:44:18.662942Z",
                        "status": "SYNCING",
                        "is_initial_sync": true,
                        "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Force re-sync of all models. This is available for all organizations via the dashboard. Force re-sync is also available programmatically via API for monthly, quarterly, and highest sync frequency customers on the Core, Professional, or Enterprise plans. Doing so will consume a sync credit for the relevant linked account.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_forceResyncSyncStatusResyncCreateExample_200": {
                "displayName": "syncStatusResyncCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/sync-status/resync"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "model_name": "Employee",
                        "model_id": "hris.Employee",
                        "last_sync_start": "2021-03-30T19:44:18.695973Z",
                        "next_sync_start": "2021-03-30T20:44:18.662942Z",
                        "status": "SYNCING",
                        "is_initial_sync": true,
                        "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "SyncStatus",
                          "typeId": "SyncStatus",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "forceResyncSyncStatusResyncCreateExample": [
                          {
                            "model_name": "Employee",
                            "model_id": "hris.Employee",
                            "last_sync_start": "2021-03-30T19:44:18.695973Z",
                            "next_sync_start": "2021-03-30T20:44:18.662942Z",
                            "status": "SYNCING",
                            "is_initial_sync": true,
                            "selective_sync_configurations_usage": "IN_NEXT_SYNC"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_teams": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "teams"
          ],
          "packagePath": [],
          "file": "teams"
        }
      },
      "displayName": "teams",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/teams",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TeamsGetParametersExpand",
                    "typeId": "TeamsGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandParentTeam": "parent_team"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "parent_team_id",
                "wireValue": "parent_team_id"
              },
              "docs": "If provided, will only return teams with this parent team.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ParentTeamId": "parent_team_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/teams",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_teams.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedTeamList",
                  "typeId": "PaginatedTeamList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "teamsListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                          "remote_id": "19202938",
                          "name": "Engineering",
                          "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/teams",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `Team` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_teamsListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/teams"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "expand": "parent_team",
                    "parent_team_id": "parent_team_id"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                          "remote_id": "19202938",
                          "name": "Engineering",
                          "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/teams",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedTeamList",
                      "typeId": "PaginatedTeamList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "teamsListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                              "remote_id": "19202938",
                              "name": "Engineering",
                              "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/teams",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/teams/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TeamsIdGetParametersExpand",
                    "typeId": "TeamsIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandParentTeam": "parent_team"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/teams/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_teams.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "Team",
                  "typeId": "Team",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "teamsRetrieveExample": {
                      "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                      "remote_id": "19202938",
                      "name": "Engineering",
                      "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/teams",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `Team` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_teamsRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/teams/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "parent_team"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                      "remote_id": "19202938",
                      "name": "Engineering",
                      "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/teams",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Team",
                      "typeId": "Team",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "teamsRetrieveExample": {
                          "id": "13a72919-9fae-4f54-81ca-ddfd8712a1ba",
                          "remote_id": "19202938",
                          "name": "Engineering",
                          "parent_team": "1b998423-db0a-4037-a4cf-f79c60cb67b3",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/teams",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_timeOff": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "time-off"
          ],
          "packagePath": [],
          "file": "time-off"
        }
      },
      "displayName": "time-off",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/time-off",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "approver_id",
                "wireValue": "approver_id"
              },
              "docs": "If provided, will only return time off for this approver.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ApproverId": "approver_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "employee_id",
                "wireValue": "employee_id"
              },
              "docs": "If provided, will only return time off for this employee.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "EmployeeId": "employee_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffGetParametersExpand",
                    "typeId": "TimeOffGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee,Approver": "employee,approver"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffGetParametersRemoteFields",
                    "typeId": "TimeOffGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRequestType,Status,Units": "request_type,status,units"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "request_type",
                "wireValue": "request_type"
              },
              "docs": "If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffGetParametersRequestType",
                    "typeId": "TimeOffGetParametersRequestType",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "request_type_example": "BEREAVEMENT"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffGetParametersShowEnumOrigins",
                    "typeId": "TimeOffGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRequestType,Status,Units": "request_type,status,units"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "docs": "If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')\n\n* `REQUESTED` - REQUESTED\n* `APPROVED` - APPROVED\n* `DECLINED` - DECLINED\n* `CANCELLED` - CANCELLED\n* `DELETED` - DELETED",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffGetParametersStatus",
                    "typeId": "TimeOffGetParametersStatus",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "status_example": "APPROVED"
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/time-off",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_timeOff.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedTimeOffList",
                  "typeId": "PaginatedTimeOffList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                          "status": "REQUESTED",
                          "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                          "units": "HOURS",
                          "amount": 3,
                          "request_type": "VACATION",
                          "start_time": "2020-11-10T00:00:00Z",
                          "end_time": "2020-11-17T00:00:00Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/leave",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `TimeOff` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_timeOffListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/time-off"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "approver_id": "approver_id",
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "employee_id": "employee_id",
                    "expand": "employee,approver",
                    "remote_fields": "request_type,status,units",
                    "show_enum_origins": "request_type,status,units"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                          "status": "REQUESTED",
                          "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                          "units": "HOURS",
                          "amount": 3,
                          "request_type": "VACATION",
                          "start_time": "2020-11-10T00:00:00Z",
                          "end_time": "2020-11-17T00:00:00Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/leave",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedTimeOffList",
                      "typeId": "PaginatedTimeOffList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "timeOffListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                              "remote_id": "19202938",
                              "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                              "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                              "status": "REQUESTED",
                              "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                              "units": "HOURS",
                              "amount": 3,
                              "request_type": "VACATION",
                              "start_time": "2020-11-10T00:00:00Z",
                              "end_time": "2020-11-17T00:00:00Z",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/leave",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/time-off",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "is_debug_mode",
                "wireValue": "is_debug_mode"
              },
              "docs": "Whether to include debug fields (such as log file links) in the response.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "is_debug_mode_example": true
                }
              }
            },
            {
              "name": {
                "name": "run_async",
                "wireValue": "run_async"
              },
              "docs": "Whether or not third-party updates should be run asynchronously.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "run_async_example": true
                }
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/time-off",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_timeOff.create",
          "name": "create",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "TimeOffEndpointRequest",
              "typeId": "TimeOffEndpointRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "timeOffCreateExample": {
                  "model": {}
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TimeOffEndpointRequest",
                  "typeId": "TimeOffEndpointRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffCreateExample": {
                      "model": {}
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TimeOffEndpointRequest",
                  "typeId": "TimeOffEndpointRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffCreateExample": {
                      "model": {}
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "time-off_create_Request",
                "properties": [
                  {
                    "name": {
                      "name": "model",
                      "wireValue": "model"
                    },
                    "valueType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOffRequest",
                      "typeId": "TimeOffRequest",
                      "inline": false,
                      "type": "named"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {}
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffCreateExample": {
                      "model": {}
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TimeOffResponse",
                  "typeId": "TimeOffResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffCreateExample": {
                      "model": {
                        "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                        "remote_id": "19202938",
                        "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        "status": "REQUESTED",
                        "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                        "units": "HOURS",
                        "amount": 3,
                        "request_type": "VACATION",
                        "start_time": "2020-11-10T00:00:00Z",
                        "end_time": "2020-11-17T00:00:00Z",
                        "remote_was_deleted": true,
                        "modified_at": "2021-10-16T00:00:00Z",
                        "field_mappings": {},
                        "remote_data": [
                          {
                            "path": "/leave",
                            "data": [
                              "Varies by platform"
                            ]
                          }
                        ]
                      },
                      "warnings": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Unrecognized Field",
                          "detail": "An unrecognized field, age, was passed in with request data.",
                          "problem_type": "UNRECOGNIZED_FIELD"
                        }
                      ],
                      "errors": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Missing Required Field",
                          "detail": "custom_fields is a required field on model.",
                          "problem_type": "MISSING_REQUIRED_FIELD"
                        }
                      ],
                      "logs": [
                        {
                          "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                          "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_summary": {
                            "url": "https://harvest.greenhouse.io/v1/candidates/",
                            "method": "POST",
                            "status_code": 200
                          }
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a `TimeOff` object with the given values.",
          "v2Examples": {
            "autogeneratedExamples": {
              "timeOffCreateExample_201": {
                "displayName": "timeOffCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/time-off"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  },
                  "requestBody": {
                    "model": {}
                  }
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "value": {
                      "model": {
                        "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                        "remote_id": "19202938",
                        "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                        "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                        "status": "REQUESTED",
                        "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                        "units": "HOURS",
                        "amount": 3,
                        "request_type": "VACATION",
                        "start_time": "2020-11-10T00:00:00Z",
                        "end_time": "2020-11-17T00:00:00Z",
                        "remote_was_deleted": true,
                        "modified_at": "2021-10-16T00:00:00Z",
                        "field_mappings": {},
                        "remote_data": [
                          {
                            "path": "/leave",
                            "data": [
                              "Varies by platform"
                            ]
                          }
                        ]
                      },
                      "warnings": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Unrecognized Field",
                          "detail": "An unrecognized field, age, was passed in with request data.",
                          "problem_type": "UNRECOGNIZED_FIELD"
                        }
                      ],
                      "errors": [
                        {
                          "source": {
                            "pointer": "string"
                          },
                          "title": "Missing Required Field",
                          "detail": "custom_fields is a required field on model.",
                          "problem_type": "MISSING_REQUIRED_FIELD"
                        }
                      ],
                      "logs": [
                        {
                          "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                          "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                          "log_summary": {
                            "url": "https://harvest.greenhouse.io/v1/candidates/",
                            "method": "POST",
                            "status_code": 200
                          }
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOffResponse",
                      "typeId": "TimeOffResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "timeOffCreateExample": {
                          "model": {
                            "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                            "remote_id": "19202938",
                            "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                            "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                            "status": "REQUESTED",
                            "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                            "units": "HOURS",
                            "amount": 3,
                            "request_type": "VACATION",
                            "start_time": "2020-11-10T00:00:00Z",
                            "end_time": "2020-11-17T00:00:00Z",
                            "remote_was_deleted": true,
                            "modified_at": "2021-10-16T00:00:00Z",
                            "field_mappings": {},
                            "remote_data": [
                              {
                                "path": "/leave",
                                "data": [
                                  "Varies by platform"
                                ]
                              }
                            ]
                          },
                          "warnings": [
                            {
                              "source": {
                                "pointer": "string"
                              },
                              "title": "Unrecognized Field",
                              "detail": "An unrecognized field, age, was passed in with request data.",
                              "problem_type": "UNRECOGNIZED_FIELD"
                            }
                          ],
                          "errors": [
                            {
                              "source": {
                                "pointer": "string"
                              },
                              "title": "Missing Required Field",
                              "detail": "custom_fields is a required field on model.",
                              "problem_type": "MISSING_REQUIRED_FIELD"
                            }
                          ],
                          "logs": [
                            {
                              "log_id": "99433219-8017-4acd-bb3c-ceb23d663832",
                              "dashboard_view": "https://app.merge.dev/logs/99433219-8017-4acd-bb3c-ceb23d663832",
                              "log_summary": {
                                "url": "https://harvest.greenhouse.io/v1/candidates/",
                                "method": "POST",
                                "status_code": 200
                              }
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/time-off/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffIdGetParametersExpand",
                    "typeId": "TimeOffIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee,Approver": "employee,approver"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffIdGetParametersRemoteFields",
                    "typeId": "TimeOffIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRequestType,Status,Units": "request_type,status,units"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffIdGetParametersShowEnumOrigins",
                    "typeId": "TimeOffIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesRequestType,Status,Units": "request_type,status,units"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/time-off/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_timeOff.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TimeOff",
                  "typeId": "TimeOff",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffRetrieveExample": {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "status": "REQUESTED",
                      "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                      "units": "HOURS",
                      "amount": 3,
                      "request_type": "VACATION",
                      "start_time": "2020-11-10T00:00:00Z",
                      "end_time": "2020-11-17T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/leave",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `TimeOff` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_timeOffRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/time-off/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "employee,approver",
                    "remote_fields": "request_type,status,units",
                    "show_enum_origins": "request_type,status,units"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                      "status": "REQUESTED",
                      "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                      "units": "HOURS",
                      "amount": 3,
                      "request_type": "VACATION",
                      "start_time": "2020-11-10T00:00:00Z",
                      "end_time": "2020-11-17T00:00:00Z",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/leave",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOff",
                      "typeId": "TimeOff",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "timeOffRetrieveExample": {
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "approver": "9efbc633-3387-4306-aa55-e2c635e6bb4f",
                          "status": "REQUESTED",
                          "employee_note": "Moving into the new apartment Kendall Roy gave me!",
                          "units": "HOURS",
                          "amount": 3,
                          "request_type": "VACATION",
                          "start_time": "2020-11-10T00:00:00Z",
                          "end_time": "2020-11-17T00:00:00Z",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/leave",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/time-off/meta/post",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/time-off/meta/post",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_timeOff.metaPostRetrieve",
          "name": "metaPostRetrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "MetaResponse",
                  "typeId": "MetaResponse",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffMetaPostRetrieveExample": {
                      "request_schema": {},
                      "remote_field_classes": {},
                      "status": {
                        "linked_account_status": "string",
                        "can_make_request": true
                      },
                      "has_conditional_params": true,
                      "has_required_linked_account_params": true
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns metadata for `TimeOff` POSTs.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_timeOffMetaPostRetrieveExample_200": {
                "displayName": "metaPostRetrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/time-off/meta/post"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "request_schema": {},
                      "remote_field_classes": {},
                      "status": {
                        "linked_account_status": "string",
                        "can_make_request": true
                      },
                      "has_conditional_params": true,
                      "has_required_linked_account_params": true
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "MetaResponse",
                      "typeId": "MetaResponse",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "timeOffMetaPostRetrieveExample": {
                          "request_schema": {},
                          "remote_field_classes": {},
                          "status": {
                            "linked_account_status": "string",
                            "can_make_request": true
                          },
                          "has_conditional_params": true,
                          "has_required_linked_account_params": true
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_timeOffBalances": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "time-off-balances"
          ],
          "packagePath": [],
          "file": "time-off-balances"
        }
      },
      "displayName": "time-off-balances",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/time-off-balances",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "created_after",
                "wireValue": "created_after"
              },
              "docs": "If provided, will only return objects created after this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_after_example": "created_after"
                }
              }
            },
            {
              "name": {
                "name": "created_before",
                "wireValue": "created_before"
              },
              "docs": "If provided, will only return objects created before this datetime.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "created_before_example": "created_before"
                }
              }
            },
            {
              "name": {
                "name": "cursor",
                "wireValue": "cursor"
              },
              "docs": "The pagination cursor value.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "CursorExample": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "employee_id",
                "wireValue": "employee_id"
              },
              "docs": "If provided, will only return time off balances for this employee.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "EmployeeId": "employee_id"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffBalancesGetParametersExpand",
                    "typeId": "TimeOffBalancesGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee": "employee"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_deleted_data",
                "wireValue": "include_deleted_data"
              },
              "docs": "Whether to include data that was marked as deleted by third party webhooks.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_deleted_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "modified_after",
                "wireValue": "modified_after"
              },
              "docs": "If provided, only objects synced by Merge after this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_after_example": "modified_after"
                }
              }
            },
            {
              "name": {
                "name": "modified_before",
                "wireValue": "modified_before"
              },
              "docs": "If provided, only objects synced by Merge before this date time will be returned.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date-time"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "modified_before_example": "modified_before"
                }
              }
            },
            {
              "name": {
                "name": "page_size",
                "wireValue": "page_size"
              },
              "docs": "Number of results to return per page.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "validation": {},
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "page_size_example": 1
                }
              }
            },
            {
              "name": {
                "name": "policy_type",
                "wireValue": "policy_type"
              },
              "docs": "If provided, will only return TimeOffBalance with this policy type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')\n\n* `VACATION` - VACATION\n* `SICK` - SICK\n* `PERSONAL` - PERSONAL\n* `JURY_DUTY` - JURY_DUTY\n* `VOLUNTEER` - VOLUNTEER\n* `BEREAVEMENT` - BEREAVEMENT",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffBalancesGetParametersPolicyType",
                    "typeId": "TimeOffBalancesGetParametersPolicyType",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "policy_type_example": "BEREAVEMENT"
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffBalancesGetParametersRemoteFields",
                    "typeId": "TimeOffBalancesGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesPolicyType": "policy_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "remote_id",
                "wireValue": "remote_id"
              },
              "docs": "The API provider's ID for the given object.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {},
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "remote_id_example": "remote_id"
                }
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffBalancesGetParametersShowEnumOrigins",
                    "typeId": "TimeOffBalancesGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesPolicyType": "policy_type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/time-off-balances",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_timeOffBalances.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "PaginatedTimeOffBalanceList",
                  "typeId": "PaginatedTimeOffBalanceList",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffBalancesListExample": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "balance": 60,
                          "used": 45,
                          "policy_type": "VACATION",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/leave",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `TimeOffBalance` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_timeOffBalancesListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/time-off-balances"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {
                    "cursor": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                    "employee_id": "employee_id",
                    "expand": "employee",
                    "remote_fields": "policy_type",
                    "show_enum_origins": "policy_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                      "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                      "results": [
                        {
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "balance": 60,
                          "used": 45,
                          "policy_type": "VACATION",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/leave",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PaginatedTimeOffBalanceList",
                      "typeId": "PaginatedTimeOffBalanceList",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "timeOffBalancesListExample": {
                          "next": "cD0yMDIxLTAxLTA2KzAzJTNBMjQlM0E1My40MzQzMjYlMkIwMCUzQTAw",
                          "previous": "cj1sZXdwd2VycWVtY29zZnNkc2NzUWxNMEUxTXk0ME16UXpNallsTWtJ",
                          "results": [
                            {
                              "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                              "remote_id": "19202938",
                              "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                              "balance": 60,
                              "used": 45,
                              "policy_type": "VACATION",
                              "remote_was_deleted": true,
                              "modified_at": "2021-10-16T00:00:00Z",
                              "field_mappings": {},
                              "remote_data": [
                                {
                                  "path": "/leave",
                                  "data": [
                                    "Varies by platform"
                                  ]
                                }
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/time-off-balances/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "expand",
                "wireValue": "expand"
              },
              "docs": "Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffBalancesIdGetParametersExpand",
                    "typeId": "TimeOffBalancesIdGetParametersExpand",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "ExpandEmployee": "employee"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "include_remote_data",
                "wireValue": "include_remote_data"
              },
              "docs": "Whether to include the original data Merge fetched from the third-party to produce these models.",
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "include_remote_data_example": true
                }
              }
            },
            {
              "name": {
                "name": "remote_fields",
                "wireValue": "remote_fields"
              },
              "docs": "Deprecated. Use show_enum_origins.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffBalancesIdGetParametersRemoteFields",
                    "typeId": "TimeOffBalancesIdGetParametersRemoteFields",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesPolicyType": "policy_type"
                },
                "autogeneratedExamples": {}
              }
            },
            {
              "name": {
                "name": "show_enum_origins",
                "wireValue": "show_enum_origins"
              },
              "docs": "Which fields should be returned in non-normalized form.",
              "valueType": {
                "container": {
                  "optional": {
                    "fernFilepath": {
                      "allParts": [],
                      "packagePath": []
                    },
                    "name": "TimeOffBalancesIdGetParametersShowEnumOrigins",
                    "typeId": "TimeOffBalancesIdGetParametersShowEnumOrigins",
                    "inline": false,
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {
                  "OriginalEnumValuesPolicyType": "policy_type"
                },
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/time-off-balances/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "allPathParameters": [
            {
              "name": "id",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "id_example": "id"
                }
              }
            }
          ],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_timeOffBalances.retrieve",
          "name": "retrieve",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "TimeOffBalance",
                  "typeId": "TimeOffBalance",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "timeOffBalancesRetrieveExample": {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "balance": 60,
                      "used": 45,
                      "policy_type": "VACATION",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/leave",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a `TimeOffBalance` object with the given `id`.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_timeOffBalancesRetrieveExample_200": {
                "displayName": "retrieveExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/time-off-balances/id"
                  },
                  "environment": "Production",
                  "pathParameters": {
                    "id": "id"
                  },
                  "queryParameters": {
                    "expand": "employee",
                    "remote_fields": "policy_type",
                    "show_enum_origins": "policy_type"
                  },
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": {
                      "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                      "remote_id": "19202938",
                      "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                      "balance": 60,
                      "used": 45,
                      "policy_type": "VACATION",
                      "remote_was_deleted": true,
                      "modified_at": "2021-10-16T00:00:00Z",
                      "field_mappings": {},
                      "remote_data": [
                        {
                          "path": "/leave",
                          "data": [
                            "Varies by platform"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "TimeOffBalance",
                      "typeId": "TimeOffBalance",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "timeOffBalancesRetrieveExample": {
                          "id": "91b2b905-e866-40c8-8be2-efe53827a0aa",
                          "remote_id": "19202938",
                          "employee": "d2f972d0-2526-434b-9409-4c3b468e08f0",
                          "balance": 60,
                          "used": 45,
                          "policy_type": "VACATION",
                          "remote_was_deleted": true,
                          "modified_at": "2021-10-16T00:00:00Z",
                          "field_mappings": {},
                          "remote_data": [
                            {
                              "path": "/leave",
                              "data": [
                                "Varies by platform"
                              ]
                            }
                          ]
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    },
    "service_webhookReceivers": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "webhook-receivers"
          ],
          "packagePath": [],
          "file": "webhook-receivers"
        }
      },
      "displayName": "webhook-receivers",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "method": "GET",
          "baseUrl": "Production",
          "path": {
            "head": "/webhook-receivers",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/webhook-receivers",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_webhookReceivers.list",
          "name": "list",
          "v2RequestBodies": {},
          "response": {
            "statusCode": 200,
            "body": {
              "value": {
                "responseBodyType": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "WebhookReceiver",
                      "typeId": "WebhookReceiver",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhookReceiversListExample": [
                      {
                        "event": "string",
                        "is_active": true,
                        "key": "string"
                      }
                    ]
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Returns a list of `WebhookReceiver` objects.",
          "v2Examples": {
            "autogeneratedExamples": {
              "base_webhookReceiversListExample_200": {
                "displayName": "listExample",
                "request": {
                  "endpoint": {
                    "method": "GET",
                    "path": "/webhook-receivers"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  }
                },
                "response": {
                  "statusCode": 200,
                  "body": {
                    "value": [
                      {
                        "event": "string",
                        "is_active": true,
                        "key": "string"
                      }
                    ],
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 200,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "WebhookReceiver",
                          "typeId": "WebhookReceiver",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "webhookReceiversListExample": [
                          {
                            "event": "string",
                            "is_active": true,
                            "key": "string"
                          }
                        ]
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        },
        {
          "method": "POST",
          "baseUrl": "Production",
          "path": {
            "head": "/webhook-receivers",
            "parts": []
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "X-Account-Token",
                "wireValue": "X-Account-Token"
              },
              "docs": "Token identifying the end user.",
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {},
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {
                  "X-Account-Token_example": "X-Account-Token"
                }
              }
            }
          ],
          "errors": [],
          "auth": true,
          "security": [
            {
              "tokenAuth": []
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "idempotent": false,
          "fullPath": {
            "head": "/webhook-receivers",
            "parts": []
          },
          "allPathParameters": [],
          "source": {
            "type": "openapi"
          },
          "audiences": [],
          "id": "endpoint_webhookReceivers.create",
          "name": "create",
          "requestBody": {
            "contentType": "application/json",
            "requestBodyType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "WebhookReceiverRequest",
              "typeId": "WebhookReceiverRequest",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "webhookReceiversCreateExample": {
                  "event": "string",
                  "is_active": true
                }
              }
            },
            "type": "reference"
          },
          "v2RequestBodies": {
            "requestBodies": [
              {
                "contentType": "application/json",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WebhookReceiverRequest",
                  "typeId": "WebhookReceiverRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhookReceiversCreateExample": {
                      "event": "string",
                      "is_active": true
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "application/x-www-form-urlencoded",
                "requestBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WebhookReceiverRequest",
                  "typeId": "WebhookReceiverRequest",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhookReceiversCreateExample": {
                      "event": "string",
                      "is_active": true
                    }
                  }
                },
                "type": "reference"
              },
              {
                "contentType": "multipart/form-data",
                "name": "webhook-receivers_create_Request",
                "properties": [
                  {
                    "name": {
                      "name": "event",
                      "wireValue": "event"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "minLength": 1
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "WebhookReceiversPostRequestBodyContentMultipartFormDataSchemaEvent_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "is_active",
                      "wireValue": "is_active"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "WebhookReceiversPostRequestBodyContentMultipartFormDataSchemaIsActive_example_autogenerated": true
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  },
                  {
                    "name": {
                      "name": "key",
                      "wireValue": "key"
                    },
                    "valueType": {
                      "container": {
                        "optional": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "validation": {
                                "minLength": 1
                              },
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "optional"
                      },
                      "type": "container"
                    },
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "WebhookReceiversPostRequestBodyContentMultipartFormDataSchemaKey_example_autogenerated": "string"
                      }
                    },
                    "contentType": "multipart/form-data",
                    "type": "bodyProperty"
                  }
                ],
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhookReceiversCreateExample": {
                      "event": "string",
                      "is_active": true
                    }
                  }
                },
                "type": "fileUpload"
              }
            ]
          },
          "response": {
            "statusCode": 201,
            "body": {
              "value": {
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "WebhookReceiver",
                  "typeId": "WebhookReceiver",
                  "inline": false,
                  "type": "named"
                },
                "docs": "",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "webhookReceiversCreateExample": {
                      "event": "string",
                      "is_active": true,
                      "key": "string"
                    }
                  }
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "docs": "Creates a `WebhookReceiver` object with the given values.",
          "v2Examples": {
            "autogeneratedExamples": {
              "webhookReceiversCreateExample_201": {
                "displayName": "webhookReceiversCreateExample",
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/webhook-receivers"
                  },
                  "environment": "Production",
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {
                    "X-Account-Token": "X-Account-Token"
                  },
                  "requestBody": {
                    "event": "string",
                    "is_active": true
                  }
                },
                "response": {
                  "statusCode": 201,
                  "body": {
                    "value": {
                      "event": "string",
                      "is_active": true,
                      "key": "string"
                    },
                    "type": "json"
                  }
                }
              }
            },
            "userSpecifiedExamples": {}
          },
          "v2Responses": {
            "responses": [
              {
                "statusCode": 201,
                "body": {
                  "value": {
                    "responseBodyType": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "WebhookReceiver",
                      "typeId": "WebhookReceiver",
                      "inline": false,
                      "type": "named"
                    },
                    "docs": "",
                    "v2Examples": {
                      "userSpecifiedExamples": {},
                      "autogeneratedExamples": {
                        "webhookReceiversCreateExample": {
                          "event": "string",
                          "is_active": true,
                          "key": "string"
                        }
                      }
                    },
                    "type": "response"
                  },
                  "type": "json"
                }
              }
            ]
          }
        }
      ]
    }
  },
  "errors": {},
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "Production",
    "environments": {
      "environments": [
        {
          "id": "Production",
          "name": "Production",
          "url": "https://api.merge.dev/api/hris/v1",
          "docs": "Production"
        },
        {
          "id": "Sandbox",
          "name": "Sandbox",
          "url": "https://api-sandbox.merge.dev/api/hris/v1",
          "docs": "Sandbox"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "AccountDetails",
      "AccountDetailsAndActions",
      "AccountDetailsAndActionsIntegration",
      "AccountDetailsAndActionsStatusEnum",
      "AccountIntegration",
      "AccountToken",
      "AccountTypeEnum",
      "AvailableActions",
      "BankInfo",
      "Benefit",
      "CategoriesEnum",
      "CategoryEnum",
      "CommonModelScopesBodyRequest",
      "Company",
      "ConditionSchema",
      "ConditionTypeEnum",
      "CountryEnum",
      "DataPassthroughRequest",
      "DebugModeLog",
      "DebugModelLogSummary",
      "Deduction",
      "Earning",
      "EarningTypeEnum",
      "Employee",
      "EmployeeEndpointRequest",
      "EmployeePayrollRun",
      "EmployeeRequest",
      "EmployeeResponse",
      "Employment",
      "EmploymentStatusEnum",
      "EmploymentTypeEnum",
      "EnabledActionsEnum",
      "EncodingEnum",
      "EndUserDetailsRequest",
      "ErrorValidationProblem",
      "EthnicityEnum",
      "FlsaStatusEnum",
      "GenderEnum",
      "GenerateRemoteKeyRequest",
      "Group",
      "GroupTypeEnum",
      "IgnoreCommonModelRequest",
      "Issue",
      "IssueStatusEnum",
      "LinkToken",
      "LinkedAccountCondition",
      "LinkedAccountConditionRequest",
      "LinkedAccountSelectiveSyncConfiguration",
      "LinkedAccountSelectiveSyncConfigurationListRequest",
      "LinkedAccountSelectiveSyncConfigurationRequest",
      "LinkedAccountStatus",
      "Location",
      "LocationTypeEnum",
      "MaritalStatusEnum",
      "MetaResponse",
      "MethodEnum",
      "ModelOperation",
      "MultipartFormFieldRequest",
      "OperatorSchema",
      "PaginatedAccountDetailsAndActionsList",
      "PaginatedBankInfoList",
      "PaginatedBenefitList",
      "PaginatedCompanyList",
      "PaginatedConditionSchemaList",
      "PaginatedEmployeeList",
      "PaginatedEmployeePayrollRunList",
      "PaginatedEmploymentList",
      "PaginatedGroupList",
      "PaginatedIssueList",
      "PaginatedLocationList",
      "PaginatedPayGroupList",
      "PaginatedPayrollRunList",
      "PaginatedSyncStatusList",
      "PaginatedTeamList",
      "PaginatedTimeOffBalanceList",
      "PaginatedTimeOffList",
      "PayCurrencyEnum",
      "PayFrequencyEnum",
      "PayGroup",
      "PayPeriodEnum",
      "PayrollRun",
      "PolicyTypeEnum",
      "ReasonEnum",
      "RemoteData",
      "RemoteKey",
      "RemoteKeyForRegenerationRequest",
      "RemoteResponse",
      "RequestFormatEnum",
      "RequestTypeEnum",
      "ResponseTypeEnum",
      "RunStateEnum",
      "RunTypeEnum",
      "SelectiveSyncConfigurationsUsageEnum",
      "SyncStatus",
      "SyncStatusStatusEnum",
      "Tax",
      "Team",
      "TimeOff",
      "TimeOffBalance",
      "TimeOffEndpointRequest",
      "TimeOffRequest",
      "TimeOffResponse",
      "TimeOffStatusEnum",
      "UnitsEnum",
      "ValidationProblemSource",
      "WarningValidationProblem",
      "WebhookReceiver",
      "WebhookReceiverRequest"
    ],
    "errors": [],
    "subpackages": [
      "subpackage_accountDetails",
      "subpackage_accountToken",
      "subpackage_availableActions",
      "subpackage_bankInfo",
      "subpackage_benefits",
      "subpackage_companies",
      "subpackage_deleteAccount",
      "subpackage_employeePayrollRuns",
      "subpackage_employees",
      "subpackage_employments",
      "subpackage_generateKey",
      "subpackage_groups",
      "subpackage_issues",
      "subpackage_linkToken",
      "subpackage_linkedAccounts",
      "subpackage_locations",
      "subpackage_passthrough",
      "subpackage_payGroups",
      "subpackage_payrollRuns",
      "subpackage_regenerateKey",
      "subpackage_selectiveSync",
      "subpackage_syncStatus",
      "subpackage_forceResync",
      "subpackage_teams",
      "subpackage_timeOff",
      "subpackage_timeOffBalances",
      "subpackage_webhookReceivers"
    ],
    "hasEndpointsInTree": false
  },
  "subpackages": {
    "subpackage_accountDetails": {
      "name": "accountDetails",
      "fernFilepath": {
        "allParts": [
          "accountDetails"
        ],
        "packagePath": [],
        "file": "accountDetails"
      },
      "service": "service_accountDetails",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_accountToken": {
      "name": "accountToken",
      "fernFilepath": {
        "allParts": [
          "accountToken"
        ],
        "packagePath": [],
        "file": "accountToken"
      },
      "service": "service_accountToken",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_availableActions": {
      "name": "availableActions",
      "fernFilepath": {
        "allParts": [
          "availableActions"
        ],
        "packagePath": [],
        "file": "availableActions"
      },
      "service": "service_availableActions",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_bankInfo": {
      "name": "bankInfo",
      "fernFilepath": {
        "allParts": [
          "bankInfo"
        ],
        "packagePath": [],
        "file": "bankInfo"
      },
      "service": "service_bankInfo",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_benefits": {
      "name": "benefits",
      "fernFilepath": {
        "allParts": [
          "benefits"
        ],
        "packagePath": [],
        "file": "benefits"
      },
      "service": "service_benefits",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_companies": {
      "name": "companies",
      "fernFilepath": {
        "allParts": [
          "companies"
        ],
        "packagePath": [],
        "file": "companies"
      },
      "service": "service_companies",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_deleteAccount": {
      "name": "deleteAccount",
      "fernFilepath": {
        "allParts": [
          "deleteAccount"
        ],
        "packagePath": [],
        "file": "deleteAccount"
      },
      "service": "service_deleteAccount",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_employeePayrollRuns": {
      "name": "employeePayrollRuns",
      "fernFilepath": {
        "allParts": [
          "employeePayrollRuns"
        ],
        "packagePath": [],
        "file": "employeePayrollRuns"
      },
      "service": "service_employeePayrollRuns",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_employees": {
      "name": "employees",
      "fernFilepath": {
        "allParts": [
          "employees"
        ],
        "packagePath": [],
        "file": "employees"
      },
      "service": "service_employees",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_employments": {
      "name": "employments",
      "fernFilepath": {
        "allParts": [
          "employments"
        ],
        "packagePath": [],
        "file": "employments"
      },
      "service": "service_employments",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_generateKey": {
      "name": "generateKey",
      "fernFilepath": {
        "allParts": [
          "generateKey"
        ],
        "packagePath": [],
        "file": "generateKey"
      },
      "service": "service_generateKey",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_groups": {
      "name": "groups",
      "fernFilepath": {
        "allParts": [
          "groups"
        ],
        "packagePath": [],
        "file": "groups"
      },
      "service": "service_groups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_issues": {
      "name": "issues",
      "fernFilepath": {
        "allParts": [
          "issues"
        ],
        "packagePath": [],
        "file": "issues"
      },
      "service": "service_issues",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_linkToken": {
      "name": "linkToken",
      "fernFilepath": {
        "allParts": [
          "linkToken"
        ],
        "packagePath": [],
        "file": "linkToken"
      },
      "service": "service_linkToken",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_linkedAccounts": {
      "name": "linkedAccounts",
      "fernFilepath": {
        "allParts": [
          "linkedAccounts"
        ],
        "packagePath": [],
        "file": "linkedAccounts"
      },
      "service": "service_linkedAccounts",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_locations": {
      "name": "locations",
      "fernFilepath": {
        "allParts": [
          "locations"
        ],
        "packagePath": [],
        "file": "locations"
      },
      "service": "service_locations",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_passthrough": {
      "name": "passthrough",
      "fernFilepath": {
        "allParts": [
          "passthrough"
        ],
        "packagePath": [],
        "file": "passthrough"
      },
      "service": "service_passthrough",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_payGroups": {
      "name": "payGroups",
      "fernFilepath": {
        "allParts": [
          "payGroups"
        ],
        "packagePath": [],
        "file": "payGroups"
      },
      "service": "service_payGroups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_payrollRuns": {
      "name": "payrollRuns",
      "fernFilepath": {
        "allParts": [
          "payrollRuns"
        ],
        "packagePath": [],
        "file": "payrollRuns"
      },
      "service": "service_payrollRuns",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_regenerateKey": {
      "name": "regenerateKey",
      "fernFilepath": {
        "allParts": [
          "regenerateKey"
        ],
        "packagePath": [],
        "file": "regenerateKey"
      },
      "service": "service_regenerateKey",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_selectiveSync": {
      "name": "selectiveSync",
      "fernFilepath": {
        "allParts": [
          "selectiveSync"
        ],
        "packagePath": [],
        "file": "selectiveSync"
      },
      "service": "service_selectiveSync",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_syncStatus": {
      "name": "syncStatus",
      "fernFilepath": {
        "allParts": [
          "syncStatus"
        ],
        "packagePath": [],
        "file": "syncStatus"
      },
      "service": "service_syncStatus",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_forceResync": {
      "name": "forceResync",
      "fernFilepath": {
        "allParts": [
          "forceResync"
        ],
        "packagePath": [],
        "file": "forceResync"
      },
      "service": "service_forceResync",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_teams": {
      "name": "teams",
      "fernFilepath": {
        "allParts": [
          "teams"
        ],
        "packagePath": [],
        "file": "teams"
      },
      "service": "service_teams",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_timeOff": {
      "name": "timeOff",
      "fernFilepath": {
        "allParts": [
          "timeOff"
        ],
        "packagePath": [],
        "file": "timeOff"
      },
      "service": "service_timeOff",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_timeOffBalances": {
      "name": "timeOffBalances",
      "fernFilepath": {
        "allParts": [
          "timeOffBalances"
        ],
        "packagePath": [],
        "file": "timeOffBalances"
      },
      "service": "service_timeOffBalances",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    },
    "subpackage_webhookReceivers": {
      "name": "webhookReceivers",
      "fernFilepath": {
        "allParts": [
          "webhookReceivers"
        ],
        "packagePath": [],
        "file": "webhookReceivers"
      },
      "service": "service_webhookReceivers",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": false
    }
  },
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": "",
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  }
}