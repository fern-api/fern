{
  "auth": {
    "requirement": "ALL",
    "schemes": []
  },
  "selfHosted": false,
  "types": {
    "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "paymasterAndData",
              "wireValue": "paymasterAndData"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The 0xâ€‘prefixed hex string for the user to put into the UO's paymasterAndData field. Contains gas manager address, sigTimeRange, and secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06ResponsePaymasterAndData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "callGasLimit",
              "wireValue": "callGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to allocate for the main execution call.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06ResponseCallGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "verificationGasLimit",
              "wireValue": "verificationGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to allocate for the verification step.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06ResponseVerificationGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "preVerificationGas",
              "wireValue": "preVerificationGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to compensate the bundler for pre-verification execution and calldata.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06ResponsePreVerificationGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxFeePerGas",
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum fee per gas to pay for the execution of this operation (similar to EIP-1559 max_fee_per_gas).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06ResponseMaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxPriorityFeePerGas",
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Maximum priority fee per gas (similar to EIP-1559 max_priority_fee_per_gas).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06ResponseMaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "paymaster",
              "wireValue": "paymaster"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The paymaster address used in the operation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponsePaymaster_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "paymasterData",
              "wireValue": "paymasterData"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The data for the paymaster in the operation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponsePaymasterData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "callGasLimit",
              "wireValue": "callGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to allocate for the main execution call.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponseCallGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "verificationGasLimit",
              "wireValue": "verificationGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to allocate for the verification step.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponseVerificationGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "preVerificationGas",
              "wireValue": "preVerificationGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to compensate the bundler for pre-verification execution and calldata.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponsePreVerificationGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxFeePerGas",
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum fee per gas to pay for the execution of this operation (similar to EIP-1559 max_fee_per_gas).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponseMaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxPriorityFeePerGas",
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Maximum priority fee per gas (similar to EIP-1559 max_priority_fee_per_gas).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponseMaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "paymasterVerificationGasLimit",
              "wireValue": "paymasterVerificationGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The gas limit for paymaster verification.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponsePaymasterVerificationGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "paymasterPostOpGasLimit",
              "wireValue": "paymasterPostOpGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The gas limit for paymaster post-operation.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07ResponsePaymasterPostOpGasLimit_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataResult": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataResult"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "entrypointV06Response",
              "wireValue": "entrypointV06Response"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "entrypointV07Response",
              "wireValue": "entrypointV07Response"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataResult_example_autogenerated": {
            "entrypointV06Response": {},
            "entrypointV07Response": {}
          }
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetState": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetState",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetState"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Fake key-value mapping to override all slots in the account storage before executing the call.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetState_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetStateDiff": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetStateDiff",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetStateDiff"
      },
      "shape": {
        "properties": [],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Fake key-value mapping to override individual slots in the account storage before executing the call.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetStateDiff_example_autogenerated": {}
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Param_stateOverrideSet": {
      "name": {
        "typeId": "alchemy_requestGasAndPaymasterAndData_Param_stateOverrideSet",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestGasAndPaymasterAndData_Param_stateOverrideSet"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "balance",
              "wireValue": "balance"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Fake balance to set for the account before executing the call (<= 32 bytes)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetBalance_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "nonce",
              "wireValue": "nonce"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Fake nonce to set for the account before executing the call (<= 8 bytes).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetNonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "code",
              "wireValue": "code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Fake EVM bytecode to inject into the account before executing the call.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "state",
              "wireValue": "state"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetState",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetState",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Fake key-value mapping to override all slots in the account storage before executing the call.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetState_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "stateDiff",
              "wireValue": "stateDiff"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetStateDiff",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetStateDiff",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Fake key-value mapping to override individual slots in the account storage before executing the call.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamStateOverrideSetStateDiff_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestGasAndPaymasterAndData_Param_stateOverrideSet_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1",
        "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "multiplier",
              "wireValue": "multiplier"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGasOneOf1Multiplier_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Multiplier value.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Hex string."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1",
              "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas1",
              "inline": false,
              "type": "named"
            },
            "docs": "Multiplier value."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1",
        "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "multiplier",
              "wireValue": "multiplier"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGasOneOf1Multiplier_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Multiplier value.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Hex string."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1",
              "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas1",
              "inline": false,
              "type": "named"
            },
            "docs": "Multiplier value."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1",
        "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "multiplier",
              "wireValue": "multiplier"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimitOneOf1Multiplier_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Multiplier value.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Hex string."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1",
              "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit1",
              "inline": false,
              "type": "named"
            },
            "docs": "Multiplier value."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1",
        "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "multiplier",
              "wireValue": "multiplier"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimitOneOf1Multiplier_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Multiplier value.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Hex string."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1",
              "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit1",
              "inline": false,
              "type": "named"
            },
            "docs": "Multiplier value."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1",
        "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "multiplier",
              "wireValue": "multiplier"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {},
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGasOneOf1Multiplier_example_autogenerated": 1.1
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "Multiplier value.",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Hex string."
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1",
              "displayName": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas1",
              "inline": false,
              "type": "named"
            },
            "docs": "Multiplier value."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas_example_autogenerated": {}
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Param_overrides": {
      "name": {
        "typeId": "alchemy_requestGasAndPaymasterAndData_Param_overrides",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestGasAndPaymasterAndData_Param_overrides"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "maxFeePerGas",
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxFeePerGas_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "maxPriorityFeePerGas",
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesMaxPriorityFeePerGas_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "callGasLimit",
              "wireValue": "callGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesCallGasLimit_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "verificationGasLimit",
              "wireValue": "verificationGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesVerificationGasLimit_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "preVerificationGas",
              "wireValue": "preVerificationGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas",
                  "inline": false,
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamOverridesPreVerificationGas_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestGasAndPaymasterAndData_Param_overrides_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamUserOperation0": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation0",
        "displayName": "User Operation v0.6"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "sender",
              "wireValue": "sender"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The account making the operation",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0Sender_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "nonce",
              "wireValue": "nonce"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Anti-replay parameter; used as salt for first-time account creation",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "initCode",
              "wireValue": "initCode"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The initCode of the account (needed if the account is not yet on-chain and needs creation)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0InitCode_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "callData",
              "wireValue": "callData"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Encoded data for the primary function call or operation",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0CallData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "callGasLimit",
              "wireValue": "callGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Gas allocated for the main execution call",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0CallGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "verificationGasLimit",
              "wireValue": "verificationGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Gas allocated for verification",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0VerificationGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "preVerificationGas",
              "wireValue": "preVerificationGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Gas for pre-verification execution and calldata",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0PreVerificationGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxFeePerGas",
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Maximum fee per gas (EIP-1559)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxPriorityFeePerGas",
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Max priority fee per gas (EIP-1559)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf0MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamUserOperation0_example_autogenerated": {}
        }
      }
    },
    "AlchemyRequestGasAndPaymasterAndDataParamUserOperation1": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation1",
        "displayName": "User Operation v0.7"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "sender",
              "wireValue": "sender"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Account initiating operation",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1Sender_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "nonce",
              "wireValue": "nonce"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Account nonce or creation salt",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "callData",
              "wireValue": "callData"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Data for operation call",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1CallData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "callGasLimit",
              "wireValue": "callGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Gas allocated for call",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1CallGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "verificationGasLimit",
              "wireValue": "verificationGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Gas allocated for verification",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1VerificationGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxFeePerGas",
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Max fee per gas (EIP-1559)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "maxPriorityFeePerGas",
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Priority fee per gas (EIP-1559)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "paymasterVerificationGasLimit",
              "wireValue": "paymasterVerificationGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Paymaster verification gas limit",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1PaymasterVerificationGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "factory",
              "wireValue": "factory"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The account factory address (needed if and only if the account is not yet on-chain and needs to be created)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1Factory_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "factoryData",
              "wireValue": "factoryData"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Data for the account factory (only if the account factory exists)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1FactoryData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "preVerificationGas",
              "wireValue": "preVerificationGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to pay for to compensate the bundler for pre-verification execution and calldata",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1PreVerificationGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": "paymasterPostOpGasLimit",
              "wireValue": "paymasterPostOpGasLimit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of gas to allocate for the paymaster post-op code (only if a paymaster exists)",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataParamUserOperationOneOf1PaymasterPostOpGasLimit_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataParamUserOperation1_example_autogenerated": {}
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Param_userOperation": {
      "name": {
        "typeId": "alchemy_requestGasAndPaymasterAndData_Param_userOperation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestGasAndPaymasterAndData_Param_userOperation"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation0",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation0",
              "displayName": "User Operation v0.6",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation1",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataParamUserOperation1",
              "displayName": "User Operation v0.7",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestGasAndPaymasterAndData_Param_userOperation_example_autogenerated": {}
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Param_policyId": {
      "name": {
        "typeId": "alchemy_requestGasAndPaymasterAndData_Param_policyId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestGasAndPaymasterAndData_Param_policyId"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestGasAndPaymasterAndData_Param_policyId_example_autogenerated": "string"
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Param_entryPoint": {
      "name": {
        "typeId": "alchemy_requestGasAndPaymasterAndData_Param_entryPoint",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestGasAndPaymasterAndData_Param_entryPoint"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0[xX][0-9a-fA-F]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0[xX][0-9a-fA-F]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestGasAndPaymasterAndData_Param_entryPoint_example_autogenerated": "string"
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Param_dummySignature": {
      "name": {
        "typeId": "alchemy_requestGasAndPaymasterAndData_Param_dummySignature",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestGasAndPaymasterAndData_Param_dummySignature"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestGasAndPaymasterAndData_Param_dummySignature_example_autogenerated": "string"
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Param_webhookData": {
      "name": {
        "typeId": "alchemy_requestGasAndPaymasterAndData_Param_webhookData",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestGasAndPaymasterAndData_Param_webhookData"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestGasAndPaymasterAndData_Param_webhookData_example_autogenerated": "string"
        }
      }
    },
    "alchemy_requestGasAndPaymasterAndData_Result": {
      "name": {
        "typeId": "AlchemyRequestGasAndPaymasterAndDataResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestGasAndPaymasterAndDataResult"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "entrypointV06Response",
              "wireValue": "entrypointV06Response"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV06Response_example_autogenerated": {}
              }
            }
          },
          {
            "name": {
              "name": "entrypointV07Response",
              "wireValue": "entrypointV07Response"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response",
              "typeId": "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestGasAndPaymasterAndDataResultEntrypointV07Response_example_autogenerated": {}
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestGasAndPaymasterAndDataResult_example_autogenerated": {
            "entrypointV06Response": {},
            "entrypointV07Response": {}
          }
        }
      }
    },
    "AlchemyRequestFeePayerResult": {
      "name": {
        "typeId": "AlchemyRequestFeePayerResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestFeePayerResult"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "serializedTransaction",
              "wireValue": "serializedTransaction"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The transaction after the service sets the `feePayer` field and adds the fee-payer signature.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestFeePayerResultSerializedTransaction_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestFeePayerResult_example_autogenerated": {
            "serializedTransaction": "string"
          }
        }
      }
    },
    "alchemy_requestFeePayer_Param_policyId": {
      "name": {
        "typeId": "alchemy_requestFeePayer_Param_policyId",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestFeePayer_Param_policyId"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestFeePayer_Param_policyId_example_autogenerated": "string"
        }
      }
    },
    "alchemy_requestFeePayer_Param_serializedTransaction": {
      "name": {
        "typeId": "alchemy_requestFeePayer_Param_serializedTransaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestFeePayer_Param_serializedTransaction"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^[A-Za-z0-9+/]+={0,2}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^[A-Za-z0-9+/]+={0,2}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestFeePayer_Param_serializedTransaction_example_autogenerated": "string"
        }
      }
    },
    "alchemy_requestFeePayer_Param_webhookData": {
      "name": {
        "typeId": "alchemy_requestFeePayer_Param_webhookData",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "alchemy_requestFeePayer_Param_webhookData"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "alchemy_requestFeePayer_Param_webhookData_example_autogenerated": "string"
        }
      }
    },
    "alchemy_requestFeePayer_Result": {
      "name": {
        "typeId": "AlchemyRequestFeePayerResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": "AlchemyRequestFeePayerResult"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": "serializedTransaction",
              "wireValue": "serializedTransaction"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {},
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The transaction after the service sets the `feePayer` field and adds the fee-payer signature.\n",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "AlchemyRequestFeePayerResultSerializedTransaction_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "AlchemyRequestFeePayerResult_example_autogenerated": {
            "serializedTransaction": "string"
          }
        }
      }
    }
  },
  "services": {
    "service_root": {
      "name": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "baseUrl": "Base",
          "auth": false,
          "method": "POST",
          "id": "alchemy_requestGasAndPaymasterAndData",
          "docs": "Requests gas and coverage for a `UserOperation`. Returns `paymasterAndData` and gas parameters if approved, errors if not. Optionally accepts fee parameter overrides to be used in the `UserOperation`.\n",
          "name": "alchemy_requestGasAndPaymasterAndData",
          "headers": [],
          "displayName": "alchemy_requestGasAndPaymasterAndData",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": "alchemy_requestGasAndPaymasterAndData_Request",
            "properties": [
              {
                "docs": "The Gas Policy ID or list of Gas Policy IDs.",
                "name": {
                  "name": "policyId",
                  "wireValue": "policyId"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "alchemy_requestGasAndPaymasterAndData_Param_policyId",
                  "typeId": "alchemy_requestGasAndPaymasterAndData_Param_policyId",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestGasAndPaymasterAndData_Param_policyId_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The entrypoint address the request should be sent through. This MUST be one of the entry points returned by the `supportedEntryPoints` RPC call and match the version of the user operation in the `userOperation` field.",
                "name": {
                  "name": "entryPoint",
                  "wireValue": "entryPoint"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0[xX][0-9a-fA-F]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestGasAndPaymasterAndData_Param_entryPoint_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "Dummy signature for the operation. This is useful for estimating gas costs.\n  <Warning>\n    This endpoint requires a dummy signature in the `userOp`. Check our [FAQs](/docs/reference/account-abstraction-faq#signatures) to learn what a dummy signature is and which dummy signature you should use.\n  </Warning>\n",
                "name": {
                  "name": "dummySignature",
                  "wireValue": "dummySignature"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestGasAndPaymasterAndData_Param_dummySignature_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "An object containing optional gas parameters, `paymasterAndData`, and signature fields. It can be either a v0.6 or v0.7 user operation but must match the version of the entry point at the specified `entryPoint`.",
                "name": {
                  "name": "userOperation",
                  "wireValue": "userOperation"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "alchemy_requestGasAndPaymasterAndData_Param_userOperation",
                  "typeId": "alchemy_requestGasAndPaymasterAndData_Param_userOperation",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestGasAndPaymasterAndData_Param_userOperation_example_autogenerated": {}
                  }
                }
              },
              {
                "docs": "Optional fields that override our gas and fee estimates. Use this parameter to optionally override available fields: `maxFeePerGas`, `maxPriorityFeePerGas`, `callGasLimit`, `verificationGasLimit`, or `preVerificationGas`. \n\nThis will apply either:\n- absolutes overrides (using a hex string) simply overriding estimated values entirely OR\n- multiplier overrides relative to our estimates (in the format of { \"multiplier\": number } with max precision of 4 decimal places). For example, if the override value is { multiplier: 1.1 } for the `maxPriorityFeePerGas` field, then a 1.1 multiplier, or a 10% increase, is applied to the estimated `maxPriorityFeePerGas` of the userOp.\n\nThese overrides will be applied for every userOp sent with this provider. A higher buffer may give userOps a better chance to mine if the L1/L2 gas and fees change.\n\n```json\n\"overrides\": {\n  \"maxFeePerGas\": \"hex string\" | { \"multiplier\": number },\n  \"maxPriorityFeePerGas\": \"hex string\" | { \"multiplier\": number },\n  \"callGasLimit\": \"hex string\" | { \"multiplier\": number },\n  \"verificationGasLimit\": \"hex string\" | { \"multiplier\": number },\n  \"preVerificationGas\": \"hex string\" | { \"multiplier\": number },\n}\n```\n\n<Warning>\n  Previous override using \"percentage\" has been deprecated in favor of \"multiplier\" values\n</Warning>\n",
                "name": {
                  "name": "overrides",
                  "wireValue": "overrides"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "alchemy_requestGasAndPaymasterAndData_Param_overrides",
                      "typeId": "alchemy_requestGasAndPaymasterAndData_Param_overrides",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestGasAndPaymasterAndData_Param_overrides_example_autogenerated": {}
                  }
                }
              },
              {
                "docs": "Optional.Allows changes to the state of a contract before executing the call. For example, you can modify variable values (like balances or approvals) for that call without changing the contract itself on the blockchain. \n\nIn more technical terms, the state override set is an optional parameter that allows executing the call against a modified chain state. It is an address-to-state mapping, where each entry specifies some state to be overridden prior to executing the call.\n",
                "name": {
                  "name": "stateOverrideSet",
                  "wireValue": "stateOverrideSet"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "alchemy_requestGasAndPaymasterAndData_Param_stateOverrideSet",
                      "typeId": "alchemy_requestGasAndPaymasterAndData_Param_stateOverrideSet",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestGasAndPaymasterAndData_Param_stateOverrideSet_example_autogenerated": {}
                  }
                }
              },
              {
                "docs": "Additional data you wish to include in the request, such as proof of humanity.",
                "name": {
                  "name": "webhookData",
                  "wireValue": "webhookData"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestGasAndPaymasterAndData_Param_webhookData_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The transformed response object that wraps the original gas and paymaster response. It includes an array of asset change objects, a gasUsed field, and an error field.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "AlchemyRequestGasAndPaymasterAndDataResult_example_autogenerated": {
                      "entrypointV06Response": {},
                      "entrypointV07Response": {}
                    }
                  }
                },
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestGasAndPaymasterAndDataResult",
                  "typeId": "AlchemyRequestGasAndPaymasterAndDataResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "alchemy_requestGasAndPaymasterAndData example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "webhookData": "example webhook data",
                      "policyId": "69d524a7-e932-4214-8673-dcdcba31bb42",
                      "entryPoint": "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789",
                      "dummySignature": "0xfffffffffffffffffffffffffffffff0000000000000000000000000000000007aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa1c",
                      "userOperation": {
                        "sender": "0x1234567890123456789012345678901234567890",
                        "nonce": "0x1",
                        "callData": "0xabcdef",
                        "callGasLimit": "0x5208",
                        "verificationGasLimit": "0x5208",
                        "preVerificationGas": "0x5208",
                        "maxFeePerGas": "0x1",
                        "maxPriorityFeePerGas": "0x1"
                      }
                    }
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "entrypointV06Response": {
                          "paymasterAndData": "0xabcde"
                        },
                        "entrypointV07Response": {
                          "paymasterData": "0x67890",
                          "paymasterVerificationGasLimit": "0x5208",
                          "paymasterPostOpGasLimit": "0x5208"
                        }
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Base",
          "v2BaseUrls": [
            "https://solana-mainnet.g.alchemy.com/v2",
            "Solana Devnet"
          ],
          "auth": false,
          "method": "POST",
          "id": "alchemy_requestFeePayer",
          "docs": "Requests gas sponsorship for a Solana transaction and returns the **fully-signed** `serializedTransaction` (now containing the fee-payer signature).\n\n<Note>\n  Request access by reaching out to account-abstraction@alchemy.com\n</Note>\n",
          "name": "alchemy_requestFeePayer",
          "headers": [],
          "displayName": "alchemy_requestFeePayer",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": "alchemy_requestFeePayer_Request",
            "properties": [
              {
                "docs": "The policy ID (_or list of IDs_) that governs sponsorship.",
                "name": {
                  "name": "policyId",
                  "wireValue": "policyId"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "alchemy_requestFeePayer_Param_policyId",
                  "typeId": "alchemy_requestFeePayer_Param_policyId",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestFeePayer_Param_policyId_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The unsigned transaction produced by `tx.serialize()`.\nIt may already contain a `feePayer`; the service will overwrite it\nwith the sponsoring account and add the fee-payer signature.\n",
                "name": {
                  "name": "serializedTransaction",
                  "wireValue": "serializedTransaction"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^[A-Za-z0-9+/]+={0,2}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestFeePayer_Param_serializedTransaction_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "Optional metadata (e.g. proof-of-humanity) that is forwarded to any policy-level webhooks.\n",
                "name": {
                  "name": "webhookData",
                  "wireValue": "webhookData"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {},
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "alchemy_requestFeePayer_Param_webhookData_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Object containing the **fully-signed** transaction ready for `sendRawTransaction`.\n",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "AlchemyRequestFeePayerResult_example_autogenerated": {
                      "serializedTransaction": "string"
                    }
                  }
                },
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": "AlchemyRequestFeePayerResult",
                  "typeId": "AlchemyRequestFeePayerResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "alchemy_requestFeePayer example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "policyId": "69d524a7-e932-4214-8673-dcdcba31bb42",
                      "serializedTransaction": "AgICAQMEBQYHCAkKCwwNDg8BCg==",
                      "webhookData": "user-liveness-proof"
                    }
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "serializedTransaction": "AQIDBAUGBwgJCgsMDQ4PEA=="
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        }
      ]
    }
  },
  "errors": {},
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "Mainnet",
    "environments": {
      "baseUrls": [
        {
          "id": "Base",
          "name": "Base"
        },
        {
          "id": "https://solana-mainnet.g.alchemy.com/v2",
          "name": "https://solana-mainnet.g.alchemy.com/v2"
        },
        {
          "id": "Solana Devnet",
          "name": "Solana Devnet"
        }
      ],
      "environments": [
        {
          "id": "Mainnet",
          "name": "Mainnet",
          "urls": {
            "Base": "https://eth-mainnet.g.alchemy.com/v2",
            "https://solana-mainnet.g.alchemy.com/v2": "https://solana-mainnet.g.alchemy.com/v2",
            "Solana Devnet": "https://solana-devnet.g.alchemy.com/v2"
          }
        },
        {
          "id": "Sepolia",
          "name": "Sepolia",
          "urls": {
            "Base": "https://eth-sepolia.g.alchemy.com/v2",
            "https://solana-mainnet.g.alchemy.com/v2": "https://solana-mainnet.g.alchemy.com/v2",
            "Solana Devnet": "https://solana-devnet.g.alchemy.com/v2"
          }
        }
      ],
      "type": "multipleBaseUrls"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "service": "service_root",
    "types": [],
    "errors": [],
    "subpackages": [],
    "hasEndpointsInTree": false
  },
  "subpackages": {},
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": "",
  "constants": {
    "errorInstanceIdKey": {
      "name": "errorInstanceId",
      "wireValue": "errorInstanceId"
    }
  }
}