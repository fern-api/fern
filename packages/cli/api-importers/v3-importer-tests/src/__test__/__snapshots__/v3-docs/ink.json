{
  "auth": {
    "requirement": "ALL",
    "schemes": []
  },
  "selfHosted": false,
  "types": {
    "eth_blockNumber_Result": {
      "name": {
        "typeId": "EthBlockNumberResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthBlockNumberResult",
          "camelCase": {
            "unsafeName": "ethBlockNumberResult",
            "safeName": "ethBlockNumberResult"
          },
          "snakeCase": {
            "unsafeName": "eth_block_number_result",
            "safeName": "eth_block_number_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_BLOCK_NUMBER_RESULT",
            "safeName": "ETH_BLOCK_NUMBER_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthBlockNumberResult",
            "safeName": "EthBlockNumberResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthBlockNumberResult_example_autogenerated": "string"
        }
      }
    },
    "EthCallParamBlock1": {
      "name": {
        "typeId": "EthCallParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthCallParamBlock1",
          "camelCase": {
            "unsafeName": "ethCallParamBlock1",
            "safeName": "ethCallParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_call_param_block_1",
            "safeName": "eth_call_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_CALL_PARAM_BLOCK_1",
            "safeName": "ETH_CALL_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthCallParamBlock1",
            "safeName": "EthCallParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthCallParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_call_Param_Block": {
      "name": {
        "typeId": "eth_call_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_call_Param_Block",
          "camelCase": {
            "unsafeName": "ethCallParamBlock",
            "safeName": "ethCallParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_call_param_block",
            "safeName": "eth_call_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_CALL_PARAM_BLOCK",
            "safeName": "ETH_CALL_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthCallParamBlock",
            "safeName": "EthCallParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthCallParamBlock1",
                "camelCase": {
                  "unsafeName": "ethCallParamBlock1",
                  "safeName": "ethCallParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_call_param_block_1",
                  "safeName": "eth_call_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_CALL_PARAM_BLOCK_1",
                  "safeName": "ETH_CALL_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthCallParamBlock1",
                  "safeName": "EthCallParamBlock1"
                }
              },
              "typeId": "EthCallParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_call_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "EthCallParamTransactionAccessListItems": {
      "name": {
        "typeId": "EthCallParamTransactionAccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthCallParamTransactionAccessListItems",
          "camelCase": {
            "unsafeName": "ethCallParamTransactionAccessListItems",
            "safeName": "ethCallParamTransactionAccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_call_param_transaction_access_list_items",
            "safeName": "eth_call_param_transaction_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_CALL_PARAM_TRANSACTION_ACCESS_LIST_ITEMS",
            "safeName": "ETH_CALL_PARAM_TRANSACTION_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthCallParamTransactionAccessListItems",
            "safeName": "EthCallParamTransactionAccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionAccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionAccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthCallParamTransactionAccessListItems_example_autogenerated": {}
        }
      }
    },
    "eth_call_Param_Transaction": {
      "name": {
        "typeId": "eth_call_Param_Transaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_call_Param_Transaction",
          "camelCase": {
            "unsafeName": "ethCallParamTransaction",
            "safeName": "ethCallParamTransaction"
          },
          "snakeCase": {
            "unsafeName": "eth_call_param_transaction",
            "safeName": "eth_call_param_transaction"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_CALL_PARAM_TRANSACTION",
            "safeName": "ETH_CALL_PARAM_TRANSACTION"
          },
          "pascalCase": {
            "unsafeName": "EthCallParamTransaction",
            "safeName": "EthCallParamTransaction"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionNonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionTo_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionFrom_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionValue_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionInput_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionGasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionMaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionMaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerBlobGas",
                "camelCase": {
                  "unsafeName": "maxFeePerBlobGas",
                  "safeName": "maxFeePerBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_blob_gas",
                  "safeName": "max_fee_per_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_BLOB_GAS",
                  "safeName": "MAX_FEE_PER_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerBlobGas",
                  "safeName": "MaxFeePerBlobGas"
                }
              },
              "wireValue": "maxFeePerBlobGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionMaxFeePerBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthCallParamTransactionAccessListItems",
                        "camelCase": {
                          "unsafeName": "ethCallParamTransactionAccessListItems",
                          "safeName": "ethCallParamTransactionAccessListItems"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_call_param_transaction_access_list_items",
                          "safeName": "eth_call_param_transaction_access_list_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_CALL_PARAM_TRANSACTION_ACCESS_LIST_ITEMS",
                          "safeName": "ETH_CALL_PARAM_TRANSACTION_ACCESS_LIST_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "EthCallParamTransactionAccessListItems",
                          "safeName": "EthCallParamTransactionAccessListItems"
                        }
                      },
                      "typeId": "EthCallParamTransactionAccessListItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionAccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobVersionedHashes",
                "camelCase": {
                  "unsafeName": "blobVersionedHashes",
                  "safeName": "blobVersionedHashes"
                },
                "snakeCase": {
                  "unsafeName": "blob_versioned_hashes",
                  "safeName": "blob_versioned_hashes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_VERSIONED_HASHES",
                  "safeName": "BLOB_VERSIONED_HASHES"
                },
                "pascalCase": {
                  "unsafeName": "BlobVersionedHashes",
                  "safeName": "BlobVersionedHashes"
                }
              },
              "wireValue": "blobVersionedHashes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionBlobVersionedHashes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobs",
                "camelCase": {
                  "unsafeName": "blobs",
                  "safeName": "blobs"
                },
                "snakeCase": {
                  "unsafeName": "blobs",
                  "safeName": "blobs"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOBS",
                  "safeName": "BLOBS"
                },
                "pascalCase": {
                  "unsafeName": "Blobs",
                  "safeName": "Blobs"
                }
              },
              "wireValue": "blobs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Raw blob data.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionBlobs_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthCallParamTransactionChainId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_call_Param_Transaction_example_autogenerated": {}
        }
      }
    },
    "eth_call_Result": {
      "name": {
        "typeId": "EthCallResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthCallResult",
          "camelCase": {
            "unsafeName": "ethCallResult",
            "safeName": "ethCallResult"
          },
          "snakeCase": {
            "unsafeName": "eth_call_result",
            "safeName": "eth_call_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_CALL_RESULT",
            "safeName": "ETH_CALL_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthCallResult",
            "safeName": "EthCallResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthCallResult_example_autogenerated": "string"
        }
      }
    },
    "eth_chainId_Result": {
      "name": {
        "typeId": "EthChainIdResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthChainIdResult",
          "camelCase": {
            "unsafeName": "ethChainIdResult",
            "safeName": "ethChainIdResult"
          },
          "snakeCase": {
            "unsafeName": "eth_chain_id_result",
            "safeName": "eth_chain_id_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_CHAIN_ID_RESULT",
            "safeName": "ETH_CHAIN_ID_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthChainIdResult",
            "safeName": "EthChainIdResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthChainIdResult_example_autogenerated": "string"
        }
      }
    },
    "EthEstimateGasParamBlock1": {
      "name": {
        "typeId": "EthEstimateGasParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthEstimateGasParamBlock1",
          "camelCase": {
            "unsafeName": "ethEstimateGasParamBlock1",
            "safeName": "ethEstimateGasParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_estimate_gas_param_block_1",
            "safeName": "eth_estimate_gas_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK_1",
            "safeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthEstimateGasParamBlock1",
            "safeName": "EthEstimateGasParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthEstimateGasParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_estimateGas_Param_Block": {
      "name": {
        "typeId": "eth_estimateGas_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_estimateGas_Param_Block",
          "camelCase": {
            "unsafeName": "ethEstimateGasParamBlock",
            "safeName": "ethEstimateGasParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_estimate_gas_param_block",
            "safeName": "eth_estimate_gas_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK",
            "safeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthEstimateGasParamBlock",
            "safeName": "EthEstimateGasParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthEstimateGasParamBlock1",
                "camelCase": {
                  "unsafeName": "ethEstimateGasParamBlock1",
                  "safeName": "ethEstimateGasParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_estimate_gas_param_block_1",
                  "safeName": "eth_estimate_gas_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK_1",
                  "safeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthEstimateGasParamBlock1",
                  "safeName": "EthEstimateGasParamBlock1"
                }
              },
              "typeId": "EthEstimateGasParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_estimateGas_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "EthEstimateGasParamTransactionAccessListItems": {
      "name": {
        "typeId": "EthEstimateGasParamTransactionAccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthEstimateGasParamTransactionAccessListItems",
          "camelCase": {
            "unsafeName": "ethEstimateGasParamTransactionAccessListItems",
            "safeName": "ethEstimateGasParamTransactionAccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_estimate_gas_param_transaction_access_list_items",
            "safeName": "eth_estimate_gas_param_transaction_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION_ACCESS_LIST_ITEMS",
            "safeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthEstimateGasParamTransactionAccessListItems",
            "safeName": "EthEstimateGasParamTransactionAccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionAccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionAccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthEstimateGasParamTransactionAccessListItems_example_autogenerated": {}
        }
      }
    },
    "eth_estimateGas_Param_Transaction": {
      "name": {
        "typeId": "eth_estimateGas_Param_Transaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_estimateGas_Param_Transaction",
          "camelCase": {
            "unsafeName": "ethEstimateGasParamTransaction",
            "safeName": "ethEstimateGasParamTransaction"
          },
          "snakeCase": {
            "unsafeName": "eth_estimate_gas_param_transaction",
            "safeName": "eth_estimate_gas_param_transaction"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION",
            "safeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION"
          },
          "pascalCase": {
            "unsafeName": "EthEstimateGasParamTransaction",
            "safeName": "EthEstimateGasParamTransaction"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionNonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionTo_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionFrom_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionValue_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionInput_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionGasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionMaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionMaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerBlobGas",
                "camelCase": {
                  "unsafeName": "maxFeePerBlobGas",
                  "safeName": "maxFeePerBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_blob_gas",
                  "safeName": "max_fee_per_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_BLOB_GAS",
                  "safeName": "MAX_FEE_PER_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerBlobGas",
                  "safeName": "MaxFeePerBlobGas"
                }
              },
              "wireValue": "maxFeePerBlobGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionMaxFeePerBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthEstimateGasParamTransactionAccessListItems",
                        "camelCase": {
                          "unsafeName": "ethEstimateGasParamTransactionAccessListItems",
                          "safeName": "ethEstimateGasParamTransactionAccessListItems"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_estimate_gas_param_transaction_access_list_items",
                          "safeName": "eth_estimate_gas_param_transaction_access_list_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION_ACCESS_LIST_ITEMS",
                          "safeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION_ACCESS_LIST_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "EthEstimateGasParamTransactionAccessListItems",
                          "safeName": "EthEstimateGasParamTransactionAccessListItems"
                        }
                      },
                      "typeId": "EthEstimateGasParamTransactionAccessListItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionAccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobVersionedHashes",
                "camelCase": {
                  "unsafeName": "blobVersionedHashes",
                  "safeName": "blobVersionedHashes"
                },
                "snakeCase": {
                  "unsafeName": "blob_versioned_hashes",
                  "safeName": "blob_versioned_hashes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_VERSIONED_HASHES",
                  "safeName": "BLOB_VERSIONED_HASHES"
                },
                "pascalCase": {
                  "unsafeName": "BlobVersionedHashes",
                  "safeName": "BlobVersionedHashes"
                }
              },
              "wireValue": "blobVersionedHashes"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionBlobVersionedHashes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobs",
                "camelCase": {
                  "unsafeName": "blobs",
                  "safeName": "blobs"
                },
                "snakeCase": {
                  "unsafeName": "blobs",
                  "safeName": "blobs"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOBS",
                  "safeName": "BLOBS"
                },
                "pascalCase": {
                  "unsafeName": "Blobs",
                  "safeName": "Blobs"
                }
              },
              "wireValue": "blobs"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]*$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Raw blob data.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionBlobs_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthEstimateGasParamTransactionChainId_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_estimateGas_Param_Transaction_example_autogenerated": {}
        }
      }
    },
    "eth_estimateGas_Result": {
      "name": {
        "typeId": "EthEstimateGasResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthEstimateGasResult",
          "camelCase": {
            "unsafeName": "ethEstimateGasResult",
            "safeName": "ethEstimateGasResult"
          },
          "snakeCase": {
            "unsafeName": "eth_estimate_gas_result",
            "safeName": "eth_estimate_gas_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_ESTIMATE_GAS_RESULT",
            "safeName": "ETH_ESTIMATE_GAS_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthEstimateGasResult",
            "safeName": "EthEstimateGasResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthEstimateGasResult_example_autogenerated": "string"
        }
      }
    },
    "eth_gasPrice_Result": {
      "name": {
        "typeId": "EthGasPriceResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGasPriceResult",
          "camelCase": {
            "unsafeName": "ethGasPriceResult",
            "safeName": "ethGasPriceResult"
          },
          "snakeCase": {
            "unsafeName": "eth_gas_price_result",
            "safeName": "eth_gas_price_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GAS_PRICE_RESULT",
            "safeName": "ETH_GAS_PRICE_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGasPriceResult",
            "safeName": "EthGasPriceResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGasPriceResult_example_autogenerated": "string"
        }
      }
    },
    "EthGetBalanceParamBlock1": {
      "name": {
        "typeId": "EthGetBalanceParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBalanceParamBlock1",
          "camelCase": {
            "unsafeName": "ethGetBalanceParamBlock1",
            "safeName": "ethGetBalanceParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_balance_param_block_1",
            "safeName": "eth_get_balance_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BALANCE_PARAM_BLOCK_1",
            "safeName": "ETH_GET_BALANCE_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetBalanceParamBlock1",
            "safeName": "EthGetBalanceParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBalanceParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getBalance_Param_Block": {
      "name": {
        "typeId": "eth_getBalance_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBalance_Param_Block",
          "camelCase": {
            "unsafeName": "ethGetBalanceParamBlock",
            "safeName": "ethGetBalanceParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_get_balance_param_block",
            "safeName": "eth_get_balance_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BALANCE_PARAM_BLOCK",
            "safeName": "ETH_GET_BALANCE_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthGetBalanceParamBlock",
            "safeName": "EthGetBalanceParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBalanceParamBlock1",
                "camelCase": {
                  "unsafeName": "ethGetBalanceParamBlock1",
                  "safeName": "ethGetBalanceParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_balance_param_block_1",
                  "safeName": "eth_get_balance_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BALANCE_PARAM_BLOCK_1",
                  "safeName": "ETH_GET_BALANCE_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBalanceParamBlock1",
                  "safeName": "EthGetBalanceParamBlock1"
                }
              },
              "typeId": "EthGetBalanceParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBalance_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "eth_getBalance_Param_Address": {
      "name": {
        "typeId": "eth_getBalance_Param_Address",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBalance_Param_Address",
          "camelCase": {
            "unsafeName": "ethGetBalanceParamAddress",
            "safeName": "ethGetBalanceParamAddress"
          },
          "snakeCase": {
            "unsafeName": "eth_get_balance_param_address",
            "safeName": "eth_get_balance_param_address"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BALANCE_PARAM_ADDRESS",
            "safeName": "ETH_GET_BALANCE_PARAM_ADDRESS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBalanceParamAddress",
            "safeName": "EthGetBalanceParamAddress"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBalance_Param_Address_example_autogenerated": "string"
        }
      }
    },
    "eth_getBalance_Result": {
      "name": {
        "typeId": "EthGetBalanceResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBalanceResult",
          "camelCase": {
            "unsafeName": "ethGetBalanceResult",
            "safeName": "ethGetBalanceResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_balance_result",
            "safeName": "eth_get_balance_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BALANCE_RESULT",
            "safeName": "ETH_GET_BALANCE_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetBalanceResult",
            "safeName": "EthGetBalanceResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBalanceResult_example_autogenerated": "string"
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_0_access_list_items",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_0_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1Items0": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items0",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items0"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_0",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_0"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0"
          }
        },
        "displayName": "Signed 4844 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0To_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerBlobGas",
                "camelCase": {
                  "unsafeName": "maxFeePerBlobGas",
                  "safeName": "maxFeePerBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_blob_gas",
                  "safeName": "max_fee_per_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_BLOB_GAS",
                  "safeName": "MAX_FEE_PER_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerBlobGas",
                  "safeName": "MaxFeePerBlobGas"
                }
              },
              "wireValue": "maxFeePerBlobGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0MaxFeePerBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                      "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_0_access_list_items",
                      "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_0_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                      "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
                    }
                  },
                  "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobVersionedHashes",
                "camelCase": {
                  "unsafeName": "blobVersionedHashes",
                  "safeName": "blobVersionedHashes"
                },
                "snakeCase": {
                  "unsafeName": "blob_versioned_hashes",
                  "safeName": "blob_versioned_hashes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_VERSIONED_HASHES",
                  "safeName": "BLOB_VERSIONED_HASHES"
                },
                "pascalCase": {
                  "unsafeName": "BlobVersionedHashes",
                  "safeName": "BlobVersionedHashes"
                }
              },
              "wireValue": "blobVersionedHashes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0BlobVersionedHashes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf0S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1Items0_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_1_access_list_items",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_1_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1Items1": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items1",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_1",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1"
          }
        },
        "displayName": "Signed 1559 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x2$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                      "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_1_access_list_items",
                      "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_1_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                      "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
                    }
                  },
                  "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf1S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1Items1_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_2_access_list_items",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_2_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1Items2": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items2",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items2"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_2",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_2"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2"
          }
        },
        "displayName": "Signed 2930 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x1$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                      "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_2_access_list_items",
                      "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_one_of_2_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                      "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
                    }
                  },
                  "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf2S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1Items2_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1Items3": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items3",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items3"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_3",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3"
          }
        },
        "displayName": "Signed Legacy Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsOneOf1ItemsOneOf3S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1Items3_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "v": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactionsOneOf1Items": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items",
            "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
            "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items0",
                  "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items0"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_0",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0",
                  "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items0",
              "displayName": "Signed 4844 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items1",
                  "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_1",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1",
                  "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items1",
              "displayName": "Signed 1559 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items2",
                  "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items2"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_2",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_2"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2",
                  "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items2",
              "displayName": "Signed 2930 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items3",
                  "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items3"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_3",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items_3"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3",
                  "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items3",
              "displayName": "Signed Legacy Transaction",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactionsOneOf1Items_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactions1": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactions1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactions1",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactions1",
            "safeName": "ethGetBlockByHashResultInnerTransactions1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions_1",
            "safeName": "eth_get_block_by_hash_result_inner_transactions_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_1",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactions1",
            "safeName": "EthGetBlockByHashResultInnerTransactions1"
          }
        },
        "displayName": "Full transactions"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items",
                  "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
                  "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items",
                  "safeName": "ethGetBlockByHashResultInnerTransactionsOneOf1Items"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions_one_of_1_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
                  "safeName": "EthGetBlockByHashResultInnerTransactionsOneOf1Items"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactionsOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactions1_example_autogenerated": [
            {
              "type": "string",
              "nonce": "string",
              "to": "string",
              "gas": "string",
              "value": "string",
              "input": "string",
              "maxPriorityFeePerGas": "string",
              "maxFeePerGas": "string",
              "maxFeePerBlobGas": "string",
              "accessList": [
                {}
              ],
              "blobVersionedHashes": [
                "string"
              ],
              "chainId": "string",
              "yParity": "string",
              "r": "string",
              "s": "string"
            }
          ]
        }
      }
    },
    "EthGetBlockByHashResultInnerTransactions": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerTransactions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerTransactions",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerTransactions",
            "safeName": "ethGetBlockByHashResultInnerTransactions"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_transactions",
            "safeName": "eth_get_block_by_hash_result_inner_transactions"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerTransactions",
            "safeName": "EthGetBlockByHashResultInnerTransactions"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactions1",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactions1",
                  "safeName": "ethGetBlockByHashResultInnerTransactions1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions_1",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_1",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactions1",
                  "safeName": "EthGetBlockByHashResultInnerTransactions1"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactions1",
              "displayName": "Full transactions",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerTransactions_example_autogenerated": [
            "string"
          ]
        }
      }
    },
    "EthGetBlockByHashResultInnerWithdrawalsItems": {
      "name": {
        "typeId": "EthGetBlockByHashResultInnerWithdrawalsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInnerWithdrawalsItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInnerWithdrawalsItems",
            "safeName": "ethGetBlockByHashResultInnerWithdrawalsItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner_withdrawals_items",
            "safeName": "eth_get_block_by_hash_result_inner_withdrawals_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_WITHDRAWALS_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_WITHDRAWALS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInnerWithdrawalsItems",
            "safeName": "EthGetBlockByHashResultInnerWithdrawalsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "index",
                "camelCase": {
                  "unsafeName": "index",
                  "safeName": "index"
                },
                "snakeCase": {
                  "unsafeName": "index",
                  "safeName": "index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INDEX",
                  "safeName": "INDEX"
                },
                "pascalCase": {
                  "unsafeName": "Index",
                  "safeName": "Index"
                }
              },
              "wireValue": "index"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerWithdrawalsItemsIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "validatorIndex",
                "camelCase": {
                  "unsafeName": "validatorIndex",
                  "safeName": "validatorIndex"
                },
                "snakeCase": {
                  "unsafeName": "validator_index",
                  "safeName": "validator_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALIDATOR_INDEX",
                  "safeName": "VALIDATOR_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "ValidatorIndex",
                  "safeName": "ValidatorIndex"
                }
              },
              "wireValue": "validatorIndex"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerWithdrawalsItemsValidatorIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerWithdrawalsItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerWithdrawalsItemsAmount_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInnerWithdrawalsItems_example_autogenerated": {
            "index": "string",
            "validatorIndex": "string",
            "address": "string",
            "amount": "string"
          }
        }
      }
    },
    "EthGetBlockByHashResultInner": {
      "name": {
        "typeId": "EthGetBlockByHashResultInner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResultInner",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResultInner",
            "safeName": "ethGetBlockByHashResultInner"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result_inner",
            "safeName": "eth_get_block_by_hash_result_inner"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResultInner",
            "safeName": "EthGetBlockByHashResultInner"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parentHash",
                "camelCase": {
                  "unsafeName": "parentHash",
                  "safeName": "parentHash"
                },
                "snakeCase": {
                  "unsafeName": "parent_hash",
                  "safeName": "parent_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARENT_HASH",
                  "safeName": "PARENT_HASH"
                },
                "pascalCase": {
                  "unsafeName": "ParentHash",
                  "safeName": "ParentHash"
                }
              },
              "wireValue": "parentHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerParentHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sha3Uncles",
                "camelCase": {
                  "unsafeName": "sha3Uncles",
                  "safeName": "sha3Uncles"
                },
                "snakeCase": {
                  "unsafeName": "sha_3_uncles",
                  "safeName": "sha_3_uncles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SHA_3_UNCLES",
                  "safeName": "SHA_3_UNCLES"
                },
                "pascalCase": {
                  "unsafeName": "Sha3Uncles",
                  "safeName": "Sha3Uncles"
                }
              },
              "wireValue": "sha3Uncles"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerSha3Uncles_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "miner",
                "camelCase": {
                  "unsafeName": "miner",
                  "safeName": "miner"
                },
                "snakeCase": {
                  "unsafeName": "miner",
                  "safeName": "miner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MINER",
                  "safeName": "MINER"
                },
                "pascalCase": {
                  "unsafeName": "Miner",
                  "safeName": "Miner"
                }
              },
              "wireValue": "miner"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerMiner_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "stateRoot",
                "camelCase": {
                  "unsafeName": "stateRoot",
                  "safeName": "stateRoot"
                },
                "snakeCase": {
                  "unsafeName": "state_root",
                  "safeName": "state_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATE_ROOT",
                  "safeName": "STATE_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "StateRoot",
                  "safeName": "StateRoot"
                }
              },
              "wireValue": "stateRoot"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerStateRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionsRoot",
                "camelCase": {
                  "unsafeName": "transactionsRoot",
                  "safeName": "transactionsRoot"
                },
                "snakeCase": {
                  "unsafeName": "transactions_root",
                  "safeName": "transactions_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTIONS_ROOT",
                  "safeName": "TRANSACTIONS_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "TransactionsRoot",
                  "safeName": "TransactionsRoot"
                }
              },
              "wireValue": "transactionsRoot"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactionsRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "receiptsRoot",
                "camelCase": {
                  "unsafeName": "receiptsRoot",
                  "safeName": "receiptsRoot"
                },
                "snakeCase": {
                  "unsafeName": "receipts_root",
                  "safeName": "receipts_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RECEIPTS_ROOT",
                  "safeName": "RECEIPTS_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "ReceiptsRoot",
                  "safeName": "ReceiptsRoot"
                }
              },
              "wireValue": "receiptsRoot"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerReceiptsRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logsBloom",
                "camelCase": {
                  "unsafeName": "logsBloom",
                  "safeName": "logsBloom"
                },
                "snakeCase": {
                  "unsafeName": "logs_bloom",
                  "safeName": "logs_bloom"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOGS_BLOOM",
                  "safeName": "LOGS_BLOOM"
                },
                "pascalCase": {
                  "unsafeName": "LogsBloom",
                  "safeName": "LogsBloom"
                }
              },
              "wireValue": "logsBloom"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{512}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerLogsBloom_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "difficulty",
                "camelCase": {
                  "unsafeName": "difficulty",
                  "safeName": "difficulty"
                },
                "snakeCase": {
                  "unsafeName": "difficulty",
                  "safeName": "difficulty"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DIFFICULTY",
                  "safeName": "DIFFICULTY"
                },
                "pascalCase": {
                  "unsafeName": "Difficulty",
                  "safeName": "Difficulty"
                }
              },
              "wireValue": "difficulty"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerDifficulty_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "number",
                "camelCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "snakeCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUMBER",
                  "safeName": "NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "Number",
                  "safeName": "Number"
                }
              },
              "wireValue": "number"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasLimit",
                "camelCase": {
                  "unsafeName": "gasLimit",
                  "safeName": "gasLimit"
                },
                "snakeCase": {
                  "unsafeName": "gas_limit",
                  "safeName": "gas_limit"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_LIMIT",
                  "safeName": "GAS_LIMIT"
                },
                "pascalCase": {
                  "unsafeName": "GasLimit",
                  "safeName": "GasLimit"
                }
              },
              "wireValue": "gasLimit"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasUsed",
                "camelCase": {
                  "unsafeName": "gasUsed",
                  "safeName": "gasUsed"
                },
                "snakeCase": {
                  "unsafeName": "gas_used",
                  "safeName": "gas_used"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_USED",
                  "safeName": "GAS_USED"
                },
                "pascalCase": {
                  "unsafeName": "GasUsed",
                  "safeName": "GasUsed"
                }
              },
              "wireValue": "gasUsed"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerGasUsed_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamp",
                "camelCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "snakeCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMP",
                  "safeName": "TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "Timestamp",
                  "safeName": "Timestamp"
                }
              },
              "wireValue": "timestamp"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTimestamp_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extraData",
                "camelCase": {
                  "unsafeName": "extraData",
                  "safeName": "extraData"
                },
                "snakeCase": {
                  "unsafeName": "extra_data",
                  "safeName": "extra_data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTRA_DATA",
                  "safeName": "EXTRA_DATA"
                },
                "pascalCase": {
                  "unsafeName": "ExtraData",
                  "safeName": "ExtraData"
                }
              },
              "wireValue": "extraData"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerExtraData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "mixHash",
                "camelCase": {
                  "unsafeName": "mixHash",
                  "safeName": "mixHash"
                },
                "snakeCase": {
                  "unsafeName": "mix_hash",
                  "safeName": "mix_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MIX_HASH",
                  "safeName": "MIX_HASH"
                },
                "pascalCase": {
                  "unsafeName": "MixHash",
                  "safeName": "MixHash"
                }
              },
              "wireValue": "mixHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerMixHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{16}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerNonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "baseFeePerGas",
                "camelCase": {
                  "unsafeName": "baseFeePerGas",
                  "safeName": "baseFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "base_fee_per_gas",
                  "safeName": "base_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BASE_FEE_PER_GAS",
                  "safeName": "BASE_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "BaseFeePerGas",
                  "safeName": "BaseFeePerGas"
                }
              },
              "wireValue": "baseFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerBaseFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "withdrawalsRoot",
                "camelCase": {
                  "unsafeName": "withdrawalsRoot",
                  "safeName": "withdrawalsRoot"
                },
                "snakeCase": {
                  "unsafeName": "withdrawals_root",
                  "safeName": "withdrawals_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WITHDRAWALS_ROOT",
                  "safeName": "WITHDRAWALS_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "WithdrawalsRoot",
                  "safeName": "WithdrawalsRoot"
                }
              },
              "wireValue": "withdrawalsRoot"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerWithdrawalsRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobGasUsed",
                "camelCase": {
                  "unsafeName": "blobGasUsed",
                  "safeName": "blobGasUsed"
                },
                "snakeCase": {
                  "unsafeName": "blob_gas_used",
                  "safeName": "blob_gas_used"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_GAS_USED",
                  "safeName": "BLOB_GAS_USED"
                },
                "pascalCase": {
                  "unsafeName": "BlobGasUsed",
                  "safeName": "BlobGasUsed"
                }
              },
              "wireValue": "blobGasUsed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerBlobGasUsed_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "excessBlobGas",
                "camelCase": {
                  "unsafeName": "excessBlobGas",
                  "safeName": "excessBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "excess_blob_gas",
                  "safeName": "excess_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXCESS_BLOB_GAS",
                  "safeName": "EXCESS_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "ExcessBlobGas",
                  "safeName": "ExcessBlobGas"
                }
              },
              "wireValue": "excessBlobGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerExcessBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parentBeaconBlockRoot",
                "camelCase": {
                  "unsafeName": "parentBeaconBlockRoot",
                  "safeName": "parentBeaconBlockRoot"
                },
                "snakeCase": {
                  "unsafeName": "parent_beacon_block_root",
                  "safeName": "parent_beacon_block_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARENT_BEACON_BLOCK_ROOT",
                  "safeName": "PARENT_BEACON_BLOCK_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "ParentBeaconBlockRoot",
                  "safeName": "ParentBeaconBlockRoot"
                }
              },
              "wireValue": "parentBeaconBlockRoot"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerParentBeaconBlockRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerSize_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactions",
                "camelCase": {
                  "unsafeName": "transactions",
                  "safeName": "transactions"
                },
                "snakeCase": {
                  "unsafeName": "transactions",
                  "safeName": "transactions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTIONS",
                  "safeName": "TRANSACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Transactions",
                  "safeName": "Transactions"
                }
              },
              "wireValue": "transactions"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInnerTransactions",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInnerTransactions",
                  "safeName": "ethGetBlockByHashResultInnerTransactions"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner_transactions",
                  "safeName": "eth_get_block_by_hash_result_inner_transactions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_TRANSACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInnerTransactions",
                  "safeName": "EthGetBlockByHashResultInnerTransactions"
                }
              },
              "typeId": "EthGetBlockByHashResultInnerTransactions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerTransactions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "withdrawals",
                "camelCase": {
                  "unsafeName": "withdrawals",
                  "safeName": "withdrawals"
                },
                "snakeCase": {
                  "unsafeName": "withdrawals",
                  "safeName": "withdrawals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WITHDRAWALS",
                  "safeName": "WITHDRAWALS"
                },
                "pascalCase": {
                  "unsafeName": "Withdrawals",
                  "safeName": "Withdrawals"
                }
              },
              "wireValue": "withdrawals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetBlockByHashResultInnerWithdrawalsItems",
                        "camelCase": {
                          "unsafeName": "ethGetBlockByHashResultInnerWithdrawalsItems",
                          "safeName": "ethGetBlockByHashResultInnerWithdrawalsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_block_by_hash_result_inner_withdrawals_items",
                          "safeName": "eth_get_block_by_hash_result_inner_withdrawals_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_WITHDRAWALS_ITEMS",
                          "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER_WITHDRAWALS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetBlockByHashResultInnerWithdrawalsItems",
                          "safeName": "EthGetBlockByHashResultInnerWithdrawalsItems"
                        }
                      },
                      "typeId": "EthGetBlockByHashResultInnerWithdrawalsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerWithdrawals_example_autogenerated": [
                  {
                    "index": "string",
                    "validatorIndex": "string",
                    "address": "string",
                    "amount": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "uncles",
                "camelCase": {
                  "unsafeName": "uncles",
                  "safeName": "uncles"
                },
                "snakeCase": {
                  "unsafeName": "uncles",
                  "safeName": "uncles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UNCLES",
                  "safeName": "UNCLES"
                },
                "pascalCase": {
                  "unsafeName": "Uncles",
                  "safeName": "Uncles"
                }
              },
              "wireValue": "uncles"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByHashResultInnerUncles_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResultInner_example_autogenerated": {
            "hash": "string",
            "parentHash": "string",
            "sha3Uncles": "string",
            "miner": "string",
            "stateRoot": "string",
            "transactionsRoot": "string",
            "receiptsRoot": "string",
            "logsBloom": "string",
            "number": "string",
            "gasLimit": "string",
            "gasUsed": "string",
            "timestamp": "string",
            "extraData": "string",
            "mixHash": "string",
            "nonce": "string",
            "size": "string",
            "transactions": [
              "string"
            ],
            "uncles": [
              "string"
            ]
          }
        }
      }
    },
    "eth_getBlockByHash_Param_Block hash": {
      "name": {
        "typeId": "eth_getBlockByHash_Param_Block hash",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBlockByHash_Param_Block hash",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashParamBlockHash",
            "safeName": "ethGetBlockByHashParamBlockHash"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_param_block_hash",
            "safeName": "eth_get_block_by_hash_param_block_hash"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_PARAM_BLOCK_HASH",
            "safeName": "ETH_GET_BLOCK_BY_HASH_PARAM_BLOCK_HASH"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashParamBlockHash",
            "safeName": "EthGetBlockByHashParamBlockHash"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBlockByHash_Param_Block hash_example_autogenerated": "string"
        }
      }
    },
    "eth_getBlockByHash_Param_Hydrated transactions": {
      "name": {
        "typeId": "eth_getBlockByHash_Param_Hydrated transactions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBlockByHash_Param_Hydrated transactions",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashParamHydratedTransactions",
            "safeName": "ethGetBlockByHashParamHydratedTransactions"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_param_hydrated_transactions",
            "safeName": "eth_get_block_by_hash_param_hydrated_transactions"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_PARAM_HYDRATED_TRANSACTIONS",
            "safeName": "ETH_GET_BLOCK_BY_HASH_PARAM_HYDRATED_TRANSACTIONS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashParamHydratedTransactions",
            "safeName": "EthGetBlockByHashParamHydratedTransactions"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "BOOLEAN",
            "v2": {
              "type": "boolean"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "BOOLEAN",
            "v2": {
              "type": "boolean"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBlockByHash_Param_Hydrated transactions_example_autogenerated": true
        }
      }
    },
    "eth_getBlockByHash_Result": {
      "name": {
        "typeId": "EthGetBlockByHashResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByHashResult",
          "camelCase": {
            "unsafeName": "ethGetBlockByHashResult",
            "safeName": "ethGetBlockByHashResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_hash_result",
            "safeName": "eth_get_block_by_hash_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT",
            "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByHashResult",
            "safeName": "EthGetBlockByHashResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInner",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInner",
                  "safeName": "ethGetBlockByHashResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner",
                  "safeName": "eth_get_block_by_hash_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInner",
                  "safeName": "EthGetBlockByHashResultInner"
                }
              },
              "typeId": "EthGetBlockByHashResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByHashResultInner",
                "camelCase": {
                  "unsafeName": "ethGetBlockByHashResultInner",
                  "safeName": "ethGetBlockByHashResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_hash_result_inner",
                  "safeName": "eth_get_block_by_hash_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER",
                  "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByHashResultInner",
                  "safeName": "EthGetBlockByHashResultInner"
                }
              },
              "typeId": "EthGetBlockByHashResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByHashResult_example_autogenerated": null
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_0_access_list_items",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_0_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items0",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items0"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_0",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_0"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0"
          }
        },
        "displayName": "Signed 4844 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0To_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerBlobGas",
                "camelCase": {
                  "unsafeName": "maxFeePerBlobGas",
                  "safeName": "maxFeePerBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_blob_gas",
                  "safeName": "max_fee_per_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_BLOB_GAS",
                  "safeName": "MAX_FEE_PER_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerBlobGas",
                  "safeName": "MaxFeePerBlobGas"
                }
              },
              "wireValue": "maxFeePerBlobGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0MaxFeePerBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                      "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_0_access_list_items",
                      "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_0_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_0_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                      "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems"
                    }
                  },
                  "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobVersionedHashes",
                "camelCase": {
                  "unsafeName": "blobVersionedHashes",
                  "safeName": "blobVersionedHashes"
                },
                "snakeCase": {
                  "unsafeName": "blob_versioned_hashes",
                  "safeName": "blob_versioned_hashes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_VERSIONED_HASHES",
                  "safeName": "BLOB_VERSIONED_HASHES"
                },
                "pascalCase": {
                  "unsafeName": "BlobVersionedHashes",
                  "safeName": "BlobVersionedHashes"
                }
              },
              "wireValue": "blobVersionedHashes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0BlobVersionedHashes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf0S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_1_access_list_items",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_1_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items1",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_1",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1"
          }
        },
        "displayName": "Signed 1559 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x2$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                      "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_1_access_list_items",
                      "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_1_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_1_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                      "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems"
                    }
                  },
                  "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf1S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_2_access_list_items",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_2_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items2",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items2"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_2",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_2"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2"
          }
        },
        "displayName": "Signed 2930 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x1$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                      "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_2_access_list_items",
                      "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_one_of_2_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_ONE_OF_2_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                      "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems"
                    }
                  },
                  "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf2S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items3",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items3"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_3",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3"
          }
        },
        "displayName": "Signed Legacy Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsOneOf1ItemsOneOf3S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "v": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactionsOneOf1Items": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items",
            "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items",
            "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
            "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items0",
                  "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items0"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_0",
                  "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_0"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0",
                  "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items0",
              "displayName": "Signed 4844 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items1",
                  "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_1",
                  "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1",
                  "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items1",
              "displayName": "Signed 1559 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items2",
                  "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items2"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_2",
                  "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_2"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_2"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2",
                  "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items2",
              "displayName": "Signed 2930 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items3",
                  "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items3"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_3",
                  "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items_3"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS_3"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3",
                  "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items3",
              "displayName": "Signed Legacy Transaction",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactionsOneOf1Items_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactions1": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactions1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactions1",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactions1",
            "safeName": "ethGetBlockByNumberResultInnerTransactions1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions_1",
            "safeName": "eth_get_block_by_number_result_inner_transactions_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_1",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactions1",
            "safeName": "EthGetBlockByNumberResultInnerTransactions1"
          }
        },
        "displayName": "Full transactions"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items",
                  "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items",
                  "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
                  "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items",
                  "safeName": "ethGetBlockByNumberResultInnerTransactionsOneOf1Items"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items",
                  "safeName": "eth_get_block_by_number_result_inner_transactions_one_of_1_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_ONE_OF_1_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
                  "safeName": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactionsOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactions1_example_autogenerated": [
            {
              "type": "string",
              "nonce": "string",
              "to": "string",
              "gas": "string",
              "value": "string",
              "input": "string",
              "maxPriorityFeePerGas": "string",
              "maxFeePerGas": "string",
              "maxFeePerBlobGas": "string",
              "accessList": [
                {}
              ],
              "blobVersionedHashes": [
                "string"
              ],
              "chainId": "string",
              "yParity": "string",
              "r": "string",
              "s": "string"
            }
          ]
        }
      }
    },
    "EthGetBlockByNumberResultInnerTransactions": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerTransactions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerTransactions",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerTransactions",
            "safeName": "ethGetBlockByNumberResultInnerTransactions"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_transactions",
            "safeName": "eth_get_block_by_number_result_inner_transactions"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerTransactions",
            "safeName": "EthGetBlockByNumberResultInnerTransactions"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactions1",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactions1",
                  "safeName": "ethGetBlockByNumberResultInnerTransactions1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions_1",
                  "safeName": "eth_get_block_by_number_result_inner_transactions_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_1",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactions1",
                  "safeName": "EthGetBlockByNumberResultInnerTransactions1"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactions1",
              "displayName": "Full transactions",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerTransactions_example_autogenerated": [
            "string"
          ]
        }
      }
    },
    "EthGetBlockByNumberResultInnerWithdrawalsItems": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInnerWithdrawalsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInnerWithdrawalsItems",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInnerWithdrawalsItems",
            "safeName": "ethGetBlockByNumberResultInnerWithdrawalsItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner_withdrawals_items",
            "safeName": "eth_get_block_by_number_result_inner_withdrawals_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_WITHDRAWALS_ITEMS",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_WITHDRAWALS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInnerWithdrawalsItems",
            "safeName": "EthGetBlockByNumberResultInnerWithdrawalsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "index",
                "camelCase": {
                  "unsafeName": "index",
                  "safeName": "index"
                },
                "snakeCase": {
                  "unsafeName": "index",
                  "safeName": "index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INDEX",
                  "safeName": "INDEX"
                },
                "pascalCase": {
                  "unsafeName": "Index",
                  "safeName": "Index"
                }
              },
              "wireValue": "index"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerWithdrawalsItemsIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "validatorIndex",
                "camelCase": {
                  "unsafeName": "validatorIndex",
                  "safeName": "validatorIndex"
                },
                "snakeCase": {
                  "unsafeName": "validator_index",
                  "safeName": "validator_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALIDATOR_INDEX",
                  "safeName": "VALIDATOR_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "ValidatorIndex",
                  "safeName": "ValidatorIndex"
                }
              },
              "wireValue": "validatorIndex"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerWithdrawalsItemsValidatorIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerWithdrawalsItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "amount",
                "camelCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "snakeCase": {
                  "unsafeName": "amount",
                  "safeName": "amount"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AMOUNT",
                  "safeName": "AMOUNT"
                },
                "pascalCase": {
                  "unsafeName": "Amount",
                  "safeName": "Amount"
                }
              },
              "wireValue": "amount"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerWithdrawalsItemsAmount_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInnerWithdrawalsItems_example_autogenerated": {
            "index": "string",
            "validatorIndex": "string",
            "address": "string",
            "amount": "string"
          }
        }
      }
    },
    "EthGetBlockByNumberResultInner": {
      "name": {
        "typeId": "EthGetBlockByNumberResultInner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResultInner",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResultInner",
            "safeName": "ethGetBlockByNumberResultInner"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result_inner",
            "safeName": "eth_get_block_by_number_result_inner"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResultInner",
            "safeName": "EthGetBlockByNumberResultInner"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parentHash",
                "camelCase": {
                  "unsafeName": "parentHash",
                  "safeName": "parentHash"
                },
                "snakeCase": {
                  "unsafeName": "parent_hash",
                  "safeName": "parent_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARENT_HASH",
                  "safeName": "PARENT_HASH"
                },
                "pascalCase": {
                  "unsafeName": "ParentHash",
                  "safeName": "ParentHash"
                }
              },
              "wireValue": "parentHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerParentHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sha3Uncles",
                "camelCase": {
                  "unsafeName": "sha3Uncles",
                  "safeName": "sha3Uncles"
                },
                "snakeCase": {
                  "unsafeName": "sha_3_uncles",
                  "safeName": "sha_3_uncles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SHA_3_UNCLES",
                  "safeName": "SHA_3_UNCLES"
                },
                "pascalCase": {
                  "unsafeName": "Sha3Uncles",
                  "safeName": "Sha3Uncles"
                }
              },
              "wireValue": "sha3Uncles"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerSha3Uncles_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "miner",
                "camelCase": {
                  "unsafeName": "miner",
                  "safeName": "miner"
                },
                "snakeCase": {
                  "unsafeName": "miner",
                  "safeName": "miner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MINER",
                  "safeName": "MINER"
                },
                "pascalCase": {
                  "unsafeName": "Miner",
                  "safeName": "Miner"
                }
              },
              "wireValue": "miner"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerMiner_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "stateRoot",
                "camelCase": {
                  "unsafeName": "stateRoot",
                  "safeName": "stateRoot"
                },
                "snakeCase": {
                  "unsafeName": "state_root",
                  "safeName": "state_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATE_ROOT",
                  "safeName": "STATE_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "StateRoot",
                  "safeName": "StateRoot"
                }
              },
              "wireValue": "stateRoot"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerStateRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionsRoot",
                "camelCase": {
                  "unsafeName": "transactionsRoot",
                  "safeName": "transactionsRoot"
                },
                "snakeCase": {
                  "unsafeName": "transactions_root",
                  "safeName": "transactions_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTIONS_ROOT",
                  "safeName": "TRANSACTIONS_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "TransactionsRoot",
                  "safeName": "TransactionsRoot"
                }
              },
              "wireValue": "transactionsRoot"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactionsRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "receiptsRoot",
                "camelCase": {
                  "unsafeName": "receiptsRoot",
                  "safeName": "receiptsRoot"
                },
                "snakeCase": {
                  "unsafeName": "receipts_root",
                  "safeName": "receipts_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RECEIPTS_ROOT",
                  "safeName": "RECEIPTS_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "ReceiptsRoot",
                  "safeName": "ReceiptsRoot"
                }
              },
              "wireValue": "receiptsRoot"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerReceiptsRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logsBloom",
                "camelCase": {
                  "unsafeName": "logsBloom",
                  "safeName": "logsBloom"
                },
                "snakeCase": {
                  "unsafeName": "logs_bloom",
                  "safeName": "logs_bloom"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOGS_BLOOM",
                  "safeName": "LOGS_BLOOM"
                },
                "pascalCase": {
                  "unsafeName": "LogsBloom",
                  "safeName": "LogsBloom"
                }
              },
              "wireValue": "logsBloom"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{512}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerLogsBloom_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "difficulty",
                "camelCase": {
                  "unsafeName": "difficulty",
                  "safeName": "difficulty"
                },
                "snakeCase": {
                  "unsafeName": "difficulty",
                  "safeName": "difficulty"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DIFFICULTY",
                  "safeName": "DIFFICULTY"
                },
                "pascalCase": {
                  "unsafeName": "Difficulty",
                  "safeName": "Difficulty"
                }
              },
              "wireValue": "difficulty"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerDifficulty_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "number",
                "camelCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "snakeCase": {
                  "unsafeName": "number",
                  "safeName": "number_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NUMBER",
                  "safeName": "NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "Number",
                  "safeName": "Number"
                }
              },
              "wireValue": "number"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasLimit",
                "camelCase": {
                  "unsafeName": "gasLimit",
                  "safeName": "gasLimit"
                },
                "snakeCase": {
                  "unsafeName": "gas_limit",
                  "safeName": "gas_limit"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_LIMIT",
                  "safeName": "GAS_LIMIT"
                },
                "pascalCase": {
                  "unsafeName": "GasLimit",
                  "safeName": "GasLimit"
                }
              },
              "wireValue": "gasLimit"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerGasLimit_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasUsed",
                "camelCase": {
                  "unsafeName": "gasUsed",
                  "safeName": "gasUsed"
                },
                "snakeCase": {
                  "unsafeName": "gas_used",
                  "safeName": "gas_used"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_USED",
                  "safeName": "GAS_USED"
                },
                "pascalCase": {
                  "unsafeName": "GasUsed",
                  "safeName": "GasUsed"
                }
              },
              "wireValue": "gasUsed"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerGasUsed_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamp",
                "camelCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "snakeCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMP",
                  "safeName": "TIMESTAMP"
                },
                "pascalCase": {
                  "unsafeName": "Timestamp",
                  "safeName": "Timestamp"
                }
              },
              "wireValue": "timestamp"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTimestamp_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "extraData",
                "camelCase": {
                  "unsafeName": "extraData",
                  "safeName": "extraData"
                },
                "snakeCase": {
                  "unsafeName": "extra_data",
                  "safeName": "extra_data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXTRA_DATA",
                  "safeName": "EXTRA_DATA"
                },
                "pascalCase": {
                  "unsafeName": "ExtraData",
                  "safeName": "ExtraData"
                }
              },
              "wireValue": "extraData"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerExtraData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "mixHash",
                "camelCase": {
                  "unsafeName": "mixHash",
                  "safeName": "mixHash"
                },
                "snakeCase": {
                  "unsafeName": "mix_hash",
                  "safeName": "mix_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MIX_HASH",
                  "safeName": "MIX_HASH"
                },
                "pascalCase": {
                  "unsafeName": "MixHash",
                  "safeName": "MixHash"
                }
              },
              "wireValue": "mixHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerMixHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{16}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerNonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "baseFeePerGas",
                "camelCase": {
                  "unsafeName": "baseFeePerGas",
                  "safeName": "baseFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "base_fee_per_gas",
                  "safeName": "base_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BASE_FEE_PER_GAS",
                  "safeName": "BASE_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "BaseFeePerGas",
                  "safeName": "BaseFeePerGas"
                }
              },
              "wireValue": "baseFeePerGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerBaseFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "withdrawalsRoot",
                "camelCase": {
                  "unsafeName": "withdrawalsRoot",
                  "safeName": "withdrawalsRoot"
                },
                "snakeCase": {
                  "unsafeName": "withdrawals_root",
                  "safeName": "withdrawals_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WITHDRAWALS_ROOT",
                  "safeName": "WITHDRAWALS_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "WithdrawalsRoot",
                  "safeName": "WithdrawalsRoot"
                }
              },
              "wireValue": "withdrawalsRoot"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerWithdrawalsRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobGasUsed",
                "camelCase": {
                  "unsafeName": "blobGasUsed",
                  "safeName": "blobGasUsed"
                },
                "snakeCase": {
                  "unsafeName": "blob_gas_used",
                  "safeName": "blob_gas_used"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_GAS_USED",
                  "safeName": "BLOB_GAS_USED"
                },
                "pascalCase": {
                  "unsafeName": "BlobGasUsed",
                  "safeName": "BlobGasUsed"
                }
              },
              "wireValue": "blobGasUsed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerBlobGasUsed_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "excessBlobGas",
                "camelCase": {
                  "unsafeName": "excessBlobGas",
                  "safeName": "excessBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "excess_blob_gas",
                  "safeName": "excess_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXCESS_BLOB_GAS",
                  "safeName": "EXCESS_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "ExcessBlobGas",
                  "safeName": "ExcessBlobGas"
                }
              },
              "wireValue": "excessBlobGas"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerExcessBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parentBeaconBlockRoot",
                "camelCase": {
                  "unsafeName": "parentBeaconBlockRoot",
                  "safeName": "parentBeaconBlockRoot"
                },
                "snakeCase": {
                  "unsafeName": "parent_beacon_block_root",
                  "safeName": "parent_beacon_block_root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARENT_BEACON_BLOCK_ROOT",
                  "safeName": "PARENT_BEACON_BLOCK_ROOT"
                },
                "pascalCase": {
                  "unsafeName": "ParentBeaconBlockRoot",
                  "safeName": "ParentBeaconBlockRoot"
                }
              },
              "wireValue": "parentBeaconBlockRoot"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerParentBeaconBlockRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                }
              },
              "wireValue": "size"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerSize_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactions",
                "camelCase": {
                  "unsafeName": "transactions",
                  "safeName": "transactions"
                },
                "snakeCase": {
                  "unsafeName": "transactions",
                  "safeName": "transactions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTIONS",
                  "safeName": "TRANSACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "Transactions",
                  "safeName": "Transactions"
                }
              },
              "wireValue": "transactions"
            },
            "valueType": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInnerTransactions",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInnerTransactions",
                  "safeName": "ethGetBlockByNumberResultInnerTransactions"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner_transactions",
                  "safeName": "eth_get_block_by_number_result_inner_transactions"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_TRANSACTIONS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInnerTransactions",
                  "safeName": "EthGetBlockByNumberResultInnerTransactions"
                }
              },
              "typeId": "EthGetBlockByNumberResultInnerTransactions",
              "inline": false,
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerTransactions_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "withdrawals",
                "camelCase": {
                  "unsafeName": "withdrawals",
                  "safeName": "withdrawals"
                },
                "snakeCase": {
                  "unsafeName": "withdrawals",
                  "safeName": "withdrawals"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WITHDRAWALS",
                  "safeName": "WITHDRAWALS"
                },
                "pascalCase": {
                  "unsafeName": "Withdrawals",
                  "safeName": "Withdrawals"
                }
              },
              "wireValue": "withdrawals"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetBlockByNumberResultInnerWithdrawalsItems",
                        "camelCase": {
                          "unsafeName": "ethGetBlockByNumberResultInnerWithdrawalsItems",
                          "safeName": "ethGetBlockByNumberResultInnerWithdrawalsItems"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_block_by_number_result_inner_withdrawals_items",
                          "safeName": "eth_get_block_by_number_result_inner_withdrawals_items"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_WITHDRAWALS_ITEMS",
                          "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER_WITHDRAWALS_ITEMS"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetBlockByNumberResultInnerWithdrawalsItems",
                          "safeName": "EthGetBlockByNumberResultInnerWithdrawalsItems"
                        }
                      },
                      "typeId": "EthGetBlockByNumberResultInnerWithdrawalsItems",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerWithdrawals_example_autogenerated": [
                  {
                    "index": "string",
                    "validatorIndex": "string",
                    "address": "string",
                    "amount": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "uncles",
                "camelCase": {
                  "unsafeName": "uncles",
                  "safeName": "uncles"
                },
                "snakeCase": {
                  "unsafeName": "uncles",
                  "safeName": "uncles"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UNCLES",
                  "safeName": "UNCLES"
                },
                "pascalCase": {
                  "unsafeName": "Uncles",
                  "safeName": "Uncles"
                }
              },
              "wireValue": "uncles"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetBlockByNumberResultInnerUncles_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResultInner_example_autogenerated": {
            "hash": "string",
            "parentHash": "string",
            "sha3Uncles": "string",
            "miner": "string",
            "stateRoot": "string",
            "transactionsRoot": "string",
            "receiptsRoot": "string",
            "logsBloom": "string",
            "number": "string",
            "gasLimit": "string",
            "gasUsed": "string",
            "timestamp": "string",
            "extraData": "string",
            "mixHash": "string",
            "nonce": "string",
            "size": "string",
            "transactions": [
              "string"
            ],
            "uncles": [
              "string"
            ]
          }
        }
      }
    },
    "EthGetBlockByNumberParamBlockNumberOrTag1": {
      "name": {
        "typeId": "EthGetBlockByNumberParamBlockNumberOrTag1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberParamBlockNumberOrTag1",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberParamBlockNumberOrTag1",
            "safeName": "ethGetBlockByNumberParamBlockNumberOrTag1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_param_block_number_or_tag_1",
            "safeName": "eth_get_block_by_number_param_block_number_or_tag_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberParamBlockNumberOrTag1",
            "safeName": "EthGetBlockByNumberParamBlockNumberOrTag1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberParamBlockNumberOrTag1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getBlockByNumber_Param_Block number or tag": {
      "name": {
        "typeId": "eth_getBlockByNumber_Param_Block number or tag",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBlockByNumber_Param_Block number or tag",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberParamBlockNumberOrTag",
            "safeName": "ethGetBlockByNumberParamBlockNumberOrTag"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_param_block_number_or_tag",
            "safeName": "eth_get_block_by_number_param_block_number_or_tag"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberParamBlockNumberOrTag",
            "safeName": "EthGetBlockByNumberParamBlockNumberOrTag"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberParamBlockNumberOrTag1",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberParamBlockNumberOrTag1",
                  "safeName": "ethGetBlockByNumberParamBlockNumberOrTag1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_param_block_number_or_tag_1",
                  "safeName": "eth_get_block_by_number_param_block_number_or_tag_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberParamBlockNumberOrTag1",
                  "safeName": "EthGetBlockByNumberParamBlockNumberOrTag1"
                }
              },
              "typeId": "EthGetBlockByNumberParamBlockNumberOrTag1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBlockByNumber_Param_Block number or tag_example_autogenerated": "string"
        }
      }
    },
    "eth_getBlockByNumber_Param_Hydrated transactions": {
      "name": {
        "typeId": "eth_getBlockByNumber_Param_Hydrated transactions",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBlockByNumber_Param_Hydrated transactions",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberParamHydratedTransactions",
            "safeName": "ethGetBlockByNumberParamHydratedTransactions"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_param_hydrated_transactions",
            "safeName": "eth_get_block_by_number_param_hydrated_transactions"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_HYDRATED_TRANSACTIONS",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_HYDRATED_TRANSACTIONS"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberParamHydratedTransactions",
            "safeName": "EthGetBlockByNumberParamHydratedTransactions"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "BOOLEAN",
            "v2": {
              "type": "boolean"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "BOOLEAN",
            "v2": {
              "type": "boolean"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBlockByNumber_Param_Hydrated transactions_example_autogenerated": true
        }
      }
    },
    "eth_getBlockByNumber_Result": {
      "name": {
        "typeId": "EthGetBlockByNumberResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockByNumberResult",
          "camelCase": {
            "unsafeName": "ethGetBlockByNumberResult",
            "safeName": "ethGetBlockByNumberResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_by_number_result",
            "safeName": "eth_get_block_by_number_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT",
            "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockByNumberResult",
            "safeName": "EthGetBlockByNumberResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInner",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInner",
                  "safeName": "ethGetBlockByNumberResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner",
                  "safeName": "eth_get_block_by_number_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInner",
                  "safeName": "EthGetBlockByNumberResultInner"
                }
              },
              "typeId": "EthGetBlockByNumberResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockByNumberResultInner",
                "camelCase": {
                  "unsafeName": "ethGetBlockByNumberResultInner",
                  "safeName": "ethGetBlockByNumberResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_by_number_result_inner",
                  "safeName": "eth_get_block_by_number_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER",
                  "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockByNumberResultInner",
                  "safeName": "EthGetBlockByNumberResultInner"
                }
              },
              "typeId": "EthGetBlockByNumberResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockByNumberResult_example_autogenerated": null
        }
      }
    },
    "eth_getBlockTransactionCountByHash_Param_Block hash": {
      "name": {
        "typeId": "eth_getBlockTransactionCountByHash_Param_Block hash",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBlockTransactionCountByHash_Param_Block hash",
          "camelCase": {
            "unsafeName": "ethGetBlockTransactionCountByHashParamBlockHash",
            "safeName": "ethGetBlockTransactionCountByHashParamBlockHash"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_transaction_count_by_hash_param_block_hash",
            "safeName": "eth_get_block_transaction_count_by_hash_param_block_hash"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH_PARAM_BLOCK_HASH",
            "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH_PARAM_BLOCK_HASH"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockTransactionCountByHashParamBlockHash",
            "safeName": "EthGetBlockTransactionCountByHashParamBlockHash"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBlockTransactionCountByHash_Param_Block hash_example_autogenerated": "string"
        }
      }
    },
    "eth_getBlockTransactionCountByHash_Result": {
      "name": {
        "typeId": "EthGetBlockTransactionCountByHashResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockTransactionCountByHashResult",
          "camelCase": {
            "unsafeName": "ethGetBlockTransactionCountByHashResult",
            "safeName": "ethGetBlockTransactionCountByHashResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_transaction_count_by_hash_result",
            "safeName": "eth_get_block_transaction_count_by_hash_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH_RESULT",
            "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockTransactionCountByHashResult",
            "safeName": "EthGetBlockTransactionCountByHashResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockTransactionCountByHashResult_example_autogenerated": null
        }
      }
    },
    "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1": {
      "name": {
        "typeId": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
          "camelCase": {
            "unsafeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
            "safeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag_1",
            "safeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1",
            "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
            "safeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getBlockTransactionCountByNumber_Param_Block number or tag": {
      "name": {
        "typeId": "eth_getBlockTransactionCountByNumber_Param_Block number or tag",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getBlockTransactionCountByNumber_Param_Block number or tag",
          "camelCase": {
            "unsafeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag",
            "safeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag",
            "safeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG",
            "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag",
            "safeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
                "camelCase": {
                  "unsafeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
                  "safeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag_1",
                  "safeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1",
                  "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
                  "safeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1"
                }
              },
              "typeId": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getBlockTransactionCountByNumber_Param_Block number or tag_example_autogenerated": "string"
        }
      }
    },
    "eth_getBlockTransactionCountByNumber_Result": {
      "name": {
        "typeId": "EthGetBlockTransactionCountByNumberResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetBlockTransactionCountByNumberResult",
          "camelCase": {
            "unsafeName": "ethGetBlockTransactionCountByNumberResult",
            "safeName": "ethGetBlockTransactionCountByNumberResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_block_transaction_count_by_number_result",
            "safeName": "eth_get_block_transaction_count_by_number_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_RESULT",
            "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetBlockTransactionCountByNumberResult",
            "safeName": "EthGetBlockTransactionCountByNumberResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetBlockTransactionCountByNumberResult_example_autogenerated": null
        }
      }
    },
    "EthGetCodeParamBlock1": {
      "name": {
        "typeId": "EthGetCodeParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetCodeParamBlock1",
          "camelCase": {
            "unsafeName": "ethGetCodeParamBlock1",
            "safeName": "ethGetCodeParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_code_param_block_1",
            "safeName": "eth_get_code_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_CODE_PARAM_BLOCK_1",
            "safeName": "ETH_GET_CODE_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetCodeParamBlock1",
            "safeName": "EthGetCodeParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetCodeParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getCode_Param_Block": {
      "name": {
        "typeId": "eth_getCode_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getCode_Param_Block",
          "camelCase": {
            "unsafeName": "ethGetCodeParamBlock",
            "safeName": "ethGetCodeParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_get_code_param_block",
            "safeName": "eth_get_code_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_CODE_PARAM_BLOCK",
            "safeName": "ETH_GET_CODE_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthGetCodeParamBlock",
            "safeName": "EthGetCodeParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetCodeParamBlock1",
                "camelCase": {
                  "unsafeName": "ethGetCodeParamBlock1",
                  "safeName": "ethGetCodeParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_code_param_block_1",
                  "safeName": "eth_get_code_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_CODE_PARAM_BLOCK_1",
                  "safeName": "ETH_GET_CODE_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetCodeParamBlock1",
                  "safeName": "EthGetCodeParamBlock1"
                }
              },
              "typeId": "EthGetCodeParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getCode_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "eth_getCode_Param_Address": {
      "name": {
        "typeId": "eth_getCode_Param_Address",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getCode_Param_Address",
          "camelCase": {
            "unsafeName": "ethGetCodeParamAddress",
            "safeName": "ethGetCodeParamAddress"
          },
          "snakeCase": {
            "unsafeName": "eth_get_code_param_address",
            "safeName": "eth_get_code_param_address"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_CODE_PARAM_ADDRESS",
            "safeName": "ETH_GET_CODE_PARAM_ADDRESS"
          },
          "pascalCase": {
            "unsafeName": "EthGetCodeParamAddress",
            "safeName": "EthGetCodeParamAddress"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getCode_Param_Address_example_autogenerated": "string"
        }
      }
    },
    "eth_getCode_Result": {
      "name": {
        "typeId": "EthGetCodeResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetCodeResult",
          "camelCase": {
            "unsafeName": "ethGetCodeResult",
            "safeName": "ethGetCodeResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_code_result",
            "safeName": "eth_get_code_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_CODE_RESULT",
            "safeName": "ETH_GET_CODE_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetCodeResult",
            "safeName": "EthGetCodeResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetCodeResult_example_autogenerated": "string"
        }
      }
    },
    "EthGetLogsResultOneOf1Items": {
      "name": {
        "typeId": "EthGetLogsResultOneOf1Items",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetLogsResultOneOf1Items",
          "camelCase": {
            "unsafeName": "ethGetLogsResultOneOf1Items",
            "safeName": "ethGetLogsResultOneOf1Items"
          },
          "snakeCase": {
            "unsafeName": "eth_get_logs_result_one_of_1_items",
            "safeName": "eth_get_logs_result_one_of_1_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_LOGS_RESULT_ONE_OF_1_ITEMS",
            "safeName": "ETH_GET_LOGS_RESULT_ONE_OF_1_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetLogsResultOneOf1Items",
            "safeName": "EthGetLogsResultOneOf1Items"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "removed",
                "camelCase": {
                  "unsafeName": "removed",
                  "safeName": "removed"
                },
                "snakeCase": {
                  "unsafeName": "removed",
                  "safeName": "removed"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REMOVED",
                  "safeName": "REMOVED"
                },
                "pascalCase": {
                  "unsafeName": "Removed",
                  "safeName": "Removed"
                }
              },
              "wireValue": "removed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsRemoved_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logIndex",
                "camelCase": {
                  "unsafeName": "logIndex",
                  "safeName": "logIndex"
                },
                "snakeCase": {
                  "unsafeName": "log_index",
                  "safeName": "log_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOG_INDEX",
                  "safeName": "LOG_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "LogIndex",
                  "safeName": "LogIndex"
                }
              },
              "wireValue": "logIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsLogIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsTransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionHash",
                "camelCase": {
                  "unsafeName": "transactionHash",
                  "safeName": "transactionHash"
                },
                "snakeCase": {
                  "unsafeName": "transaction_hash",
                  "safeName": "transaction_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_HASH",
                  "safeName": "TRANSACTION_HASH"
                },
                "pascalCase": {
                  "unsafeName": "TransactionHash",
                  "safeName": "TransactionHash"
                }
              },
              "wireValue": "transactionHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsTransactionHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsBlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsBlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "topics",
                "camelCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "snakeCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOPICS",
                  "safeName": "TOPICS"
                },
                "pascalCase": {
                  "unsafeName": "Topics",
                  "safeName": "Topics"
                }
              },
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsResultOneOf1ItemsTopics_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetLogsResultOneOf1Items_example_autogenerated": {
            "transactionHash": "string"
          }
        }
      }
    },
    "EthGetLogsResult1": {
      "name": {
        "typeId": "EthGetLogsResult1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetLogsResult1",
          "camelCase": {
            "unsafeName": "ethGetLogsResult1",
            "safeName": "ethGetLogsResult1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_logs_result_1",
            "safeName": "eth_get_logs_result_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_LOGS_RESULT_1",
            "safeName": "ETH_GET_LOGS_RESULT_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetLogsResult1",
            "safeName": "EthGetLogsResult1"
          }
        },
        "displayName": "new logs"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetLogsResultOneOf1Items",
                "camelCase": {
                  "unsafeName": "ethGetLogsResultOneOf1Items",
                  "safeName": "ethGetLogsResultOneOf1Items"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_logs_result_one_of_1_items",
                  "safeName": "eth_get_logs_result_one_of_1_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_LOGS_RESULT_ONE_OF_1_ITEMS",
                  "safeName": "ETH_GET_LOGS_RESULT_ONE_OF_1_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetLogsResultOneOf1Items",
                  "safeName": "EthGetLogsResultOneOf1Items"
                }
              },
              "typeId": "EthGetLogsResultOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetLogsResultOneOf1Items",
                "camelCase": {
                  "unsafeName": "ethGetLogsResultOneOf1Items",
                  "safeName": "ethGetLogsResultOneOf1Items"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_logs_result_one_of_1_items",
                  "safeName": "eth_get_logs_result_one_of_1_items"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_LOGS_RESULT_ONE_OF_1_ITEMS",
                  "safeName": "ETH_GET_LOGS_RESULT_ONE_OF_1_ITEMS"
                },
                "pascalCase": {
                  "unsafeName": "EthGetLogsResultOneOf1Items",
                  "safeName": "EthGetLogsResultOneOf1Items"
                }
              },
              "typeId": "EthGetLogsResultOneOf1Items",
              "inline": false,
              "type": "named"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetLogsResult1_example_autogenerated": [
            {
              "transactionHash": "string"
            }
          ]
        }
      }
    },
    "EthGetLogsResult": {
      "name": {
        "typeId": "EthGetLogsResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetLogsResult",
          "camelCase": {
            "unsafeName": "ethGetLogsResult",
            "safeName": "ethGetLogsResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_logs_result",
            "safeName": "eth_get_logs_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_LOGS_RESULT",
            "safeName": "ETH_GET_LOGS_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetLogsResult",
            "safeName": "EthGetLogsResult"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetLogsResult1",
                "camelCase": {
                  "unsafeName": "ethGetLogsResult1",
                  "safeName": "ethGetLogsResult1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_logs_result_1",
                  "safeName": "eth_get_logs_result_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_LOGS_RESULT_1",
                  "safeName": "ETH_GET_LOGS_RESULT_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetLogsResult1",
                  "safeName": "EthGetLogsResult1"
                }
              },
              "typeId": "EthGetLogsResult1",
              "displayName": "new logs",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetLogsResult_example_autogenerated": [
            "string"
          ]
        }
      }
    },
    "EthGetLogsParamFilterAddressInner": {
      "name": {
        "typeId": "EthGetLogsParamFilterAddressInner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetLogsParamFilterAddressInner",
          "camelCase": {
            "unsafeName": "ethGetLogsParamFilterAddressInner",
            "safeName": "ethGetLogsParamFilterAddressInner"
          },
          "snakeCase": {
            "unsafeName": "eth_get_logs_param_filter_address_inner",
            "safeName": "eth_get_logs_param_filter_address_inner"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_LOGS_PARAM_FILTER_ADDRESS_INNER",
            "safeName": "ETH_GET_LOGS_PARAM_FILTER_ADDRESS_INNER"
          },
          "pascalCase": {
            "unsafeName": "EthGetLogsParamFilterAddressInner",
            "safeName": "EthGetLogsParamFilterAddressInner"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetLogsParamFilterAddressInner_example_autogenerated": "string"
        }
      }
    },
    "EthGetLogsParamFilterTopicsInnerItems": {
      "name": {
        "typeId": "EthGetLogsParamFilterTopicsInnerItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetLogsParamFilterTopicsInnerItems",
          "camelCase": {
            "unsafeName": "ethGetLogsParamFilterTopicsInnerItems",
            "safeName": "ethGetLogsParamFilterTopicsInnerItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_logs_param_filter_topics_inner_items",
            "safeName": "eth_get_logs_param_filter_topics_inner_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_LOGS_PARAM_FILTER_TOPICS_INNER_ITEMS",
            "safeName": "ETH_GET_LOGS_PARAM_FILTER_TOPICS_INNER_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetLogsParamFilterTopicsInnerItems",
            "safeName": "EthGetLogsParamFilterTopicsInnerItems"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetLogsParamFilterTopicsInnerItems_example_autogenerated": "string"
        }
      }
    },
    "eth_getLogs_Param_Filter": {
      "name": {
        "typeId": "eth_getLogs_Param_Filter",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getLogs_Param_Filter",
          "camelCase": {
            "unsafeName": "ethGetLogsParamFilter",
            "safeName": "ethGetLogsParamFilter"
          },
          "snakeCase": {
            "unsafeName": "eth_get_logs_param_filter",
            "safeName": "eth_get_logs_param_filter"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_LOGS_PARAM_FILTER",
            "safeName": "ETH_GET_LOGS_PARAM_FILTER"
          },
          "pascalCase": {
            "unsafeName": "EthGetLogsParamFilter",
            "safeName": "EthGetLogsParamFilter"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "fromBlock",
                "camelCase": {
                  "unsafeName": "fromBlock",
                  "safeName": "fromBlock"
                },
                "snakeCase": {
                  "unsafeName": "from_block",
                  "safeName": "from_block"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM_BLOCK",
                  "safeName": "FROM_BLOCK"
                },
                "pascalCase": {
                  "unsafeName": "FromBlock",
                  "safeName": "FromBlock"
                }
              },
              "wireValue": "fromBlock"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsParamFilterFromBlock_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "toBlock",
                "camelCase": {
                  "unsafeName": "toBlock",
                  "safeName": "toBlock"
                },
                "snakeCase": {
                  "unsafeName": "to_block",
                  "safeName": "to_block"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO_BLOCK",
                  "safeName": "TO_BLOCK"
                },
                "pascalCase": {
                  "unsafeName": "ToBlock",
                  "safeName": "ToBlock"
                }
              },
              "wireValue": "toBlock"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsParamFilterToBlock_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetLogsParamFilterAddressInner",
                        "camelCase": {
                          "unsafeName": "ethGetLogsParamFilterAddressInner",
                          "safeName": "ethGetLogsParamFilterAddressInner"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_logs_param_filter_address_inner",
                          "safeName": "eth_get_logs_param_filter_address_inner"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_LOGS_PARAM_FILTER_ADDRESS_INNER",
                          "safeName": "ETH_GET_LOGS_PARAM_FILTER_ADDRESS_INNER"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetLogsParamFilterAddressInner",
                          "safeName": "EthGetLogsParamFilterAddressInner"
                        }
                      },
                      "typeId": "EthGetLogsParamFilterAddressInner",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsParamFilterAddress_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "topics",
                "camelCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "snakeCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOPICS",
                  "safeName": "TOPICS"
                },
                "pascalCase": {
                  "unsafeName": "Topics",
                  "safeName": "Topics"
                }
              },
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "container": {
                        "list": {
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": {
                            "originalName": "EthGetLogsParamFilterTopicsInnerItems",
                            "camelCase": {
                              "unsafeName": "ethGetLogsParamFilterTopicsInnerItems",
                              "safeName": "ethGetLogsParamFilterTopicsInnerItems"
                            },
                            "snakeCase": {
                              "unsafeName": "eth_get_logs_param_filter_topics_inner_items",
                              "safeName": "eth_get_logs_param_filter_topics_inner_items"
                            },
                            "screamingSnakeCase": {
                              "unsafeName": "ETH_GET_LOGS_PARAM_FILTER_TOPICS_INNER_ITEMS",
                              "safeName": "ETH_GET_LOGS_PARAM_FILTER_TOPICS_INNER_ITEMS"
                            },
                            "pascalCase": {
                              "unsafeName": "EthGetLogsParamFilterTopicsInnerItems",
                              "safeName": "EthGetLogsParamFilterTopicsInnerItems"
                            }
                          },
                          "typeId": "EthGetLogsParamFilterTopicsInnerItems",
                          "inline": false,
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetLogsParamFilterTopics_example_autogenerated": null
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getLogs_Param_Filter_example_autogenerated": {}
        }
      }
    },
    "eth_getLogs_Result": {
      "name": {
        "typeId": "EthGetLogsResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetLogsResult",
          "camelCase": {
            "unsafeName": "ethGetLogsResult",
            "safeName": "ethGetLogsResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_logs_result",
            "safeName": "eth_get_logs_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_LOGS_RESULT",
            "safeName": "ETH_GET_LOGS_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetLogsResult",
            "safeName": "EthGetLogsResult"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetLogsResult1",
                "camelCase": {
                  "unsafeName": "ethGetLogsResult1",
                  "safeName": "ethGetLogsResult1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_logs_result_1",
                  "safeName": "eth_get_logs_result_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_LOGS_RESULT_1",
                  "safeName": "ETH_GET_LOGS_RESULT_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetLogsResult1",
                  "safeName": "EthGetLogsResult1"
                }
              },
              "typeId": "EthGetLogsResult1",
              "displayName": "new logs",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetLogsResult_example_autogenerated": [
            "string"
          ]
        }
      }
    },
    "EthGetProofResultStorageProofItems": {
      "name": {
        "typeId": "EthGetProofResultStorageProofItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetProofResultStorageProofItems",
          "camelCase": {
            "unsafeName": "ethGetProofResultStorageProofItems",
            "safeName": "ethGetProofResultStorageProofItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_proof_result_storage_proof_items",
            "safeName": "eth_get_proof_result_storage_proof_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_PROOF_RESULT_STORAGE_PROOF_ITEMS",
            "safeName": "ETH_GET_PROOF_RESULT_STORAGE_PROOF_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetProofResultStorageProofItems",
            "safeName": "EthGetProofResultStorageProofItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "key",
                "camelCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "snakeCase": {
                  "unsafeName": "key",
                  "safeName": "key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "KEY",
                  "safeName": "KEY"
                },
                "pascalCase": {
                  "unsafeName": "Key",
                  "safeName": "Key"
                }
              },
              "wireValue": "key"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{0,64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultStorageProofItemsKey_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultStorageProofItemsValue_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "proof",
                "camelCase": {
                  "unsafeName": "proof",
                  "safeName": "proof"
                },
                "snakeCase": {
                  "unsafeName": "proof",
                  "safeName": "proof"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PROOF",
                  "safeName": "PROOF"
                },
                "pascalCase": {
                  "unsafeName": "Proof",
                  "safeName": "Proof"
                }
              },
              "wireValue": "proof"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultStorageProofItemsProof_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetProofResultStorageProofItems_example_autogenerated": {
            "key": "string",
            "value": "string",
            "proof": [
              "string"
            ]
          }
        }
      }
    },
    "EthGetProofResult": {
      "name": {
        "typeId": "EthGetProofResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetProofResult",
          "camelCase": {
            "unsafeName": "ethGetProofResult",
            "safeName": "ethGetProofResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_proof_result",
            "safeName": "eth_get_proof_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_PROOF_RESULT",
            "safeName": "ETH_GET_PROOF_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetProofResult",
            "safeName": "EthGetProofResult"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accountProof",
                "camelCase": {
                  "unsafeName": "accountProof",
                  "safeName": "accountProof"
                },
                "snakeCase": {
                  "unsafeName": "account_proof",
                  "safeName": "account_proof"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCOUNT_PROOF",
                  "safeName": "ACCOUNT_PROOF"
                },
                "pascalCase": {
                  "unsafeName": "AccountProof",
                  "safeName": "AccountProof"
                }
              },
              "wireValue": "accountProof"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultAccountProof_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "balance",
                "camelCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "snakeCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BALANCE",
                  "safeName": "BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "Balance",
                  "safeName": "Balance"
                }
              },
              "wireValue": "balance"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultBalance_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "codeHash",
                "camelCase": {
                  "unsafeName": "codeHash",
                  "safeName": "codeHash"
                },
                "snakeCase": {
                  "unsafeName": "code_hash",
                  "safeName": "code_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODE_HASH",
                  "safeName": "CODE_HASH"
                },
                "pascalCase": {
                  "unsafeName": "CodeHash",
                  "safeName": "CodeHash"
                }
              },
              "wireValue": "codeHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultCodeHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultNonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageHash",
                "camelCase": {
                  "unsafeName": "storageHash",
                  "safeName": "storageHash"
                },
                "snakeCase": {
                  "unsafeName": "storage_hash",
                  "safeName": "storage_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_HASH",
                  "safeName": "STORAGE_HASH"
                },
                "pascalCase": {
                  "unsafeName": "StorageHash",
                  "safeName": "StorageHash"
                }
              },
              "wireValue": "storageHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultStorageHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageProof",
                "camelCase": {
                  "unsafeName": "storageProof",
                  "safeName": "storageProof"
                },
                "snakeCase": {
                  "unsafeName": "storage_proof",
                  "safeName": "storage_proof"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_PROOF",
                  "safeName": "STORAGE_PROOF"
                },
                "pascalCase": {
                  "unsafeName": "StorageProof",
                  "safeName": "StorageProof"
                }
              },
              "wireValue": "storageProof"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetProofResultStorageProofItems",
                    "camelCase": {
                      "unsafeName": "ethGetProofResultStorageProofItems",
                      "safeName": "ethGetProofResultStorageProofItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_proof_result_storage_proof_items",
                      "safeName": "eth_get_proof_result_storage_proof_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_PROOF_RESULT_STORAGE_PROOF_ITEMS",
                      "safeName": "ETH_GET_PROOF_RESULT_STORAGE_PROOF_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetProofResultStorageProofItems",
                      "safeName": "EthGetProofResultStorageProofItems"
                    }
                  },
                  "typeId": "EthGetProofResultStorageProofItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultStorageProof_example_autogenerated": [
                  {
                    "key": "string",
                    "value": "string",
                    "proof": [
                      "string"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetProofResult_example_autogenerated": {
            "address": "string",
            "accountProof": [
              "string"
            ],
            "balance": "string",
            "codeHash": "string",
            "nonce": "string",
            "storageHash": "string",
            "storageProof": [
              {
                "key": "string",
                "value": "string",
                "proof": [
                  "string"
                ]
              }
            ]
          }
        }
      }
    },
    "EthGetProofParamBlock1": {
      "name": {
        "typeId": "EthGetProofParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetProofParamBlock1",
          "camelCase": {
            "unsafeName": "ethGetProofParamBlock1",
            "safeName": "ethGetProofParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_proof_param_block_1",
            "safeName": "eth_get_proof_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_PROOF_PARAM_BLOCK_1",
            "safeName": "ETH_GET_PROOF_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetProofParamBlock1",
            "safeName": "EthGetProofParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetProofParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getProof_Param_Block": {
      "name": {
        "typeId": "eth_getProof_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getProof_Param_Block",
          "camelCase": {
            "unsafeName": "ethGetProofParamBlock",
            "safeName": "ethGetProofParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_get_proof_param_block",
            "safeName": "eth_get_proof_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_PROOF_PARAM_BLOCK",
            "safeName": "ETH_GET_PROOF_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthGetProofParamBlock",
            "safeName": "EthGetProofParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetProofParamBlock1",
                "camelCase": {
                  "unsafeName": "ethGetProofParamBlock1",
                  "safeName": "ethGetProofParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_proof_param_block_1",
                  "safeName": "eth_get_proof_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_PROOF_PARAM_BLOCK_1",
                  "safeName": "ETH_GET_PROOF_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetProofParamBlock1",
                  "safeName": "EthGetProofParamBlock1"
                }
              },
              "typeId": "EthGetProofParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getProof_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "eth_getProof_Param_Address": {
      "name": {
        "typeId": "eth_getProof_Param_Address",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getProof_Param_Address",
          "camelCase": {
            "unsafeName": "ethGetProofParamAddress",
            "safeName": "ethGetProofParamAddress"
          },
          "snakeCase": {
            "unsafeName": "eth_get_proof_param_address",
            "safeName": "eth_get_proof_param_address"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_PROOF_PARAM_ADDRESS",
            "safeName": "ETH_GET_PROOF_PARAM_ADDRESS"
          },
          "pascalCase": {
            "unsafeName": "EthGetProofParamAddress",
            "safeName": "EthGetProofParamAddress"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getProof_Param_Address_example_autogenerated": "string"
        }
      }
    },
    "eth_getProof_Param_StorageKeys": {
      "name": {
        "typeId": "eth_getProof_Param_StorageKeys",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getProof_Param_StorageKeys",
          "camelCase": {
            "unsafeName": "ethGetProofParamStorageKeys",
            "safeName": "ethGetProofParamStorageKeys"
          },
          "snakeCase": {
            "unsafeName": "eth_get_proof_param_storage_keys",
            "safeName": "eth_get_proof_param_storage_keys"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_PROOF_PARAM_STORAGE_KEYS",
            "safeName": "ETH_GET_PROOF_PARAM_STORAGE_KEYS"
          },
          "pascalCase": {
            "unsafeName": "EthGetProofParamStorageKeys",
            "safeName": "EthGetProofParamStorageKeys"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{0,64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{0,64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getProof_Param_StorageKeys_example_autogenerated": [
            "string"
          ]
        }
      }
    },
    "eth_getProof_Result": {
      "name": {
        "typeId": "EthGetProofResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetProofResult",
          "camelCase": {
            "unsafeName": "ethGetProofResult",
            "safeName": "ethGetProofResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_proof_result",
            "safeName": "eth_get_proof_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_PROOF_RESULT",
            "safeName": "ETH_GET_PROOF_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetProofResult",
            "safeName": "EthGetProofResult"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accountProof",
                "camelCase": {
                  "unsafeName": "accountProof",
                  "safeName": "accountProof"
                },
                "snakeCase": {
                  "unsafeName": "account_proof",
                  "safeName": "account_proof"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCOUNT_PROOF",
                  "safeName": "ACCOUNT_PROOF"
                },
                "pascalCase": {
                  "unsafeName": "AccountProof",
                  "safeName": "AccountProof"
                }
              },
              "wireValue": "accountProof"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultAccountProof_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "balance",
                "camelCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "snakeCase": {
                  "unsafeName": "balance",
                  "safeName": "balance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BALANCE",
                  "safeName": "BALANCE"
                },
                "pascalCase": {
                  "unsafeName": "Balance",
                  "safeName": "Balance"
                }
              },
              "wireValue": "balance"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultBalance_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "codeHash",
                "camelCase": {
                  "unsafeName": "codeHash",
                  "safeName": "codeHash"
                },
                "snakeCase": {
                  "unsafeName": "code_hash",
                  "safeName": "code_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODE_HASH",
                  "safeName": "CODE_HASH"
                },
                "pascalCase": {
                  "unsafeName": "CodeHash",
                  "safeName": "CodeHash"
                }
              },
              "wireValue": "codeHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultCodeHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]{0,15})|0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultNonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageHash",
                "camelCase": {
                  "unsafeName": "storageHash",
                  "safeName": "storageHash"
                },
                "snakeCase": {
                  "unsafeName": "storage_hash",
                  "safeName": "storage_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_HASH",
                  "safeName": "STORAGE_HASH"
                },
                "pascalCase": {
                  "unsafeName": "StorageHash",
                  "safeName": "StorageHash"
                }
              },
              "wireValue": "storageHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultStorageHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageProof",
                "camelCase": {
                  "unsafeName": "storageProof",
                  "safeName": "storageProof"
                },
                "snakeCase": {
                  "unsafeName": "storage_proof",
                  "safeName": "storage_proof"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_PROOF",
                  "safeName": "STORAGE_PROOF"
                },
                "pascalCase": {
                  "unsafeName": "StorageProof",
                  "safeName": "StorageProof"
                }
              },
              "wireValue": "storageProof"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetProofResultStorageProofItems",
                    "camelCase": {
                      "unsafeName": "ethGetProofResultStorageProofItems",
                      "safeName": "ethGetProofResultStorageProofItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_proof_result_storage_proof_items",
                      "safeName": "eth_get_proof_result_storage_proof_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_PROOF_RESULT_STORAGE_PROOF_ITEMS",
                      "safeName": "ETH_GET_PROOF_RESULT_STORAGE_PROOF_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetProofResultStorageProofItems",
                      "safeName": "EthGetProofResultStorageProofItems"
                    }
                  },
                  "typeId": "EthGetProofResultStorageProofItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetProofResultStorageProof_example_autogenerated": [
                  {
                    "key": "string",
                    "value": "string",
                    "proof": [
                      "string"
                    ]
                  }
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetProofResult_example_autogenerated": {
            "address": "string",
            "accountProof": [
              "string"
            ],
            "balance": "string",
            "codeHash": "string",
            "nonce": "string",
            "storageHash": "string",
            "storageProof": [
              {
                "key": "string",
                "value": "string",
                "proof": [
                  "string"
                ]
              }
            ]
          }
        }
      }
    },
    "EthGetStorageAtParamBlock1": {
      "name": {
        "typeId": "EthGetStorageAtParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetStorageAtParamBlock1",
          "camelCase": {
            "unsafeName": "ethGetStorageAtParamBlock1",
            "safeName": "ethGetStorageAtParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_storage_at_param_block_1",
            "safeName": "eth_get_storage_at_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK_1",
            "safeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetStorageAtParamBlock1",
            "safeName": "EthGetStorageAtParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetStorageAtParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getStorageAt_Param_Block": {
      "name": {
        "typeId": "eth_getStorageAt_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getStorageAt_Param_Block",
          "camelCase": {
            "unsafeName": "ethGetStorageAtParamBlock",
            "safeName": "ethGetStorageAtParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_get_storage_at_param_block",
            "safeName": "eth_get_storage_at_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK",
            "safeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthGetStorageAtParamBlock",
            "safeName": "EthGetStorageAtParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetStorageAtParamBlock1",
                "camelCase": {
                  "unsafeName": "ethGetStorageAtParamBlock1",
                  "safeName": "ethGetStorageAtParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_storage_at_param_block_1",
                  "safeName": "eth_get_storage_at_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK_1",
                  "safeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetStorageAtParamBlock1",
                  "safeName": "EthGetStorageAtParamBlock1"
                }
              },
              "typeId": "EthGetStorageAtParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getStorageAt_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "eth_getStorageAt_Param_Address": {
      "name": {
        "typeId": "eth_getStorageAt_Param_Address",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getStorageAt_Param_Address",
          "camelCase": {
            "unsafeName": "ethGetStorageAtParamAddress",
            "safeName": "ethGetStorageAtParamAddress"
          },
          "snakeCase": {
            "unsafeName": "eth_get_storage_at_param_address",
            "safeName": "eth_get_storage_at_param_address"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_STORAGE_AT_PARAM_ADDRESS",
            "safeName": "ETH_GET_STORAGE_AT_PARAM_ADDRESS"
          },
          "pascalCase": {
            "unsafeName": "EthGetStorageAtParamAddress",
            "safeName": "EthGetStorageAtParamAddress"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getStorageAt_Param_Address_example_autogenerated": "string"
        }
      }
    },
    "eth_getStorageAt_Param_Storage slot": {
      "name": {
        "typeId": "eth_getStorageAt_Param_Storage slot",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getStorageAt_Param_Storage slot",
          "camelCase": {
            "unsafeName": "ethGetStorageAtParamStorageSlot",
            "safeName": "ethGetStorageAtParamStorageSlot"
          },
          "snakeCase": {
            "unsafeName": "eth_get_storage_at_param_storage_slot",
            "safeName": "eth_get_storage_at_param_storage_slot"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_STORAGE_AT_PARAM_STORAGE_SLOT",
            "safeName": "ETH_GET_STORAGE_AT_PARAM_STORAGE_SLOT"
          },
          "pascalCase": {
            "unsafeName": "EthGetStorageAtParamStorageSlot",
            "safeName": "EthGetStorageAtParamStorageSlot"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getStorageAt_Param_Storage slot_example_autogenerated": "string"
        }
      }
    },
    "eth_getStorageAt_Result": {
      "name": {
        "typeId": "EthGetStorageAtResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetStorageAtResult",
          "camelCase": {
            "unsafeName": "ethGetStorageAtResult",
            "safeName": "ethGetStorageAtResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_storage_at_result",
            "safeName": "eth_get_storage_at_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_STORAGE_AT_RESULT",
            "safeName": "ETH_GET_STORAGE_AT_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetStorageAtResult",
            "safeName": "EthGetStorageAtResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetStorageAtResult_example_autogenerated": "string"
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_0_access_list_items",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_0_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInner0": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInner0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInner0",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner0",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInner0"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_0",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_0"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_0",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_0"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner0",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInner0"
          }
        },
        "displayName": "Signed 4844 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0To_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerBlobGas",
                "camelCase": {
                  "unsafeName": "maxFeePerBlobGas",
                  "safeName": "maxFeePerBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_blob_gas",
                  "safeName": "max_fee_per_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_BLOB_GAS",
                  "safeName": "MAX_FEE_PER_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerBlobGas",
                  "safeName": "MaxFeePerBlobGas"
                }
              },
              "wireValue": "maxFeePerBlobGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0MaxFeePerBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
                      "safeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_0_access_list_items",
                      "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_0_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
                      "safeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobVersionedHashes",
                "camelCase": {
                  "unsafeName": "blobVersionedHashes",
                  "safeName": "blobVersionedHashes"
                },
                "snakeCase": {
                  "unsafeName": "blob_versioned_hashes",
                  "safeName": "blob_versioned_hashes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_VERSIONED_HASHES",
                  "safeName": "BLOB_VERSIONED_HASHES"
                },
                "pascalCase": {
                  "unsafeName": "BlobVersionedHashes",
                  "safeName": "BlobVersionedHashes"
                }
              },
              "wireValue": "blobVersionedHashes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0BlobVersionedHashes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf0S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInner0_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_1_access_list_items",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_1_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInner1": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInner1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInner1",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner1",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInner1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_1",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_1",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner1",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInner1"
          }
        },
        "displayName": "Signed 1559 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x2$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
                      "safeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_1_access_list_items",
                      "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_1_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
                      "safeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf1S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInner1_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_2_access_list_items",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_2_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInner2": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInner2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInner2",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner2",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInner2"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_2",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_2"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_2",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_2"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner2",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInner2"
          }
        },
        "displayName": "Signed 2930 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x1$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
                      "safeName": "ethGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_2_access_list_items",
                      "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_one_of_2_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
                      "safeName": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf2S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInner2_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInner3": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInner3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInner3",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner3",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInner3"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_3",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_3",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_3"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner3",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInner3"
          }
        },
        "displayName": "Signed Legacy Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockHashAndIndexResultInnerOneOf3S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInner3_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "v": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockHashAndIndexResultInner": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResultInner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResultInner",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner",
            "safeName": "ethGetTransactionByBlockHashAndIndexResultInner"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner",
            "safeName": "EthGetTransactionByBlockHashAndIndexResultInner"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockHashAndIndexResultInner0",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner0",
                  "safeName": "ethGetTransactionByBlockHashAndIndexResultInner0"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_0",
                  "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_0",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_0"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner0",
                  "safeName": "EthGetTransactionByBlockHashAndIndexResultInner0"
                }
              },
              "typeId": "EthGetTransactionByBlockHashAndIndexResultInner0",
              "displayName": "Signed 4844 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockHashAndIndexResultInner1",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner1",
                  "safeName": "ethGetTransactionByBlockHashAndIndexResultInner1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_1",
                  "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_1",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner1",
                  "safeName": "EthGetTransactionByBlockHashAndIndexResultInner1"
                }
              },
              "typeId": "EthGetTransactionByBlockHashAndIndexResultInner1",
              "displayName": "Signed 1559 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockHashAndIndexResultInner2",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner2",
                  "safeName": "ethGetTransactionByBlockHashAndIndexResultInner2"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_2",
                  "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_2"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_2",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_2"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner2",
                  "safeName": "EthGetTransactionByBlockHashAndIndexResultInner2"
                }
              },
              "typeId": "EthGetTransactionByBlockHashAndIndexResultInner2",
              "displayName": "Signed 2930 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockHashAndIndexResultInner3",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner3",
                  "safeName": "ethGetTransactionByBlockHashAndIndexResultInner3"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner_3",
                  "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner_3"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_3",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER_3"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner3",
                  "safeName": "EthGetTransactionByBlockHashAndIndexResultInner3"
                }
              },
              "typeId": "EthGetTransactionByBlockHashAndIndexResultInner3",
              "displayName": "Signed Legacy Transaction",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResultInner_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "eth_getTransactionByBlockHashAndIndex_Param_Block hash": {
      "name": {
        "typeId": "eth_getTransactionByBlockHashAndIndex_Param_Block hash",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionByBlockHashAndIndex_Param_Block hash",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexParamBlockHash",
            "safeName": "ethGetTransactionByBlockHashAndIndexParamBlockHash"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_param_block_hash",
            "safeName": "eth_get_transaction_by_block_hash_and_index_param_block_hash"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_PARAM_BLOCK_HASH",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_PARAM_BLOCK_HASH"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexParamBlockHash",
            "safeName": "EthGetTransactionByBlockHashAndIndexParamBlockHash"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionByBlockHashAndIndex_Param_Block hash_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionByBlockHashAndIndex_Param_Transaction index": {
      "name": {
        "typeId": "eth_getTransactionByBlockHashAndIndex_Param_Transaction index",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionByBlockHashAndIndex_Param_Transaction index",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexParamTransactionIndex",
            "safeName": "ethGetTransactionByBlockHashAndIndexParamTransactionIndex"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_param_transaction_index",
            "safeName": "eth_get_transaction_by_block_hash_and_index_param_transaction_index"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_PARAM_TRANSACTION_INDEX",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_PARAM_TRANSACTION_INDEX"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexParamTransactionIndex",
            "safeName": "EthGetTransactionByBlockHashAndIndexParamTransactionIndex"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionByBlockHashAndIndex_Param_Transaction index_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionByBlockHashAndIndex_Result": {
      "name": {
        "typeId": "EthGetTransactionByBlockHashAndIndexResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockHashAndIndexResult",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockHashAndIndexResult",
            "safeName": "ethGetTransactionByBlockHashAndIndexResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_hash_and_index_result",
            "safeName": "eth_get_transaction_by_block_hash_and_index_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockHashAndIndexResult",
            "safeName": "EthGetTransactionByBlockHashAndIndexResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockHashAndIndexResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner",
                  "safeName": "ethGetTransactionByBlockHashAndIndexResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner",
                  "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner",
                  "safeName": "EthGetTransactionByBlockHashAndIndexResultInner"
                }
              },
              "typeId": "EthGetTransactionByBlockHashAndIndexResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockHashAndIndexResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner",
                  "safeName": "ethGetTransactionByBlockHashAndIndexResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner",
                  "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner",
                  "safeName": "EthGetTransactionByBlockHashAndIndexResultInner"
                }
              },
              "typeId": "EthGetTransactionByBlockHashAndIndexResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockHashAndIndexResult_example_autogenerated": null
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_0_access_list_items",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_0_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInner0": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner0",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner0",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner0"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_0",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_0"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_0",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_0"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner0",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner0"
          }
        },
        "displayName": "Signed 4844 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0To_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerBlobGas",
                "camelCase": {
                  "unsafeName": "maxFeePerBlobGas",
                  "safeName": "maxFeePerBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_blob_gas",
                  "safeName": "max_fee_per_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_BLOB_GAS",
                  "safeName": "MAX_FEE_PER_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerBlobGas",
                  "safeName": "MaxFeePerBlobGas"
                }
              },
              "wireValue": "maxFeePerBlobGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0MaxFeePerBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
                      "safeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_0_access_list_items",
                      "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_0_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
                      "safeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobVersionedHashes",
                "camelCase": {
                  "unsafeName": "blobVersionedHashes",
                  "safeName": "blobVersionedHashes"
                },
                "snakeCase": {
                  "unsafeName": "blob_versioned_hashes",
                  "safeName": "blob_versioned_hashes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_VERSIONED_HASHES",
                  "safeName": "BLOB_VERSIONED_HASHES"
                },
                "pascalCase": {
                  "unsafeName": "BlobVersionedHashes",
                  "safeName": "BlobVersionedHashes"
                }
              },
              "wireValue": "blobVersionedHashes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0BlobVersionedHashes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf0S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInner0_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_1_access_list_items",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_1_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInner1": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner1",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner1",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_1",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_1",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner1",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner1"
          }
        },
        "displayName": "Signed 1559 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x2$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
                      "safeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_1_access_list_items",
                      "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_1_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
                      "safeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf1S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInner1_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_2_access_list_items",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_2_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInner2": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner2",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner2",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner2"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_2",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_2"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_2",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_2"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner2",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner2"
          }
        },
        "displayName": "Signed 2930 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x1$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
                      "safeName": "ethGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_2_access_list_items",
                      "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_one_of_2_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
                      "safeName": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf2S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInner2_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInner3": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner3",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner3",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner3"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_3",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_3",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_3"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner3",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner3"
          }
        },
        "displayName": "Signed Legacy Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByBlockNumberAndIndexResultInnerOneOf3S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInner3_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "v": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexResultInner": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner",
            "safeName": "eth_get_transaction_by_block_number_and_index_result_inner"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner0",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner0",
                  "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner0"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_0",
                  "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_0",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_0"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner0",
                  "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner0"
                }
              },
              "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner0",
              "displayName": "Signed 4844 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner1",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner1",
                  "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_1",
                  "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_1",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner1",
                  "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner1"
                }
              },
              "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner1",
              "displayName": "Signed 1559 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner2",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner2",
                  "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner2"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_2",
                  "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_2"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_2",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_2"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner2",
                  "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner2"
                }
              },
              "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner2",
              "displayName": "Signed 2930 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner3",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner3",
                  "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner3"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner_3",
                  "safeName": "eth_get_transaction_by_block_number_and_index_result_inner_3"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_3",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER_3"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner3",
                  "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner3"
                }
              },
              "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner3",
              "displayName": "Signed Legacy Transaction",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResultInner_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByBlockNumberAndIndexParamBlock1": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexParamBlock1",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexParamBlock1",
            "safeName": "ethGetTransactionByBlockNumberAndIndexParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_param_block_1",
            "safeName": "eth_get_transaction_by_block_number_and_index_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK_1",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexParamBlock1",
            "safeName": "EthGetTransactionByBlockNumberAndIndexParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getTransactionByBlockNumberAndIndex_Param_Block": {
      "name": {
        "typeId": "eth_getTransactionByBlockNumberAndIndex_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionByBlockNumberAndIndex_Param_Block",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexParamBlock",
            "safeName": "ethGetTransactionByBlockNumberAndIndexParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_param_block",
            "safeName": "eth_get_transaction_by_block_number_and_index_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexParamBlock",
            "safeName": "EthGetTransactionByBlockNumberAndIndexParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockNumberAndIndexParamBlock1",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockNumberAndIndexParamBlock1",
                  "safeName": "ethGetTransactionByBlockNumberAndIndexParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_number_and_index_param_block_1",
                  "safeName": "eth_get_transaction_by_block_number_and_index_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK_1",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockNumberAndIndexParamBlock1",
                  "safeName": "EthGetTransactionByBlockNumberAndIndexParamBlock1"
                }
              },
              "typeId": "EthGetTransactionByBlockNumberAndIndexParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionByBlockNumberAndIndex_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionByBlockNumberAndIndex_Param_Transaction index": {
      "name": {
        "typeId": "eth_getTransactionByBlockNumberAndIndex_Param_Transaction index",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionByBlockNumberAndIndex_Param_Transaction index",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexParamTransactionIndex",
            "safeName": "ethGetTransactionByBlockNumberAndIndexParamTransactionIndex"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_param_transaction_index",
            "safeName": "eth_get_transaction_by_block_number_and_index_param_transaction_index"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_TRANSACTION_INDEX",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_TRANSACTION_INDEX"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexParamTransactionIndex",
            "safeName": "EthGetTransactionByBlockNumberAndIndexParamTransactionIndex"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionByBlockNumberAndIndex_Param_Transaction index_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionByBlockNumberAndIndex_Result": {
      "name": {
        "typeId": "EthGetTransactionByBlockNumberAndIndexResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByBlockNumberAndIndexResult",
          "camelCase": {
            "unsafeName": "ethGetTransactionByBlockNumberAndIndexResult",
            "safeName": "ethGetTransactionByBlockNumberAndIndexResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_block_number_and_index_result",
            "safeName": "eth_get_transaction_by_block_number_and_index_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT",
            "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByBlockNumberAndIndexResult",
            "safeName": "EthGetTransactionByBlockNumberAndIndexResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner",
                  "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner",
                  "safeName": "eth_get_transaction_by_block_number_and_index_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner",
                  "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner"
                }
              },
              "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner",
                  "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner",
                  "safeName": "eth_get_transaction_by_block_number_and_index_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner",
                  "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner"
                }
              },
              "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByBlockNumberAndIndexResult_example_autogenerated": null
        }
      }
    },
    "EthGetTransactionByHashResultInnerOneOf0AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInnerOneOf0AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInnerOneOf0AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInnerOneOf0AccessListItems",
            "safeName": "ethGetTransactionByHashResultInnerOneOf0AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner_one_of_0_access_list_items",
            "safeName": "eth_get_transaction_by_hash_result_inner_one_of_0_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInnerOneOf0AccessListItems",
            "safeName": "EthGetTransactionByHashResultInnerOneOf0AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInnerOneOf0AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByHashResultInner0": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInner0",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInner0",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInner0",
            "safeName": "ethGetTransactionByHashResultInner0"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner_0",
            "safeName": "eth_get_transaction_by_hash_result_inner_0"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_0",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_0"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInner0",
            "safeName": "EthGetTransactionByHashResultInner0"
          }
        },
        "displayName": "Signed 4844 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0To_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerBlobGas",
                "camelCase": {
                  "unsafeName": "maxFeePerBlobGas",
                  "safeName": "maxFeePerBlobGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_blob_gas",
                  "safeName": "max_fee_per_blob_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_BLOB_GAS",
                  "safeName": "MAX_FEE_PER_BLOB_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerBlobGas",
                  "safeName": "MaxFeePerBlobGas"
                }
              },
              "wireValue": "maxFeePerBlobGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay for blob gas in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0MaxFeePerBlobGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByHashResultInnerOneOf0AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByHashResultInnerOneOf0AccessListItems",
                      "safeName": "ethGetTransactionByHashResultInnerOneOf0AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_hash_result_inner_one_of_0_access_list_items",
                      "safeName": "eth_get_transaction_by_hash_result_inner_one_of_0_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_0_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByHashResultInnerOneOf0AccessListItems",
                      "safeName": "EthGetTransactionByHashResultInnerOneOf0AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByHashResultInnerOneOf0AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobVersionedHashes",
                "camelCase": {
                  "unsafeName": "blobVersionedHashes",
                  "safeName": "blobVersionedHashes"
                },
                "snakeCase": {
                  "unsafeName": "blob_versioned_hashes",
                  "safeName": "blob_versioned_hashes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_VERSIONED_HASHES",
                  "safeName": "BLOB_VERSIONED_HASHES"
                },
                "pascalCase": {
                  "unsafeName": "BlobVersionedHashes",
                  "safeName": "BlobVersionedHashes"
                }
              },
              "wireValue": "blobVersionedHashes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "List of versioned blob hashes associated with the transaction's EIP-4844 data blobs.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0BlobVersionedHashes_example_autogenerated": [
                  "string"
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf0S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInner0_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByHashResultInnerOneOf1AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInnerOneOf1AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInnerOneOf1AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInnerOneOf1AccessListItems",
            "safeName": "ethGetTransactionByHashResultInnerOneOf1AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner_one_of_1_access_list_items",
            "safeName": "eth_get_transaction_by_hash_result_inner_one_of_1_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInnerOneOf1AccessListItems",
            "safeName": "EthGetTransactionByHashResultInnerOneOf1AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInnerOneOf1AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByHashResultInner1": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInner1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInner1",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInner1",
            "safeName": "ethGetTransactionByHashResultInner1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner_1",
            "safeName": "eth_get_transaction_by_hash_result_inner_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_1",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInner1",
            "safeName": "EthGetTransactionByHashResultInner1"
          }
        },
        "displayName": "Signed 1559 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x2$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxPriorityFeePerGas",
                "camelCase": {
                  "unsafeName": "maxPriorityFeePerGas",
                  "safeName": "maxPriorityFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_priority_fee_per_gas",
                  "safeName": "max_priority_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_PRIORITY_FEE_PER_GAS",
                  "safeName": "MAX_PRIORITY_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxPriorityFeePerGas",
                  "safeName": "MaxPriorityFeePerGas"
                }
              },
              "wireValue": "maxPriorityFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Maximum fee per gas the sender is willing to pay to miners in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1MaxPriorityFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "maxFeePerGas",
                "camelCase": {
                  "unsafeName": "maxFeePerGas",
                  "safeName": "maxFeePerGas"
                },
                "snakeCase": {
                  "unsafeName": "max_fee_per_gas",
                  "safeName": "max_fee_per_gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_FEE_PER_GAS",
                  "safeName": "MAX_FEE_PER_GAS"
                },
                "pascalCase": {
                  "unsafeName": "MaxFeePerGas",
                  "safeName": "MaxFeePerGas"
                }
              },
              "wireValue": "maxFeePerGas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The maximum total fee per gas the sender is willing to pay (includes the network / base fee and miner / priority fee) in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1MaxFeePerGas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The effective gas price paid by the sender in wei. For transactions not yet included in a block, this value should be set equal to the max fee per gas. This field is DEPRECATED, please transition to using effectiveGasPrice in the receipt object going forward.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByHashResultInnerOneOf1AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByHashResultInnerOneOf1AccessListItems",
                      "safeName": "ethGetTransactionByHashResultInnerOneOf1AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_hash_result_inner_one_of_1_access_list_items",
                      "safeName": "eth_get_transaction_by_hash_result_inner_one_of_1_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_1_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByHashResultInnerOneOf1AccessListItems",
                      "safeName": "EthGetTransactionByHashResultInnerOneOf1AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByHashResultInnerOneOf1AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf1S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInner1_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByHashResultInnerOneOf2AccessListItems": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInnerOneOf2AccessListItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInnerOneOf2AccessListItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInnerOneOf2AccessListItems",
            "safeName": "ethGetTransactionByHashResultInnerOneOf2AccessListItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner_one_of_2_access_list_items",
            "safeName": "eth_get_transaction_by_hash_result_inner_one_of_2_access_list_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInnerOneOf2AccessListItems",
            "safeName": "EthGetTransactionByHashResultInnerOneOf2AccessListItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2AccessListItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "storageKeys",
                "camelCase": {
                  "unsafeName": "storageKeys",
                  "safeName": "storageKeys"
                },
                "snakeCase": {
                  "unsafeName": "storage_keys",
                  "safeName": "storage_keys"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STORAGE_KEYS",
                  "safeName": "STORAGE_KEYS"
                },
                "pascalCase": {
                  "unsafeName": "StorageKeys",
                  "safeName": "StorageKeys"
                }
              },
              "wireValue": "storageKeys"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2AccessListItemsStorageKeys_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInnerOneOf2AccessListItems_example_autogenerated": {}
        }
      }
    },
    "EthGetTransactionByHashResultInner2": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInner2",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInner2",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInner2",
            "safeName": "ethGetTransactionByHashResultInner2"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner_2",
            "safeName": "eth_get_transaction_by_hash_result_inner_2"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_2",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_2"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInner2",
            "safeName": "EthGetTransactionByHashResultInner2"
          }
        },
        "displayName": "Signed 2930 Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x1$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "accessList",
                "camelCase": {
                  "unsafeName": "accessList",
                  "safeName": "accessList"
                },
                "snakeCase": {
                  "unsafeName": "access_list",
                  "safeName": "access_list"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_LIST",
                  "safeName": "ACCESS_LIST"
                },
                "pascalCase": {
                  "unsafeName": "AccessList",
                  "safeName": "AccessList"
                }
              },
              "wireValue": "accessList"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionByHashResultInnerOneOf2AccessListItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByHashResultInnerOneOf2AccessListItems",
                      "safeName": "ethGetTransactionByHashResultInnerOneOf2AccessListItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_hash_result_inner_one_of_2_access_list_items",
                      "safeName": "eth_get_transaction_by_hash_result_inner_one_of_2_access_list_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_ONE_OF_2_ACCESS_LIST_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByHashResultInnerOneOf2AccessListItems",
                      "safeName": "EthGetTransactionByHashResultInnerOneOf2AccessListItems"
                    }
                  },
                  "typeId": "EthGetTransactionByHashResultInnerOneOf2AccessListItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "docs": "EIP-2930 access list",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2AccessList_example_autogenerated": [
                  {}
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "yParity",
                "camelCase": {
                  "unsafeName": "yParity",
                  "safeName": "yParity"
                },
                "snakeCase": {
                  "unsafeName": "y_parity",
                  "safeName": "y_parity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "Y_PARITY",
                  "safeName": "Y_PARITY"
                },
                "pascalCase": {
                  "unsafeName": "YParity",
                  "safeName": "YParity"
                }
              },
              "wireValue": "yParity"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The parity (0 for even, 1 for odd) of the y-value of the secp256k1 signature.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2YParity_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "For backwards compatibility, `v` is optionally provided as an alternative to `yParity`. This field is DEPRECATED and all use of it should migrate to `yParity`.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf2S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInner2_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "accessList": [
              {}
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByHashResultInner3": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInner3",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInner3",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInner3",
            "safeName": "ethGetTransactionByHashResultInner3"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner_3",
            "safeName": "eth_get_transaction_by_hash_result_inner_3"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_3",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_3"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInner3",
            "safeName": "EthGetTransactionByHashResultInner3"
          }
        },
        "displayName": "Signed Legacy Transaction"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3BlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3BlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3From_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "hash",
                "camelCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "snakeCase": {
                  "unsafeName": "hash",
                  "safeName": "hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HASH",
                  "safeName": "HASH"
                },
                "pascalCase": {
                  "unsafeName": "Hash",
                  "safeName": "Hash"
                }
              },
              "wireValue": "hash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3Hash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3TransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x0$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3Type_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "nonce",
                "camelCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "snakeCase": {
                  "unsafeName": "nonce",
                  "safeName": "nonce"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NONCE",
                  "safeName": "NONCE"
                },
                "pascalCase": {
                  "unsafeName": "Nonce",
                  "safeName": "Nonce"
                }
              },
              "wireValue": "nonce"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3Nonce_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3To_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gas",
                "camelCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "snakeCase": {
                  "unsafeName": "gas",
                  "safeName": "gas"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS",
                  "safeName": "GAS"
                },
                "pascalCase": {
                  "unsafeName": "Gas",
                  "safeName": "Gas"
                }
              },
              "wireValue": "gas"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3Gas_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                }
              },
              "wireValue": "value"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3Value_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "input",
                "camelCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "snakeCase": {
                  "unsafeName": "input",
                  "safeName": "input"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INPUT",
                  "safeName": "INPUT"
                },
                "pascalCase": {
                  "unsafeName": "Input",
                  "safeName": "Input"
                }
              },
              "wireValue": "input"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]*$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3Input_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasPrice",
                "camelCase": {
                  "unsafeName": "gasPrice",
                  "safeName": "gasPrice"
                },
                "snakeCase": {
                  "unsafeName": "gas_price",
                  "safeName": "gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_PRICE",
                  "safeName": "GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "GasPrice",
                  "safeName": "GasPrice"
                }
              },
              "wireValue": "gasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The gas price willing to be paid by the sender in wei",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3GasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chainId",
                "camelCase": {
                  "unsafeName": "chainId",
                  "safeName": "chainId"
                },
                "snakeCase": {
                  "unsafeName": "chain_id",
                  "safeName": "chain_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAIN_ID",
                  "safeName": "CHAIN_ID"
                },
                "pascalCase": {
                  "unsafeName": "ChainId",
                  "safeName": "ChainId"
                }
              },
              "wireValue": "chainId"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Chain ID that this transaction is valid on.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3ChainId_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "v",
                "camelCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "snakeCase": {
                  "unsafeName": "v",
                  "safeName": "v"
                },
                "screamingSnakeCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                },
                "pascalCase": {
                  "unsafeName": "V",
                  "safeName": "V"
                }
              },
              "wireValue": "v"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3V_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "r",
                "camelCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "snakeCase": {
                  "unsafeName": "r",
                  "safeName": "r"
                },
                "screamingSnakeCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                },
                "pascalCase": {
                  "unsafeName": "R",
                  "safeName": "R"
                }
              },
              "wireValue": "r"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3R_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s",
                "camelCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "snakeCase": {
                  "unsafeName": "s",
                  "safeName": "s"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                },
                "pascalCase": {
                  "unsafeName": "S",
                  "safeName": "S"
                }
              },
              "wireValue": "s"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionByHashResultInnerOneOf3S_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInner3_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "gasPrice": "string",
            "v": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "EthGetTransactionByHashResultInner": {
      "name": {
        "typeId": "EthGetTransactionByHashResultInner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResultInner",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResultInner",
            "safeName": "ethGetTransactionByHashResultInner"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result_inner",
            "safeName": "eth_get_transaction_by_hash_result_inner"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResultInner",
            "safeName": "EthGetTransactionByHashResultInner"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByHashResultInner0",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByHashResultInner0",
                  "safeName": "ethGetTransactionByHashResultInner0"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_hash_result_inner_0",
                  "safeName": "eth_get_transaction_by_hash_result_inner_0"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_0",
                  "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_0"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByHashResultInner0",
                  "safeName": "EthGetTransactionByHashResultInner0"
                }
              },
              "typeId": "EthGetTransactionByHashResultInner0",
              "displayName": "Signed 4844 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByHashResultInner1",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByHashResultInner1",
                  "safeName": "ethGetTransactionByHashResultInner1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_hash_result_inner_1",
                  "safeName": "eth_get_transaction_by_hash_result_inner_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_1",
                  "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByHashResultInner1",
                  "safeName": "EthGetTransactionByHashResultInner1"
                }
              },
              "typeId": "EthGetTransactionByHashResultInner1",
              "displayName": "Signed 1559 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByHashResultInner2",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByHashResultInner2",
                  "safeName": "ethGetTransactionByHashResultInner2"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_hash_result_inner_2",
                  "safeName": "eth_get_transaction_by_hash_result_inner_2"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_2",
                  "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_2"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByHashResultInner2",
                  "safeName": "EthGetTransactionByHashResultInner2"
                }
              },
              "typeId": "EthGetTransactionByHashResultInner2",
              "displayName": "Signed 2930 Transaction",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByHashResultInner3",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByHashResultInner3",
                  "safeName": "ethGetTransactionByHashResultInner3"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_hash_result_inner_3",
                  "safeName": "eth_get_transaction_by_hash_result_inner_3"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_3",
                  "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER_3"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByHashResultInner3",
                  "safeName": "EthGetTransactionByHashResultInner3"
                }
              },
              "typeId": "EthGetTransactionByHashResultInner3",
              "displayName": "Signed Legacy Transaction",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResultInner_example_autogenerated": {
            "type": "string",
            "nonce": "string",
            "to": "string",
            "gas": "string",
            "value": "string",
            "input": "string",
            "maxPriorityFeePerGas": "string",
            "maxFeePerGas": "string",
            "maxFeePerBlobGas": "string",
            "accessList": [
              {}
            ],
            "blobVersionedHashes": [
              "string"
            ],
            "chainId": "string",
            "yParity": "string",
            "r": "string",
            "s": "string"
          }
        }
      }
    },
    "eth_getTransactionByHash_Param_Transaction hash": {
      "name": {
        "typeId": "eth_getTransactionByHash_Param_Transaction hash",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionByHash_Param_Transaction hash",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashParamTransactionHash",
            "safeName": "ethGetTransactionByHashParamTransactionHash"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_param_transaction_hash",
            "safeName": "eth_get_transaction_by_hash_param_transaction_hash"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_PARAM_TRANSACTION_HASH",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_PARAM_TRANSACTION_HASH"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashParamTransactionHash",
            "safeName": "EthGetTransactionByHashParamTransactionHash"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionByHash_Param_Transaction hash_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionByHash_Result": {
      "name": {
        "typeId": "EthGetTransactionByHashResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionByHashResult",
          "camelCase": {
            "unsafeName": "ethGetTransactionByHashResult",
            "safeName": "ethGetTransactionByHashResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_by_hash_result",
            "safeName": "eth_get_transaction_by_hash_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT",
            "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionByHashResult",
            "safeName": "EthGetTransactionByHashResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByHashResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByHashResultInner",
                  "safeName": "ethGetTransactionByHashResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_hash_result_inner",
                  "safeName": "eth_get_transaction_by_hash_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByHashResultInner",
                  "safeName": "EthGetTransactionByHashResultInner"
                }
              },
              "typeId": "EthGetTransactionByHashResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionByHashResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionByHashResultInner",
                  "safeName": "ethGetTransactionByHashResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_by_hash_result_inner",
                  "safeName": "eth_get_transaction_by_hash_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionByHashResultInner",
                  "safeName": "EthGetTransactionByHashResultInner"
                }
              },
              "typeId": "EthGetTransactionByHashResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionByHashResult_example_autogenerated": null
        }
      }
    },
    "EthGetTransactionCountParamBlock1": {
      "name": {
        "typeId": "EthGetTransactionCountParamBlock1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionCountParamBlock1",
          "camelCase": {
            "unsafeName": "ethGetTransactionCountParamBlock1",
            "safeName": "ethGetTransactionCountParamBlock1"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_count_param_block_1",
            "safeName": "eth_get_transaction_count_param_block_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK_1",
            "safeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK_1"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionCountParamBlock1",
            "safeName": "EthGetTransactionCountParamBlock1"
          }
        },
        "displayName": "Block tag"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": {
                "originalName": "earliest",
                "camelCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "snakeCase": {
                  "unsafeName": "earliest",
                  "safeName": "earliest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EARLIEST",
                  "safeName": "EARLIEST"
                },
                "pascalCase": {
                  "unsafeName": "Earliest",
                  "safeName": "Earliest"
                }
              },
              "wireValue": "earliest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "finalized",
                "camelCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "snakeCase": {
                  "unsafeName": "finalized",
                  "safeName": "finalized"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINALIZED",
                  "safeName": "FINALIZED"
                },
                "pascalCase": {
                  "unsafeName": "Finalized",
                  "safeName": "Finalized"
                }
              },
              "wireValue": "finalized"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "safe",
                "camelCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "snakeCase": {
                  "unsafeName": "safe",
                  "safeName": "safe"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAFE",
                  "safeName": "SAFE"
                },
                "pascalCase": {
                  "unsafeName": "Safe",
                  "safeName": "Safe"
                }
              },
              "wireValue": "safe"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "latest",
                "camelCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "snakeCase": {
                  "unsafeName": "latest",
                  "safeName": "latest"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATEST",
                  "safeName": "LATEST"
                },
                "pascalCase": {
                  "unsafeName": "Latest",
                  "safeName": "Latest"
                }
              },
              "wireValue": "latest"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "pending",
                "camelCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "snakeCase": {
                  "unsafeName": "pending",
                  "safeName": "pending"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PENDING",
                  "safeName": "PENDING"
                },
                "pascalCase": {
                  "unsafeName": "Pending",
                  "safeName": "Pending"
                }
              },
              "wireValue": "pending"
            }
          }
        ],
        "type": "enum"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error",
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionCountParamBlock1_example_autogenerated": "earliest"
        }
      }
    },
    "eth_getTransactionCount_Param_Block": {
      "name": {
        "typeId": "eth_getTransactionCount_Param_Block",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionCount_Param_Block",
          "camelCase": {
            "unsafeName": "ethGetTransactionCountParamBlock",
            "safeName": "ethGetTransactionCountParamBlock"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_count_param_block",
            "safeName": "eth_get_transaction_count_param_block"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK",
            "safeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionCountParamBlock",
            "safeName": "EthGetTransactionCountParamBlock"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionCountParamBlock1",
                "camelCase": {
                  "unsafeName": "ethGetTransactionCountParamBlock1",
                  "safeName": "ethGetTransactionCountParamBlock1"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_count_param_block_1",
                  "safeName": "eth_get_transaction_count_param_block_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK_1",
                  "safeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK_1"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionCountParamBlock1",
                  "safeName": "EthGetTransactionCountParamBlock1"
                }
              },
              "typeId": "EthGetTransactionCountParamBlock1",
              "displayName": "Block tag",
              "inline": false,
              "type": "named"
            },
            "docs": "`earliest`: The lowest numbered block the client has available; `finalized`: The most recent crypto-economically secure block, cannot be re-orged outside of manual intervention driven by community coordination; `safe`: The most recent block that is safe from re-orgs under honest majority and certain synchronicity assumptions; `latest`: The most recent block in the canonical chain observed by the client, this block may be re-orged out of the canonical chain even under healthy/normal conditions; `pending`: A sample next block built by the client on top of `latest` and containing the set of transactions usually taken from local mempool. Before the merge transition is finalized, any call querying for `finalized` or `safe` block MUST be responded to with `-39001: Unknown block` error"
          },
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionCount_Param_Block_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionCount_Param_Address": {
      "name": {
        "typeId": "eth_getTransactionCount_Param_Address",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionCount_Param_Address",
          "camelCase": {
            "unsafeName": "ethGetTransactionCountParamAddress",
            "safeName": "ethGetTransactionCountParamAddress"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_count_param_address",
            "safeName": "eth_get_transaction_count_param_address"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_COUNT_PARAM_ADDRESS",
            "safeName": "ETH_GET_TRANSACTION_COUNT_PARAM_ADDRESS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionCountParamAddress",
            "safeName": "EthGetTransactionCountParamAddress"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-fA-F]{40}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionCount_Param_Address_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionCount_Result": {
      "name": {
        "typeId": "EthGetTransactionCountResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionCountResult",
          "camelCase": {
            "unsafeName": "ethGetTransactionCountResult",
            "safeName": "ethGetTransactionCountResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_count_result",
            "safeName": "eth_get_transaction_count_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_COUNT_RESULT",
            "safeName": "ETH_GET_TRANSACTION_COUNT_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionCountResult",
            "safeName": "EthGetTransactionCountResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionCountResult_example_autogenerated": "string"
        }
      }
    },
    "EthGetTransactionReceiptResultInnerLogsItems": {
      "name": {
        "typeId": "EthGetTransactionReceiptResultInnerLogsItems",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionReceiptResultInnerLogsItems",
          "camelCase": {
            "unsafeName": "ethGetTransactionReceiptResultInnerLogsItems",
            "safeName": "ethGetTransactionReceiptResultInnerLogsItems"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_receipt_result_inner_logs_items",
            "safeName": "eth_get_transaction_receipt_result_inner_logs_items"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER_LOGS_ITEMS",
            "safeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER_LOGS_ITEMS"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionReceiptResultInnerLogsItems",
            "safeName": "EthGetTransactionReceiptResultInnerLogsItems"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "removed",
                "camelCase": {
                  "unsafeName": "removed",
                  "safeName": "removed"
                },
                "snakeCase": {
                  "unsafeName": "removed",
                  "safeName": "removed"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REMOVED",
                  "safeName": "REMOVED"
                },
                "pascalCase": {
                  "unsafeName": "Removed",
                  "safeName": "Removed"
                }
              },
              "wireValue": "removed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsRemoved_example_autogenerated": true
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logIndex",
                "camelCase": {
                  "unsafeName": "logIndex",
                  "safeName": "logIndex"
                },
                "snakeCase": {
                  "unsafeName": "log_index",
                  "safeName": "log_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOG_INDEX",
                  "safeName": "LOG_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "LogIndex",
                  "safeName": "LogIndex"
                }
              },
              "wireValue": "logIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsLogIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsTransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionHash",
                "camelCase": {
                  "unsafeName": "transactionHash",
                  "safeName": "transactionHash"
                },
                "snakeCase": {
                  "unsafeName": "transaction_hash",
                  "safeName": "transaction_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_HASH",
                  "safeName": "TRANSACTION_HASH"
                },
                "pascalCase": {
                  "unsafeName": "TransactionHash",
                  "safeName": "TransactionHash"
                }
              },
              "wireValue": "transactionHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsTransactionHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsBlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsBlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "address",
                "camelCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "snakeCase": {
                  "unsafeName": "address",
                  "safeName": "address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ADDRESS",
                  "safeName": "ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "Address",
                  "safeName": "Address"
                }
              },
              "wireValue": "address"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "data",
                "camelCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "snakeCase": {
                  "unsafeName": "data",
                  "safeName": "data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATA",
                  "safeName": "DATA"
                },
                "pascalCase": {
                  "unsafeName": "Data",
                  "safeName": "Data"
                }
              },
              "wireValue": "data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsData_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "topics",
                "camelCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "snakeCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOPICS",
                  "safeName": "TOPICS"
                },
                "pascalCase": {
                  "unsafeName": "Topics",
                  "safeName": "Topics"
                }
              },
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsItemsTopics_example_autogenerated": [
                  "string"
                ]
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionReceiptResultInnerLogsItems_example_autogenerated": {
            "transactionHash": "string"
          }
        }
      }
    },
    "EthGetTransactionReceiptResultInner": {
      "name": {
        "typeId": "EthGetTransactionReceiptResultInner",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionReceiptResultInner",
          "camelCase": {
            "unsafeName": "ethGetTransactionReceiptResultInner",
            "safeName": "ethGetTransactionReceiptResultInner"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_receipt_result_inner",
            "safeName": "eth_get_transaction_receipt_result_inner"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER",
            "safeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionReceiptResultInner",
            "safeName": "EthGetTransactionReceiptResultInner"
          }
        }
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                }
              },
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([0-9a-fA-F]?){1,2}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerType_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionHash",
                "camelCase": {
                  "unsafeName": "transactionHash",
                  "safeName": "transactionHash"
                },
                "snakeCase": {
                  "unsafeName": "transaction_hash",
                  "safeName": "transaction_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_HASH",
                  "safeName": "TRANSACTION_HASH"
                },
                "pascalCase": {
                  "unsafeName": "TransactionHash",
                  "safeName": "TransactionHash"
                }
              },
              "wireValue": "transactionHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerTransactionHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transactionIndex",
                "camelCase": {
                  "unsafeName": "transactionIndex",
                  "safeName": "transactionIndex"
                },
                "snakeCase": {
                  "unsafeName": "transaction_index",
                  "safeName": "transaction_index"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSACTION_INDEX",
                  "safeName": "TRANSACTION_INDEX"
                },
                "pascalCase": {
                  "unsafeName": "TransactionIndex",
                  "safeName": "TransactionIndex"
                }
              },
              "wireValue": "transactionIndex"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerTransactionIndex_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockHash",
                "camelCase": {
                  "unsafeName": "blockHash",
                  "safeName": "blockHash"
                },
                "snakeCase": {
                  "unsafeName": "block_hash",
                  "safeName": "block_hash"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_HASH",
                  "safeName": "BLOCK_HASH"
                },
                "pascalCase": {
                  "unsafeName": "BlockHash",
                  "safeName": "BlockHash"
                }
              },
              "wireValue": "blockHash"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{64}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerBlockHash_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blockNumber",
                "camelCase": {
                  "unsafeName": "blockNumber",
                  "safeName": "blockNumber"
                },
                "snakeCase": {
                  "unsafeName": "block_number",
                  "safeName": "block_number"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOCK_NUMBER",
                  "safeName": "BLOCK_NUMBER"
                },
                "pascalCase": {
                  "unsafeName": "BlockNumber",
                  "safeName": "BlockNumber"
                }
              },
              "wireValue": "blockNumber"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerBlockNumber_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from_"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                }
              },
              "wireValue": "from"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-fA-F]{40}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerFrom_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                }
              },
              "wireValue": "to"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Address of the receiver or null in a contract creation transaction.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerTo_example_autogenerated": null
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "cumulativeGasUsed",
                "camelCase": {
                  "unsafeName": "cumulativeGasUsed",
                  "safeName": "cumulativeGasUsed"
                },
                "snakeCase": {
                  "unsafeName": "cumulative_gas_used",
                  "safeName": "cumulative_gas_used"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUMULATIVE_GAS_USED",
                  "safeName": "CUMULATIVE_GAS_USED"
                },
                "pascalCase": {
                  "unsafeName": "CumulativeGasUsed",
                  "safeName": "CumulativeGasUsed"
                }
              },
              "wireValue": "cumulativeGasUsed"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The sum of gas used by this transaction and all preceding transactions in the same block.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerCumulativeGasUsed_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gasUsed",
                "camelCase": {
                  "unsafeName": "gasUsed",
                  "safeName": "gasUsed"
                },
                "snakeCase": {
                  "unsafeName": "gas_used",
                  "safeName": "gas_used"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GAS_USED",
                  "safeName": "GAS_USED"
                },
                "pascalCase": {
                  "unsafeName": "GasUsed",
                  "safeName": "GasUsed"
                }
              },
              "wireValue": "gasUsed"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The amount of gas used for this specific transaction alone.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerGasUsed_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobGasUsed",
                "camelCase": {
                  "unsafeName": "blobGasUsed",
                  "safeName": "blobGasUsed"
                },
                "snakeCase": {
                  "unsafeName": "blob_gas_used",
                  "safeName": "blob_gas_used"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_GAS_USED",
                  "safeName": "BLOB_GAS_USED"
                },
                "pascalCase": {
                  "unsafeName": "BlobGasUsed",
                  "safeName": "BlobGasUsed"
                }
              },
              "wireValue": "blobGasUsed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The amount of blob gas used for this specific transaction. Only specified for blob transactions as defined by EIP-4844.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerBlobGasUsed_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "contractAddress",
                "camelCase": {
                  "unsafeName": "contractAddress",
                  "safeName": "contractAddress"
                },
                "snakeCase": {
                  "unsafeName": "contract_address",
                  "safeName": "contract_address"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTRACT_ADDRESS",
                  "safeName": "CONTRACT_ADDRESS"
                },
                "pascalCase": {
                  "unsafeName": "ContractAddress",
                  "safeName": "ContractAddress"
                }
              },
              "wireValue": "contractAddress"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-fA-F]{40}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The contract address created, if the transaction was a contract creation, otherwise null.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerContractAddress_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logs",
                "camelCase": {
                  "unsafeName": "logs",
                  "safeName": "logs"
                },
                "snakeCase": {
                  "unsafeName": "logs",
                  "safeName": "logs"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOGS",
                  "safeName": "LOGS"
                },
                "pascalCase": {
                  "unsafeName": "Logs",
                  "safeName": "Logs"
                }
              },
              "wireValue": "logs"
            },
            "valueType": {
              "container": {
                "list": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetTransactionReceiptResultInnerLogsItems",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionReceiptResultInnerLogsItems",
                      "safeName": "ethGetTransactionReceiptResultInnerLogsItems"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_receipt_result_inner_logs_items",
                      "safeName": "eth_get_transaction_receipt_result_inner_logs_items"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER_LOGS_ITEMS",
                      "safeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER_LOGS_ITEMS"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionReceiptResultInnerLogsItems",
                      "safeName": "EthGetTransactionReceiptResultInnerLogsItems"
                    }
                  },
                  "typeId": "EthGetTransactionReceiptResultInnerLogsItems",
                  "inline": false,
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogs_example_autogenerated": [
                  {
                    "transactionHash": "string"
                  }
                ]
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "logsBloom",
                "camelCase": {
                  "unsafeName": "logsBloom",
                  "safeName": "logsBloom"
                },
                "snakeCase": {
                  "unsafeName": "logs_bloom",
                  "safeName": "logs_bloom"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOGS_BLOOM",
                  "safeName": "LOGS_BLOOM"
                },
                "pascalCase": {
                  "unsafeName": "LogsBloom",
                  "safeName": "LogsBloom"
                }
              },
              "wireValue": "logsBloom"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x[0-9a-f]{512}$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerLogsBloom_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "root",
                "camelCase": {
                  "unsafeName": "root",
                  "safeName": "root"
                },
                "snakeCase": {
                  "unsafeName": "root",
                  "safeName": "root"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ROOT",
                  "safeName": "ROOT"
                },
                "pascalCase": {
                  "unsafeName": "Root",
                  "safeName": "Root"
                }
              },
              "wireValue": "root"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The post-transaction state root. Only specified for transactions included before the Byzantium upgrade.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerRoot_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                }
              },
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "Either 1 (success) or 0 (failure). Only specified for transactions included after the Byzantium upgrade.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerStatus_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "effectiveGasPrice",
                "camelCase": {
                  "unsafeName": "effectiveGasPrice",
                  "safeName": "effectiveGasPrice"
                },
                "snakeCase": {
                  "unsafeName": "effective_gas_price",
                  "safeName": "effective_gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EFFECTIVE_GAS_PRICE",
                  "safeName": "EFFECTIVE_GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "EffectiveGasPrice",
                  "safeName": "EffectiveGasPrice"
                }
              },
              "wireValue": "effectiveGasPrice"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "docs": "The actual value per gas deducted from the sender's account. Before EIP-1559, this is equal to the transaction's gas price. After, it is equal to baseFeePerGas + min(maxFeePerGas - baseFeePerGas, maxPriorityFeePerGas).",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerEffectiveGasPrice_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "blobGasPrice",
                "camelCase": {
                  "unsafeName": "blobGasPrice",
                  "safeName": "blobGasPrice"
                },
                "snakeCase": {
                  "unsafeName": "blob_gas_price",
                  "safeName": "blob_gas_price"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BLOB_GAS_PRICE",
                  "safeName": "BLOB_GAS_PRICE"
                },
                "pascalCase": {
                  "unsafeName": "BlobGasPrice",
                  "safeName": "BlobGasPrice"
                }
              },
              "wireValue": "blobGasPrice"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "docs": "The actual value per gas deducted from the sender's account for blob gas. Only specified for blob transactions as defined by EIP-4844.",
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthGetTransactionReceiptResultInnerBlobGasPrice_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionReceiptResultInner_example_autogenerated": {
            "transactionHash": "string",
            "transactionIndex": "string",
            "blockHash": "string",
            "blockNumber": "string",
            "from": "string",
            "cumulativeGasUsed": "string",
            "gasUsed": "string",
            "logs": [
              {
                "transactionHash": "string"
              }
            ],
            "logsBloom": "string",
            "effectiveGasPrice": "string"
          }
        }
      }
    },
    "eth_getTransactionReceipt_Param_Transaction hash": {
      "name": {
        "typeId": "eth_getTransactionReceipt_Param_Transaction hash",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_getTransactionReceipt_Param_Transaction hash",
          "camelCase": {
            "unsafeName": "ethGetTransactionReceiptParamTransactionHash",
            "safeName": "ethGetTransactionReceiptParamTransactionHash"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_receipt_param_transaction_hash",
            "safeName": "eth_get_transaction_receipt_param_transaction_hash"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_PARAM_TRANSACTION_HASH",
            "safeName": "ETH_GET_TRANSACTION_RECEIPT_PARAM_TRANSACTION_HASH"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionReceiptParamTransactionHash",
            "safeName": "EthGetTransactionReceiptParamTransactionHash"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_getTransactionReceipt_Param_Transaction hash_example_autogenerated": "string"
        }
      }
    },
    "eth_getTransactionReceipt_Result": {
      "name": {
        "typeId": "EthGetTransactionReceiptResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthGetTransactionReceiptResult",
          "camelCase": {
            "unsafeName": "ethGetTransactionReceiptResult",
            "safeName": "ethGetTransactionReceiptResult"
          },
          "snakeCase": {
            "unsafeName": "eth_get_transaction_receipt_result",
            "safeName": "eth_get_transaction_receipt_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT",
            "safeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthGetTransactionReceiptResult",
            "safeName": "EthGetTransactionReceiptResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionReceiptResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionReceiptResultInner",
                  "safeName": "ethGetTransactionReceiptResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_receipt_result_inner",
                  "safeName": "eth_get_transaction_receipt_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionReceiptResultInner",
                  "safeName": "EthGetTransactionReceiptResultInner"
                }
              },
              "typeId": "EthGetTransactionReceiptResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "nullable": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthGetTransactionReceiptResultInner",
                "camelCase": {
                  "unsafeName": "ethGetTransactionReceiptResultInner",
                  "safeName": "ethGetTransactionReceiptResultInner"
                },
                "snakeCase": {
                  "unsafeName": "eth_get_transaction_receipt_result_inner",
                  "safeName": "eth_get_transaction_receipt_result_inner"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER",
                  "safeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER"
                },
                "pascalCase": {
                  "unsafeName": "EthGetTransactionReceiptResultInner",
                  "safeName": "EthGetTransactionReceiptResultInner"
                }
              },
              "typeId": "EthGetTransactionReceiptResultInner",
              "inline": false,
              "type": "named"
            },
            "type": "nullable"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthGetTransactionReceiptResult_example_autogenerated": null
        }
      }
    },
    "eth_sendRawTransaction_Param_Transaction": {
      "name": {
        "typeId": "eth_sendRawTransaction_Param_Transaction",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "eth_sendRawTransaction_Param_Transaction",
          "camelCase": {
            "unsafeName": "ethSendRawTransactionParamTransaction",
            "safeName": "ethSendRawTransactionParamTransaction"
          },
          "snakeCase": {
            "unsafeName": "eth_send_raw_transaction_param_transaction",
            "safeName": "eth_send_raw_transaction_param_transaction"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_SEND_RAW_TRANSACTION_PARAM_TRANSACTION",
            "safeName": "ETH_SEND_RAW_TRANSACTION_PARAM_TRANSACTION"
          },
          "pascalCase": {
            "unsafeName": "EthSendRawTransactionParamTransaction",
            "safeName": "EthSendRawTransactionParamTransaction"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "eth_sendRawTransaction_Param_Transaction_example_autogenerated": "string"
        }
      }
    },
    "eth_sendRawTransaction_Result": {
      "name": {
        "typeId": "EthSendRawTransactionResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthSendRawTransactionResult",
          "camelCase": {
            "unsafeName": "ethSendRawTransactionResult",
            "safeName": "ethSendRawTransactionResult"
          },
          "snakeCase": {
            "unsafeName": "eth_send_raw_transaction_result",
            "safeName": "eth_send_raw_transaction_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_SEND_RAW_TRANSACTION_RESULT",
            "safeName": "ETH_SEND_RAW_TRANSACTION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthSendRawTransactionResult",
            "safeName": "EthSendRawTransactionResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthSendRawTransactionResult_example_autogenerated": "string"
        }
      }
    },
    "EthSyncingResult10": {
      "name": {
        "typeId": "EthSyncingResult10",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthSyncingResult10",
          "camelCase": {
            "unsafeName": "ethSyncingResult10",
            "safeName": "ethSyncingResult10"
          },
          "snakeCase": {
            "unsafeName": "eth_syncing_result_10",
            "safeName": "eth_syncing_result_10"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_SYNCING_RESULT_10",
            "safeName": "ETH_SYNCING_RESULT_10"
          },
          "pascalCase": {
            "unsafeName": "EthSyncingResult10",
            "safeName": "EthSyncingResult10"
          }
        },
        "displayName": "Syncing progress"
      },
      "shape": {
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "startingBlock",
                "camelCase": {
                  "unsafeName": "startingBlock",
                  "safeName": "startingBlock"
                },
                "snakeCase": {
                  "unsafeName": "starting_block",
                  "safeName": "starting_block"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STARTING_BLOCK",
                  "safeName": "STARTING_BLOCK"
                },
                "pascalCase": {
                  "unsafeName": "StartingBlock",
                  "safeName": "StartingBlock"
                }
              },
              "wireValue": "startingBlock"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthSyncingResultOneOf1OneOf0StartingBlock_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "currentBlock",
                "camelCase": {
                  "unsafeName": "currentBlock",
                  "safeName": "currentBlock"
                },
                "snakeCase": {
                  "unsafeName": "current_block",
                  "safeName": "current_block"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CURRENT_BLOCK",
                  "safeName": "CURRENT_BLOCK"
                },
                "pascalCase": {
                  "unsafeName": "CurrentBlock",
                  "safeName": "CurrentBlock"
                }
              },
              "wireValue": "currentBlock"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthSyncingResultOneOf1OneOf0CurrentBlock_example_autogenerated": "string"
              }
            }
          },
          {
            "name": {
              "name": {
                "originalName": "highestBlock",
                "camelCase": {
                  "unsafeName": "highestBlock",
                  "safeName": "highestBlock"
                },
                "snakeCase": {
                  "unsafeName": "highest_block",
                  "safeName": "highest_block"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGHEST_BLOCK",
                  "safeName": "HIGHEST_BLOCK"
                },
                "pascalCase": {
                  "unsafeName": "HighestBlock",
                  "safeName": "HighestBlock"
                }
              },
              "wireValue": "highestBlock"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {
                "EthSyncingResultOneOf1OneOf0HighestBlock_example_autogenerated": "string"
              }
            }
          }
        ],
        "extends": [],
        "extendedProperties": [],
        "extraProperties": false,
        "type": "object"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthSyncingResult10_example_autogenerated": {}
        }
      }
    },
    "EthSyncingResult1": {
      "name": {
        "typeId": "EthSyncingResult1",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthSyncingResult1",
          "camelCase": {
            "unsafeName": "ethSyncingResult1",
            "safeName": "ethSyncingResult1"
          },
          "snakeCase": {
            "unsafeName": "eth_syncing_result_1",
            "safeName": "eth_syncing_result_1"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_SYNCING_RESULT_1",
            "safeName": "ETH_SYNCING_RESULT_1"
          },
          "pascalCase": {
            "unsafeName": "EthSyncingResult1",
            "safeName": "EthSyncingResult1"
          }
        },
        "displayName": "Syncing status"
      },
      "shape": {
        "members": [
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthSyncingResult10",
                "camelCase": {
                  "unsafeName": "ethSyncingResult10",
                  "safeName": "ethSyncingResult10"
                },
                "snakeCase": {
                  "unsafeName": "eth_syncing_result_10",
                  "safeName": "eth_syncing_result_10"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_SYNCING_RESULT_10",
                  "safeName": "ETH_SYNCING_RESULT_10"
                },
                "pascalCase": {
                  "unsafeName": "EthSyncingResult10",
                  "safeName": "EthSyncingResult10"
                }
              },
              "typeId": "EthSyncingResult10",
              "displayName": "Syncing progress",
              "inline": false,
              "type": "named"
            }
          },
          {
            "type": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "docs": "Should always return false if not syncing."
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthSyncingResult1_example_autogenerated": {}
        }
      }
    },
    "EthSyncingResult": {
      "name": {
        "typeId": "EthSyncingResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthSyncingResult",
          "camelCase": {
            "unsafeName": "ethSyncingResult",
            "safeName": "ethSyncingResult"
          },
          "snakeCase": {
            "unsafeName": "eth_syncing_result",
            "safeName": "eth_syncing_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_SYNCING_RESULT",
            "safeName": "ETH_SYNCING_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthSyncingResult",
            "safeName": "EthSyncingResult"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthSyncingResult1",
                "camelCase": {
                  "unsafeName": "ethSyncingResult1",
                  "safeName": "ethSyncingResult1"
                },
                "snakeCase": {
                  "unsafeName": "eth_syncing_result_1",
                  "safeName": "eth_syncing_result_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_SYNCING_RESULT_1",
                  "safeName": "ETH_SYNCING_RESULT_1"
                },
                "pascalCase": {
                  "unsafeName": "EthSyncingResult1",
                  "safeName": "EthSyncingResult1"
                }
              },
              "typeId": "EthSyncingResult1",
              "displayName": "Syncing status",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthSyncingResult_example_autogenerated": true
        }
      }
    },
    "eth_syncing_Result": {
      "name": {
        "typeId": "EthSyncingResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "EthSyncingResult",
          "camelCase": {
            "unsafeName": "ethSyncingResult",
            "safeName": "ethSyncingResult"
          },
          "snakeCase": {
            "unsafeName": "eth_syncing_result",
            "safeName": "eth_syncing_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "ETH_SYNCING_RESULT",
            "safeName": "ETH_SYNCING_RESULT"
          },
          "pascalCase": {
            "unsafeName": "EthSyncingResult",
            "safeName": "EthSyncingResult"
          }
        }
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "name": {
                "originalName": "EthSyncingResult1",
                "camelCase": {
                  "unsafeName": "ethSyncingResult1",
                  "safeName": "ethSyncingResult1"
                },
                "snakeCase": {
                  "unsafeName": "eth_syncing_result_1",
                  "safeName": "eth_syncing_result_1"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ETH_SYNCING_RESULT_1",
                  "safeName": "ETH_SYNCING_RESULT_1"
                },
                "pascalCase": {
                  "unsafeName": "EthSyncingResult1",
                  "safeName": "EthSyncingResult1"
                }
              },
              "typeId": "EthSyncingResult1",
              "displayName": "Syncing status",
              "inline": false,
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "EthSyncingResult_example_autogenerated": true
        }
      }
    },
    "net_version_Result": {
      "name": {
        "typeId": "NetVersionResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "NetVersionResult",
          "camelCase": {
            "unsafeName": "netVersionResult",
            "safeName": "netVersionResult"
          },
          "snakeCase": {
            "unsafeName": "net_version_result",
            "safeName": "net_version_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "NET_VERSION_RESULT",
            "safeName": "NET_VERSION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "NetVersionResult",
            "safeName": "NetVersionResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "NetVersionResult_example_autogenerated": "string"
        }
      }
    },
    "web3_clientVersion_Result": {
      "name": {
        "typeId": "Web3ClientVersionResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Web3ClientVersionResult",
          "camelCase": {
            "unsafeName": "web3ClientVersionResult",
            "safeName": "web3ClientVersionResult"
          },
          "snakeCase": {
            "unsafeName": "web_3_client_version_result",
            "safeName": "web_3_client_version_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "WEB_3_CLIENT_VERSION_RESULT",
            "safeName": "WEB_3_CLIENT_VERSION_RESULT"
          },
          "pascalCase": {
            "unsafeName": "Web3ClientVersionResult",
            "safeName": "Web3ClientVersionResult"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {},
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Web3ClientVersionResult_example_autogenerated": "string"
        }
      }
    },
    "web3_sha3_Param_Data": {
      "name": {
        "typeId": "web3_sha3_Param_Data",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "web3_sha3_Param_Data",
          "camelCase": {
            "unsafeName": "web3Sha3ParamData",
            "safeName": "web3Sha3ParamData"
          },
          "snakeCase": {
            "unsafeName": "web_3_sha_3_param_data",
            "safeName": "web_3_sha_3_param_data"
          },
          "screamingSnakeCase": {
            "unsafeName": "WEB_3_SHA_3_PARAM_DATA",
            "safeName": "WEB_3_SHA_3_PARAM_DATA"
          },
          "pascalCase": {
            "unsafeName": "Web3Sha3ParamData",
            "safeName": "Web3Sha3ParamData"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]*$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "web3_sha3_Param_Data_example_autogenerated": "string"
        }
      }
    },
    "web3_sha3_Result": {
      "name": {
        "typeId": "Web3Sha3Result",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "name": {
          "originalName": "Web3Sha3Result",
          "camelCase": {
            "unsafeName": "web3Sha3Result",
            "safeName": "web3Sha3Result"
          },
          "snakeCase": {
            "unsafeName": "web_3_sha_3_result",
            "safeName": "web_3_sha_3_result"
          },
          "screamingSnakeCase": {
            "unsafeName": "WEB_3_SHA_3_RESULT",
            "safeName": "WEB_3_SHA_3_RESULT"
          },
          "pascalCase": {
            "unsafeName": "Web3Sha3Result",
            "safeName": "Web3Sha3Result"
          }
        }
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "pattern": "^0x[0-9a-f]{64}$"
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "autogeneratedExamples": [],
      "userProvidedExamples": [],
      "referencedTypes": {},
      "inline": false,
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {
          "Web3Sha3Result_example_autogenerated": "string"
        }
      }
    }
  },
  "services": {
    "service_root": {
      "name": {
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "endpoints": [
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_blockNumber",
          "name": {
            "originalName": "eth_blockNumber",
            "camelCase": {
              "unsafeName": "ethBlockNumber",
              "safeName": "ethBlockNumber"
            },
            "snakeCase": {
              "unsafeName": "eth_block_number",
              "safeName": "eth_block_number"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_BLOCK_NUMBER",
              "safeName": "ETH_BLOCK_NUMBER"
            },
            "pascalCase": {
              "unsafeName": "EthBlockNumber",
              "safeName": "EthBlockNumber"
            }
          },
          "headers": [],
          "displayName": "eth_blockNumber",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "response": {
            "body": {
              "value": {
                "docs": "The block number of the most recently mined block as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthBlockNumberResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_blockNumber example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": []
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x2377"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_call",
          "name": {
            "originalName": "eth_call",
            "camelCase": {
              "unsafeName": "ethCall",
              "safeName": "ethCall"
            },
            "snakeCase": {
              "unsafeName": "eth_call",
              "safeName": "eth_call"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_CALL",
              "safeName": "ETH_CALL"
            },
            "pascalCase": {
              "unsafeName": "EthCall",
              "safeName": "EthCall"
            }
          },
          "headers": [],
          "displayName": "eth_call",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_call_Request",
              "camelCase": {
                "unsafeName": "ethCallRequest",
                "safeName": "ethCallRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_call_request",
                "safeName": "eth_call_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_CALL_REQUEST",
                "safeName": "ETH_CALL_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthCallRequest",
                "safeName": "EthCallRequest"
              }
            },
            "properties": [
              {
                "docs": "The transaction call object containing the details of the message call.",
                "name": {
                  "name": {
                    "originalName": "Transaction",
                    "camelCase": {
                      "unsafeName": "transaction",
                      "safeName": "transaction"
                    },
                    "snakeCase": {
                      "unsafeName": "transaction",
                      "safeName": "transaction"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSACTION",
                      "safeName": "TRANSACTION"
                    },
                    "pascalCase": {
                      "unsafeName": "Transaction",
                      "safeName": "Transaction"
                    }
                  },
                  "wireValue": "Transaction"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_call_Param_Transaction",
                    "camelCase": {
                      "unsafeName": "ethCallParamTransaction",
                      "safeName": "ethCallParamTransaction"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_call_param_transaction",
                      "safeName": "eth_call_param_transaction"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_CALL_PARAM_TRANSACTION",
                      "safeName": "ETH_CALL_PARAM_TRANSACTION"
                    },
                    "pascalCase": {
                      "unsafeName": "EthCallParamTransaction",
                      "safeName": "EthCallParamTransaction"
                    }
                  },
                  "typeId": "eth_call_Param_Transaction",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_call_Param_Transaction_example_autogenerated": {}
                  }
                }
              },
              {
                "docs": "The block number, tag, or hash at which to execute the call. Defaults to `'latest'` if not provided.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "eth_call_Param_Block",
                        "camelCase": {
                          "unsafeName": "ethCallParamBlock",
                          "safeName": "ethCallParamBlock"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_call_param_block",
                          "safeName": "eth_call_param_block"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_CALL_PARAM_BLOCK",
                          "safeName": "ETH_CALL_PARAM_BLOCK"
                        },
                        "pascalCase": {
                          "unsafeName": "EthCallParamBlock",
                          "safeName": "EthCallParamBlock"
                        }
                      },
                      "typeId": "eth_call_Param_Block",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_call_Param_Block_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The return value of the executed contract function, encoded as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthCallResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_call example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "to": "0x69498dd54bd25aa0c886cf1f8b8ae0856d55ff13",
                      "value": "0x1"
                    },
                    "latest"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_chainId",
          "name": {
            "originalName": "eth_chainId",
            "camelCase": {
              "unsafeName": "ethChainId",
              "safeName": "ethChainId"
            },
            "snakeCase": {
              "unsafeName": "eth_chain_id",
              "safeName": "eth_chain_id"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_CHAIN_ID",
              "safeName": "ETH_CHAIN_ID"
            },
            "pascalCase": {
              "unsafeName": "EthChainId",
              "safeName": "EthChainId"
            }
          },
          "headers": [],
          "displayName": "eth_chainId",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "response": {
            "body": {
              "value": {
                "docs": "The chain ID of the current network in hexadecimal format.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthChainIdResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_chainId example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": []
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x1"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_estimateGas",
          "name": {
            "originalName": "eth_estimateGas",
            "camelCase": {
              "unsafeName": "ethEstimateGas",
              "safeName": "ethEstimateGas"
            },
            "snakeCase": {
              "unsafeName": "eth_estimate_gas",
              "safeName": "eth_estimate_gas"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_ESTIMATE_GAS",
              "safeName": "ETH_ESTIMATE_GAS"
            },
            "pascalCase": {
              "unsafeName": "EthEstimateGas",
              "safeName": "EthEstimateGas"
            }
          },
          "headers": [],
          "displayName": "eth_estimateGas",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_estimateGas_Request",
              "camelCase": {
                "unsafeName": "ethEstimateGasRequest",
                "safeName": "ethEstimateGasRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_estimate_gas_request",
                "safeName": "eth_estimate_gas_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_ESTIMATE_GAS_REQUEST",
                "safeName": "ETH_ESTIMATE_GAS_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthEstimateGasRequest",
                "safeName": "EthEstimateGasRequest"
              }
            },
            "properties": [
              {
                "docs": "The transaction object for which to estimate gas usage.",
                "name": {
                  "name": {
                    "originalName": "Transaction",
                    "camelCase": {
                      "unsafeName": "transaction",
                      "safeName": "transaction"
                    },
                    "snakeCase": {
                      "unsafeName": "transaction",
                      "safeName": "transaction"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSACTION",
                      "safeName": "TRANSACTION"
                    },
                    "pascalCase": {
                      "unsafeName": "Transaction",
                      "safeName": "Transaction"
                    }
                  },
                  "wireValue": "Transaction"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_estimateGas_Param_Transaction",
                    "camelCase": {
                      "unsafeName": "ethEstimateGasParamTransaction",
                      "safeName": "ethEstimateGasParamTransaction"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_estimate_gas_param_transaction",
                      "safeName": "eth_estimate_gas_param_transaction"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION",
                      "safeName": "ETH_ESTIMATE_GAS_PARAM_TRANSACTION"
                    },
                    "pascalCase": {
                      "unsafeName": "EthEstimateGasParamTransaction",
                      "safeName": "EthEstimateGasParamTransaction"
                    }
                  },
                  "typeId": "eth_estimateGas_Param_Transaction",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_estimateGas_Param_Transaction_example_autogenerated": {}
                  }
                }
              },
              {
                "docs": "The block number or tag at which to estimate gas usage. Defaults to `'latest'` if not provided.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "eth_estimateGas_Param_Block",
                        "camelCase": {
                          "unsafeName": "ethEstimateGasParamBlock",
                          "safeName": "ethEstimateGasParamBlock"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_estimate_gas_param_block",
                          "safeName": "eth_estimate_gas_param_block"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK",
                          "safeName": "ETH_ESTIMATE_GAS_PARAM_BLOCK"
                        },
                        "pascalCase": {
                          "unsafeName": "EthEstimateGasParamBlock",
                          "safeName": "EthEstimateGasParamBlock"
                        }
                      },
                      "typeId": "eth_estimateGas_Param_Block",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_estimateGas_Param_Block_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The estimated amount of gas required for the transaction, as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthEstimateGasResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_estimateGas example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                      "to": "0x44aa93095d6749a706051658b970b941c72c1d53",
                      "value": "0x1"
                    }
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x5208"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_gasPrice",
          "name": {
            "originalName": "eth_gasPrice",
            "camelCase": {
              "unsafeName": "ethGasPrice",
              "safeName": "ethGasPrice"
            },
            "snakeCase": {
              "unsafeName": "eth_gas_price",
              "safeName": "eth_gas_price"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GAS_PRICE",
              "safeName": "ETH_GAS_PRICE"
            },
            "pascalCase": {
              "unsafeName": "EthGasPrice",
              "safeName": "EthGasPrice"
            }
          },
          "headers": [],
          "displayName": "eth_gasPrice",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "response": {
            "body": {
              "value": {
                "docs": "The current gas price in wei, as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGasPriceResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_gasPrice example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": []
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x3e8"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getBalance",
          "name": {
            "originalName": "eth_getBalance",
            "camelCase": {
              "unsafeName": "ethGetBalance",
              "safeName": "ethGetBalance"
            },
            "snakeCase": {
              "unsafeName": "eth_get_balance",
              "safeName": "eth_get_balance"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_BALANCE",
              "safeName": "ETH_GET_BALANCE"
            },
            "pascalCase": {
              "unsafeName": "EthGetBalance",
              "safeName": "EthGetBalance"
            }
          },
          "headers": [],
          "displayName": "eth_getBalance",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getBalance_Request",
              "camelCase": {
                "unsafeName": "ethGetBalanceRequest",
                "safeName": "ethGetBalanceRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_balance_request",
                "safeName": "eth_get_balance_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_BALANCE_REQUEST",
                "safeName": "ETH_GET_BALANCE_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetBalanceRequest",
                "safeName": "EthGetBalanceRequest"
              }
            },
            "properties": [
              {
                "docs": "The address of the account to query the balance for.",
                "name": {
                  "name": {
                    "originalName": "Address",
                    "camelCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "snakeCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ADDRESS",
                      "safeName": "ADDRESS"
                    },
                    "pascalCase": {
                      "unsafeName": "Address",
                      "safeName": "Address"
                    }
                  },
                  "wireValue": "Address"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBalance_Param_Address_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The block number, tag, or hash at which to retrieve the balance. Can be a block number, 'latest', 'earliest', 'pending', or a block hash.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getBalance_Param_Block",
                    "camelCase": {
                      "unsafeName": "ethGetBalanceParamBlock",
                      "safeName": "ethGetBalanceParamBlock"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_balance_param_block",
                      "safeName": "eth_get_balance_param_block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BALANCE_PARAM_BLOCK",
                      "safeName": "ETH_GET_BALANCE_PARAM_BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBalanceParamBlock",
                      "safeName": "EthGetBalanceParamBlock"
                    }
                  },
                  "typeId": "eth_getBalance_Param_Block",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBalance_Param_Block_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The balance of the account in wei, encoded as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetBalanceResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getBalance example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                    "latest"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x1cfe56f3795885980000"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getBlockByHash",
          "name": {
            "originalName": "eth_getBlockByHash",
            "camelCase": {
              "unsafeName": "ethGetBlockByHash",
              "safeName": "ethGetBlockByHash"
            },
            "snakeCase": {
              "unsafeName": "eth_get_block_by_hash",
              "safeName": "eth_get_block_by_hash"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_BLOCK_BY_HASH",
              "safeName": "ETH_GET_BLOCK_BY_HASH"
            },
            "pascalCase": {
              "unsafeName": "EthGetBlockByHash",
              "safeName": "EthGetBlockByHash"
            }
          },
          "headers": [],
          "displayName": "eth_getBlockByHash",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getBlockByHash_Request",
              "camelCase": {
                "unsafeName": "ethGetBlockByHashRequest",
                "safeName": "ethGetBlockByHashRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_block_by_hash_request",
                "safeName": "eth_get_block_by_hash_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_BLOCK_BY_HASH_REQUEST",
                "safeName": "ETH_GET_BLOCK_BY_HASH_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetBlockByHashRequest",
                "safeName": "EthGetBlockByHashRequest"
              }
            },
            "properties": [
              {
                "docs": "The hash of the block to retrieve.",
                "name": {
                  "name": {
                    "originalName": "Block hash",
                    "camelCase": {
                      "unsafeName": "blockHash",
                      "safeName": "blockHash"
                    },
                    "snakeCase": {
                      "unsafeName": "block_hash",
                      "safeName": "block_hash"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK_HASH",
                      "safeName": "BLOCK_HASH"
                    },
                    "pascalCase": {
                      "unsafeName": "BlockHash",
                      "safeName": "BlockHash"
                    }
                  },
                  "wireValue": "Block hash"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBlockByHash_Param_Block hash_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "If true, returns full transaction objects; if false, returns only transaction hashes.",
                "name": {
                  "name": {
                    "originalName": "Hydrated transactions",
                    "camelCase": {
                      "unsafeName": "hydratedTransactions",
                      "safeName": "hydratedTransactions"
                    },
                    "snakeCase": {
                      "unsafeName": "hydrated_transactions",
                      "safeName": "hydrated_transactions"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "HYDRATED_TRANSACTIONS",
                      "safeName": "HYDRATED_TRANSACTIONS"
                    },
                    "pascalCase": {
                      "unsafeName": "HydratedTransactions",
                      "safeName": "HydratedTransactions"
                    }
                  },
                  "wireValue": "Hydrated transactions"
                },
                "valueType": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBlockByHash_Param_Hydrated transactions_example_autogenerated": true
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The block object containing various properties of the block.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetBlockByHashResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetBlockByHashResultInner",
                        "camelCase": {
                          "unsafeName": "ethGetBlockByHashResultInner",
                          "safeName": "ethGetBlockByHashResultInner"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_block_by_hash_result_inner",
                          "safeName": "eth_get_block_by_hash_result_inner"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER",
                          "safeName": "ETH_GET_BLOCK_BY_HASH_RESULT_INNER"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetBlockByHashResultInner",
                          "safeName": "EthGetBlockByHashResultInner"
                        }
                      },
                      "typeId": "EthGetBlockByHashResultInner",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getBlockByHash example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                    false
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "number": "0x68b3",
                        "hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                        "mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
                        "parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
                        "nonce": "0x378da40ff335b070",
                        "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                        "logsBloom": "0x
                        "transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
                        "stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
                        "receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
                        "miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
                        "difficulty": "0x66e619a",
                        "totalDifficulty": "0x1e875d746ae",
                        "extraData": "0xd583010502846765746885676f312e37856c696e7578",
                        "size": "0x334",
                        "gasLimit": "0x47e7c4",
                        "gasUsed": "0x37993",
                        "timestamp": "0x5835c54d",
                        "uncles": [],
                        "transactions": [
                          "0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
                          "0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
                        ],
                        "baseFeePerGas": "0x7",
                        "withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
                        "withdrawals": [
                          {
                            "index": "0x0",
                            "validatorIndex": "0x9d8c0",
                            "address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
                            "amount": "0x11a33e3760"
                          }
                        ],
                        "blobGasUsed": "0x0",
                        "excessBlobGas": "0x0",
                        "parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getBlockByNumber",
          "name": {
            "originalName": "eth_getBlockByNumber",
            "camelCase": {
              "unsafeName": "ethGetBlockByNumber",
              "safeName": "ethGetBlockByNumber"
            },
            "snakeCase": {
              "unsafeName": "eth_get_block_by_number",
              "safeName": "eth_get_block_by_number"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_BLOCK_BY_NUMBER",
              "safeName": "ETH_GET_BLOCK_BY_NUMBER"
            },
            "pascalCase": {
              "unsafeName": "EthGetBlockByNumber",
              "safeName": "EthGetBlockByNumber"
            }
          },
          "headers": [],
          "displayName": "eth_getBlockByNumber",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getBlockByNumber_Request",
              "camelCase": {
                "unsafeName": "ethGetBlockByNumberRequest",
                "safeName": "ethGetBlockByNumberRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_block_by_number_request",
                "safeName": "eth_get_block_by_number_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_REQUEST",
                "safeName": "ETH_GET_BLOCK_BY_NUMBER_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetBlockByNumberRequest",
                "safeName": "EthGetBlockByNumberRequest"
              }
            },
            "properties": [
              {
                "docs": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
                "name": {
                  "name": {
                    "originalName": "Block number or tag",
                    "camelCase": {
                      "unsafeName": "blockNumberOrTag",
                      "safeName": "blockNumberOrTag"
                    },
                    "snakeCase": {
                      "unsafeName": "block_number_or_tag",
                      "safeName": "block_number_or_tag"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK_NUMBER_OR_TAG",
                      "safeName": "BLOCK_NUMBER_OR_TAG"
                    },
                    "pascalCase": {
                      "unsafeName": "BlockNumberOrTag",
                      "safeName": "BlockNumberOrTag"
                    }
                  },
                  "wireValue": "Block number or tag"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getBlockByNumber_Param_Block number or tag",
                    "camelCase": {
                      "unsafeName": "ethGetBlockByNumberParamBlockNumberOrTag",
                      "safeName": "ethGetBlockByNumberParamBlockNumberOrTag"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_by_number_param_block_number_or_tag",
                      "safeName": "eth_get_block_by_number_param_block_number_or_tag"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG",
                      "safeName": "ETH_GET_BLOCK_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockByNumberParamBlockNumberOrTag",
                      "safeName": "EthGetBlockByNumberParamBlockNumberOrTag"
                    }
                  },
                  "typeId": "eth_getBlockByNumber_Param_Block number or tag",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBlockByNumber_Param_Block number or tag_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "If true, returns full transaction objects; if false, returns only transaction hashes.",
                "name": {
                  "name": {
                    "originalName": "Hydrated transactions",
                    "camelCase": {
                      "unsafeName": "hydratedTransactions",
                      "safeName": "hydratedTransactions"
                    },
                    "snakeCase": {
                      "unsafeName": "hydrated_transactions",
                      "safeName": "hydrated_transactions"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "HYDRATED_TRANSACTIONS",
                      "safeName": "HYDRATED_TRANSACTIONS"
                    },
                    "pascalCase": {
                      "unsafeName": "HydratedTransactions",
                      "safeName": "HydratedTransactions"
                    }
                  },
                  "wireValue": "Hydrated transactions"
                },
                "valueType": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBlockByNumber_Param_Hydrated transactions_example_autogenerated": true
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The block object containing various properties of the block.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetBlockByNumberResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetBlockByNumberResultInner",
                        "camelCase": {
                          "unsafeName": "ethGetBlockByNumberResultInner",
                          "safeName": "ethGetBlockByNumberResultInner"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_block_by_number_result_inner",
                          "safeName": "eth_get_block_by_number_result_inner"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER",
                          "safeName": "ETH_GET_BLOCK_BY_NUMBER_RESULT_INNER"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetBlockByNumberResultInner",
                          "safeName": "EthGetBlockByNumberResultInner"
                        }
                      },
                      "typeId": "EthGetBlockByNumberResultInner",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getBlockByNumber example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0x68b3",
                    false
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "number": "0x68b3",
                        "hash": "0xd5f1812548be429cbdc6376b29611fc49e06f1359758c4ceaaa3b393e2239f9c",
                        "mixHash": "0x24900fb3da77674a861c428429dce0762707ecb6052325bbd9b3c64e74b5af9d",
                        "parentHash": "0x1f68ac259155e2f38211ddad0f0a15394d55417b185a93923e2abe71bb7a4d6d",
                        "nonce": "0x378da40ff335b070",
                        "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                        "logsBloom": "0x
                        "transactionsRoot": "0x4d0c8e91e16bdff538c03211c5c73632ed054d00a7e210c0eb25146c20048126",
                        "stateRoot": "0x91309efa7e42c1f137f31fe9edbe88ae087e6620d0d59031324da3e2f4f93233",
                        "receiptsRoot": "0x68461ab700003503a305083630a8fb8d14927238f0bc8b6b3d246c0c64f21f4a",
                        "miner": "0xb42b6c4a95406c78ff892d270ad20b22642e102d",
                        "difficulty": "0x66e619a",
                        "totalDifficulty": "0x1e875d746ae",
                        "extraData": "0xd583010502846765746885676f312e37856c696e7578",
                        "size": "0x334",
                        "gasLimit": "0x47e7c4",
                        "gasUsed": "0x37993",
                        "timestamp": "0x5835c54d",
                        "uncles": [],
                        "transactions": [
                          "0xa0807e117a8dd124ab949f460f08c36c72b710188f01609595223b325e58e0fc",
                          "0xeae6d797af50cb62a596ec3939114d63967c374fa57de9bc0f4e2b576ed6639d"
                        ],
                        "baseFeePerGas": "0x7",
                        "withdrawalsRoot": "0x7a4ecf19774d15cf9c15adf0dd8e8a250c128b26c9e2ab2a08d6c9c8ffbd104f",
                        "withdrawals": [
                          {
                            "index": "0x0",
                            "validatorIndex": "0x9d8c0",
                            "address": "0xb9d7934878b5fb9610b3fe8a5e441e8fad7e293f",
                            "amount": "0x11a33e3760"
                          }
                        ],
                        "blobGasUsed": "0x0",
                        "excessBlobGas": "0x0",
                        "parentBeaconBlockRoot": "0x95c4dbd5b19f6fe3cbc3183be85ff4e85ebe75c5b4fc911f1c91e5b7a554a685"
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getBlockTransactionCountByHash",
          "name": {
            "originalName": "eth_getBlockTransactionCountByHash",
            "camelCase": {
              "unsafeName": "ethGetBlockTransactionCountByHash",
              "safeName": "ethGetBlockTransactionCountByHash"
            },
            "snakeCase": {
              "unsafeName": "eth_get_block_transaction_count_by_hash",
              "safeName": "eth_get_block_transaction_count_by_hash"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH",
              "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH"
            },
            "pascalCase": {
              "unsafeName": "EthGetBlockTransactionCountByHash",
              "safeName": "EthGetBlockTransactionCountByHash"
            }
          },
          "headers": [],
          "displayName": "eth_getBlockTransactionCountByHash",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getBlockTransactionCountByHash_Request",
              "camelCase": {
                "unsafeName": "ethGetBlockTransactionCountByHashRequest",
                "safeName": "ethGetBlockTransactionCountByHashRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_block_transaction_count_by_hash_request",
                "safeName": "eth_get_block_transaction_count_by_hash_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH_REQUEST",
                "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_HASH_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetBlockTransactionCountByHashRequest",
                "safeName": "EthGetBlockTransactionCountByHashRequest"
              }
            },
            "properties": [
              {
                "docs": "The hash of the block.",
                "name": {
                  "name": {
                    "originalName": "Block hash",
                    "camelCase": {
                      "unsafeName": "blockHash",
                      "safeName": "blockHash"
                    },
                    "snakeCase": {
                      "unsafeName": "block_hash",
                      "safeName": "block_hash"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK_HASH",
                      "safeName": "BLOCK_HASH"
                    },
                    "pascalCase": {
                      "unsafeName": "BlockHash",
                      "safeName": "BlockHash"
                    }
                  },
                  "wireValue": "Block hash"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBlockTransactionCountByHash_Param_Block hash_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The number of transactions in the block as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetBlockTransactionCountByHashResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getBlockTransactionCountByHash example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xb903239f8543d04b5dc1ba6579132b143087c68db1b2168786408fcbce568238"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x8"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getBlockTransactionCountByNumber",
          "name": {
            "originalName": "eth_getBlockTransactionCountByNumber",
            "camelCase": {
              "unsafeName": "ethGetBlockTransactionCountByNumber",
              "safeName": "ethGetBlockTransactionCountByNumber"
            },
            "snakeCase": {
              "unsafeName": "eth_get_block_transaction_count_by_number",
              "safeName": "eth_get_block_transaction_count_by_number"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER",
              "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER"
            },
            "pascalCase": {
              "unsafeName": "EthGetBlockTransactionCountByNumber",
              "safeName": "EthGetBlockTransactionCountByNumber"
            }
          },
          "headers": [],
          "displayName": "eth_getBlockTransactionCountByNumber",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getBlockTransactionCountByNumber_Request",
              "camelCase": {
                "unsafeName": "ethGetBlockTransactionCountByNumberRequest",
                "safeName": "ethGetBlockTransactionCountByNumberRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_block_transaction_count_by_number_request",
                "safeName": "eth_get_block_transaction_count_by_number_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_REQUEST",
                "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetBlockTransactionCountByNumberRequest",
                "safeName": "EthGetBlockTransactionCountByNumberRequest"
              }
            },
            "properties": [
              {
                "docs": "The block number or special tags like 'latest', 'earliest', or 'pending'.",
                "name": {
                  "name": {
                    "originalName": "Block number or tag",
                    "camelCase": {
                      "unsafeName": "blockNumberOrTag",
                      "safeName": "blockNumberOrTag"
                    },
                    "snakeCase": {
                      "unsafeName": "block_number_or_tag",
                      "safeName": "block_number_or_tag"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK_NUMBER_OR_TAG",
                      "safeName": "BLOCK_NUMBER_OR_TAG"
                    },
                    "pascalCase": {
                      "unsafeName": "BlockNumberOrTag",
                      "safeName": "BlockNumberOrTag"
                    }
                  },
                  "wireValue": "Block number or tag"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getBlockTransactionCountByNumber_Param_Block number or tag",
                    "camelCase": {
                      "unsafeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag",
                      "safeName": "ethGetBlockTransactionCountByNumberParamBlockNumberOrTag"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag",
                      "safeName": "eth_get_block_transaction_count_by_number_param_block_number_or_tag"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG",
                      "safeName": "ETH_GET_BLOCK_TRANSACTION_COUNT_BY_NUMBER_PARAM_BLOCK_NUMBER_OR_TAG"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag",
                      "safeName": "EthGetBlockTransactionCountByNumberParamBlockNumberOrTag"
                    }
                  },
                  "typeId": "eth_getBlockTransactionCountByNumber_Param_Block number or tag",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getBlockTransactionCountByNumber_Param_Block number or tag_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The number of transactions in the block as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetBlockTransactionCountByNumberResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getBlockTransactionCountByNumber example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xe8"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x8"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getCode",
          "name": {
            "originalName": "eth_getCode",
            "camelCase": {
              "unsafeName": "ethGetCode",
              "safeName": "ethGetCode"
            },
            "snakeCase": {
              "unsafeName": "eth_get_code",
              "safeName": "eth_get_code"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_CODE",
              "safeName": "ETH_GET_CODE"
            },
            "pascalCase": {
              "unsafeName": "EthGetCode",
              "safeName": "EthGetCode"
            }
          },
          "headers": [],
          "displayName": "eth_getCode",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getCode_Request",
              "camelCase": {
                "unsafeName": "ethGetCodeRequest",
                "safeName": "ethGetCodeRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_code_request",
                "safeName": "eth_get_code_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_CODE_REQUEST",
                "safeName": "ETH_GET_CODE_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetCodeRequest",
                "safeName": "EthGetCodeRequest"
              }
            },
            "properties": [
              {
                "docs": "The address of the contract to get code from.",
                "name": {
                  "name": {
                    "originalName": "Address",
                    "camelCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "snakeCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ADDRESS",
                      "safeName": "ADDRESS"
                    },
                    "pascalCase": {
                      "unsafeName": "Address",
                      "safeName": "Address"
                    }
                  },
                  "wireValue": "Address"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getCode_Param_Address_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The block number, tag, or hash at which to retrieve the code.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getCode_Param_Block",
                    "camelCase": {
                      "unsafeName": "ethGetCodeParamBlock",
                      "safeName": "ethGetCodeParamBlock"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_code_param_block",
                      "safeName": "eth_get_code_param_block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_CODE_PARAM_BLOCK",
                      "safeName": "ETH_GET_CODE_PARAM_BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetCodeParamBlock",
                      "safeName": "EthGetCodeParamBlock"
                    }
                  },
                  "typeId": "eth_getCode_Param_Block",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getCode_Param_Block_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The code from the specified address, as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetCodeResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getCode example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xa50a51c09a5c451c52bb714527e1974b686d8e77",
                    "latest"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x60806040526004361060485763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416633fa4f2458114604d57806355241077146071575b600080fd5b348015605857600080fd5b50605f6088565b60408051918252519081900360200190f35b348015607c57600080fd5b506086600435608e565b005b60005481565b60008190556040805182815290517f199cd93e851e4c78c437891155e2112093f8f15394aa89dab09e38d6ca0727879181900360200190a1505600a165627a7a723058209d8929142720a69bde2ab3bfa2da6217674b984899b62753979743c0470a2ea70029"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getLogs",
          "name": {
            "originalName": "eth_getLogs",
            "camelCase": {
              "unsafeName": "ethGetLogs",
              "safeName": "ethGetLogs"
            },
            "snakeCase": {
              "unsafeName": "eth_get_logs",
              "safeName": "eth_get_logs"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_LOGS",
              "safeName": "ETH_GET_LOGS"
            },
            "pascalCase": {
              "unsafeName": "EthGetLogs",
              "safeName": "EthGetLogs"
            }
          },
          "headers": [],
          "displayName": "eth_getLogs",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getLogs_Request",
              "camelCase": {
                "unsafeName": "ethGetLogsRequest",
                "safeName": "ethGetLogsRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_logs_request",
                "safeName": "eth_get_logs_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_LOGS_REQUEST",
                "safeName": "ETH_GET_LOGS_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetLogsRequest",
                "safeName": "EthGetLogsRequest"
              }
            },
            "properties": [
              {
                "docs": "The filter options object to specify the criteria for logs retrieval.",
                "name": {
                  "name": {
                    "originalName": "Filter",
                    "camelCase": {
                      "unsafeName": "filter",
                      "safeName": "filter"
                    },
                    "snakeCase": {
                      "unsafeName": "filter",
                      "safeName": "filter"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FILTER",
                      "safeName": "FILTER"
                    },
                    "pascalCase": {
                      "unsafeName": "Filter",
                      "safeName": "Filter"
                    }
                  },
                  "wireValue": "Filter"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getLogs_Param_Filter",
                    "camelCase": {
                      "unsafeName": "ethGetLogsParamFilter",
                      "safeName": "ethGetLogsParamFilter"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_logs_param_filter",
                      "safeName": "eth_get_logs_param_filter"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_LOGS_PARAM_FILTER",
                      "safeName": "ETH_GET_LOGS_PARAM_FILTER"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetLogsParamFilter",
                      "safeName": "EthGetLogsParamFilter"
                    }
                  },
                  "typeId": "eth_getLogs_Param_Filter",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getLogs_Param_Filter_example_autogenerated": {}
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "An array of log objects matching the filter criteria.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetLogsResult_example_autogenerated": [
                      "string"
                    ]
                  }
                },
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetLogsResult",
                    "camelCase": {
                      "unsafeName": "ethGetLogsResult",
                      "safeName": "ethGetLogsResult"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_logs_result",
                      "safeName": "eth_get_logs_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_LOGS_RESULT",
                      "safeName": "ETH_GET_LOGS_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetLogsResult",
                      "safeName": "EthGetLogsResult"
                    }
                  },
                  "typeId": "EthGetLogsResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getLogs example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    {
                      "fromBlock": "0x137d3c2",
                      "toBlock": "0x137d3c3",
                      "address": "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2",
                      "topics": []
                    }
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": [
                        {
                          "logIndex": "0x0",
                          "removed": false,
                          "blockNumber": "0x233",
                          "blockHash": "0xfc139f5e2edee9e9c888d8df9a2d2226133a9bd87c88ccbd9c930d3d4c9f9ef5",
                          "transactionHash": "0x66e7a140c8fa27fe98fde923defea7562c3ca2d6bb89798aabec65782c08f63d",
                          "transactionIndex": "0x0",
                          "address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
                          "data": "0x0000000000000000000000000000000000000000000000000000000000000004",
                          "topics": [
                            "0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
                          ]
                        },
                        {
                          "logIndex": "0x0",
                          "removed": false,
                          "blockNumber": "0x238",
                          "blockHash": "0x98b0ec0f9fea0018a644959accbe69cd046a8582e89402e1ab0ada91cad644ed",
                          "transactionHash": "0xdb17aa1c2ce609132f599155d384c0bc5334c988a6c368056d7e167e23eee058",
                          "transactionIndex": "0x0",
                          "address": "0x42699a7612a82f1d9c36148af9c77354759b210b",
                          "data": "0x0000000000000000000000000000000000000000000000000000000000000007",
                          "topics": [
                            "0x04474795f5b996ff80cb47c148d4c5ccdbe09ef27551820caa9c2f8ed149cce3"
                          ]
                        }
                      ]
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getProof",
          "name": {
            "originalName": "eth_getProof",
            "camelCase": {
              "unsafeName": "ethGetProof",
              "safeName": "ethGetProof"
            },
            "snakeCase": {
              "unsafeName": "eth_get_proof",
              "safeName": "eth_get_proof"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_PROOF",
              "safeName": "ETH_GET_PROOF"
            },
            "pascalCase": {
              "unsafeName": "EthGetProof",
              "safeName": "EthGetProof"
            }
          },
          "headers": [],
          "displayName": "eth_getProof",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getProof_Request",
              "camelCase": {
                "unsafeName": "ethGetProofRequest",
                "safeName": "ethGetProofRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_proof_request",
                "safeName": "eth_get_proof_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_PROOF_REQUEST",
                "safeName": "ETH_GET_PROOF_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetProofRequest",
                "safeName": "EthGetProofRequest"
              }
            },
            "properties": [
              {
                "docs": "The address of the account to generate the proof for.",
                "name": {
                  "name": {
                    "originalName": "Address",
                    "camelCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "snakeCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ADDRESS",
                      "safeName": "ADDRESS"
                    },
                    "pascalCase": {
                      "unsafeName": "Address",
                      "safeName": "Address"
                    }
                  },
                  "wireValue": "Address"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getProof_Param_Address_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "An array of storage keys (slots) to generate proofs for.",
                "name": {
                  "name": {
                    "originalName": "StorageKeys",
                    "camelCase": {
                      "unsafeName": "storageKeys",
                      "safeName": "storageKeys"
                    },
                    "snakeCase": {
                      "unsafeName": "storage_keys",
                      "safeName": "storage_keys"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "STORAGE_KEYS",
                      "safeName": "STORAGE_KEYS"
                    },
                    "pascalCase": {
                      "unsafeName": "StorageKeys",
                      "safeName": "StorageKeys"
                    }
                  },
                  "wireValue": "StorageKeys"
                },
                "valueType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "validation": {
                            "pattern": "^0x[0-9a-f]{0,64}$"
                          },
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getProof_Param_StorageKeys_example_autogenerated": [
                      "string"
                    ]
                  }
                }
              },
              {
                "docs": "The block number, tag, or hash at which to generate the proof.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getProof_Param_Block",
                    "camelCase": {
                      "unsafeName": "ethGetProofParamBlock",
                      "safeName": "ethGetProofParamBlock"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_proof_param_block",
                      "safeName": "eth_get_proof_param_block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_PROOF_PARAM_BLOCK",
                      "safeName": "ETH_GET_PROOF_PARAM_BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetProofParamBlock",
                      "safeName": "EthGetProofParamBlock"
                    }
                  },
                  "typeId": "eth_getProof_Param_Block",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getProof_Param_Block_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "An object containing the account proof and storage proofs.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetProofResult_example_autogenerated": {
                      "address": "string",
                      "accountProof": [
                        "string"
                      ],
                      "balance": "string",
                      "codeHash": "string",
                      "nonce": "string",
                      "storageHash": "string",
                      "storageProof": [
                        {
                          "key": "string",
                          "value": "string",
                          "proof": [
                            "string"
                          ]
                        }
                      ]
                    }
                  }
                },
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthGetProofResult",
                    "camelCase": {
                      "unsafeName": "ethGetProofResult",
                      "safeName": "ethGetProofResult"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_proof_result",
                      "safeName": "eth_get_proof_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_PROOF_RESULT",
                      "safeName": "ETH_GET_PROOF_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetProofResult",
                      "safeName": "EthGetProofResult"
                    }
                  },
                  "typeId": "EthGetProofResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getProof example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xe5cB067E90D5Cd1F8052B83562Ae670bA4A211a8",
                    [
                      "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                      "0x283s34c8e2b1456f09832c71e5d6a0b4f8c9e1d3a2b5c7f0e6d4a8b2c1f3e5d7"
                    ],
                    "latest"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "accountProof": [
                          "0xf90211a06a718c2c9da77c253b12d7b2569657901e37bb691718f5dda1b86157ab1dd5eda0e7f19ed5e21bccc8d3260236b24f80ad88b3634f5d005f37b838881f0e12f1bda0abb301291704e4d92686c0f5f8ebb1734185321559b8d717ffdca95c99591976a0d0c2026bfab65c3b95276bfa82af9dec860b485f8857f293c148d63a2182128fa0c98044ec9a1273a218bed58b478277dd39173ad7b8edb95c200423a6bc8fc25fa056e5a55d9ddccdbf49362857200bbb1f042d61187c9f5f9ddcff5d2f1fc984a2a02a5b7200af424114f99a4b5f0a21c19aac82209e431ed80bfde177adb1004bdfa0026e4374f0518ff44a80fa374838ecb86cc64ac93bb710fea6dff4198f947b27a03fea341d87984673ad523177ed52f278bf4d8f97e6531c8ece932aeede4802f4a0bfe2f4a7fcb78f7e9f080dea7b6977fb1d88c441696e4456dad92b9d34ff0f43a02a3eb5c0edb14626c9c629601027bd60178bb2b688a67cea4d179fc432436615a0747355b8e02f3b884b4ffe5cea1619e32515fea064cca98208591af8c744e894a0874253737bae37f020ad3bb7e3292c7c4a63cdc158af6b33aaa4deaef016dccba03d8192bc1fc6aa1548912e763a0b5013a94399cefad7b47cf388873b2b794068a09b67f9737c6028d796bfd1c5da57a6f45824dc891f848ea0e1f8019d1fb5fba8a0aa871f9de8da85960fcd8a22cdf21c27f11e3966c14a6737ffd414b98dda00b280"
                        ],
                        "balance": "0x0",
                        "codeHash": "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "nonce": "0x0",
                        "storageHash": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                        "storageProof": [
                          {
                            "key": "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
                            "proof": [
                              "0xf90211a0c87222cccea2bf32759fcee9dbaacbe3ea4165dd6184af6773651c5e00e34a8ba0be90e6e5d1a67ab5587779c60ac136d6a96db62b84c04998a5f03a367346abd6a05344aa1c9ca2e3e56bf98fd718ec43728578d148e1967fbaf8bf17a2a073a0bda011a2f9312c3308640a0d6ceeae218747290f23806067456da1d444c65abae437a0b3097a108bfce79af6699da4ae3003cd4929f0b4576aad655c31cb725bde84c7a0c133d3c637e174f36a73c22b1039eb003da6374bc0929321241badb3efa3c4a9a0f13059f2301ad9862ce02e3f7f3f2c9ab78eb30583764d73654f7f1f8b1e86fda06544e3915748b18204e09df75ff20d2fa6bd8121e2e669699012d54590383d6fa070e3a8e093691581d58fadb560b510262a758037632cd8670d3a36df828976b7a062a88a2900544dc76a32255a6b2b2a2eef8fa68279700c00adc7508286702552a0a474aeebd5603dfce46a6ecd1ecd519068dc034a544fde03ac42d4018e60a334a0b7d528fc41c8fdc8ea18c6e7d0099270c777ec1403cf879d1f5134bdc12a6c6ca04440f1242e42c5bfa7c536591ab89c8e84bea417435871c32eef1e25295b20daa06a5dcfe3cc84cff9d3e3c3ae868cfba8f0dd111a90c3f85869dab5b893f96643a026b2fb9dd7d08b0ed2f1c44fbf875011412a384f86f751c92e1013248d4aa371a0c75597b2b789fc4e939b71937390ce9d7d53159431328ac52180eef08ef200f280"
                            ],
                            "value": "0x1"
                          }
                        ]
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getStorageAt",
          "name": {
            "originalName": "eth_getStorageAt",
            "camelCase": {
              "unsafeName": "ethGetStorageAt",
              "safeName": "ethGetStorageAt"
            },
            "snakeCase": {
              "unsafeName": "eth_get_storage_at",
              "safeName": "eth_get_storage_at"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_STORAGE_AT",
              "safeName": "ETH_GET_STORAGE_AT"
            },
            "pascalCase": {
              "unsafeName": "EthGetStorageAt",
              "safeName": "EthGetStorageAt"
            }
          },
          "headers": [],
          "displayName": "eth_getStorageAt",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getStorageAt_Request",
              "camelCase": {
                "unsafeName": "ethGetStorageAtRequest",
                "safeName": "ethGetStorageAtRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_storage_at_request",
                "safeName": "eth_get_storage_at_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_STORAGE_AT_REQUEST",
                "safeName": "ETH_GET_STORAGE_AT_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetStorageAtRequest",
                "safeName": "EthGetStorageAtRequest"
              }
            },
            "properties": [
              {
                "docs": "The address of the contract to read storage from.",
                "name": {
                  "name": {
                    "originalName": "Address",
                    "camelCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "snakeCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ADDRESS",
                      "safeName": "ADDRESS"
                    },
                    "pascalCase": {
                      "unsafeName": "Address",
                      "safeName": "Address"
                    }
                  },
                  "wireValue": "Address"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getStorageAt_Param_Address_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The index position of the storage slot to retrieve, as a hexadecimal string.",
                "name": {
                  "name": {
                    "originalName": "Storage slot",
                    "camelCase": {
                      "unsafeName": "storageSlot",
                      "safeName": "storageSlot"
                    },
                    "snakeCase": {
                      "unsafeName": "storage_slot",
                      "safeName": "storage_slot"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "STORAGE_SLOT",
                      "safeName": "STORAGE_SLOT"
                    },
                    "pascalCase": {
                      "unsafeName": "StorageSlot",
                      "safeName": "StorageSlot"
                    }
                  },
                  "wireValue": "Storage slot"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]{0,31})|0$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getStorageAt_Param_Storage slot_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The block number, tag, or hash at which to retrieve the storage value.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getStorageAt_Param_Block",
                    "camelCase": {
                      "unsafeName": "ethGetStorageAtParamBlock",
                      "safeName": "ethGetStorageAtParamBlock"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_storage_at_param_block",
                      "safeName": "eth_get_storage_at_param_block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK",
                      "safeName": "ETH_GET_STORAGE_AT_PARAM_BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetStorageAtParamBlock",
                      "safeName": "EthGetStorageAtParamBlock"
                    }
                  },
                  "typeId": "eth_getStorageAt_Param_Block",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getStorageAt_Param_Block_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The value stored at the given storage slot, encoded as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetStorageAtResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getStorageAt example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                    "0x0",
                    "latest"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x0000000000000000000000000000000000000000000000000000000000000000"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getTransactionByBlockHashAndIndex",
          "name": {
            "originalName": "eth_getTransactionByBlockHashAndIndex",
            "camelCase": {
              "unsafeName": "ethGetTransactionByBlockHashAndIndex",
              "safeName": "ethGetTransactionByBlockHashAndIndex"
            },
            "snakeCase": {
              "unsafeName": "eth_get_transaction_by_block_hash_and_index",
              "safeName": "eth_get_transaction_by_block_hash_and_index"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX",
              "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX"
            },
            "pascalCase": {
              "unsafeName": "EthGetTransactionByBlockHashAndIndex",
              "safeName": "EthGetTransactionByBlockHashAndIndex"
            }
          },
          "headers": [],
          "displayName": "eth_getTransactionByBlockHashAndIndex",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getTransactionByBlockHashAndIndex_Request",
              "camelCase": {
                "unsafeName": "ethGetTransactionByBlockHashAndIndexRequest",
                "safeName": "ethGetTransactionByBlockHashAndIndexRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_transaction_by_block_hash_and_index_request",
                "safeName": "eth_get_transaction_by_block_hash_and_index_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_REQUEST",
                "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetTransactionByBlockHashAndIndexRequest",
                "safeName": "EthGetTransactionByBlockHashAndIndexRequest"
              }
            },
            "properties": [
              {
                "docs": "The hash of the block containing the transaction.",
                "name": {
                  "name": {
                    "originalName": "Block hash",
                    "camelCase": {
                      "unsafeName": "blockHash",
                      "safeName": "blockHash"
                    },
                    "snakeCase": {
                      "unsafeName": "block_hash",
                      "safeName": "block_hash"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK_HASH",
                      "safeName": "BLOCK_HASH"
                    },
                    "pascalCase": {
                      "unsafeName": "BlockHash",
                      "safeName": "BlockHash"
                    }
                  },
                  "wireValue": "Block hash"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionByBlockHashAndIndex_Param_Block hash_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The index position of the transaction in the block's transaction list, as a hexadecimal string.",
                "name": {
                  "name": {
                    "originalName": "Transaction index",
                    "camelCase": {
                      "unsafeName": "transactionIndex",
                      "safeName": "transactionIndex"
                    },
                    "snakeCase": {
                      "unsafeName": "transaction_index",
                      "safeName": "transaction_index"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSACTION_INDEX",
                      "safeName": "TRANSACTION_INDEX"
                    },
                    "pascalCase": {
                      "unsafeName": "TransactionIndex",
                      "safeName": "TransactionIndex"
                    }
                  },
                  "wireValue": "Transaction index"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionByBlockHashAndIndex_Param_Transaction index_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The transaction object containing various properties of the transaction.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetTransactionByBlockHashAndIndexResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetTransactionByBlockHashAndIndexResultInner",
                        "camelCase": {
                          "unsafeName": "ethGetTransactionByBlockHashAndIndexResultInner",
                          "safeName": "ethGetTransactionByBlockHashAndIndexResultInner"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_transaction_by_block_hash_and_index_result_inner",
                          "safeName": "eth_get_transaction_by_block_hash_and_index_result_inner"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER",
                          "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_HASH_AND_INDEX_RESULT_INNER"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetTransactionByBlockHashAndIndexResultInner",
                          "safeName": "EthGetTransactionByBlockHashAndIndexResultInner"
                        }
                      },
                      "typeId": "EthGetTransactionByBlockHashAndIndexResultInner",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getTransactionByBlockHashAndIndex example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xbf137c3a7a1ebdfac21252765e5d7f40d115c2757e4a4abee929be88c624fdb7",
                    "0x2"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                        "blockNumber": "0x422",
                        "chainId": "0x7e2",
                        "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                        "gas": "0x5208",
                        "gasPrice": "0x3b9aca00",
                        "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                        "input": "0x",
                        "nonce": "0x1",
                        "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                        "transactionIndex": "0x2",
                        "value": "0x4e1003b28d9280000",
                        "v": "0x1c",
                        "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                        "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getTransactionByBlockNumberAndIndex",
          "name": {
            "originalName": "eth_getTransactionByBlockNumberAndIndex",
            "camelCase": {
              "unsafeName": "ethGetTransactionByBlockNumberAndIndex",
              "safeName": "ethGetTransactionByBlockNumberAndIndex"
            },
            "snakeCase": {
              "unsafeName": "eth_get_transaction_by_block_number_and_index",
              "safeName": "eth_get_transaction_by_block_number_and_index"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX",
              "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX"
            },
            "pascalCase": {
              "unsafeName": "EthGetTransactionByBlockNumberAndIndex",
              "safeName": "EthGetTransactionByBlockNumberAndIndex"
            }
          },
          "headers": [],
          "displayName": "eth_getTransactionByBlockNumberAndIndex",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getTransactionByBlockNumberAndIndex_Request",
              "camelCase": {
                "unsafeName": "ethGetTransactionByBlockNumberAndIndexRequest",
                "safeName": "ethGetTransactionByBlockNumberAndIndexRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_transaction_by_block_number_and_index_request",
                "safeName": "eth_get_transaction_by_block_number_and_index_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_REQUEST",
                "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetTransactionByBlockNumberAndIndexRequest",
                "safeName": "EthGetTransactionByBlockNumberAndIndexRequest"
              }
            },
            "properties": [
              {
                "docs": "The block number or tag ('latest', 'earliest', 'pending') containing the transaction.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getTransactionByBlockNumberAndIndex_Param_Block",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionByBlockNumberAndIndexParamBlock",
                      "safeName": "ethGetTransactionByBlockNumberAndIndexParamBlock"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_by_block_number_and_index_param_block",
                      "safeName": "eth_get_transaction_by_block_number_and_index_param_block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK",
                      "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_PARAM_BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionByBlockNumberAndIndexParamBlock",
                      "safeName": "EthGetTransactionByBlockNumberAndIndexParamBlock"
                    }
                  },
                  "typeId": "eth_getTransactionByBlockNumberAndIndex_Param_Block",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionByBlockNumberAndIndex_Param_Block_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The index position of the transaction in the block's transaction list, as a hexadecimal string.",
                "name": {
                  "name": {
                    "originalName": "Transaction index",
                    "camelCase": {
                      "unsafeName": "transactionIndex",
                      "safeName": "transactionIndex"
                    },
                    "snakeCase": {
                      "unsafeName": "transaction_index",
                      "safeName": "transaction_index"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSACTION_INDEX",
                      "safeName": "TRANSACTION_INDEX"
                    },
                    "pascalCase": {
                      "unsafeName": "TransactionIndex",
                      "safeName": "TransactionIndex"
                    }
                  },
                  "wireValue": "Transaction index"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionByBlockNumberAndIndex_Param_Transaction index_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The transaction object containing various properties of the transaction.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetTransactionByBlockNumberAndIndexResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetTransactionByBlockNumberAndIndexResultInner",
                        "camelCase": {
                          "unsafeName": "ethGetTransactionByBlockNumberAndIndexResultInner",
                          "safeName": "ethGetTransactionByBlockNumberAndIndexResultInner"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_transaction_by_block_number_and_index_result_inner",
                          "safeName": "eth_get_transaction_by_block_number_and_index_result_inner"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER",
                          "safeName": "ETH_GET_TRANSACTION_BY_BLOCK_NUMBER_AND_INDEX_RESULT_INNER"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetTransactionByBlockNumberAndIndexResultInner",
                          "safeName": "EthGetTransactionByBlockNumberAndIndexResultInner"
                        }
                      },
                      "typeId": "EthGetTransactionByBlockNumberAndIndexResultInner",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getTransactionByBlockNumberAndIndex example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0x1442e",
                    "0x2"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                        "blockNumber": "0x1442e",
                        "chainId": "0x7e2",
                        "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                        "gas": "0x5208",
                        "gasPrice": "0x3b9aca00",
                        "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                        "input": "0x",
                        "nonce": "0x1",
                        "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                        "transactionIndex": "0x2",
                        "value": "0x4e1003b28d9280000",
                        "v": "0x1c",
                        "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                        "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getTransactionByHash",
          "name": {
            "originalName": "eth_getTransactionByHash",
            "camelCase": {
              "unsafeName": "ethGetTransactionByHash",
              "safeName": "ethGetTransactionByHash"
            },
            "snakeCase": {
              "unsafeName": "eth_get_transaction_by_hash",
              "safeName": "eth_get_transaction_by_hash"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_TRANSACTION_BY_HASH",
              "safeName": "ETH_GET_TRANSACTION_BY_HASH"
            },
            "pascalCase": {
              "unsafeName": "EthGetTransactionByHash",
              "safeName": "EthGetTransactionByHash"
            }
          },
          "headers": [],
          "displayName": "eth_getTransactionByHash",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getTransactionByHash_Request",
              "camelCase": {
                "unsafeName": "ethGetTransactionByHashRequest",
                "safeName": "ethGetTransactionByHashRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_transaction_by_hash_request",
                "safeName": "eth_get_transaction_by_hash_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_REQUEST",
                "safeName": "ETH_GET_TRANSACTION_BY_HASH_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetTransactionByHashRequest",
                "safeName": "EthGetTransactionByHashRequest"
              }
            },
            "properties": [
              {
                "docs": "The hash of the transaction to retrieve.",
                "name": {
                  "name": {
                    "originalName": "Transaction hash",
                    "camelCase": {
                      "unsafeName": "transactionHash",
                      "safeName": "transactionHash"
                    },
                    "snakeCase": {
                      "unsafeName": "transaction_hash",
                      "safeName": "transaction_hash"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSACTION_HASH",
                      "safeName": "TRANSACTION_HASH"
                    },
                    "pascalCase": {
                      "unsafeName": "TransactionHash",
                      "safeName": "TransactionHash"
                    }
                  },
                  "wireValue": "Transaction hash"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionByHash_Param_Transaction hash_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The transaction object containing various properties of the transaction.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetTransactionByHashResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetTransactionByHashResultInner",
                        "camelCase": {
                          "unsafeName": "ethGetTransactionByHashResultInner",
                          "safeName": "ethGetTransactionByHashResultInner"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_transaction_by_hash_result_inner",
                          "safeName": "eth_get_transaction_by_hash_result_inner"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER",
                          "safeName": "ETH_GET_TRANSACTION_BY_HASH_RESULT_INNER"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetTransactionByHashResultInner",
                          "safeName": "EthGetTransactionByHashResultInner"
                        }
                      },
                      "typeId": "EthGetTransactionByHashResultInner",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getTransactionByHash example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "blockHash": "0x510efccf44a192e6e34bcb439a1947e24b86244280762cbb006858c237093fda",
                        "blockNumber": "0x422",
                        "chainId": "0x7e2",
                        "from": "0xfe3b557e8fb62b89f4916b721be55ceb828dbd73",
                        "gas": "0x5208",
                        "gasPrice": "0x3b9aca00",
                        "hash": "0xa52be92809541220ee0aaaede6047d9a6c5d0cd96a517c854d944ee70a0ebb44",
                        "input": "0x",
                        "nonce": "0x1",
                        "to": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                        "transactionIndex": "0x0",
                        "value": "0x4e1003b28d9280000",
                        "v": "0x1c",
                        "r": "0x84caf09aefbd5e539295acc67217563438a4efb224879b6855f56857fa2037d3",
                        "s": "0x5e863be3829812c81439f0ae9d8ecb832b531d651fb234c848d1bf45e62be8b9"
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getTransactionCount",
          "name": {
            "originalName": "eth_getTransactionCount",
            "camelCase": {
              "unsafeName": "ethGetTransactionCount",
              "safeName": "ethGetTransactionCount"
            },
            "snakeCase": {
              "unsafeName": "eth_get_transaction_count",
              "safeName": "eth_get_transaction_count"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_TRANSACTION_COUNT",
              "safeName": "ETH_GET_TRANSACTION_COUNT"
            },
            "pascalCase": {
              "unsafeName": "EthGetTransactionCount",
              "safeName": "EthGetTransactionCount"
            }
          },
          "headers": [],
          "displayName": "eth_getTransactionCount",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getTransactionCount_Request",
              "camelCase": {
                "unsafeName": "ethGetTransactionCountRequest",
                "safeName": "ethGetTransactionCountRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_transaction_count_request",
                "safeName": "eth_get_transaction_count_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_TRANSACTION_COUNT_REQUEST",
                "safeName": "ETH_GET_TRANSACTION_COUNT_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetTransactionCountRequest",
                "safeName": "EthGetTransactionCountRequest"
              }
            },
            "properties": [
              {
                "docs": "The address of the account to get the transaction count for.",
                "name": {
                  "name": {
                    "originalName": "Address",
                    "camelCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "snakeCase": {
                      "unsafeName": "address",
                      "safeName": "address"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ADDRESS",
                      "safeName": "ADDRESS"
                    },
                    "pascalCase": {
                      "unsafeName": "Address",
                      "safeName": "Address"
                    }
                  },
                  "wireValue": "Address"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-fA-F]{40}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionCount_Param_Address_example_autogenerated": "string"
                  }
                }
              },
              {
                "docs": "The block number, tag, or hash at which to retrieve the transaction count.",
                "name": {
                  "name": {
                    "originalName": "Block",
                    "camelCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "snakeCase": {
                      "unsafeName": "block",
                      "safeName": "block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BLOCK",
                      "safeName": "BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "Block",
                      "safeName": "Block"
                    }
                  },
                  "wireValue": "Block"
                },
                "valueType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "eth_getTransactionCount_Param_Block",
                    "camelCase": {
                      "unsafeName": "ethGetTransactionCountParamBlock",
                      "safeName": "ethGetTransactionCountParamBlock"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_get_transaction_count_param_block",
                      "safeName": "eth_get_transaction_count_param_block"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK",
                      "safeName": "ETH_GET_TRANSACTION_COUNT_PARAM_BLOCK"
                    },
                    "pascalCase": {
                      "unsafeName": "EthGetTransactionCountParamBlock",
                      "safeName": "EthGetTransactionCountParamBlock"
                    }
                  },
                  "typeId": "eth_getTransactionCount_Param_Block",
                  "inline": false,
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionCount_Param_Block_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The number of transactions sent from the address, as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetTransactionCountResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x([1-9a-f]+[0-9a-f]*|0)$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getTransactionCount example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xc94770007dda54cF92009BFF0dE90c06F603a09f",
                    "latest"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x1"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_getTransactionReceipt",
          "name": {
            "originalName": "eth_getTransactionReceipt",
            "camelCase": {
              "unsafeName": "ethGetTransactionReceipt",
              "safeName": "ethGetTransactionReceipt"
            },
            "snakeCase": {
              "unsafeName": "eth_get_transaction_receipt",
              "safeName": "eth_get_transaction_receipt"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_GET_TRANSACTION_RECEIPT",
              "safeName": "ETH_GET_TRANSACTION_RECEIPT"
            },
            "pascalCase": {
              "unsafeName": "EthGetTransactionReceipt",
              "safeName": "EthGetTransactionReceipt"
            }
          },
          "headers": [],
          "displayName": "eth_getTransactionReceipt",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_getTransactionReceipt_Request",
              "camelCase": {
                "unsafeName": "ethGetTransactionReceiptRequest",
                "safeName": "ethGetTransactionReceiptRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_get_transaction_receipt_request",
                "safeName": "eth_get_transaction_receipt_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_REQUEST",
                "safeName": "ETH_GET_TRANSACTION_RECEIPT_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthGetTransactionReceiptRequest",
                "safeName": "EthGetTransactionReceiptRequest"
              }
            },
            "properties": [
              {
                "docs": "The hash of the transaction for which to get the receipt.",
                "name": {
                  "name": {
                    "originalName": "Transaction hash",
                    "camelCase": {
                      "unsafeName": "transactionHash",
                      "safeName": "transactionHash"
                    },
                    "snakeCase": {
                      "unsafeName": "transaction_hash",
                      "safeName": "transaction_hash"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSACTION_HASH",
                      "safeName": "TRANSACTION_HASH"
                    },
                    "pascalCase": {
                      "unsafeName": "TransactionHash",
                      "safeName": "TransactionHash"
                    }
                  },
                  "wireValue": "Transaction hash"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_getTransactionReceipt_Param_Transaction hash_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The transaction receipt object containing various properties of the transaction receipt.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthGetTransactionReceiptResult_example_autogenerated": null
                  }
                },
                "responseBodyType": {
                  "container": {
                    "nullable": {
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": {
                        "originalName": "EthGetTransactionReceiptResultInner",
                        "camelCase": {
                          "unsafeName": "ethGetTransactionReceiptResultInner",
                          "safeName": "ethGetTransactionReceiptResultInner"
                        },
                        "snakeCase": {
                          "unsafeName": "eth_get_transaction_receipt_result_inner",
                          "safeName": "eth_get_transaction_receipt_result_inner"
                        },
                        "screamingSnakeCase": {
                          "unsafeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER",
                          "safeName": "ETH_GET_TRANSACTION_RECEIPT_RESULT_INNER"
                        },
                        "pascalCase": {
                          "unsafeName": "EthGetTransactionReceiptResultInner",
                          "safeName": "EthGetTransactionReceiptResultInner"
                        }
                      },
                      "typeId": "EthGetTransactionReceiptResultInner",
                      "inline": false,
                      "type": "named"
                    },
                    "type": "nullable"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_getTransactionReceipt example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "blockHash": "0xe7212a92cfb9b06addc80dec2a0dfae9ea94fd344efeb157c41e12994fcad60a",
                        "blockNumber": "0x50",
                        "contractAddress": null,
                        "cumulativeGasUsed": "0x5208",
                        "from": "0x627306090abab3a6e1400e9345bc60c78a8bef57",
                        "gasUsed": "0x5208",
                        "effectiveGasPrice": "0x1",
                        "logs": [],
                        "logsBloom": "0x
                        "status": "0x1",
                        "to": "0xf17f52151ebef6c7334fad080c5704d77216b732",
                        "transactionHash": "0x504ce587a65bdbdb6414a0c6c16d86a04dd79bfcc4f2950eec9634b30ce5370f",
                        "transactionIndex": "0x0",
                        "type": "0x0"
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_sendRawTransaction",
          "docs": "Submits a raw transaction (serialized and signed) for broadcasting to the network. The transaction data should be encoded as a hexadecimal string starting with `0x`. You can create and sign a transaction externally using libraries like [web3.js](https://web3js.readthedocs.io/) or [ethers.js](https://docs.ethers.org/). \n\n**Note:** For [EIP-4844](https://eips.ethereum.org/EIPS/eip-4844) transactions, the raw form must be in the network format, which includes blobs, KZG commitments, and KZG proofs.\n",
          "name": {
            "originalName": "eth_sendRawTransaction",
            "camelCase": {
              "unsafeName": "ethSendRawTransaction",
              "safeName": "ethSendRawTransaction"
            },
            "snakeCase": {
              "unsafeName": "eth_send_raw_transaction",
              "safeName": "eth_send_raw_transaction"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_SEND_RAW_TRANSACTION",
              "safeName": "ETH_SEND_RAW_TRANSACTION"
            },
            "pascalCase": {
              "unsafeName": "EthSendRawTransaction",
              "safeName": "EthSendRawTransaction"
            }
          },
          "headers": [],
          "displayName": "eth_sendRawTransaction",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "eth_sendRawTransaction_Request",
              "camelCase": {
                "unsafeName": "ethSendRawTransactionRequest",
                "safeName": "ethSendRawTransactionRequest"
              },
              "snakeCase": {
                "unsafeName": "eth_send_raw_transaction_request",
                "safeName": "eth_send_raw_transaction_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "ETH_SEND_RAW_TRANSACTION_REQUEST",
                "safeName": "ETH_SEND_RAW_TRANSACTION_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "EthSendRawTransactionRequest",
                "safeName": "EthSendRawTransactionRequest"
              }
            },
            "properties": [
              {
                "docs": "The raw transaction data to submit, encoded as a hexadecimal string.",
                "name": {
                  "name": {
                    "originalName": "Transaction",
                    "camelCase": {
                      "unsafeName": "transaction",
                      "safeName": "transaction"
                    },
                    "snakeCase": {
                      "unsafeName": "transaction",
                      "safeName": "transaction"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSACTION",
                      "safeName": "TRANSACTION"
                    },
                    "pascalCase": {
                      "unsafeName": "Transaction",
                      "safeName": "Transaction"
                    }
                  },
                  "wireValue": "Transaction"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "eth_sendRawTransaction_Param_Transaction_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The hash of the submitted transaction, as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthSendRawTransactionResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_sendRawTransaction example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0xf869018203e882520894f17f52151ebef6c7334fad080c5704d77216b732881bc16d674ec80000801ba02da1c48b670996dcb1f447ef9ef00b33033c48a4fe938f420bec3e56bfd24071a062e0aa78a81bf0290afbc3a9d8e9a068e6d74caa66c5e0fa8a46deaae96b0833"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "eth_syncing",
          "name": {
            "originalName": "eth_syncing",
            "camelCase": {
              "unsafeName": "ethSyncing",
              "safeName": "ethSyncing"
            },
            "snakeCase": {
              "unsafeName": "eth_syncing",
              "safeName": "eth_syncing"
            },
            "screamingSnakeCase": {
              "unsafeName": "ETH_SYNCING",
              "safeName": "ETH_SYNCING"
            },
            "pascalCase": {
              "unsafeName": "EthSyncing",
              "safeName": "EthSyncing"
            }
          },
          "headers": [],
          "displayName": "eth_syncing",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "response": {
            "body": {
              "value": {
                "docs": "An object with synchronization status data when syncing, or `false` when not syncing.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "EthSyncingResult_example_autogenerated": true
                  }
                },
                "responseBodyType": {
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "name": {
                    "originalName": "EthSyncingResult",
                    "camelCase": {
                      "unsafeName": "ethSyncingResult",
                      "safeName": "ethSyncingResult"
                    },
                    "snakeCase": {
                      "unsafeName": "eth_syncing_result",
                      "safeName": "eth_syncing_result"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ETH_SYNCING_RESULT",
                      "safeName": "ETH_SYNCING_RESULT"
                    },
                    "pascalCase": {
                      "unsafeName": "EthSyncingResult",
                      "safeName": "EthSyncingResult"
                    }
                  },
                  "typeId": "EthSyncingResult",
                  "inline": false,
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "eth_syncing example (syncing)": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": []
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": {
                        "startingBlock": "0x0",
                        "currentBlock": "0x1518",
                        "highestBlock": "0x9567a3"
                      }
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              },
              "eth_syncing example (not syncing)": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": []
                },
                "response": {},
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "net_version",
          "name": {
            "originalName": "net_version",
            "camelCase": {
              "unsafeName": "netVersion",
              "safeName": "netVersion"
            },
            "snakeCase": {
              "unsafeName": "net_version",
              "safeName": "net_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "NET_VERSION",
              "safeName": "NET_VERSION"
            },
            "pascalCase": {
              "unsafeName": "NetVersion",
              "safeName": "NetVersion"
            }
          },
          "headers": [],
          "displayName": "net_version",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "response": {
            "body": {
              "value": {
                "docs": "The network ID as a string. Common IDs are `\"1\"` for mainnet, `\"3\"` for Ropsten, etc.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "NetVersionResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "net_version example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": []
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "1"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "web3_clientVersion",
          "name": {
            "originalName": "web3_clientVersion",
            "camelCase": {
              "unsafeName": "web3ClientVersion",
              "safeName": "web3ClientVersion"
            },
            "snakeCase": {
              "unsafeName": "web_3_client_version",
              "safeName": "web_3_client_version"
            },
            "screamingSnakeCase": {
              "unsafeName": "WEB_3_CLIENT_VERSION",
              "safeName": "WEB_3_CLIENT_VERSION"
            },
            "pascalCase": {
              "unsafeName": "Web3ClientVersion",
              "safeName": "Web3ClientVersion"
            }
          },
          "headers": [],
          "displayName": "web3_clientVersion",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "response": {
            "body": {
              "value": {
                "docs": "A string identifying the client software name, version, and platform.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "Web3ClientVersionResult_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {},
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "web3_clientVersion example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": []
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "Geth/v1.10.8-stable-26675454/linux-amd64/go1.16.6"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        },
        {
          "baseUrl": "Ink Mainnet",
          "auth": false,
          "method": "POST",
          "id": "web3_sha3",
          "name": {
            "originalName": "web3_sha3",
            "camelCase": {
              "unsafeName": "web3Sha3",
              "safeName": "web3Sha3"
            },
            "snakeCase": {
              "unsafeName": "web_3_sha_3",
              "safeName": "web_3_sha_3"
            },
            "screamingSnakeCase": {
              "unsafeName": "WEB_3_SHA_3",
              "safeName": "WEB_3_SHA_3"
            },
            "pascalCase": {
              "unsafeName": "Web3Sha3",
              "safeName": "Web3Sha3"
            }
          },
          "headers": [],
          "displayName": "web3_sha3",
          "pathParameters": [],
          "queryParameters": [],
          "allPathParameters": [],
          "path": {
            "head": "",
            "parts": []
          },
          "fullPath": {
            "head": "",
            "parts": []
          },
          "requestBody": {
            "name": {
              "originalName": "web3_sha3_Request",
              "camelCase": {
                "unsafeName": "web3Sha3Request",
                "safeName": "web3Sha3Request"
              },
              "snakeCase": {
                "unsafeName": "web_3_sha_3_request",
                "safeName": "web_3_sha_3_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "WEB_3_SHA_3_REQUEST",
                "safeName": "WEB_3_SHA_3_REQUEST"
              },
              "pascalCase": {
                "unsafeName": "Web3Sha3Request",
                "safeName": "Web3Sha3Request"
              }
            },
            "properties": [
              {
                "docs": "The data to hash, encoded as a hexadecimal string.",
                "name": {
                  "name": {
                    "originalName": "Data",
                    "camelCase": {
                      "unsafeName": "data",
                      "safeName": "data"
                    },
                    "snakeCase": {
                      "unsafeName": "data",
                      "safeName": "data"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "DATA",
                      "safeName": "DATA"
                    },
                    "pascalCase": {
                      "unsafeName": "Data",
                      "safeName": "Data"
                    }
                  },
                  "wireValue": "Data"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]*$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "web3_sha3_Param_Data_example_autogenerated": "string"
                  }
                }
              }
            ],
            "extends": [],
            "extendedProperties": [],
            "contentType": "application/json",
            "extraProperties": false,
            "type": "inlinedRequestBody"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The Keccak-256 hash of the input data, as a hexadecimal string.",
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {
                    "Web3Sha3Result_example_autogenerated": "string"
                  }
                },
                "responseBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "pattern": "^0x[0-9a-f]{64}$"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "response"
              },
              "type": "json"
            }
          },
          "errors": [],
          "idempotent": false,
          "userSpecifiedExamples": [],
          "autogeneratedExamples": [],
          "v2Examples": {
            "autogeneratedExamples": {},
            "userSpecifiedExamples": {
              "web3_sha3 example": {
                "request": {
                  "endpoint": {
                    "method": "POST",
                    "path": "/{apiKey}"
                  },
                  "pathParameters": {},
                  "queryParameters": {},
                  "headers": {},
                  "requestBody": [
                    "0x68656c6c6f20776f726c64"
                  ]
                },
                "response": {
                  "body": {
                    "value": {
                      "jsonrpc": "2.0",
                      "id": "1",
                      "result": "0x47173285a8d734ad4162d1b2ca3c6f0d0fabc60b8d702d31fd8e5c98569c36f9"
                    },
                    "type": "json"
                  }
                },
                "codeSamples": []
              }
            }
          },
          "source": {
            "type": "openrpc"
          },
          "audiences": []
        }
      ]
    }
  },
  "errors": {},
  "webhookGroups": {},
  "headers": [],
  "idempotencyHeaders": [],
  "pathParameters": [],
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "variables": [],
  "serviceTypeReferenceInfo": {
    "sharedTypes": [],
    "typesReferencedOnlyByService": {}
  },
  "environments": {
    "defaultEnvironment": "Ink Mainnet",
    "environments": {
      "environments": [
        {
          "id": "Ink Mainnet",
          "name": {
            "originalName": "Ink Mainnet",
            "camelCase": {
              "unsafeName": "inkMainnet",
              "safeName": "inkMainnet"
            },
            "snakeCase": {
              "unsafeName": "ink_mainnet",
              "safeName": "ink_mainnet"
            },
            "screamingSnakeCase": {
              "unsafeName": "INK_MAINNET",
              "safeName": "INK_MAINNET"
            },
            "pascalCase": {
              "unsafeName": "InkMainnet",
              "safeName": "InkMainnet"
            }
          },
          "url": "https://ink-mainnet.g.alchemy.com/v2"
        },
        {
          "id": "Ink Sepolia",
          "name": {
            "originalName": "Ink Sepolia",
            "camelCase": {
              "unsafeName": "inkSepolia",
              "safeName": "inkSepolia"
            },
            "snakeCase": {
              "unsafeName": "ink_sepolia",
              "safeName": "ink_sepolia"
            },
            "screamingSnakeCase": {
              "unsafeName": "INK_SEPOLIA",
              "safeName": "INK_SEPOLIA"
            },
            "pascalCase": {
              "unsafeName": "InkSepolia",
              "safeName": "InkSepolia"
            }
          },
          "url": "https://ink-sepolia.g.alchemy.com/v2"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "service": "service_root",
    "types": [],
    "errors": [],
    "subpackages": [],
    "hasEndpointsInTree": false
  },
  "subpackages": {},
  "sdkConfig": {
    "hasFileDownloadEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasStreamingEndpoints": false,
    "isAuthMandatory": true,
    "platformHeaders": {
      "language": "",
      "sdkName": "",
      "sdkVersion": ""
    }
  },
  "apiName": {
    "originalName": "",
    "camelCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "snakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "screamingSnakeCase": {
      "unsafeName": "",
      "safeName": ""
    },
    "pascalCase": {
      "unsafeName": "",
      "safeName": ""
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceId",
          "safeName": "errorInstanceId"
        },
        "snakeCase": {
          "unsafeName": "error_instance_id",
          "safeName": "error_instance_id"
        },
        "screamingSnakeCase": {
          "unsafeName": "ERROR_INSTANCE_ID",
          "safeName": "ERROR_INSTANCE_ID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceId",
          "safeName": "ErrorInstanceId"
        }
      },
      "wireValue": "errorInstanceId"
    }
  }
}