{
  "selfHosted": false,
  "apiName": {
    "originalName": "api",
    "pascalCase": {
      "unsafeName": "API",
      "safeName": "API"
    }
  },
  "apiDisplayName": "Upload API Reference",
  "auth": {
    "requirement": "ALL",
    "schemes": []
  },
  "headers": [],
  "idempotencyHeaders": [],
  "types": {
    "type_upload:BaseUploadResponse": {
      "docs": "JSON object where the key is the file name of the uploaded file and\nthe value is the unique ID of the file on our systems.",
      "name": {
        "name": "BaseUploadResponse",
        "fernFilepath": {
          "allParts": [
            "upload"
          ],
          "packagePath": [],
          "file": "upload"
        },
        "typeId": "type_upload:BaseUploadResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "filename",
              "wireValue": "filename"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_upload:MultipartFileUploadStartResponse": {
      "name": {
        "name": "MultipartFileUploadStartResponse",
        "fernFilepath": {
          "allParts": [
            "upload"
          ],
          "packagePath": [],
          "file": "upload"
        },
        "typeId": "type_upload:MultipartFileUploadStartResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "File's UUID.",
            "name": {
              "name": {
                "originalName": "uuid",
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "parts",
              "wireValue": "parts"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_upload:FromUrlUploadRequestCheckUrlDuplicates": {
      "docs": "If set to \"1\", enables the `source_url` duplicates prevention.\nSpecifically, if the `source_url` had already been fetched and uploaded previously,\nthis request will return information about the already uploaded file.",
      "inline": true,
      "name": {
        "name": {
          "originalName": "FromUrlUploadRequestCheckUrlDuplicates",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestCheckURLDuplicates",
            "safeName": "fromURLUploadRequestCheckURLDuplicates"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestCheckURLDuplicates",
            "safeName": "FromURLUploadRequestCheckURLDuplicates"
          }
        },
        "fernFilepath": {
          "allParts": [
            "upload"
          ],
          "packagePath": [],
          "file": "upload"
        },
        "typeId": "type_upload:FromUrlUploadRequestCheckUrlDuplicates"
      },
      "shape": {
        "default": {
          "name": {
            "name": "Zero",
            "wireValue": "0"
          }
        },
        "values": [
          {
            "name": {
              "name": "Zero",
              "wireValue": "0"
            }
          },
          {
            "name": {
              "name": "One",
              "wireValue": "1"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_upload:FromUrlUploadRequestSaveUrlDuplicates": {
      "docs": "Determines if the requested `source_url` should be kept in the history of\nfetched/uploaded URLs. If the value is not defined explicitly, it is set\nto the value of the `check_URL_duplicates` parameter.",
      "inline": true,
      "name": {
        "name": {
          "originalName": "FromUrlUploadRequestSaveUrlDuplicates",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestSaveURLDuplicates",
            "safeName": "fromURLUploadRequestSaveURLDuplicates"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestSaveURLDuplicates",
            "safeName": "FromURLUploadRequestSaveURLDuplicates"
          }
        },
        "fernFilepath": {
          "allParts": [
            "upload"
          ],
          "packagePath": [],
          "file": "upload"
        },
        "typeId": "type_upload:FromUrlUploadRequestSaveUrlDuplicates"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "Zero",
              "wireValue": "0"
            }
          },
          {
            "name": {
              "name": "One",
              "wireValue": "1"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_upload:FromUrlUploadResponse": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadResponse",
          "camelCase": {
            "unsafeName": "fromURLUploadResponse",
            "safeName": "fromURLUploadResponse"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadResponse",
            "safeName": "FromURLUploadResponse"
          }
        },
        "fernFilepath": {
          "allParts": [
            "upload"
          ],
          "packagePath": [],
          "file": "upload"
        },
        "typeId": "type_upload:FromUrlUploadResponse"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": {
                "originalName": "FromUrlUploadResponseSchema",
                "camelCase": {
                  "unsafeName": "fromURLUploadResponseSchema",
                  "safeName": "fromURLUploadResponseSchema"
                },
                "pascalCase": {
                  "unsafeName": "FromURLUploadResponseSchema",
                  "safeName": "FromURLUploadResponseSchema"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "From URL Upload Response Schema",
              "typeId": "type_:FromUrlUploadResponseSchema",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "FileUploadInfoFromUrl",
                "camelCase": {
                  "unsafeName": "fileUploadInfoFromURL",
                  "safeName": "fileUploadInfoFromURL"
                },
                "pascalCase": {
                  "unsafeName": "FileUploadInfoFromURL",
                  "safeName": "FileUploadInfoFromURL"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Upload Info from URL",
              "typeId": "type_:FileUploadInfoFromUrl",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_upload:FromUrlUploadStatusResponse": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadStatusResponse",
          "camelCase": {
            "unsafeName": "fromURLUploadStatusResponse",
            "safeName": "fromURLUploadStatusResponse"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadStatusResponse",
            "safeName": "FromURLUploadStatusResponse"
          }
        },
        "fernFilepath": {
          "allParts": [
            "upload"
          ],
          "packagePath": [],
          "file": "upload"
        },
        "typeId": "type_upload:FromUrlUploadStatusResponse"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "FileUploadInfoWaitingStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Upload Info Waiting Status",
              "typeId": "type_:FileUploadInfoWaitingStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileUploadInfoProgressStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Upload Info Progress Status",
              "typeId": "type_:FileUploadInfoProgressStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileUploadInfoSuccessStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Upload Info Success Status",
              "typeId": "type_:FileUploadInfoSuccessStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileUploadInfoErrorStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Upload Info Error Status",
              "typeId": "type_:FileUploadInfoErrorStatus",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileUploadInfoUnknownStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Upload Info Unknown Status",
              "typeId": "type_:FileUploadInfoUnknownStatus",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:BaseUploadRequestBadRequestErrorBody": {
      "name": {
        "name": "BaseUploadRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:BaseUploadRequestBadRequestErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "RequestFiledsNumberLimitExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Request Fileds Number Limit Exceeded Error",
              "typeId": "type_:RequestFiledsNumberLimitExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PostRequestParserFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Post Request Parser Failed Error",
              "typeId": "type_:PostRequestParserFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "NullCharactersForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Null Characters Forbidden Error",
              "typeId": "type_:NullCharactersForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyDuplicatedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Duplicated Error",
              "typeId": "type_:FileMetadataKeyDuplicatedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyEmptyError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Empty Error",
              "typeId": "type_:FileMetadataKeyEmptyError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Forbidden Error",
              "typeId": "type_:FileMetadataKeyForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyLengthTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Length Too Big Error",
              "typeId": "type_:FileMetadataKeyLengthTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueEmptyError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Empty Error",
              "typeId": "type_:FileMetadataValueEmptyError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Forbidden Error",
              "typeId": "type_:FileMetadataValueForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueLengthTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Length Too Big Error",
              "typeId": "type_:FileMetadataValueLengthTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeysNumberTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Keys Number Too Big Error",
              "typeId": "type_:FileMetadataKeysNumberTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Required Error",
              "typeId": "type_:SignatureRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Required Error",
              "typeId": "type_:SignatureExpirationRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Invalid Error",
              "typeId": "type_:SignatureExpirationInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FilesRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Files Required Error",
              "typeId": "type_:FilesRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileSizeLimitExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Size Limit Exceeded Error",
              "typeId": "type_:FileSizeLimitExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileTypeForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Type Forbidden Error",
              "typeId": "type_:FileTypeForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileInfectedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Infected Error",
              "typeId": "type_:FileInfectedError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:BaseUploadRequestForbiddenErrorBody": {
      "name": {
        "name": "BaseUploadRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:BaseUploadRequestForbiddenErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "UploadcarePublicKeyRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Uploadcare Public Key Required Error",
              "typeId": "type_:UploadcarePublicKeyRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "UploadcarePublicKeyInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Uploadcare Public Key Invalid Error",
              "typeId": "type_:UploadcarePublicKeyInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AutoStoreDisabledError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Auto Store Disabled Error",
              "typeId": "type_:AutoStoreDisabledError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "ProjectPublicKeyRemovedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Project Public Key Removed Error",
              "typeId": "type_:ProjectPublicKeyRemovedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountBlockedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Blocked Error",
              "typeId": "type_:AccountBlockedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountUnpaidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Unpaid Error",
              "typeId": "type_:AccountUnpaidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "UploadFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Upload Failed Error",
              "typeId": "type_:UploadFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountLimitsExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Limits Exceeded Error",
              "typeId": "type_:AccountLimitsExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Error",
              "typeId": "type_:SignatureExpirationError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Invalid Error",
              "typeId": "type_:SignatureInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileUploadStartRequestBadRequestErrorBody": {
      "name": {
        "name": "MultipartFileUploadStartRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "RequestFiledsNumberLimitExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Request Fileds Number Limit Exceeded Error",
              "typeId": "type_:RequestFiledsNumberLimitExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PostRequestParserFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Post Request Parser Failed Error",
              "typeId": "type_:PostRequestParserFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "NullCharactersForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Null Characters Forbidden Error",
              "typeId": "type_:NullCharactersForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyDuplicatedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Duplicated Error",
              "typeId": "type_:FileMetadataKeyDuplicatedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyEmptyError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Empty Error",
              "typeId": "type_:FileMetadataKeyEmptyError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Forbidden Error",
              "typeId": "type_:FileMetadataKeyForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyLengthTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Length Too Big Error",
              "typeId": "type_:FileMetadataKeyLengthTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueEmptyError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Empty Error",
              "typeId": "type_:FileMetadataValueEmptyError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Forbidden Error",
              "typeId": "type_:FileMetadataValueForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueLengthTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Length Too Big Error",
              "typeId": "type_:FileMetadataValueLengthTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeysNumberTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Keys Number Too Big Error",
              "typeId": "type_:FileMetadataKeysNumberTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Required Error",
              "typeId": "type_:SignatureRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Required Error",
              "typeId": "type_:SignatureExpirationRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Invalid Error",
              "typeId": "type_:SignatureExpirationInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "RequestParamRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Request Param Required Error",
              "typeId": "type_:RequestParamRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartSizeInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart Size Invalid Error",
              "typeId": "type_:MultipartSizeInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartFileSizeLimitExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart File Size Limit Exceeded Error",
              "typeId": "type_:MultipartFileSizeLimitExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartFileSizeTooSmallError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart File Size Too Small Error",
              "typeId": "type_:MultipartFileSizeTooSmallError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartPartSizeInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart Part Size Invalid Error",
              "typeId": "type_:MultipartPartSizeInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartPartSizeTooSmallError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart Part Size Too Small Error",
              "typeId": "type_:MultipartPartSizeTooSmallError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartPartSizeTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart Part Size Too Big Error",
              "typeId": "type_:MultipartPartSizeTooBigError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileUploadStartRequestForbiddenErrorBody": {
      "name": {
        "name": "MultipartFileUploadStartRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "UploadcarePublicKeyRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Uploadcare Public Key Required Error",
              "typeId": "type_:UploadcarePublicKeyRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "UploadcarePublicKeyInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Uploadcare Public Key Invalid Error",
              "typeId": "type_:UploadcarePublicKeyInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AutoStoreDisabledError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Auto Store Disabled Error",
              "typeId": "type_:AutoStoreDisabledError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "ProjectPublicKeyRemovedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Project Public Key Removed Error",
              "typeId": "type_:ProjectPublicKeyRemovedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountBlockedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Blocked Error",
              "typeId": "type_:AccountBlockedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountUnpaidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Unpaid Error",
              "typeId": "type_:AccountUnpaidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "UploadFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Upload Failed Error",
              "typeId": "type_:UploadFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountLimitsExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Limits Exceeded Error",
              "typeId": "type_:AccountLimitsExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Error",
              "typeId": "type_:SignatureExpirationError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Invalid Error",
              "typeId": "type_:SignatureInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody": {
      "name": {
        "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "RequestFiledsNumberLimitExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Request Fileds Number Limit Exceeded Error",
              "typeId": "type_:RequestFiledsNumberLimitExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PostRequestParserFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Post Request Parser Failed Error",
              "typeId": "type_:PostRequestParserFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "NullCharactersForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Null Characters Forbidden Error",
              "typeId": "type_:NullCharactersForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "MultipartFileIdRequiredError",
                "camelCase": {
                  "unsafeName": "multipartFileIDRequiredError",
                  "safeName": "multipartFileIDRequiredError"
                },
                "pascalCase": {
                  "unsafeName": "MultipartFileIDRequiredError",
                  "safeName": "MultipartFileIDRequiredError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart File ID Required Error",
              "typeId": "type_:MultipartFileIdRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UuidInvalidError",
                "pascalCase": {
                  "unsafeName": "UUIDInvalidError",
                  "safeName": "UUIDInvalidError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Uuid Invalid Error",
              "typeId": "type_:UuidInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartFileAlreadyUploadedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart File Already Uploaded Error",
              "typeId": "type_:MultipartFileAlreadyUploadedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartUploadSizeTooLargeError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart Upload Size Too Large Error",
              "typeId": "type_:MultipartUploadSizeTooLargeError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartUploadSizeTooSmallError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart Upload Size Too Small Error",
              "typeId": "type_:MultipartUploadSizeTooSmallError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "MultipartFileCompletionFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Multipart File Completion Failed Error",
              "typeId": "type_:MultipartFileCompletionFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileTypeForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Type Forbidden Error",
              "typeId": "type_:FileTypeForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileInfectedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Infected Error",
              "typeId": "type_:FileInfectedError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody": {
      "name": {
        "name": "MultipartFileUploadCompleteRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "UploadcarePublicKeyRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Uploadcare Public Key Required Error",
              "typeId": "type_:UploadcarePublicKeyRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "UploadcarePublicKeyInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Uploadcare Public Key Invalid Error",
              "typeId": "type_:UploadcarePublicKeyInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FromUrlUploadRequestBadRequestErrorBody": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadRequestBadRequestErrorBody",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
            "safeName": "fromURLUploadRequestBadRequestErrorBody"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
            "safeName": "FromURLUploadRequestBadRequestErrorBody"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "RequestFiledsNumberLimitExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Request Fileds Number Limit Exceeded Error",
              "typeId": "type_:RequestFiledsNumberLimitExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PostRequestParserFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Post Request Parser Failed Error",
              "typeId": "type_:PostRequestParserFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "NullCharactersForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Null Characters Forbidden Error",
              "typeId": "type_:NullCharactersForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyDuplicatedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Duplicated Error",
              "typeId": "type_:FileMetadataKeyDuplicatedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyEmptyError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Empty Error",
              "typeId": "type_:FileMetadataKeyEmptyError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Forbidden Error",
              "typeId": "type_:FileMetadataKeyForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeyLengthTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Key Length Too Big Error",
              "typeId": "type_:FileMetadataKeyLengthTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueEmptyError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Empty Error",
              "typeId": "type_:FileMetadataValueEmptyError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Forbidden Error",
              "typeId": "type_:FileMetadataValueForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataValueLengthTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Value Length Too Big Error",
              "typeId": "type_:FileMetadataValueLengthTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FileMetadataKeysNumberTooBigError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File Metadata Keys Number Too Big Error",
              "typeId": "type_:FileMetadataKeysNumberTooBigError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Required Error",
              "typeId": "type_:SignatureRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Required Error",
              "typeId": "type_:SignatureExpirationRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Invalid Error",
              "typeId": "type_:SignatureExpirationInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "SourceUrlRequiredError",
                "camelCase": {
                  "unsafeName": "sourceURLRequiredError",
                  "safeName": "sourceURLRequiredError"
                },
                "pascalCase": {
                  "unsafeName": "SourceURLRequiredError",
                  "safeName": "SourceURLRequiredError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Source URL Required Error",
              "typeId": "type_:SourceUrlRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UrlParsingFailedError",
                "pascalCase": {
                  "unsafeName": "URLParsingFailedError",
                  "safeName": "URLParsingFailedError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "URL Parsing Failed Error",
              "typeId": "type_:UrlParsingFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UrlSchemeRequiredError",
                "pascalCase": {
                  "unsafeName": "URLSchemeRequiredError",
                  "safeName": "URLSchemeRequiredError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "URL Scheme Required Error",
              "typeId": "type_:UrlSchemeRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UrlSchemeInvalidError",
                "pascalCase": {
                  "unsafeName": "URLSchemeInvalidError",
                  "safeName": "URLSchemeInvalidError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "URL Scheme Invalid Error",
              "typeId": "type_:UrlSchemeInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UrlHostRequiredError",
                "pascalCase": {
                  "unsafeName": "URLHostRequiredError",
                  "safeName": "URLHostRequiredError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "URL Host Required Error",
              "typeId": "type_:UrlHostRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UrlBlacklistedError",
                "pascalCase": {
                  "unsafeName": "URLBlacklistedError",
                  "safeName": "URLBlacklistedError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "URL Blacklisted Error",
              "typeId": "type_:UrlBlacklistedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "HostnameNotFoundError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Hostname Not Found Error",
              "typeId": "type_:HostnameNotFoundError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UrlHostMalformedError",
                "pascalCase": {
                  "unsafeName": "URLHostMalformedError",
                  "safeName": "URLHostMalformedError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "URL Host Malformed Error",
              "typeId": "type_:UrlHostMalformedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "UrlHostPrivateIpForbiddenError",
                "camelCase": {
                  "unsafeName": "urlHostPrivateIPForbiddenError",
                  "safeName": "urlHostPrivateIPForbiddenError"
                },
                "pascalCase": {
                  "unsafeName": "URLHostPrivateIPForbiddenError",
                  "safeName": "URLHostPrivateIPForbiddenError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "URL Host Private IP Forbidden Error",
              "typeId": "type_:UrlHostPrivateIpForbiddenError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FromUrlUploadRequestForbiddenErrorBody": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadRequestForbiddenErrorBody",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
            "safeName": "fromURLUploadRequestForbiddenErrorBody"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
            "safeName": "FromURLUploadRequestForbiddenErrorBody"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "PublicKeyRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Required Error",
              "typeId": "type_:PublicKeyRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PublicKeyInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Invalid Error",
              "typeId": "type_:PublicKeyInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AutoStoreDisabledError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Auto Store Disabled Error",
              "typeId": "type_:AutoStoreDisabledError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "ProjectPublicKeyRemovedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Project Public Key Removed Error",
              "typeId": "type_:ProjectPublicKeyRemovedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountBlockedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Blocked Error",
              "typeId": "type_:AccountBlockedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountUnpaidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Unpaid Error",
              "typeId": "type_:AccountUnpaidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "UploadFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Upload Failed Error",
              "typeId": "type_:UploadFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountLimitsExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Limits Exceeded Error",
              "typeId": "type_:AccountLimitsExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Error",
              "typeId": "type_:SignatureExpirationError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Invalid Error",
              "typeId": "type_:SignatureInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoRequestBadRequestErrorBody": {
      "name": {
        "name": "FileUploadInfoRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoRequestBadRequestErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "NullCharactersForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Null Characters Forbidden Error",
              "typeId": "type_:NullCharactersForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "FileIdRequiredError",
                "camelCase": {
                  "unsafeName": "fileIDRequiredError",
                  "safeName": "fileIDRequiredError"
                },
                "pascalCase": {
                  "unsafeName": "FileIDRequiredError",
                  "safeName": "FileIDRequiredError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File ID Required Error",
              "typeId": "type_:FileIdRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "FileIdInvalidError",
                "camelCase": {
                  "unsafeName": "fileIDInvalidError",
                  "safeName": "fileIDInvalidError"
                },
                "pascalCase": {
                  "unsafeName": "FileIDInvalidError",
                  "safeName": "FileIDInvalidError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "File ID Invalid Error",
              "typeId": "type_:FileIdInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoRequestForbiddenErrorBody": {
      "name": {
        "name": "FileUploadInfoRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoRequestForbiddenErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "PublicKeyRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Required Error",
              "typeId": "type_:PublicKeyRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PublicKeyInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Invalid Error",
              "typeId": "type_:PublicKeyInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreateFilesGroupRequestBadRequestErrorBody": {
      "name": {
        "name": "CreateFilesGroupRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "RequestFiledsNumberLimitExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Request Fileds Number Limit Exceeded Error",
              "typeId": "type_:RequestFiledsNumberLimitExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PostRequestParserFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Post Request Parser Failed Error",
              "typeId": "type_:PostRequestParserFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "NullCharactersForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Null Characters Forbidden Error",
              "typeId": "type_:NullCharactersForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Required Error",
              "typeId": "type_:SignatureRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Required Error",
              "typeId": "type_:SignatureExpirationRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Invalid Error",
              "typeId": "type_:SignatureExpirationInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "GroupFilesInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Group Files Invalid Error",
              "typeId": "type_:GroupFilesInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "GroupFileUrlParsingFailedError",
                "camelCase": {
                  "unsafeName": "groupFileURLParsingFailedError",
                  "safeName": "groupFileURLParsingFailedError"
                },
                "pascalCase": {
                  "unsafeName": "GroupFileURLParsingFailedError",
                  "safeName": "GroupFileURLParsingFailedError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Group File URL Parsing Failed Error",
              "typeId": "type_:GroupFileUrlParsingFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "GroupFilesNotFoundError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Group Files Not Found Error",
              "typeId": "type_:GroupFilesNotFoundError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreateFilesGroupRequestForbiddenErrorBody": {
      "name": {
        "name": "CreateFilesGroupRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "PublicKeyRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Required Error",
              "typeId": "type_:PublicKeyRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PublicKeyInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Invalid Error",
              "typeId": "type_:PublicKeyInvalidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "ProjectPublicKeyRemovedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Project Public Key Removed Error",
              "typeId": "type_:ProjectPublicKeyRemovedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountBlockedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Blocked Error",
              "typeId": "type_:AccountBlockedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountUnpaidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Unpaid Error",
              "typeId": "type_:AccountUnpaidError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "UploadFailedError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Upload Failed Error",
              "typeId": "type_:UploadFailedError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "AccountLimitsExceededError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Account Limits Exceeded Error",
              "typeId": "type_:AccountLimitsExceededError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureExpirationError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Expiration Error",
              "typeId": "type_:SignatureExpirationError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SignatureInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Signature Invalid Error",
              "typeId": "type_:SignatureInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FilesGroupInfoRequestBadRequestErrorBody": {
      "name": {
        "name": "FilesGroupInfoRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FilesGroupInfoRequestBadRequestErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "NullCharactersForbiddenError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Null Characters Forbidden Error",
              "typeId": "type_:NullCharactersForbiddenError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": {
                "originalName": "GroupIdRequiredError",
                "camelCase": {
                  "unsafeName": "groupIDRequiredError",
                  "safeName": "groupIDRequiredError"
                },
                "pascalCase": {
                  "unsafeName": "GroupIDRequiredError",
                  "safeName": "GroupIDRequiredError"
                }
              },
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Group ID Required Error",
              "typeId": "type_:GroupIdRequiredError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FilesGroupInfoRequestForbiddenErrorBody": {
      "name": {
        "name": "FilesGroupInfoRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FilesGroupInfoRequestForbiddenErrorBody"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "PublicKeyRequiredError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Required Error",
              "typeId": "type_:PublicKeyRequiredError",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PublicKeyInvalidError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Public Key Invalid Error",
              "typeId": "type_:PublicKeyInvalidError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SignatureType": {
      "docs": "`signature` must be sent along with your upload request if you would like to use signed uploads.\nThe signature should be generated on your backend.\n**Note**: the process requires knowledge of your Uploadcare Project's Secret key.\nSee [signed uploads](https://uploadcare.com/docs/security/secure-uploads/) for details.",
      "name": {
        "name": "SignatureType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SignatureType"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ExpireType": {
      "docs": "`expire` must be sent along with your upload request if you would like to use signed uploads.\nThe parameter defines the time during which your signature is valid. It's a UNIX timestamp.\nSee [signed uploads](https://uploadcare.com/docs/security/secure-uploads/) for details.",
      "name": {
        "name": "ExpireType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ExpireType"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "DOUBLE",
            "v2": {
              "type": "double"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "DOUBLE",
            "v2": {
              "type": "double"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:StoreType": {
      "docs": "Determines if an uploaded file should be marked as temporary or permanent.\n\nThe parameter can have the following values:\n- `0` - do not mark an uploaded file as stored and remove it after 24 hours\n- `1` - mark the uploaded file as stored\n- `auto` - delegate the choice of the file-storing behavior to a project-wide setting called\n  [auto-store](https://app.uploadcare.com/projects/-/settings/#storage).\n\nThe default value depends on the user registration date.\n\nFor all users registered after February 12, 2024 (UTC 13:30), the default value is `auto`. \nFile-storing behavior depends entirely on what is set in the \n[storage settings](https://app.uploadcare.com/projects/-/settings/#storage) in the Dashboard.\n\nFor users registered before February 12, 2024, the default value is `0`. \nTo ensure that file storage in the project matches the settings in the Dashboard,\nchange the value to `auto`.",
      "name": {
        "name": "StoreType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:StoreType"
      },
      "shape": {
        "default": {
          "name": {
            "name": "auto",
            "wireValue": "auto"
          }
        },
        "values": [
          {
            "name": {
              "name": "Zero",
              "wireValue": "0"
            }
          },
          {
            "name": {
              "name": "One",
              "wireValue": "1"
            }
          },
          {
            "name": {
              "name": "auto",
              "wireValue": "auto"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ProjectPublicKeyType": {
      "docs": "Public key identifying an Uploadcare project your uploads will go to.",
      "name": {
        "name": "ProjectPublicKeyType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ProjectPublicKeyType"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfo": {
      "docs": "Information about an uploaded file.",
      "name": {
        "name": "FileUploadInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "File's unique ID.",
            "name": {
              "name": {
                "originalName": "uuid",
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `uuid`",
            "name": {
              "name": {
                "originalName": "file_id",
                "camelCase": {
                  "unsafeName": "fileID",
                  "safeName": "fileID"
                },
                "pascalCase": {
                  "unsafeName": "FileID",
                  "safeName": "FileID"
                }
              },
              "wireValue": "file_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "File's size in bytes.",
            "name": {
              "name": "size",
              "wireValue": "size"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `size`.",
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `size`.",
            "name": {
              "name": "done",
              "wireValue": "done"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Original file of the uploaded file.",
            "name": {
              "name": "original_filename",
              "wireValue": "original_filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Sanitized `original_filename`.",
            "name": {
              "name": "filename",
              "wireValue": "filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "File's MIME-type.",
            "name": {
              "name": "mime_type",
              "wireValue": "mime_type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image_info",
              "wireValue": "image_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ImageInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ImageInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "video_info",
              "wireValue": "video_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LegacyVideoInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LegacyVideoInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "content_info",
              "wireValue": "content_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ContentInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ContentInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "Metadata",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Metadata",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the uploaded file is an image of a supported file format.",
            "name": {
              "name": "is_image",
              "wireValue": "is_image"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the file has been marked as stored.",
            "name": {
              "name": "is_stored",
              "wireValue": "is_stored"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the file is ready to be fetched from Uploadcare's CDN.",
            "name": {
              "name": "is_ready",
              "wireValue": "is_ready"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Name of an AWS S3 bucket where the file is stored. Only available if you associate a Foreign Storage Bucket with your project.",
            "name": {
              "name": {
                "originalName": "s3_bucket",
                "snakeCase": {
                  "unsafeName": "s3bucket",
                  "safeName": "s3bucket"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S3BUCKET",
                  "safeName": "S3BUCKET"
                }
              },
              "wireValue": "s3_bucket"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoWaitingStatus": {
      "name": {
        "name": "FileUploadInfoWaitingStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoWaitingStatus"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The system is preparing to handle the request.",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "waiting",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoProgressStatus": {
      "name": {
        "name": "FileUploadInfoProgressStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoProgressStatus"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The system is fetching/uploading the file.",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "progress",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The expected size of the fetched file (in bytes).\n\n**Note:** the value can be missing if the server we are fetching the file from\ndoes not provide the information or if the server is returning the file in, for\nexample, [compressed form](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding).",
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "How many bytes of the file have been fetched so far.",
            "name": {
              "name": "done",
              "wireValue": "done"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoSuccessStatus": {
      "name": {
        "name": "FileUploadInfoSuccessStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoSuccessStatus"
      },
      "shape": {
        "extends": [
          {
            "name": "FileUploadInfo",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:FileUploadInfo"
          }
        ],
        "properties": [
          {
            "docs": "The file has been fetched/uploaded successfully.",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "success",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "File's unique ID.",
            "name": {
              "name": {
                "originalName": "uuid",
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `uuid`",
            "name": {
              "name": {
                "originalName": "file_id",
                "camelCase": {
                  "unsafeName": "fileID",
                  "safeName": "fileID"
                },
                "pascalCase": {
                  "unsafeName": "FileID",
                  "safeName": "FileID"
                }
              },
              "wireValue": "file_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "File's size in bytes.",
            "name": {
              "name": "size",
              "wireValue": "size"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `size`.",
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `size`.",
            "name": {
              "name": "done",
              "wireValue": "done"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Original file of the uploaded file.",
            "name": {
              "name": "original_filename",
              "wireValue": "original_filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Sanitized `original_filename`.",
            "name": {
              "name": "filename",
              "wireValue": "filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "File's MIME-type.",
            "name": {
              "name": "mime_type",
              "wireValue": "mime_type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image_info",
              "wireValue": "image_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ImageInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ImageInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "video_info",
              "wireValue": "video_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LegacyVideoInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LegacyVideoInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "content_info",
              "wireValue": "content_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ContentInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ContentInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "Metadata",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Metadata",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the uploaded file is an image of a supported file format.",
            "name": {
              "name": "is_image",
              "wireValue": "is_image"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the file has been marked as stored.",
            "name": {
              "name": "is_stored",
              "wireValue": "is_stored"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the file is ready to be fetched from Uploadcare's CDN.",
            "name": {
              "name": "is_ready",
              "wireValue": "is_ready"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Name of an AWS S3 bucket where the file is stored. Only available if you associate a Foreign Storage Bucket with your project.",
            "name": {
              "name": {
                "originalName": "s3_bucket",
                "snakeCase": {
                  "unsafeName": "s3bucket",
                  "safeName": "s3bucket"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S3BUCKET",
                  "safeName": "S3BUCKET"
                }
              },
              "wireValue": "s3_bucket"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoErrorStatus": {
      "name": {
        "name": "FileUploadInfoErrorStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoErrorStatus"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The system failed to fetch and/or upload the file.",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Human readable description of the issue with the fetch/upload task.",
            "name": {
              "name": "error",
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Machine readable error code.\n\nNote: See the [Errors > FromURL upload errors](#tag/Errors) section of this\npage for a full list of all possible error codes.",
            "name": {
              "name": "error_code",
              "wireValue": "error_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoUnknownStatus": {
      "name": {
        "name": "FileUploadInfoUnknownStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoUnknownStatus"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The system does not have information about the task.\n\nNote: Uploadcare stores information about the `/from_url/` tasks for a limited\nperiod of time only. The endpoint can return the status `unknown` for the tasks\nthat are tool old (or that have not been created at all).",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "unknown",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileUploadInfoFromUrl": {
      "name": {
        "name": {
          "originalName": "FileUploadInfoFromUrl",
          "camelCase": {
            "unsafeName": "fileUploadInfoFromURL",
            "safeName": "fileUploadInfoFromURL"
          },
          "pascalCase": {
            "unsafeName": "FileUploadInfoFromURL",
            "safeName": "FileUploadInfoFromURL"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoFromUrl"
      },
      "shape": {
        "extends": [
          {
            "name": "FileUploadInfo",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:FileUploadInfo"
          }
        ],
        "properties": [
          {
            "name": {
              "name": "type",
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "file_info",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "File's unique ID.",
            "name": {
              "name": {
                "originalName": "uuid",
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `uuid`",
            "name": {
              "name": {
                "originalName": "file_id",
                "camelCase": {
                  "unsafeName": "fileID",
                  "safeName": "fileID"
                },
                "pascalCase": {
                  "unsafeName": "FileID",
                  "safeName": "FileID"
                }
              },
              "wireValue": "file_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "validation": {
                    "format": "uuid"
                  },
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "File's size in bytes.",
            "name": {
              "name": "size",
              "wireValue": "size"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `size`.",
            "name": {
              "name": "total",
              "wireValue": "total"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Same as `size`.",
            "name": {
              "name": "done",
              "wireValue": "done"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Original file of the uploaded file.",
            "name": {
              "name": "original_filename",
              "wireValue": "original_filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Sanitized `original_filename`.",
            "name": {
              "name": "filename",
              "wireValue": "filename"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "File's MIME-type.",
            "name": {
              "name": "mime_type",
              "wireValue": "mime_type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image_info",
              "wireValue": "image_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ImageInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ImageInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "video_info",
              "wireValue": "video_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LegacyVideoInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LegacyVideoInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "content_info",
              "wireValue": "content_info"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ContentInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ContentInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "metadata",
              "wireValue": "metadata"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "Metadata",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Metadata",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the uploaded file is an image of a supported file format.",
            "name": {
              "name": "is_image",
              "wireValue": "is_image"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the file has been marked as stored.",
            "name": {
              "name": "is_stored",
              "wireValue": "is_stored"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True if the file is ready to be fetched from Uploadcare's CDN.",
            "name": {
              "name": "is_ready",
              "wireValue": "is_ready"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Name of an AWS S3 bucket where the file is stored. Only available if you associate a Foreign Storage Bucket with your project.",
            "name": {
              "name": {
                "originalName": "s3_bucket",
                "snakeCase": {
                  "unsafeName": "s3bucket",
                  "safeName": "s3bucket"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S3BUCKET",
                  "safeName": "S3BUCKET"
                }
              },
              "wireValue": "s3_bucket"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FromUrlUploadResponseSchema": {
      "docs": "`/from_url/` upload response.",
      "name": {
        "name": {
          "originalName": "FromUrlUploadResponseSchema",
          "camelCase": {
            "unsafeName": "fromURLUploadResponseSchema",
            "safeName": "fromURLUploadResponseSchema"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadResponseSchema",
            "safeName": "FromURLUploadResponseSchema"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FromUrlUploadResponseSchema"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "type",
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "token",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Token to identify a `/from_url/` request.",
            "name": {
              "name": "token",
              "wireValue": "token"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GroupInfo": {
      "docs": "File group information object.",
      "name": {
        "name": "GroupInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GroupInfo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Group's unique ID.",
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "ISO-8601 date and time when the group was created.",
            "name": {
              "name": "datetime_created",
              "wireValue": "datetime_created"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DATE_TIME"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "ISO-8601 date and time when the group was marked as stored.",
            "availability": {
              "status": "DEPRECATED"
            },
            "name": {
              "name": "datetime_stored",
              "wireValue": "datetime_stored"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DATE_TIME"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Number of the files in the group.",
            "name": {
              "name": "files_count",
              "wireValue": "files_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Group's CDN URL.",
            "name": {
              "name": {
                "originalName": "cdn_url",
                "camelCase": {
                  "unsafeName": "cdnURL",
                  "safeName": "cdnURL"
                },
                "pascalCase": {
                  "unsafeName": "CdnURL",
                  "safeName": "CdnURL"
                }
              },
              "wireValue": "cdn_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Group's API resource URL. See the [REST API](/api-refs/rest-api/) documentation for details.",
            "name": {
              "name": {
                "originalName": "url",
                "pascalCase": {
                  "unsafeName": "URL",
                  "safeName": "URL"
                }
              },
              "wireValue": "url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The list of files in the group. An array may contain null values if a file has been removed.",
            "name": {
              "name": "files",
              "wireValue": "files"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "type": "unknown"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MetadataValue": {
      "docs": "Arbitrary metadata associated with the file.\nSee [docs](https://uploadcare.com/docs/file-metadata/) and [REST API v0.7](/api-refs/rest-api/v0.7.0/#tag/File-metadata) for more information.",
      "name": {
        "name": "MetadataValue",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MetadataValue"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "validation": {
                "minLength": 1,
                "maxLength": 512
              },
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AutoStoreDisabledError": {
      "name": {
        "name": "AutoStoreDisabledError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AutoStoreDisabledError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UploadcarePublicKeyRequiredError": {
      "name": {
        "name": "UploadcarePublicKeyRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UploadcarePublicKeyRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:PublicKeyRequiredError": {
      "name": {
        "name": "PublicKeyRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:PublicKeyRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UploadcarePublicKeyInvalidError": {
      "name": {
        "name": "UploadcarePublicKeyInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UploadcarePublicKeyInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:PublicKeyInvalidError": {
      "name": {
        "name": "PublicKeyInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:PublicKeyInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ProjectPublicKeyRemovedError": {
      "name": {
        "name": "ProjectPublicKeyRemovedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ProjectPublicKeyRemovedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AccountBlockedError": {
      "name": {
        "name": "AccountBlockedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AccountBlockedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AccountUnpaidError": {
      "name": {
        "name": "AccountUnpaidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AccountUnpaidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UploadFailedError": {
      "name": {
        "name": "UploadFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UploadFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AccountLimitsExceededError": {
      "name": {
        "name": "AccountLimitsExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AccountLimitsExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SignatureExpirationError": {
      "name": {
        "name": "SignatureExpirationError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SignatureExpirationError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SignatureInvalidError": {
      "name": {
        "name": "SignatureInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SignatureInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RequestFiledsNumberLimitExceededError": {
      "name": {
        "name": "RequestFiledsNumberLimitExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RequestFiledsNumberLimitExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:PostRequestParserFailedError": {
      "name": {
        "name": "PostRequestParserFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:PostRequestParserFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:NullCharactersForbiddenError": {
      "name": {
        "name": "NullCharactersForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:NullCharactersForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataKeyDuplicatedError": {
      "name": {
        "name": "FileMetadataKeyDuplicatedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataKeyDuplicatedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataKeyEmptyError": {
      "name": {
        "name": "FileMetadataKeyEmptyError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataKeyEmptyError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataKeyForbiddenError": {
      "name": {
        "name": "FileMetadataKeyForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataKeyForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataKeyLengthTooBigError": {
      "name": {
        "name": "FileMetadataKeyLengthTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataKeyLengthTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataValueEmptyError": {
      "name": {
        "name": "FileMetadataValueEmptyError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataValueEmptyError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataValueForbiddenError": {
      "name": {
        "name": "FileMetadataValueForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataValueForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataValueLengthTooBigError": {
      "name": {
        "name": "FileMetadataValueLengthTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataValueLengthTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileMetadataKeysNumberTooBigError": {
      "name": {
        "name": "FileMetadataKeysNumberTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileMetadataKeysNumberTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FilesRequiredError": {
      "name": {
        "name": "FilesRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FilesRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileSizeLimitExceededError": {
      "name": {
        "name": "FileSizeLimitExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileSizeLimitExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileTypeForbiddenError": {
      "name": {
        "name": "FileTypeForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileTypeForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileInfectedError": {
      "name": {
        "name": "FileInfectedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileInfectedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RequestParamRequiredError": {
      "name": {
        "name": "RequestParamRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RequestParamRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartSizeInvalidError": {
      "name": {
        "name": "MultipartSizeInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartSizeInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileSizeLimitExceededError": {
      "name": {
        "name": "MultipartFileSizeLimitExceededError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileSizeLimitExceededError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileSizeTooSmallError": {
      "name": {
        "name": "MultipartFileSizeTooSmallError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileSizeTooSmallError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartPartSizeInvalidError": {
      "name": {
        "name": "MultipartPartSizeInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartPartSizeInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartPartSizeTooSmallError": {
      "name": {
        "name": "MultipartPartSizeTooSmallError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartPartSizeTooSmallError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartPartSizeTooBigError": {
      "name": {
        "name": "MultipartPartSizeTooBigError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartPartSizeTooBigError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileIdRequiredError": {
      "name": {
        "name": {
          "originalName": "MultipartFileIdRequiredError",
          "camelCase": {
            "unsafeName": "multipartFileIDRequiredError",
            "safeName": "multipartFileIDRequiredError"
          },
          "pascalCase": {
            "unsafeName": "MultipartFileIDRequiredError",
            "safeName": "MultipartFileIDRequiredError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileIdRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileAlreadyUploadedError": {
      "name": {
        "name": "MultipartFileAlreadyUploadedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileAlreadyUploadedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartUploadSizeTooLargeError": {
      "name": {
        "name": "MultipartUploadSizeTooLargeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartUploadSizeTooLargeError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartUploadSizeTooSmallError": {
      "name": {
        "name": "MultipartUploadSizeTooSmallError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartUploadSizeTooSmallError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MultipartFileCompletionFailedError": {
      "name": {
        "name": "MultipartFileCompletionFailedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileCompletionFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UuidInvalidError": {
      "name": {
        "name": {
          "originalName": "UuidInvalidError",
          "pascalCase": {
            "unsafeName": "UUIDInvalidError",
            "safeName": "UUIDInvalidError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UuidInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SourceUrlRequiredError": {
      "name": {
        "name": {
          "originalName": "SourceUrlRequiredError",
          "camelCase": {
            "unsafeName": "sourceURLRequiredError",
            "safeName": "sourceURLRequiredError"
          },
          "pascalCase": {
            "unsafeName": "SourceURLRequiredError",
            "safeName": "SourceURLRequiredError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SourceUrlRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UrlParsingFailedError": {
      "name": {
        "name": {
          "originalName": "UrlParsingFailedError",
          "pascalCase": {
            "unsafeName": "URLParsingFailedError",
            "safeName": "URLParsingFailedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UrlParsingFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UrlSchemeRequiredError": {
      "name": {
        "name": {
          "originalName": "UrlSchemeRequiredError",
          "pascalCase": {
            "unsafeName": "URLSchemeRequiredError",
            "safeName": "URLSchemeRequiredError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UrlSchemeRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UrlSchemeInvalidError": {
      "name": {
        "name": {
          "originalName": "UrlSchemeInvalidError",
          "pascalCase": {
            "unsafeName": "URLSchemeInvalidError",
            "safeName": "URLSchemeInvalidError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UrlSchemeInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UrlHostRequiredError": {
      "name": {
        "name": {
          "originalName": "UrlHostRequiredError",
          "pascalCase": {
            "unsafeName": "URLHostRequiredError",
            "safeName": "URLHostRequiredError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UrlHostRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UrlBlacklistedError": {
      "name": {
        "name": {
          "originalName": "UrlBlacklistedError",
          "pascalCase": {
            "unsafeName": "URLBlacklistedError",
            "safeName": "URLBlacklistedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UrlBlacklistedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:HostnameNotFoundError": {
      "name": {
        "name": "HostnameNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:HostnameNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UrlHostMalformedError": {
      "name": {
        "name": {
          "originalName": "UrlHostMalformedError",
          "pascalCase": {
            "unsafeName": "URLHostMalformedError",
            "safeName": "URLHostMalformedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UrlHostMalformedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UrlHostPrivateIpForbiddenError": {
      "name": {
        "name": {
          "originalName": "UrlHostPrivateIpForbiddenError",
          "camelCase": {
            "unsafeName": "urlHostPrivateIPForbiddenError",
            "safeName": "urlHostPrivateIPForbiddenError"
          },
          "pascalCase": {
            "unsafeName": "URLHostPrivateIPForbiddenError",
            "safeName": "URLHostPrivateIPForbiddenError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UrlHostPrivateIpForbiddenError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TokenRequiredError": {
      "name": {
        "name": "TokenRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TokenRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileIdRequiredError": {
      "name": {
        "name": {
          "originalName": "FileIdRequiredError",
          "camelCase": {
            "unsafeName": "fileIDRequiredError",
            "safeName": "fileIDRequiredError"
          },
          "pascalCase": {
            "unsafeName": "FileIDRequiredError",
            "safeName": "FileIDRequiredError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileIdRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileIdInvalidError": {
      "name": {
        "name": {
          "originalName": "FileIdInvalidError",
          "camelCase": {
            "unsafeName": "fileIDInvalidError",
            "safeName": "fileIDInvalidError"
          },
          "pascalCase": {
            "unsafeName": "FileIDInvalidError",
            "safeName": "FileIDInvalidError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileIdInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FileNotFoundError": {
      "name": {
        "name": "FileNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GroupFilesInvalidError": {
      "name": {
        "name": "GroupFilesInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GroupFilesInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GroupFileUrlParsingFailedError": {
      "name": {
        "name": {
          "originalName": "GroupFileUrlParsingFailedError",
          "camelCase": {
            "unsafeName": "groupFileURLParsingFailedError",
            "safeName": "groupFileURLParsingFailedError"
          },
          "pascalCase": {
            "unsafeName": "GroupFileURLParsingFailedError",
            "safeName": "GroupFileURLParsingFailedError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GroupFileUrlParsingFailedError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GroupFilesNotFoundError": {
      "name": {
        "name": "GroupFilesNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GroupFilesNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GroupIdRequiredError": {
      "name": {
        "name": {
          "originalName": "GroupIdRequiredError",
          "camelCase": {
            "unsafeName": "groupIDRequiredError",
            "safeName": "groupIDRequiredError"
          },
          "pascalCase": {
            "unsafeName": "GroupIDRequiredError",
            "safeName": "GroupIDRequiredError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GroupIdRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GroupNotFoundError": {
      "name": {
        "name": "GroupNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GroupNotFoundError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SignatureRequiredError": {
      "name": {
        "name": "SignatureRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SignatureRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SignatureExpirationRequiredError": {
      "name": {
        "name": "SignatureExpirationRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SignatureExpirationRequiredError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SignatureExpirationInvalidError": {
      "name": {
        "name": "SignatureExpirationInvalidError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SignatureExpirationInvalidError"
      },
      "shape": {
        "aliasOf": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "resolvedType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ImageInfoColorMode": {
      "docs": "Image color mode.",
      "inline": true,
      "name": {
        "name": "ImageInfoColorMode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ImageInfoColorMode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "RGB",
              "wireValue": "RGB"
            }
          },
          {
            "name": {
              "name": "RGBA",
              "wireValue": "RGBA"
            }
          },
          {
            "name": {
              "name": "RGBX",
              "wireValue": "RGBX"
            }
          },
          {
            "name": {
              "name": "L",
              "wireValue": "L"
            }
          },
          {
            "name": {
              "name": "LA",
              "wireValue": "LA"
            }
          },
          {
            "name": {
              "name": "P",
              "wireValue": "P"
            }
          },
          {
            "name": {
              "name": "PA",
              "wireValue": "PA"
            }
          },
          {
            "name": {
              "name": "CMYK",
              "wireValue": "CMYK"
            }
          },
          {
            "name": {
              "name": "YCbCr",
              "wireValue": "YCbCr"
            }
          },
          {
            "name": {
              "name": "HSV",
              "wireValue": "HSV"
            }
          },
          {
            "name": {
              "name": "LAB",
              "wireValue": "LAB"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ImageInfoGeoLocation": {
      "docs": "Geo-location of image from EXIF.",
      "inline": true,
      "name": {
        "name": "ImageInfoGeoLocation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ImageInfoGeoLocation"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Location latitude.",
            "name": {
              "name": "latitude",
              "wireValue": "latitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Location longitude.",
            "name": {
              "name": "longitude",
              "wireValue": "longitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ImageInfo": {
      "docs": "Image metadata.",
      "name": {
        "name": "ImageInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ImageInfo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Image color mode.",
            "name": {
              "name": "color_mode",
              "wireValue": "color_mode"
            },
            "valueType": {
              "name": "ImageInfoColorMode",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:ImageInfoColorMode",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image orientation from EXIF.",
            "name": {
              "name": "orientation",
              "wireValue": "orientation"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {
                        "min": 0,
                        "max": 8
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image format.",
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Set to true if a file contains a sequence of images (GIF for example).",
            "name": {
              "name": "sequence",
              "wireValue": "sequence"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image height in pixels.",
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image width in pixels.",
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Geo-location of image from EXIF.",
            "name": {
              "name": "geo_location",
              "wireValue": "geo_location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ImageInfoGeoLocation",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ImageInfoGeoLocation",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image date and time from EXIF. Please be aware that this data is not always formatted and displayed exactly as it appears in the EXIF.",
            "name": {
              "name": "datetime_original",
              "wireValue": "datetime_original"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DATE_TIME"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image DPI for two dimensions.",
            "name": {
              "name": "dpi",
              "wireValue": "dpi"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LegacyVideoInfoAudio": {
      "docs": "Audio stream's metadata.",
      "inline": true,
      "name": {
        "name": "LegacyVideoInfoAudio",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LegacyVideoInfoAudio"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Audio stream's bitrate.",
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Audio stream's codec.",
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Audio stream's sample rate.",
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Audio stream's number of channels.",
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LegacyVideoInfoVideo": {
      "docs": "Video stream's metadata.",
      "inline": true,
      "name": {
        "name": "LegacyVideoInfoVideo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LegacyVideoInfoVideo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Video stream's image height.",
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's image width.",
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's frame rate.",
            "name": {
              "name": "frame_rate",
              "wireValue": "frame_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's bitrate.",
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream codec.",
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LegacyVideoInfo": {
      "docs": "Video metadata.",
      "name": {
        "name": "LegacyVideoInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LegacyVideoInfo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Video file's duration in milliseconds.",
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video file's format.",
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video file's bitrate.",
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Audio stream's metadata.",
            "name": {
              "name": "audio",
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LegacyVideoInfoAudio",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LegacyVideoInfoAudio",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's metadata.",
            "name": {
              "name": "video",
              "wireValue": "video"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LegacyVideoInfoVideo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LegacyVideoInfoVideo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SchemasImageInfoColorMode": {
      "docs": "Image color mode.",
      "inline": true,
      "name": {
        "name": "SchemasImageInfoColorMode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SchemasImageInfoColorMode"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "RGB",
              "wireValue": "RGB"
            }
          },
          {
            "name": {
              "name": "RGBA",
              "wireValue": "RGBA"
            }
          },
          {
            "name": {
              "name": "RGBX",
              "wireValue": "RGBX"
            }
          },
          {
            "name": {
              "name": "L",
              "wireValue": "L"
            }
          },
          {
            "name": {
              "name": "LA",
              "wireValue": "LA"
            }
          },
          {
            "name": {
              "name": "P",
              "wireValue": "P"
            }
          },
          {
            "name": {
              "name": "PA",
              "wireValue": "PA"
            }
          },
          {
            "name": {
              "name": "CMYK",
              "wireValue": "CMYK"
            }
          },
          {
            "name": {
              "name": "YCbCr",
              "wireValue": "YCbCr"
            }
          },
          {
            "name": {
              "name": "HSV",
              "wireValue": "HSV"
            }
          },
          {
            "name": {
              "name": "LAB",
              "wireValue": "LAB"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SchemasImageInfoGeoLocation": {
      "docs": "Geo-location of image from EXIF.",
      "inline": true,
      "name": {
        "name": "SchemasImageInfoGeoLocation",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SchemasImageInfoGeoLocation"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Location latitude.",
            "name": {
              "name": "latitude",
              "wireValue": "latitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Location longitude.",
            "name": {
              "name": "longitude",
              "wireValue": "longitude"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SchemasImageInfo": {
      "docs": "Image metadata.",
      "name": {
        "name": "SchemasImageInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SchemasImageInfo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Image color mode.",
            "name": {
              "name": "color_mode",
              "wireValue": "color_mode"
            },
            "valueType": {
              "name": "SchemasImageInfoColorMode",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:SchemasImageInfoColorMode",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image orientation from EXIF.",
            "name": {
              "name": "orientation",
              "wireValue": "orientation"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {
                        "min": 0,
                        "max": 8
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image format.",
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Set to true if a file contains a sequence of images (GIF for example).",
            "name": {
              "name": "sequence",
              "wireValue": "sequence"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image height in pixels.",
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image width in pixels.",
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Geo-location of image from EXIF.",
            "name": {
              "name": "geo_location",
              "wireValue": "geo_location"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "SchemasImageInfoGeoLocation",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SchemasImageInfoGeoLocation",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image date and time from EXIF. Please be aware that this data is not always formatted and displayed exactly as it appears in the EXIF.",
            "name": {
              "name": "datetime_original",
              "wireValue": "datetime_original"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DATE_TIME"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Image DPI for two dimensions.",
            "name": {
              "name": "dpi",
              "wireValue": "dpi"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "DOUBLE",
                        "v2": {
                          "type": "double"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:VideoInfoAudioItem": {
      "docs": "Audio stream's metadata.",
      "inline": true,
      "name": {
        "name": "VideoInfoAudioItem",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:VideoInfoAudioItem"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Audio stream's bitrate.",
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Audio stream's codec.",
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Audio stream's sample rate.",
            "name": {
              "name": "sample_rate",
              "wireValue": "sample_rate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Audio stream's number of channels.",
            "name": {
              "name": "channels",
              "wireValue": "channels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:VideoInfoVideoItem": {
      "docs": "Video stream's metadata.",
      "inline": true,
      "name": {
        "name": "VideoInfoVideoItem",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:VideoInfoVideoItem"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Video stream's image height.",
            "name": {
              "name": "height",
              "wireValue": "height"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's image width.",
            "name": {
              "name": "width",
              "wireValue": "width"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's frame rate.",
            "name": {
              "name": "frame_rate",
              "wireValue": "frame_rate"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's bitrate.",
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video stream's codec.",
            "name": {
              "name": "codec",
              "wireValue": "codec"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:VideoInfo": {
      "docs": "Video metadata.",
      "name": {
        "name": "VideoInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:VideoInfo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Video file's duration in milliseconds.",
            "name": {
              "name": "duration",
              "wireValue": "duration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video file's format.",
            "name": {
              "name": "format",
              "wireValue": "format"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Video file's bitrate.",
            "name": {
              "name": "bitrate",
              "wireValue": "bitrate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "audio",
              "wireValue": "audio"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "VideoInfoAudioItem",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:VideoInfoAudioItem",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "video",
              "wireValue": "video"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "VideoInfoVideoItem",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:VideoInfoVideoItem",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ContentInfoMime": {
      "docs": "MIME type.",
      "inline": true,
      "name": {
        "name": "ContentInfoMime",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ContentInfoMime"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Full MIME type.",
            "name": {
              "name": "mime",
              "wireValue": "mime"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Type of MIME type.",
            "name": {
              "name": "type",
              "wireValue": "type"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Subtype of MIME type.",
            "name": {
              "name": "subtype",
              "wireValue": "subtype"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ContentInfo": {
      "docs": "Information about file content.",
      "name": {
        "name": "ContentInfo",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ContentInfo"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "MIME type.",
            "name": {
              "name": "mime",
              "wireValue": "mime"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "ContentInfoMime",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ContentInfoMime",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "image",
              "wireValue": "image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "SchemasImageInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SchemasImageInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "video",
              "wireValue": "video"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "VideoInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:VideoInfo",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Metadata": {
      "docs": "Arbitrary metadata associated with a file.",
      "name": {
        "name": "Metadata",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Metadata"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "optional": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "container"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "optional": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "container"
            },
            "type": "optional"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    }
  },
  "errors": {
    "error_:BaseUploadRequestBadRequestError": {
      "name": {
        "name": "BaseUploadRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:BaseUploadRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "BaseUploadRequestBadRequestError",
        "wireValue": "BaseUploadRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": "BaseUploadRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "request-fields-number-limit-exceeded",
          "jsonExample": "The request contains too many HTTP POST fields.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "The request contains too many HTTP POST fields."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "The request contains too many HTTP POST fields."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "The request contains too many HTTP POST fields."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "The request contains too many HTTP POST fields."
          }
        },
        {
          "name": "post-request-parser-failed",
          "jsonExample": "HTTP POST request parsing failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "HTTP POST request parsing failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "HTTP POST request parsing failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "HTTP POST request parsing failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "HTTP POST request parsing failed."
          }
        },
        {
          "name": "null-characters-forbidden",
          "jsonExample": "Null characters are not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Null characters are not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Null characters are not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Null characters are not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Null characters are not allowed."
          }
        },
        {
          "name": "file-metadata-key-duplicate",
          "jsonExample": "File's metadata key `subsystem` has a duplicate.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key `subsystem` has a duplicate."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key `subsystem` has a duplicate."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key `subsystem` has a duplicate."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key `subsystem` has a duplicate."
          }
        },
        {
          "name": "file-metadata-key-empty",
          "jsonExample": "File's metadata key can not be empty.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key can not be empty."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key can not be empty."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key can not be empty."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key can not be empty."
          }
        },
        {
          "name": "file-metadata-key-forbidden",
          "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
          }
        },
        {
          "name": "file-metadata-key-length-too-big",
          "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
          }
        },
        {
          "name": "file-metadata-value-empty",
          "jsonExample": "Value of the file metadata key `subsystem` can not be empty.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of the file metadata key `subsystem` can not be empty."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
          }
        },
        {
          "name": "file-metadata-value-forbidden",
          "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
          }
        },
        {
          "name": "file-metadata-value-length-too-big",
          "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
          }
        },
        {
          "name": "file-metadata-keys-number-too-big",
          "jsonExample": "A file can not have more than 50 metadata keys.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "A file can not have more than 50 metadata keys."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "A file can not have more than 50 metadata keys."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "A file can not have more than 50 metadata keys."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "A file can not have more than 50 metadata keys."
          }
        },
        {
          "name": "signature-required",
          "jsonExample": "`signature` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`signature` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`signature` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`signature` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`signature` is required."
          }
        },
        {
          "name": "signature-expiration-required",
          "jsonExample": "`expire` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` is required."
          }
        },
        {
          "name": "signature-expiration-invalid",
          "jsonExample": "`expire` must be a UNIX timestamp.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` must be a UNIX timestamp."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` must be a UNIX timestamp."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` must be a UNIX timestamp."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` must be a UNIX timestamp."
          }
        },
        {
          "name": "files-required",
          "jsonExample": "Request does not contain files.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Request does not contain files."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Request does not contain files."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Request does not contain files."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Request does not contain files."
          }
        },
        {
          "name": "file-size-limit-exceeded",
          "jsonExample": "File is too large.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File is too large."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File is too large."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File is too large."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File is too large."
          }
        },
        {
          "name": "file-type-forbidden",
          "jsonExample": "Uploading of these file types is not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Uploading of these file types is not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Uploading of these file types is not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Uploading of these file types is not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Uploading of these file types is not allowed."
          }
        },
        {
          "name": "file-infected",
          "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "The file is infected by Win.Test.EICAR_HDB-1 virus."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus."
          }
        }
      ]
    },
    "error_:BaseUploadRequestForbiddenError": {
      "name": {
        "name": "BaseUploadRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:BaseUploadRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "BaseUploadRequestForbiddenError",
        "wireValue": "BaseUploadRequestForbiddenError"
      },
      "docs": "Request was not allowed.",
      "statusCode": 403,
      "type": {
        "name": "BaseUploadRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "public-key-is-required",
          "jsonExample": "UPLOADCARE_PUB_KEY is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "UPLOADCARE_PUB_KEY is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "UPLOADCARE_PUB_KEY is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "UPLOADCARE_PUB_KEY is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "UPLOADCARE_PUB_KEY is required."
          }
        },
        {
          "name": "public-key-is-invalid",
          "jsonExample": "UPLOADCARE_PUB_KEY is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "UPLOADCARE_PUB_KEY is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
          }
        },
        {
          "name": "auto-store-is-disabled",
          "jsonExample": "Autostore is disabled.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Autostore is disabled."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Autostore is disabled."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Autostore is disabled."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Autostore is disabled."
          }
        },
        {
          "name": "project-public-key-removed",
          "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Project 39e3eb895fdada95e7a9 is marked as removed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
          }
        },
        {
          "name": "account-blocked",
          "jsonExample": "Account has been blocked.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked."
          }
        },
        {
          "name": "account-unpaid",
          "jsonExample": "Account has been blocked for non payment.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked for non payment."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked for non payment."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked for non payment."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked for non payment."
          }
        },
        {
          "name": "upload-failed",
          "jsonExample": "Upload failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Upload failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Upload failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Upload failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Upload failed."
          }
        },
        {
          "name": "account-limits-exceeded",
          "jsonExample": "Account has reached its limits.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has reached its limits."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has reached its limits."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has reached its limits."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has reached its limits."
          }
        },
        {
          "name": "signature-expiration",
          "jsonExample": "Expired signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Expired signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Expired signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Expired signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Expired signature."
          }
        },
        {
          "name": "signature-invalid",
          "jsonExample": "Invalid signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:BaseUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "BaseUploadRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Invalid signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Invalid signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Invalid signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Invalid signature."
          }
        }
      ]
    },
    "error_:BaseUploadRequestContentTooLargeError": {
      "name": {
        "name": "BaseUploadRequestContentTooLargeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:BaseUploadRequestContentTooLargeError"
      },
      "discriminantValue": {
        "name": "BaseUploadRequestContentTooLargeError",
        "wireValue": "BaseUploadRequestContentTooLargeError"
      },
      "docs": "The size of the request is too large.",
      "statusCode": 413,
      "type": {
        "primitive": {
          "v1": "STRING",
          "v2": {
            "type": "string"
          }
        },
        "type": "primitive"
      },
      "examples": [
        {
          "jsonExample": "The size of the request is too large.",
          "shape": {
            "shape": {
              "primitive": {
                "string": {
                  "original": "The size of the request is too large."
                },
                "type": "string"
              },
              "type": "primitive"
            },
            "jsonExample": "The size of the request is too large."
          }
        }
      ]
    },
    "error_:BaseUploadRequestTooManyRequestsError": {
      "name": {
        "name": "BaseUploadRequestTooManyRequestsError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:BaseUploadRequestTooManyRequestsError"
      },
      "discriminantValue": {
        "name": "BaseUploadRequestTooManyRequestsError",
        "wireValue": "BaseUploadRequestTooManyRequestsError"
      },
      "docs": "Request was throttled.",
      "statusCode": 429,
      "type": {
        "primitive": {
          "v1": "STRING",
          "v2": {
            "type": "string"
          }
        },
        "type": "primitive"
      },
      "examples": [
        {
          "jsonExample": "Request was throttled.",
          "shape": {
            "shape": {
              "primitive": {
                "string": {
                  "original": "Request was throttled."
                },
                "type": "string"
              },
              "type": "primitive"
            },
            "jsonExample": "Request was throttled."
          }
        }
      ]
    },
    "error_:MultipartFileUploadStartRequestBadRequestError": {
      "name": {
        "name": "MultipartFileUploadStartRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:MultipartFileUploadStartRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "MultipartFileUploadStartRequestBadRequestError",
        "wireValue": "MultipartFileUploadStartRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": "MultipartFileUploadStartRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "request-fields-number-limit-exceeded",
          "jsonExample": "The request contains too many HTTP POST fields.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "The request contains too many HTTP POST fields."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "The request contains too many HTTP POST fields."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "The request contains too many HTTP POST fields."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "The request contains too many HTTP POST fields."
          }
        },
        {
          "name": "post-request-parser-failed",
          "jsonExample": "HTTP POST request parsing failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "HTTP POST request parsing failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "HTTP POST request parsing failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "HTTP POST request parsing failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "HTTP POST request parsing failed."
          }
        },
        {
          "name": "null-characters-forbidden",
          "jsonExample": "Null characters are not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Null characters are not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Null characters are not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Null characters are not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Null characters are not allowed."
          }
        },
        {
          "name": "file-metadata-key-duplicate",
          "jsonExample": "File's metadata key `subsystem` has a duplicate.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key `subsystem` has a duplicate."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key `subsystem` has a duplicate."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key `subsystem` has a duplicate."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key `subsystem` has a duplicate."
          }
        },
        {
          "name": "file-metadata-key-empty",
          "jsonExample": "File's metadata key can not be empty.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key can not be empty."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key can not be empty."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key can not be empty."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key can not be empty."
          }
        },
        {
          "name": "file-metadata-key-forbidden",
          "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
          }
        },
        {
          "name": "file-metadata-key-length-too-big",
          "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
          }
        },
        {
          "name": "file-metadata-value-empty",
          "jsonExample": "Value of the file metadata key `subsystem` can not be empty.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of the file metadata key `subsystem` can not be empty."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
          }
        },
        {
          "name": "file-metadata-value-forbidden",
          "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
          }
        },
        {
          "name": "file-metadata-value-length-too-big",
          "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
          }
        },
        {
          "name": "file-metadata-keys-number-too-big",
          "jsonExample": "A file can not have more than 50 metadata keys.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "A file can not have more than 50 metadata keys."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "A file can not have more than 50 metadata keys."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "A file can not have more than 50 metadata keys."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "A file can not have more than 50 metadata keys."
          }
        },
        {
          "name": "signature-required",
          "jsonExample": "`signature` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`signature` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`signature` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`signature` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`signature` is required."
          }
        },
        {
          "name": "signature-expiration-required",
          "jsonExample": "`expire` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` is required."
          }
        },
        {
          "name": "signature-expiration-invalid",
          "jsonExample": "`expire` must be a UNIX timestamp.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` must be a UNIX timestamp."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` must be a UNIX timestamp."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` must be a UNIX timestamp."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` must be a UNIX timestamp."
          }
        },
        {
          "name": "request-param-required",
          "jsonExample": "filename is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "filename is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "filename is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "filename is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "filename is required."
          }
        },
        {
          "name": "multipart-size-invalid",
          "jsonExample": "size should be integer.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "size should be integer."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "size should be integer."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "size should be integer."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "size should be integer."
          }
        },
        {
          "name": "multipart-file-size-limit-exceeded",
          "jsonExample": "File size exceeds project limit.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File size exceeds project limit."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File size exceeds project limit."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File size exceeds project limit."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File size exceeds project limit."
          }
        },
        {
          "name": "multipart-file-size-too-small",
          "jsonExample": "File size can not be less than 10485760 bytes. Please use direct upload instead of multipart.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File size can not be less than 10485760 bytes. Please use direct upload instead of multipart."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File size can not be less than 10485760 bytes. Please use direct upload instead of multipart."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File size can not be less than 10485760 bytes. Please use direct upload instead of multipart."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File size can not be less than 10485760 bytes. Please use direct upload instead of multipart."
          }
        },
        {
          "name": "multipart-part-size-invalid",
          "jsonExample": "Multipart Upload Part Size should be an integer.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Multipart Upload Part Size should be an integer."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Multipart Upload Part Size should be an integer."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Multipart Upload Part Size should be an integer."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Multipart Upload Part Size should be an integer."
          }
        },
        {
          "name": "multipart-part-size-too-small",
          "jsonExample": "Multipart Upload Part Size can not be less than 5242880 bytes.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Multipart Upload Part Size can not be less than 5242880 bytes."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Multipart Upload Part Size can not be less than 5242880 bytes."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Multipart Upload Part Size can not be less than 5242880 bytes."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Multipart Upload Part Size can not be less than 5242880 bytes."
          }
        },
        {
          "name": "multipart-part-size-too-big",
          "jsonExample": "Multipart Upload Part Size can not be more than 5368709120 bytes.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Multipart Upload Part Size can not be more than 5368709120 bytes."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Multipart Upload Part Size can not be more than 5368709120 bytes."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Multipart Upload Part Size can not be more than 5368709120 bytes."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Multipart Upload Part Size can not be more than 5368709120 bytes."
          }
        }
      ]
    },
    "error_:MultipartFileUploadStartRequestForbiddenError": {
      "name": {
        "name": "MultipartFileUploadStartRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:MultipartFileUploadStartRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "MultipartFileUploadStartRequestForbiddenError",
        "wireValue": "MultipartFileUploadStartRequestForbiddenError"
      },
      "docs": "Request was not allowed.",
      "statusCode": 403,
      "type": {
        "name": "MultipartFileUploadStartRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "public-key-is-required",
          "jsonExample": "UPLOADCARE_PUB_KEY is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "UPLOADCARE_PUB_KEY is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "UPLOADCARE_PUB_KEY is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "UPLOADCARE_PUB_KEY is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "UPLOADCARE_PUB_KEY is required."
          }
        },
        {
          "name": "public-key-is-invalid",
          "jsonExample": "UPLOADCARE_PUB_KEY is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "UPLOADCARE_PUB_KEY is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
          }
        },
        {
          "name": "auto-store-is-disabled",
          "jsonExample": "Autostore is disabled.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Autostore is disabled."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Autostore is disabled."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Autostore is disabled."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Autostore is disabled."
          }
        },
        {
          "name": "project-public-key-removed",
          "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Project 39e3eb895fdada95e7a9 is marked as removed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
          }
        },
        {
          "name": "account-blocked",
          "jsonExample": "Account has been blocked.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked."
          }
        },
        {
          "name": "account-unpaid",
          "jsonExample": "Account has been blocked for non payment.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked for non payment."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked for non payment."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked for non payment."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked for non payment."
          }
        },
        {
          "name": "upload-failed",
          "jsonExample": "Upload failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Upload failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Upload failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Upload failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Upload failed."
          }
        },
        {
          "name": "account-limits-exceeded",
          "jsonExample": "Account has reached its limits.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has reached its limits."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has reached its limits."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has reached its limits."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has reached its limits."
          }
        },
        {
          "name": "signature-expiration",
          "jsonExample": "Expired signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Expired signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Expired signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Expired signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Expired signature."
          }
        },
        {
          "name": "signature-invalid",
          "jsonExample": "Invalid signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadStartRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Invalid signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Invalid signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Invalid signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Invalid signature."
          }
        }
      ]
    },
    "error_:MultipartFileUploadStartRequestTooManyRequestsError": {
      "name": {
        "name": "MultipartFileUploadStartRequestTooManyRequestsError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:MultipartFileUploadStartRequestTooManyRequestsError"
      },
      "discriminantValue": {
        "name": "MultipartFileUploadStartRequestTooManyRequestsError",
        "wireValue": "MultipartFileUploadStartRequestTooManyRequestsError"
      },
      "docs": "Request was throttled.",
      "statusCode": 429,
      "type": {
        "primitive": {
          "v1": "STRING",
          "v2": {
            "type": "string"
          }
        },
        "type": "primitive"
      },
      "examples": [
        {
          "jsonExample": "Request was throttled.",
          "shape": {
            "shape": {
              "primitive": {
                "string": {
                  "original": "Request was throttled."
                },
                "type": "string"
              },
              "type": "primitive"
            },
            "jsonExample": "Request was throttled."
          }
        }
      ]
    },
    "error_:MultipartFileUploadCompleteRequestBadRequestError": {
      "name": {
        "name": "MultipartFileUploadCompleteRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:MultipartFileUploadCompleteRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "MultipartFileUploadCompleteRequestBadRequestError",
        "wireValue": "MultipartFileUploadCompleteRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "request-fields-number-limit-exceeded",
          "jsonExample": "The request contains too many HTTP POST fields.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "The request contains too many HTTP POST fields."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "The request contains too many HTTP POST fields."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "The request contains too many HTTP POST fields."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "The request contains too many HTTP POST fields."
          }
        },
        {
          "name": "post-request-parser-failed",
          "jsonExample": "HTTP POST request parsing failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "HTTP POST request parsing failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "HTTP POST request parsing failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "HTTP POST request parsing failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "HTTP POST request parsing failed."
          }
        },
        {
          "name": "null-characters-forbidden",
          "jsonExample": "Null characters are not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Null characters are not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Null characters are not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Null characters are not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Null characters are not allowed."
          }
        },
        {
          "name": {
            "originalName": "multipart-file-id-required",
            "camelCase": {
              "unsafeName": "multipartFileIDRequired",
              "safeName": "multipartFileIDRequired"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileIDRequired",
              "safeName": "MultipartFileIDRequired"
            }
          },
          "jsonExample": "uuid is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "uuid is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "uuid is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "uuid is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "uuid is required."
          }
        },
        {
          "name": {
            "originalName": "uuid-invalid",
            "pascalCase": {
              "unsafeName": "UUIDInvalid",
              "safeName": "UUIDInvalid"
            }
          },
          "jsonExample": "uuid is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "uuid is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "uuid is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "uuid is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "uuid is invalid."
          }
        },
        {
          "name": "multipart-file-already-uploaded",
          "jsonExample": "File is already uploaded.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File is already uploaded."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File is already uploaded."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File is already uploaded."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File is already uploaded."
          }
        },
        {
          "name": "multipart-upload-size-too-large",
          "jsonExample": "Uploaded size is more than expected.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Uploaded size is more than expected."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Uploaded size is more than expected."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Uploaded size is more than expected."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Uploaded size is more than expected."
          }
        },
        {
          "name": "multipart-upload-size-too-small",
          "jsonExample": "File size mismatch. Not all parts uploaded?",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File size mismatch. Not all parts uploaded?"
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File size mismatch. Not all parts uploaded?"
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File size mismatch. Not all parts uploaded?"
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File size mismatch. Not all parts uploaded?"
          }
        },
        {
          "name": "multipart-file-completion-failed",
          "jsonExample": "Can not complete upload. Wrong parts size?",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Can not complete upload. Wrong parts size?"
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Can not complete upload. Wrong parts size?"
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Can not complete upload. Wrong parts size?"
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Can not complete upload. Wrong parts size?"
          }
        },
        {
          "name": "file-type-forbidden",
          "jsonExample": "Uploading of these file types is not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Uploading of these file types is not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Uploading of these file types is not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Uploading of these file types is not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Uploading of these file types is not allowed."
          }
        },
        {
          "name": "file-infected",
          "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "The file is infected by Win.Test.EICAR_HDB-1 virus."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "The file is infected by Win.Test.EICAR_HDB-1 virus."
          }
        }
      ]
    },
    "error_:MultipartFileUploadCompleteRequestForbiddenError": {
      "name": {
        "name": "MultipartFileUploadCompleteRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:MultipartFileUploadCompleteRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "MultipartFileUploadCompleteRequestForbiddenError",
        "wireValue": "MultipartFileUploadCompleteRequestForbiddenError"
      },
      "docs": "Request was not allowed.",
      "statusCode": 403,
      "type": {
        "name": "MultipartFileUploadCompleteRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "public-key-is-required",
          "jsonExample": "UPLOADCARE_PUB_KEY is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "UPLOADCARE_PUB_KEY is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "UPLOADCARE_PUB_KEY is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "UPLOADCARE_PUB_KEY is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "UPLOADCARE_PUB_KEY is required."
          }
        },
        {
          "name": "public-key-is-invalid",
          "jsonExample": "UPLOADCARE_PUB_KEY is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "MultipartFileUploadCompleteRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:UploadcarePublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "UploadcarePublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "UPLOADCARE_PUB_KEY is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "UPLOADCARE_PUB_KEY is invalid."
          }
        }
      ]
    },
    "error_:MultipartFileUploadCompleteRequestNotFoundError": {
      "name": {
        "name": "MultipartFileUploadCompleteRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:MultipartFileUploadCompleteRequestNotFoundError"
      },
      "discriminantValue": {
        "name": "MultipartFileUploadCompleteRequestNotFoundError",
        "wireValue": "MultipartFileUploadCompleteRequestNotFoundError"
      },
      "docs": "File with specified UUID was not found.",
      "statusCode": 404,
      "type": {
        "name": "FileNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileNotFoundError",
        "type": "named"
      },
      "examples": [
        {
          "name": "file-not-found",
          "jsonExample": "File is not found.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FileNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FileNotFoundError"
              },
              "shape": {
                "value": {
                  "shape": {
                    "primitive": {
                      "string": {
                        "original": "File is not found."
                      },
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "jsonExample": "File is not found."
                },
                "type": "alias"
              },
              "type": "named"
            },
            "jsonExample": "File is not found."
          }
        }
      ]
    },
    "error_:FromUrlUploadRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadRequestBadRequestError",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestBadRequestError",
            "safeName": "fromURLUploadRequestBadRequestError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestBadRequestError",
            "safeName": "FromURLUploadRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FromUrlUploadRequestBadRequestError"
      },
      "discriminantValue": {
        "name": {
          "originalName": "FromUrlUploadRequestBadRequestError",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestBadRequestError",
            "safeName": "fromURLUploadRequestBadRequestError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestBadRequestError",
            "safeName": "FromURLUploadRequestBadRequestError"
          }
        },
        "wireValue": "FromUrlUploadRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": {
          "originalName": "FromUrlUploadRequestBadRequestErrorBody",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
            "safeName": "fromURLUploadRequestBadRequestErrorBody"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
            "safeName": "FromURLUploadRequestBadRequestErrorBody"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "request-fields-number-limit-exceeded",
          "jsonExample": "The request contains too many HTTP POST fields.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "The request contains too many HTTP POST fields."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "The request contains too many HTTP POST fields."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "The request contains too many HTTP POST fields."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "The request contains too many HTTP POST fields."
          }
        },
        {
          "name": "post-request-parser-failed",
          "jsonExample": "HTTP POST request parsing failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "HTTP POST request parsing failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "HTTP POST request parsing failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "HTTP POST request parsing failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "HTTP POST request parsing failed."
          }
        },
        {
          "name": "null-characters-forbidden",
          "jsonExample": "Null characters are not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Null characters are not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Null characters are not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Null characters are not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Null characters are not allowed."
          }
        },
        {
          "name": "file-metadata-key-duplicate",
          "jsonExample": "File's metadata key `subsystem` has a duplicate.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key `subsystem` has a duplicate."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key `subsystem` has a duplicate."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key `subsystem` has a duplicate."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key `subsystem` has a duplicate."
          }
        },
        {
          "name": "file-metadata-key-empty",
          "jsonExample": "File's metadata key can not be empty.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key can not be empty."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key can not be empty."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key can not be empty."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key can not be empty."
          }
        },
        {
          "name": "file-metadata-key-forbidden",
          "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "File's metadata key `subsystem` contains symbols not allowed by the metadata key format."
          }
        },
        {
          "name": "file-metadata-key-length-too-big",
          "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Length of file metadata key `aaa...` can not be more than 64 symbols."
          }
        },
        {
          "name": "file-metadata-value-empty",
          "jsonExample": "Value of the file metadata key `subsystem` can not be empty.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of the file metadata key `subsystem` can not be empty."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of the file metadata key `subsystem` can not be empty."
          }
        },
        {
          "name": "file-metadata-value-forbidden",
          "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of file metadata key `subsystem` contains symbols not allowed by the metadata value format."
          }
        },
        {
          "name": "file-metadata-value-length-too-big",
          "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Value of file metadata's key `subsystem` can not be more than 512 symbols in length."
          }
        },
        {
          "name": "file-metadata-keys-number-too-big",
          "jsonExample": "A file can not have more than 50 metadata keys.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "A file can not have more than 50 metadata keys."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "A file can not have more than 50 metadata keys."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "A file can not have more than 50 metadata keys."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "A file can not have more than 50 metadata keys."
          }
        },
        {
          "name": "signature-required",
          "jsonExample": "`signature` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`signature` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`signature` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`signature` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`signature` is required."
          }
        },
        {
          "name": "signature-expiration-required",
          "jsonExample": "`expire` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` is required."
          }
        },
        {
          "name": "signature-expiration-invalid",
          "jsonExample": "`expire` must be a UNIX timestamp.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` must be a UNIX timestamp."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` must be a UNIX timestamp."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` must be a UNIX timestamp."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` must be a UNIX timestamp."
          }
        },
        {
          "name": {
            "originalName": "source-url-required",
            "camelCase": {
              "unsafeName": "sourceURLRequired",
              "safeName": "sourceURLRequired"
            },
            "pascalCase": {
              "unsafeName": "SourceURLRequired",
              "safeName": "SourceURLRequired"
            }
          },
          "jsonExample": "source_url is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "source_url is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "source_url is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "source_url is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "source_url is required."
          }
        },
        {
          "name": {
            "originalName": "url-parsing-failed",
            "pascalCase": {
              "unsafeName": "URLParsingFailed",
              "safeName": "URLParsingFailed"
            }
          },
          "jsonExample": "Failed to parse URL.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Failed to parse URL."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Failed to parse URL."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Failed to parse URL."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Failed to parse URL."
          }
        },
        {
          "name": {
            "originalName": "url-scheme-required",
            "pascalCase": {
              "unsafeName": "URLSchemeRequired",
              "safeName": "URLSchemeRequired"
            }
          },
          "jsonExample": "No URL scheme supplied.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "No URL scheme supplied."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "No URL scheme supplied."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "No URL scheme supplied."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "No URL scheme supplied."
          }
        },
        {
          "name": {
            "originalName": "url-scheme-invalid",
            "pascalCase": {
              "unsafeName": "URLSchemeInvalid",
              "safeName": "URLSchemeInvalid"
            }
          },
          "jsonExample": "Invalid URL scheme.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Invalid URL scheme."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Invalid URL scheme."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Invalid URL scheme."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Invalid URL scheme."
          }
        },
        {
          "name": {
            "originalName": "url-host-required",
            "pascalCase": {
              "unsafeName": "URLHostRequired",
              "safeName": "URLHostRequired"
            }
          },
          "jsonExample": "No URL host supplied.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "No URL host supplied."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "No URL host supplied."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "No URL host supplied."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "No URL host supplied."
          }
        },
        {
          "name": {
            "originalName": "url-blacklisted",
            "pascalCase": {
              "unsafeName": "URLBlacklisted",
              "safeName": "URLBlacklisted"
            }
          },
          "jsonExample": "Source is blacklisted.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Source is blacklisted."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Source is blacklisted."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Source is blacklisted."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Source is blacklisted."
          }
        },
        {
          "name": "hostname-not-found",
          "jsonExample": "Host does not exist.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Host does not exist."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Host does not exist."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Host does not exist."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Host does not exist."
          }
        },
        {
          "name": {
            "originalName": "url-host-malformed",
            "pascalCase": {
              "unsafeName": "URLHostMalformed",
              "safeName": "URLHostMalformed"
            }
          },
          "jsonExample": "URL host is malformed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "URL host is malformed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "URL host is malformed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "URL host is malformed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "URL host is malformed."
          }
        },
        {
          "name": {
            "originalName": "url-host-private-ip-forbidden",
            "camelCase": {
              "unsafeName": "urlHostPrivateIPForbidden",
              "safeName": "urlHostPrivateIPForbidden"
            },
            "pascalCase": {
              "unsafeName": "URLHostPrivateIPForbidden",
              "safeName": "URLHostPrivateIPForbidden"
            }
          },
          "jsonExample": "Only public IPs are allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
                    "safeName": "fromURLUploadRequestBadRequestErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
                    "safeName": "FromURLUploadRequestBadRequestErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Only public IPs are allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Only public IPs are allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Only public IPs are allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Only public IPs are allowed."
          }
        }
      ]
    },
    "error_:FromUrlUploadRequestForbiddenError": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadRequestForbiddenError",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestForbiddenError",
            "safeName": "fromURLUploadRequestForbiddenError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestForbiddenError",
            "safeName": "FromURLUploadRequestForbiddenError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FromUrlUploadRequestForbiddenError"
      },
      "discriminantValue": {
        "name": {
          "originalName": "FromUrlUploadRequestForbiddenError",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestForbiddenError",
            "safeName": "fromURLUploadRequestForbiddenError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestForbiddenError",
            "safeName": "FromURLUploadRequestForbiddenError"
          }
        },
        "wireValue": "FromUrlUploadRequestForbiddenError"
      },
      "docs": "Request was not allowed.",
      "statusCode": 403,
      "type": {
        "name": {
          "originalName": "FromUrlUploadRequestForbiddenErrorBody",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
            "safeName": "fromURLUploadRequestForbiddenErrorBody"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
            "safeName": "FromURLUploadRequestForbiddenErrorBody"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "public-key-is-required",
          "jsonExample": "pub_key is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is required."
          }
        },
        {
          "name": "public-key-is-invalid",
          "jsonExample": "pub_key is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is invalid."
          }
        },
        {
          "name": "auto-store-is-disabled",
          "jsonExample": "Autostore is disabled.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Autostore is disabled."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Autostore is disabled."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Autostore is disabled."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Autostore is disabled."
          }
        },
        {
          "name": "project-public-key-removed",
          "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Project 39e3eb895fdada95e7a9 is marked as removed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
          }
        },
        {
          "name": "account-blocked",
          "jsonExample": "Account has been blocked.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked."
          }
        },
        {
          "name": "account-unpaid",
          "jsonExample": "Account has been blocked for non payment.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked for non payment."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked for non payment."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked for non payment."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked for non payment."
          }
        },
        {
          "name": "upload-failed",
          "jsonExample": "Upload failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Upload failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Upload failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Upload failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Upload failed."
          }
        },
        {
          "name": "account-limits-exceeded",
          "jsonExample": "Account has reached its limits.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has reached its limits."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has reached its limits."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has reached its limits."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has reached its limits."
          }
        },
        {
          "name": "signature-expiration",
          "jsonExample": "Expired signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Expired signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Expired signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Expired signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Expired signature."
          }
        },
        {
          "name": "signature-invalid",
          "jsonExample": "Invalid signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FromUrlUploadRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenErrorBody",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
                    "safeName": "fromURLUploadRequestForbiddenErrorBody"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
                    "safeName": "FromURLUploadRequestForbiddenErrorBody"
                  }
                }
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Invalid signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Invalid signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Invalid signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Invalid signature."
          }
        }
      ]
    },
    "error_:FromUrlUploadRequestTooManyRequestsError": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestTooManyRequestsError",
            "safeName": "fromURLUploadRequestTooManyRequestsError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestTooManyRequestsError",
            "safeName": "FromURLUploadRequestTooManyRequestsError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FromUrlUploadRequestTooManyRequestsError"
      },
      "discriminantValue": {
        "name": {
          "originalName": "FromUrlUploadRequestTooManyRequestsError",
          "camelCase": {
            "unsafeName": "fromURLUploadRequestTooManyRequestsError",
            "safeName": "fromURLUploadRequestTooManyRequestsError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadRequestTooManyRequestsError",
            "safeName": "FromURLUploadRequestTooManyRequestsError"
          }
        },
        "wireValue": "FromUrlUploadRequestTooManyRequestsError"
      },
      "docs": "Request was throttled.",
      "statusCode": 429,
      "type": {
        "primitive": {
          "v1": "STRING",
          "v2": {
            "type": "string"
          }
        },
        "type": "primitive"
      },
      "examples": [
        {
          "jsonExample": "Request was throttled.",
          "shape": {
            "shape": {
              "primitive": {
                "string": {
                  "original": "Request was throttled."
                },
                "type": "string"
              },
              "type": "primitive"
            },
            "jsonExample": "Request was throttled."
          }
        }
      ]
    },
    "error_:FromUrlUploadStatusRequestBadRequestError": {
      "name": {
        "name": {
          "originalName": "FromUrlUploadStatusRequestBadRequestError",
          "camelCase": {
            "unsafeName": "fromURLUploadStatusRequestBadRequestError",
            "safeName": "fromURLUploadStatusRequestBadRequestError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadStatusRequestBadRequestError",
            "safeName": "FromURLUploadStatusRequestBadRequestError"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FromUrlUploadStatusRequestBadRequestError"
      },
      "discriminantValue": {
        "name": {
          "originalName": "FromUrlUploadStatusRequestBadRequestError",
          "camelCase": {
            "unsafeName": "fromURLUploadStatusRequestBadRequestError",
            "safeName": "fromURLUploadStatusRequestBadRequestError"
          },
          "pascalCase": {
            "unsafeName": "FromURLUploadStatusRequestBadRequestError",
            "safeName": "FromURLUploadStatusRequestBadRequestError"
          }
        },
        "wireValue": "FromUrlUploadStatusRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": "TokenRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TokenRequiredError",
        "type": "named"
      },
      "examples": [
        {
          "name": "token-required",
          "jsonExample": "token is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:TokenRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "TokenRequiredError"
              },
              "shape": {
                "value": {
                  "shape": {
                    "primitive": {
                      "string": {
                        "original": "token is required."
                      },
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "jsonExample": "token is required."
                },
                "type": "alias"
              },
              "type": "named"
            },
            "jsonExample": "token is required."
          }
        }
      ]
    },
    "error_:FileUploadInfoRequestBadRequestError": {
      "name": {
        "name": "FileUploadInfoRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FileUploadInfoRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "FileUploadInfoRequestBadRequestError",
        "wireValue": "FileUploadInfoRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": "FileUploadInfoRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoRequestBadRequestErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "null-characters-forbidden",
          "jsonExample": "Null characters are not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FileUploadInfoRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FileUploadInfoRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:NullCharactersForbiddenError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "NullCharactersForbiddenError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Null characters are not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Null characters are not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Null characters are not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Null characters are not allowed."
          }
        },
        {
          "name": {
            "originalName": "file-id-required",
            "camelCase": {
              "unsafeName": "fileIDRequired",
              "safeName": "fileIDRequired"
            },
            "pascalCase": {
              "unsafeName": "FileIDRequired",
              "safeName": "FileIDRequired"
            }
          },
          "jsonExample": "file_id is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FileUploadInfoRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FileUploadInfoRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:NullCharactersForbiddenError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "NullCharactersForbiddenError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "file_id is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "file_id is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "file_id is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "file_id is required."
          }
        },
        {
          "name": {
            "originalName": "file-id-invalid",
            "camelCase": {
              "unsafeName": "fileIDInvalid",
              "safeName": "fileIDInvalid"
            },
            "pascalCase": {
              "unsafeName": "FileIDInvalid",
              "safeName": "FileIDInvalid"
            }
          },
          "jsonExample": "file_id is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FileUploadInfoRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FileUploadInfoRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:NullCharactersForbiddenError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "NullCharactersForbiddenError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "file_id is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "file_id is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "file_id is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "file_id is invalid."
          }
        }
      ]
    },
    "error_:FileUploadInfoRequestForbiddenError": {
      "name": {
        "name": "FileUploadInfoRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FileUploadInfoRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "FileUploadInfoRequestForbiddenError",
        "wireValue": "FileUploadInfoRequestForbiddenError"
      },
      "docs": "Request was not allowed.",
      "statusCode": 403,
      "type": {
        "name": "FileUploadInfoRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileUploadInfoRequestForbiddenErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "public-key-is-required",
          "jsonExample": "pub_key is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FileUploadInfoRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FileUploadInfoRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is required."
          }
        },
        {
          "name": "public-key-is-invalid",
          "jsonExample": "pub_key is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FileUploadInfoRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FileUploadInfoRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is invalid."
          }
        }
      ]
    },
    "error_:FileUploadInfoRequestNotFoundError": {
      "name": {
        "name": "FileUploadInfoRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FileUploadInfoRequestNotFoundError"
      },
      "discriminantValue": {
        "name": "FileUploadInfoRequestNotFoundError",
        "wireValue": "FileUploadInfoRequestNotFoundError"
      },
      "docs": "File with specified UUID was not found.",
      "statusCode": 404,
      "type": {
        "name": "FileNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FileNotFoundError",
        "type": "named"
      },
      "examples": [
        {
          "name": "file-not-found",
          "jsonExample": "File is not found.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FileNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FileNotFoundError"
              },
              "shape": {
                "value": {
                  "shape": {
                    "primitive": {
                      "string": {
                        "original": "File is not found."
                      },
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "jsonExample": "File is not found."
                },
                "type": "alias"
              },
              "type": "named"
            },
            "jsonExample": "File is not found."
          }
        }
      ]
    },
    "error_:CreateFilesGroupRequestBadRequestError": {
      "name": {
        "name": "CreateFilesGroupRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:CreateFilesGroupRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "CreateFilesGroupRequestBadRequestError",
        "wireValue": "CreateFilesGroupRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": "CreateFilesGroupRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "request-fields-number-limit-exceeded",
          "jsonExample": "The request contains too many HTTP POST fields.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "The request contains too many HTTP POST fields."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "The request contains too many HTTP POST fields."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "The request contains too many HTTP POST fields."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "The request contains too many HTTP POST fields."
          }
        },
        {
          "name": "post-request-parser-failed",
          "jsonExample": "HTTP POST request parsing failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "HTTP POST request parsing failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "HTTP POST request parsing failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "HTTP POST request parsing failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "HTTP POST request parsing failed."
          }
        },
        {
          "name": "null-characters-forbidden",
          "jsonExample": "Null characters are not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Null characters are not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Null characters are not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Null characters are not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Null characters are not allowed."
          }
        },
        {
          "name": "signature-required",
          "jsonExample": "`signature` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`signature` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`signature` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`signature` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`signature` is required."
          }
        },
        {
          "name": "signature-expiration-required",
          "jsonExample": "`expire` is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` is required."
          }
        },
        {
          "name": "signature-expiration-invalid",
          "jsonExample": "`expire` must be a UNIX timestamp.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "`expire` must be a UNIX timestamp."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "`expire` must be a UNIX timestamp."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "`expire` must be a UNIX timestamp."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "`expire` must be a UNIX timestamp."
          }
        },
        {
          "name": "group-files-invalid",
          "jsonExample": "This is not valid file url: wrong-uuid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "This is not valid file url: wrong-uuid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "This is not valid file url: wrong-uuid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "This is not valid file url: wrong-uuid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "This is not valid file url: wrong-uuid."
          }
        },
        {
          "name": {
            "originalName": "group-file-url-parsing-failed",
            "camelCase": {
              "unsafeName": "groupFileURLParsingFailed",
              "safeName": "groupFileURLParsingFailed"
            },
            "pascalCase": {
              "unsafeName": "GroupFileURLParsingFailed",
              "safeName": "GroupFileURLParsingFailed"
            }
          },
          "jsonExample": "No files[N] parameters found.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "No files[N] parameters found."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "No files[N] parameters found."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "No files[N] parameters found."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "No files[N] parameters found."
          }
        },
        {
          "name": "group-files-not-found",
          "jsonExample": "Some files not found.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:RequestFiledsNumberLimitExceededError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "RequestFiledsNumberLimitExceededError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Some files not found."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Some files not found."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Some files not found."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Some files not found."
          }
        }
      ]
    },
    "error_:CreateFilesGroupRequestForbiddenError": {
      "name": {
        "name": "CreateFilesGroupRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:CreateFilesGroupRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "CreateFilesGroupRequestForbiddenError",
        "wireValue": "CreateFilesGroupRequestForbiddenError"
      },
      "docs": "Request was not allowed.",
      "statusCode": 403,
      "type": {
        "name": "CreateFilesGroupRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "public-key-is-required",
          "jsonExample": "pub_key is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is required."
          }
        },
        {
          "name": "public-key-is-invalid",
          "jsonExample": "pub_key is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is invalid."
          }
        },
        {
          "name": "project-public-key-removed",
          "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Project 39e3eb895fdada95e7a9 is marked as removed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Project 39e3eb895fdada95e7a9 is marked as removed."
          }
        },
        {
          "name": "account-blocked",
          "jsonExample": "Account has been blocked.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked."
          }
        },
        {
          "name": "account-unpaid",
          "jsonExample": "Account has been blocked for non payment.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has been blocked for non payment."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has been blocked for non payment."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has been blocked for non payment."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has been blocked for non payment."
          }
        },
        {
          "name": "upload-failed",
          "jsonExample": "Upload failed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Upload failed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Upload failed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Upload failed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Upload failed."
          }
        },
        {
          "name": "account-limits-exceeded",
          "jsonExample": "Account has reached its limits.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Account has reached its limits."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Account has reached its limits."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Account has reached its limits."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Account has reached its limits."
          }
        },
        {
          "name": "signature-expiration",
          "jsonExample": "Expired signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Expired signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Expired signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Expired signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Expired signature."
          }
        },
        {
          "name": "signature-invalid",
          "jsonExample": "Invalid signature.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:CreateFilesGroupRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "CreateFilesGroupRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Invalid signature."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Invalid signature."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Invalid signature."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Invalid signature."
          }
        }
      ]
    },
    "error_:FilesGroupInfoRequestBadRequestError": {
      "name": {
        "name": "FilesGroupInfoRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FilesGroupInfoRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "FilesGroupInfoRequestBadRequestError",
        "wireValue": "FilesGroupInfoRequestBadRequestError"
      },
      "docs": "Request failed input parameters validation.",
      "statusCode": 400,
      "type": {
        "name": "FilesGroupInfoRequestBadRequestErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FilesGroupInfoRequestBadRequestErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "null-characters-forbidden",
          "jsonExample": "Null characters are not allowed.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FilesGroupInfoRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FilesGroupInfoRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:NullCharactersForbiddenError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "NullCharactersForbiddenError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "Null characters are not allowed."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "Null characters are not allowed."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "Null characters are not allowed."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "Null characters are not allowed."
          }
        },
        {
          "name": {
            "originalName": "group-id-required",
            "camelCase": {
              "unsafeName": "groupIDRequired",
              "safeName": "groupIDRequired"
            },
            "pascalCase": {
              "unsafeName": "GroupIDRequired",
              "safeName": "GroupIDRequired"
            }
          },
          "jsonExample": "group_id is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FilesGroupInfoRequestBadRequestErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FilesGroupInfoRequestBadRequestErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:NullCharactersForbiddenError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "NullCharactersForbiddenError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "group_id is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "group_id is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "group_id is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "group_id is required."
          }
        }
      ]
    },
    "error_:FilesGroupInfoRequestForbiddenError": {
      "name": {
        "name": "FilesGroupInfoRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FilesGroupInfoRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "FilesGroupInfoRequestForbiddenError",
        "wireValue": "FilesGroupInfoRequestForbiddenError"
      },
      "docs": "Request was not allowed.",
      "statusCode": 403,
      "type": {
        "name": "FilesGroupInfoRequestForbiddenErrorBody",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FilesGroupInfoRequestForbiddenErrorBody",
        "type": "named"
      },
      "examples": [
        {
          "name": "public-key-is-required",
          "jsonExample": "pub_key is required.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FilesGroupInfoRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FilesGroupInfoRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is required."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is required."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is required."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is required."
          }
        },
        {
          "name": "public-key-is-invalid",
          "jsonExample": "pub_key is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:FilesGroupInfoRequestForbiddenErrorBody",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "FilesGroupInfoRequestForbiddenErrorBody"
              },
              "shape": {
                "index": 0,
                "singleUnionType": {
                  "shape": {
                    "typeName": {
                      "typeId": "type_:PublicKeyRequiredError",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "PublicKeyRequiredError"
                    },
                    "shape": {
                      "value": {
                        "shape": {
                          "primitive": {
                            "string": {
                              "original": "pub_key is invalid."
                            },
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "jsonExample": "pub_key is invalid."
                      },
                      "type": "alias"
                    },
                    "type": "named"
                  },
                  "jsonExample": "pub_key is invalid."
                },
                "type": "undiscriminatedUnion"
              },
              "type": "named"
            },
            "jsonExample": "pub_key is invalid."
          }
        }
      ]
    },
    "error_:FilesGroupInfoRequestNotFoundError": {
      "name": {
        "name": "FilesGroupInfoRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:FilesGroupInfoRequestNotFoundError"
      },
      "discriminantValue": {
        "name": "FilesGroupInfoRequestNotFoundError",
        "wireValue": "FilesGroupInfoRequestNotFoundError"
      },
      "docs": "Group with specified UUID was not found.",
      "statusCode": 404,
      "type": {
        "name": "GroupNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GroupNotFoundError",
        "type": "named"
      },
      "examples": [
        {
          "name": "group-not-found",
          "jsonExample": "group_id is invalid.",
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:GroupNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "GroupNotFoundError"
              },
              "shape": {
                "value": {
                  "shape": {
                    "primitive": {
                      "string": {
                        "original": "group_id is invalid."
                      },
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "jsonExample": "group_id is invalid."
                },
                "type": "alias"
              },
              "type": "named"
            },
            "jsonExample": "group_id is invalid."
          }
        }
      ]
    }
  },
  "services": {
    "service_upload": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "upload"
          ],
          "packagePath": [],
          "file": "upload"
        }
      },
      "displayName": "Upload",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Direct file uploads comply with the [RFC 7578](https://www.rfc-editor.org/rfc/rfc7578) standard.\nIn other words, you can perform a direct upload by making an HTTP POST request with the Content-Type\nheader set to `multipart/form-data`.\n\n**Note**: Direct file uploads support files smaller than 100 megabytes only.\nIf you would like to upload larger files, please use [Multipart Uploads](/api-refs/upload-api/#operation/multipartFileUploadStart) instead.\n\nFile upload example with curl:\n\n```\ncurl -F \"UPLOADCARE_PUB_KEY=YOUR_PUBLIC_KEY\" -F \"my_file.jpg=@my_file.jpg\" \"https://upload.uploadcare.com/base/\"\n```",
          "id": "endpoint_upload.baseUpload",
          "name": "baseUpload",
          "displayName": "Direct uploads",
          "auth": false,
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/base/",
            "parts": []
          },
          "fullPath": {
            "head": "base/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "BaseUploadRequest",
            "properties": [
              {
                "name": {
                  "name": "UPLOADCARE_PUB_KEY",
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "valueType": {
                  "name": "ProjectPublicKeyType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "UPLOADCARE_STORE",
                  "wireValue": "UPLOADCARE_STORE"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "StoreType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:StoreType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "value": {
                  "key": {
                    "name": "{filename}",
                    "wireValue": "{filename}"
                  },
                  "isOptional": false,
                  "docs": "File's content",
                  "type": "fileArray"
                },
                "type": "file"
              },
              {
                "name": {
                  "name": "metadata[{key}]",
                  "wireValue": "metadata[{key}]"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "MetadataValue",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:MetadataValue",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "SignatureType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SignatureType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "ExpireType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:ExpireType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "BaseUploadRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The file was uploaded successfully.",
                "responseBodyType": {
                  "name": "BaseUploadResponse",
                  "fernFilepath": {
                    "allParts": [
                      "upload"
                    ],
                    "packagePath": [],
                    "file": "upload"
                  },
                  "typeId": "type_upload:BaseUploadResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BaseUploadRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BaseUploadRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "BaseUploadRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BaseUploadRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "BaseUploadRequestContentTooLargeError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BaseUploadRequestContentTooLargeError"
              }
            },
            {
              "error": {
                "name": "BaseUploadRequestTooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BaseUploadRequestTooManyRequestsError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Multipart uploads should be used if you need to upload files larger than 100 megabytes or if you want to\nexplicitly trigger [AWS S3 Transfer Acceleration](https://aws.amazon.com/s3/transfer-acceleration/).\nWhen you use Multipart Uploads your files go straight to AWS S3 bypassing our upload instances.\n\nTo upload large files, 3 requests are sent in sequence:\n1. `/multipart/start/`\n2. `<presigned-url-x>`\n3. `/multipart/complete/`.\n\n**Note**: Multipart uploads support files larger than 10 megabytes only.",
          "id": "endpoint_upload.multipartFileUploadStart",
          "name": "multipartFileUploadStart",
          "displayName": "Start multipart upload",
          "auth": false,
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/multipart/start/",
            "parts": []
          },
          "fullPath": {
            "head": "multipart/start/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "MultipartFileUploadStartRequest",
            "properties": [
              {
                "name": {
                  "name": "UPLOADCARE_PUB_KEY",
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "valueType": {
                  "name": "ProjectPublicKeyType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "UPLOADCARE_STORE",
                  "wireValue": "UPLOADCARE_STORE"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "StoreType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:StoreType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "Original file name of the uploaded file",
                "name": {
                  "name": "filename",
                  "wireValue": "filename"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "Precise file size of the uploaded file (in bytes).\n**Note**: The size should not exceed max file size cap for your project.",
                "name": {
                  "name": "size",
                  "wireValue": "size"
                },
                "valueType": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "Multipart Uploads expect that you will split the uploaded file into equally sized\nparts (except for the last part) and then will upload them to AWS S3 (possibly in parallel).\nBy default, we assume that you will upload the files in 5 megabyte chunks,\nso we return a list of presigned AWS S3 URLs accordingly.\nIf you intend to upload large files (for example, larger than a gigabyte),\nwe recommend to bump the part size and to pass the expected chunk size\nto us as a value of the `part_size` parameter (in bytes).",
                "name": {
                  "name": "part_size",
                  "wireValue": "part_size"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "default": 5242880,
                          "validation": {
                            "min": 5242880
                          },
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "File's MIME-type.",
                "name": {
                  "name": "content_type",
                  "wireValue": "content_type"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "metadata[{key}]",
                  "wireValue": "metadata[{key}]"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "MetadataValue",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:MetadataValue",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "SignatureType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SignatureType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "ExpireType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:ExpireType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              }
            ],
            "docs": "Multipart upload parameters to start multipart uploading.",
            "type": "fileUpload"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "MultipartFileUploadStartRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Multipart upload started successfully.",
                "responseBodyType": {
                  "name": "MultipartFileUploadStartResponse",
                  "fernFilepath": {
                    "allParts": [
                      "upload"
                    ],
                    "packagePath": [],
                    "file": "upload"
                  },
                  "typeId": "type_upload:MultipartFileUploadStartResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "MultipartFileUploadStartRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:MultipartFileUploadStartRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "MultipartFileUploadStartRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:MultipartFileUploadStartRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "MultipartFileUploadStartRequestTooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:MultipartFileUploadStartRequestTooManyRequestsError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "The second phase is about uploading the file parts to the presigned upload URLs returned from the\n`/multipart/start/` endpoint.\n\nEach uploaded part should be at least 5 MiB (5242880 bytes) in size except for the last one, which can be smaller.\nYou can upload the file parts in parallel provided that the byte order stays unchanged.\n\n**Note**: You MUST define `Content-Type` header for your data.",
          "id": "endpoint_upload.multipartFileUploadPart",
          "name": "multipartFileUploadPart",
          "displayName": "Upload individual file parts",
          "auth": false,
          "idempotent": false,
          "method": "PUT",
          "path": {
            "head": "/<presigned-url-x>",
            "parts": []
          },
          "fullPath": {
            "head": "<presigned-url-x>",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "isOptional": false,
            "contentType": "application/octet-stream",
            "type": "bytes"
          },
          "sdkRequest": {
            "shape": {
              "value": {
                "isOptional": false,
                "type": "bytes"
              },
              "type": "justRequestBody"
            },
            "requestParameterName": "request"
          },
          "response": {},
          "errors": [],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Once all the file parts have been uploaded successfully, complete the\nupload session to assemble all the file parts into a single resulting file.",
          "id": "endpoint_upload.multipartFileUploadComplete",
          "name": "multipartFileUploadComplete",
          "displayName": "Complete multipart upload",
          "auth": false,
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/multipart/complete/",
            "parts": []
          },
          "fullPath": {
            "head": "multipart/complete/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "MultipartFileUploadCompleteRequest",
            "properties": [
              {
                "name": {
                  "name": "UPLOADCARE_PUB_KEY",
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "valueType": {
                  "name": "ProjectPublicKeyType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "File's UUID from the `/multipart/start/` endpoint.",
                "name": {
                  "name": {
                    "originalName": "uuid",
                    "pascalCase": {
                      "unsafeName": "UUID",
                      "safeName": "UUID"
                    }
                  },
                  "wireValue": "uuid"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uuid"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "MultipartFileUploadCompleteRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The file was uploaded successfully.",
                "responseBodyType": {
                  "name": "FileUploadInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:FileUploadInfo",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "MultipartFileUploadCompleteRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:MultipartFileUploadCompleteRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "MultipartFileUploadCompleteRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:MultipartFileUploadCompleteRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "MultipartFileUploadCompleteRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:MultipartFileUploadCompleteRequestNotFoundError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Uploadcare can fetch a file from a publicly available URL and then automatically upload the\nfetched file to your project.\n\n#### Upload tokens\nRequests to the endpoint return a JSON dictionary with a `token` that can be further used\nto [check the status](/api-refs/upload-api/#operation/fromURLUploadStatus) of the upload\nrequest.\n\n**Note:** The token is not a file ID and can't be used to address the file directly.\nThe actual file ID should be retrieved by calling the `/from_url/status/` endpoint.\n\n#### Duplicates prevention\nBy default, every call to the `/from_url/` endpoint with the same `source_url` results in\na new upload leading to file duplication.\n\nIf you would like Uploadcare to keep track of the requested URLs and avoid the duplicate\nuploads, pass the `save_URL_duplicates` and `check_URL_duplicates` parameters described below.",
          "id": "endpoint_upload.fromURLUpload",
          "name": {
            "originalName": "fromURLUpload",
            "camelCase": {
              "unsafeName": "fromURLUpload",
              "safeName": "fromURLUpload"
            },
            "pascalCase": {
              "unsafeName": "FromURLUpload",
              "safeName": "FromURLUpload"
            }
          },
          "displayName": "Upload files from URLs",
          "auth": false,
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/from_url/",
            "parts": []
          },
          "fullPath": {
            "head": "from_url/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": {
              "originalName": "FromUrlUploadRequest",
              "camelCase": {
                "unsafeName": "fromURLUploadRequest",
                "safeName": "fromURLUploadRequest"
              },
              "pascalCase": {
                "unsafeName": "FromURLUploadRequest",
                "safeName": "FromURLUploadRequest"
              }
            },
            "properties": [
              {
                "name": {
                  "name": "pub_key",
                  "wireValue": "pub_key"
                },
                "valueType": {
                  "name": "ProjectPublicKeyType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "Source URL of the file to fetch and upload.\n\n**Note**: The URL should point to a resource publicly available via HTTP/HTTPS.",
                "name": {
                  "name": {
                    "originalName": "source_url",
                    "camelCase": {
                      "unsafeName": "sourceURL",
                      "safeName": "sourceURL"
                    },
                    "pascalCase": {
                      "unsafeName": "SourceURL",
                      "safeName": "SourceURL"
                    }
                  },
                  "wireValue": "source_url"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "uri"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "store",
                  "wireValue": "store"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "StoreType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:StoreType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "Sets the file name of the resource fetched from the source URL.\nIf not defined, the file name is obtained from either HTTP\nresponse headers or the `source_url`'s path.\n\n**Note:** The filename will be sanitized to only contain the following symbols:\n`abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._`.",
                "name": {
                  "name": "filename",
                  "wireValue": "filename"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "If set to \"1\", enables the `source_url` duplicates prevention.\nSpecifically, if the `source_url` had already been fetched and uploaded previously,\nthis request will return information about the already uploaded file.",
                "name": {
                  "name": {
                    "originalName": "check_URL_duplicates",
                    "camelCase": {
                      "unsafeName": "checkURLDuplicates",
                      "safeName": "checkURLDuplicates"
                    },
                    "pascalCase": {
                      "unsafeName": "CheckURLDuplicates",
                      "safeName": "CheckURLDuplicates"
                    }
                  },
                  "wireValue": "check_URL_duplicates"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": {
                        "originalName": "FromUrlUploadRequestCheckUrlDuplicates",
                        "camelCase": {
                          "unsafeName": "fromURLUploadRequestCheckURLDuplicates",
                          "safeName": "fromURLUploadRequestCheckURLDuplicates"
                        },
                        "pascalCase": {
                          "unsafeName": "FromURLUploadRequestCheckURLDuplicates",
                          "safeName": "FromURLUploadRequestCheckURLDuplicates"
                        }
                      },
                      "fernFilepath": {
                        "allParts": [
                          "upload"
                        ],
                        "packagePath": [],
                        "file": "upload"
                      },
                      "typeId": "type_upload:FromUrlUploadRequestCheckUrlDuplicates",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "Determines if the requested `source_url` should be kept in the history of\nfetched/uploaded URLs. If the value is not defined explicitly, it is set\nto the value of the `check_URL_duplicates` parameter.",
                "name": {
                  "name": {
                    "originalName": "save_URL_duplicates",
                    "camelCase": {
                      "unsafeName": "saveURLDuplicates",
                      "safeName": "saveURLDuplicates"
                    },
                    "pascalCase": {
                      "unsafeName": "SaveURLDuplicates",
                      "safeName": "SaveURLDuplicates"
                    }
                  },
                  "wireValue": "save_URL_duplicates"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": {
                        "originalName": "FromUrlUploadRequestSaveUrlDuplicates",
                        "camelCase": {
                          "unsafeName": "fromURLUploadRequestSaveURLDuplicates",
                          "safeName": "fromURLUploadRequestSaveURLDuplicates"
                        },
                        "pascalCase": {
                          "unsafeName": "FromURLUploadRequestSaveURLDuplicates",
                          "safeName": "FromURLUploadRequestSaveURLDuplicates"
                        }
                      },
                      "fernFilepath": {
                        "allParts": [
                          "upload"
                        ],
                        "packagePath": [],
                        "file": "upload"
                      },
                      "typeId": "type_upload:FromUrlUploadRequestSaveUrlDuplicates",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "metadata[{key}]",
                  "wireValue": "metadata[{key}]"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "MetadataValue",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:MetadataValue",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "SignatureType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SignatureType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "ExpireType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:ExpireType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": {
                "originalName": "FromUrlUploadRequest",
                "camelCase": {
                  "unsafeName": "fromURLUploadRequest",
                  "safeName": "fromURLUploadRequest"
                },
                "pascalCase": {
                  "unsafeName": "FromURLUploadRequest",
                  "safeName": "FromURLUploadRequest"
                }
              },
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Status Token or File Info of an already downloaded file.",
                "responseBodyType": {
                  "name": {
                    "originalName": "FromUrlUploadResponse",
                    "camelCase": {
                      "unsafeName": "fromURLUploadResponse",
                      "safeName": "fromURLUploadResponse"
                    },
                    "pascalCase": {
                      "unsafeName": "FromURLUploadResponse",
                      "safeName": "FromURLUploadResponse"
                    }
                  },
                  "fernFilepath": {
                    "allParts": [
                      "upload"
                    ],
                    "packagePath": [],
                    "file": "upload"
                  },
                  "typeId": "type_upload:FromUrlUploadResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "FromUrlUploadRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestBadRequestError",
                    "safeName": "fromURLUploadRequestBadRequestError"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestBadRequestError",
                    "safeName": "FromURLUploadRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FromUrlUploadRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": {
                  "originalName": "FromUrlUploadRequestForbiddenError",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestForbiddenError",
                    "safeName": "fromURLUploadRequestForbiddenError"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestForbiddenError",
                    "safeName": "FromURLUploadRequestForbiddenError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FromUrlUploadRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": {
                  "originalName": "FromUrlUploadRequestTooManyRequestsError",
                  "camelCase": {
                    "unsafeName": "fromURLUploadRequestTooManyRequestsError",
                    "safeName": "fromURLUploadRequestTooManyRequestsError"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadRequestTooManyRequestsError",
                    "safeName": "FromURLUploadRequestTooManyRequestsError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FromUrlUploadRequestTooManyRequestsError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "The endpoint notifies about the progress of the task by changing the value of the `status` field:\n  * the field is set to `waiting` initially\n  * once the system starts processing the request, the field is set to `progress`\n  * if the file is fetched and uploaded successfully, the `status` field is set to `success`\n    and the endpoint returns a JSON object holding information about the uploaded file\n  * if the system fails to fetch/upload the file, the `status` field is set to `error` and\n    the `error` field is set to the cause of the error.",
          "id": "endpoint_upload.fromURLUploadStatus",
          "name": {
            "originalName": "fromURLUploadStatus",
            "camelCase": {
              "unsafeName": "fromURLUploadStatus",
              "safeName": "fromURLUploadStatus"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadStatus",
              "safeName": "FromURLUploadStatus"
            }
          },
          "displayName": "Check the status of a task to fetch/upload a file from a URL",
          "auth": false,
          "idempotent": false,
          "method": "GET",
          "path": {
            "head": "/from_url/status/",
            "parts": []
          },
          "fullPath": {
            "head": "from_url/status/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [
            {
              "docs": "Token returned by the `/from_url/` endpoint that identifies a request to fetch/upload a file from a URL.",
              "name": {
                "name": "token",
                "wireValue": "token"
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "sdkRequest": {
            "shape": {
              "wrapperName": {
                "originalName": "FromUrlUploadStatusRequest",
                "camelCase": {
                  "unsafeName": "fromURLUploadStatusRequest",
                  "safeName": "fromURLUploadStatusRequest"
                },
                "pascalCase": {
                  "unsafeName": "FromURLUploadStatusRequest",
                  "safeName": "FromURLUploadStatusRequest"
                }
              },
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Request was processed successfully.",
                "responseBodyType": {
                  "name": {
                    "originalName": "FromUrlUploadStatusResponse",
                    "camelCase": {
                      "unsafeName": "fromURLUploadStatusResponse",
                      "safeName": "fromURLUploadStatusResponse"
                    },
                    "pascalCase": {
                      "unsafeName": "FromURLUploadStatusResponse",
                      "safeName": "FromURLUploadStatusResponse"
                    }
                  },
                  "fernFilepath": {
                    "allParts": [
                      "upload"
                    ],
                    "packagePath": [],
                    "file": "upload"
                  },
                  "typeId": "type_upload:FromUrlUploadStatusResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": {
                  "originalName": "FromUrlUploadStatusRequestBadRequestError",
                  "camelCase": {
                    "unsafeName": "fromURLUploadStatusRequestBadRequestError",
                    "safeName": "fromURLUploadStatusRequestBadRequestError"
                  },
                  "pascalCase": {
                    "unsafeName": "FromURLUploadStatusRequestBadRequestError",
                    "safeName": "FromURLUploadStatusRequestBadRequestError"
                  }
                },
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FromUrlUploadStatusRequestBadRequestError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Returns a JSON object with information about an uploaded file (file size, MIME type, metadata, etc).",
          "id": "endpoint_upload.fileUploadInfo",
          "name": "fileUploadInfo",
          "displayName": "Get information about an uploaded file",
          "auth": false,
          "idempotent": false,
          "method": "GET",
          "path": {
            "head": "/info/",
            "parts": []
          },
          "fullPath": {
            "head": "info/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "pub_key",
                "wireValue": "pub_key"
              },
              "valueType": {
                "name": "ProjectPublicKeyType",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:ProjectPublicKeyType",
                "type": "named"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "File's unique ID.",
              "name": {
                "name": {
                  "originalName": "file_id",
                  "camelCase": {
                    "unsafeName": "fileID",
                    "safeName": "fileID"
                  },
                  "pascalCase": {
                    "unsafeName": "FileID",
                    "safeName": "FileID"
                  }
                },
                "wireValue": "file_id"
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "validation": {
                      "format": "uuid"
                    },
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "sdkRequest": {
            "shape": {
              "wrapperName": "FileUploadInfoRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "File information was retrieved successfully.",
                "responseBodyType": {
                  "name": "FileUploadInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:FileUploadInfo",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "FileUploadInfoRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FileUploadInfoRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "FileUploadInfoRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FileUploadInfoRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "FileUploadInfoRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FileUploadInfoRequestNotFoundError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    },
    "service_groups": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "groups"
          ],
          "packagePath": [],
          "file": "groups"
        }
      },
      "displayName": "Groups",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Create a file group from a set of already uploaded files.\n\nThe most common use case for creating a file group is when a user uploads\nmultiple files at once and then wants to display them together.\n\n**Note:** A group itself and files within it MUST belong to the same project.\n\n**Note:** Groups are immutable and the only way to add/remove a file to a group\nis to create a new one.",
          "id": "endpoint_groups.createFilesGroup",
          "name": "createFilesGroup",
          "displayName": "Create a file group",
          "auth": false,
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/group/",
            "parts": []
          },
          "fullPath": {
            "head": "group/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "CreateFilesGroupRequest",
            "properties": [
              {
                "name": {
                  "name": "pub_key",
                  "wireValue": "pub_key"
                },
                "valueType": {
                  "name": "ProjectPublicKeyType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "docs": "Set of files you want to add to the group.\nEach element can be a file UUID with or without the applied image\nprocessing operations.",
                "name": {
                  "name": "files[]",
                  "wireValue": "files[]"
                },
                "valueType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "signature",
                  "wireValue": "signature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "SignatureType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SignatureType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": "expire",
                  "wireValue": "expire"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "ExpireType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:ExpireType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "CreateFilesGroupRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "The group was created successfully.",
                "responseBodyType": {
                  "name": "GroupInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:GroupInfo",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "CreateFilesGroupRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:CreateFilesGroupRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "CreateFilesGroupRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:CreateFilesGroupRequestForbiddenError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Returns a JSON object with information about a file group (when the group was created,\nnumber of the files in the group, etc).",
          "id": "endpoint_groups.filesGroupInfo",
          "name": "filesGroupInfo",
          "displayName": "Get information about a file group",
          "auth": false,
          "idempotent": false,
          "method": "GET",
          "path": {
            "head": "/group/info/",
            "parts": []
          },
          "fullPath": {
            "head": "group/info/",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": "pub_key",
                "wireValue": "pub_key"
              },
              "valueType": {
                "name": "ProjectPublicKeyType",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:ProjectPublicKeyType",
                "type": "named"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "Group's unique ID. Group IDs look like `UUID~N`, where the `~N` part reflects the number of the files in the group.",
              "name": {
                "name": {
                  "originalName": "group_id",
                  "camelCase": {
                    "unsafeName": "groupID",
                    "safeName": "groupID"
                  },
                  "pascalCase": {
                    "unsafeName": "GroupID",
                    "safeName": "GroupID"
                  }
                },
                "wireValue": "group_id"
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "sdkRequest": {
            "shape": {
              "wrapperName": "FilesGroupInfoRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "File group information was retrieved successfully.",
                "responseBodyType": {
                  "name": "GroupInfo",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:GroupInfo",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "FilesGroupInfoRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FilesGroupInfoRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "FilesGroupInfoRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FilesGroupInfoRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "FilesGroupInfoRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:FilesGroupInfoRequestNotFoundError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceID",
          "safeName": "errorInstanceID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceID",
          "safeName": "ErrorInstanceID"
        }
      },
      "wireValue": "errorInstanceId"
    }
  },
  "environments": {
    "defaultEnvironment": "Default",
    "environments": {
      "environments": [
        {
          "id": "Default",
          "name": "Default",
          "url": "https://upload.uploadcare.com"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "pathParameters": [],
  "variables": [],
  "serviceTypeReferenceInfo": {
    "typesReferencedOnlyByService": {
      "service_upload": [
        "type_upload:BaseUploadResponse",
        "type_upload:MultipartFileUploadStartResponse",
        "type_upload:FromUrlUploadRequestCheckUrlDuplicates",
        "type_upload:FromUrlUploadRequestSaveUrlDuplicates",
        "type_upload:FromUrlUploadResponse",
        "type_upload:FromUrlUploadStatusResponse",
        "type_:StoreType",
        "type_:FileUploadInfo",
        "type_:FileUploadInfoWaitingStatus",
        "type_:FileUploadInfoProgressStatus",
        "type_:FileUploadInfoSuccessStatus",
        "type_:FileUploadInfoErrorStatus",
        "type_:FileUploadInfoUnknownStatus",
        "type_:FileUploadInfoFromUrl",
        "type_:FromUrlUploadResponseSchema",
        "type_:MetadataValue",
        "type_:ImageInfoColorMode",
        "type_:ImageInfoGeoLocation",
        "type_:ImageInfo",
        "type_:LegacyVideoInfoAudio",
        "type_:LegacyVideoInfoVideo",
        "type_:LegacyVideoInfo",
        "type_:SchemasImageInfoColorMode",
        "type_:SchemasImageInfoGeoLocation",
        "type_:SchemasImageInfo",
        "type_:VideoInfoAudioItem",
        "type_:VideoInfoVideoItem",
        "type_:VideoInfo",
        "type_:ContentInfoMime",
        "type_:ContentInfo",
        "type_:Metadata"
      ],
      "service_groups": [
        "type_:GroupInfo"
      ]
    },
    "sharedTypes": [
      "type_:BaseUploadRequestBadRequestErrorBody",
      "type_:BaseUploadRequestForbiddenErrorBody",
      "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
      "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
      "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
      "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody",
      "type_:FromUrlUploadRequestBadRequestErrorBody",
      "type_:FromUrlUploadRequestForbiddenErrorBody",
      "type_:FileUploadInfoRequestBadRequestErrorBody",
      "type_:FileUploadInfoRequestForbiddenErrorBody",
      "type_:CreateFilesGroupRequestBadRequestErrorBody",
      "type_:CreateFilesGroupRequestForbiddenErrorBody",
      "type_:FilesGroupInfoRequestBadRequestErrorBody",
      "type_:FilesGroupInfoRequestForbiddenErrorBody",
      "type_:SignatureType",
      "type_:ExpireType",
      "type_:ProjectPublicKeyType",
      "type_:AutoStoreDisabledError",
      "type_:UploadcarePublicKeyRequiredError",
      "type_:PublicKeyRequiredError",
      "type_:UploadcarePublicKeyInvalidError",
      "type_:PublicKeyInvalidError",
      "type_:ProjectPublicKeyRemovedError",
      "type_:AccountBlockedError",
      "type_:AccountUnpaidError",
      "type_:UploadFailedError",
      "type_:AccountLimitsExceededError",
      "type_:SignatureExpirationError",
      "type_:SignatureInvalidError",
      "type_:RequestFiledsNumberLimitExceededError",
      "type_:PostRequestParserFailedError",
      "type_:NullCharactersForbiddenError",
      "type_:FileMetadataKeyDuplicatedError",
      "type_:FileMetadataKeyEmptyError",
      "type_:FileMetadataKeyForbiddenError",
      "type_:FileMetadataKeyLengthTooBigError",
      "type_:FileMetadataValueEmptyError",
      "type_:FileMetadataValueForbiddenError",
      "type_:FileMetadataValueLengthTooBigError",
      "type_:FileMetadataKeysNumberTooBigError",
      "type_:FilesRequiredError",
      "type_:FileSizeLimitExceededError",
      "type_:FileTypeForbiddenError",
      "type_:FileInfectedError",
      "type_:RequestParamRequiredError",
      "type_:MultipartSizeInvalidError",
      "type_:MultipartFileSizeLimitExceededError",
      "type_:MultipartFileSizeTooSmallError",
      "type_:MultipartPartSizeInvalidError",
      "type_:MultipartPartSizeTooSmallError",
      "type_:MultipartPartSizeTooBigError",
      "type_:MultipartFileIdRequiredError",
      "type_:MultipartFileAlreadyUploadedError",
      "type_:MultipartUploadSizeTooLargeError",
      "type_:MultipartUploadSizeTooSmallError",
      "type_:MultipartFileCompletionFailedError",
      "type_:UuidInvalidError",
      "type_:SourceUrlRequiredError",
      "type_:UrlParsingFailedError",
      "type_:UrlSchemeRequiredError",
      "type_:UrlSchemeInvalidError",
      "type_:UrlHostRequiredError",
      "type_:UrlBlacklistedError",
      "type_:HostnameNotFoundError",
      "type_:UrlHostMalformedError",
      "type_:UrlHostPrivateIpForbiddenError",
      "type_:TokenRequiredError",
      "type_:FileIdRequiredError",
      "type_:FileIdInvalidError",
      "type_:FileNotFoundError",
      "type_:GroupFilesInvalidError",
      "type_:GroupFileUrlParsingFailedError",
      "type_:GroupFilesNotFoundError",
      "type_:GroupIdRequiredError",
      "type_:GroupNotFoundError",
      "type_:SignatureRequiredError",
      "type_:SignatureExpirationRequiredError",
      "type_:SignatureExpirationInvalidError"
    ]
  },
  "webhookGroups": {},
  "websocketChannels": {},
  "dynamic": {
    "version": "1.0.0",
    "types": {
      "type_upload:BaseUploadResponse": {
        "declaration": {
          "name": {
            "originalName": "BaseUploadResponse",
            "camelCase": {
              "unsafeName": "baseUploadResponse",
              "safeName": "baseUploadResponse"
            },
            "pascalCase": {
              "unsafeName": "BaseUploadResponse",
              "safeName": "BaseUploadResponse"
            },
            "snakeCase": {
              "unsafeName": "base_upload_response",
              "safeName": "base_upload_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE_UPLOAD_RESPONSE",
              "safeName": "BASE_UPLOAD_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "filename",
                "camelCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "pascalCase": {
                  "unsafeName": "Filename",
                  "safeName": "Filename"
                },
                "snakeCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILENAME",
                  "safeName": "FILENAME"
                }
              },
              "wireValue": "filename"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_upload:MultipartFileUploadStartResponse": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileUploadStartResponse",
            "camelCase": {
              "unsafeName": "multipartFileUploadStartResponse",
              "safeName": "multipartFileUploadStartResponse"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadStartResponse",
              "safeName": "MultipartFileUploadStartResponse"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_start_response",
              "safeName": "multipart_file_upload_start_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_START_RESPONSE",
              "safeName": "MULTIPART_FILE_UPLOAD_START_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "uuid",
                "camelCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                },
                "snakeCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "parts",
                "camelCase": {
                  "unsafeName": "parts",
                  "safeName": "parts"
                },
                "pascalCase": {
                  "unsafeName": "Parts",
                  "safeName": "Parts"
                },
                "snakeCase": {
                  "unsafeName": "parts",
                  "safeName": "parts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARTS",
                  "safeName": "PARTS"
                }
              },
              "wireValue": "parts"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_upload:FromUrlUploadRequestCheckUrlDuplicates": {
        "declaration": {
          "name": {
            "originalName": "FromUrlUploadRequestCheckUrlDuplicates",
            "camelCase": {
              "unsafeName": "fromURLUploadRequestCheckURLDuplicates",
              "safeName": "fromURLUploadRequestCheckURLDuplicates"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadRequestCheckURLDuplicates",
              "safeName": "FromURLUploadRequestCheckURLDuplicates"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_request_check_url_duplicates",
              "safeName": "from_url_upload_request_check_url_duplicates"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_REQUEST_CHECK_URL_DUPLICATES",
              "safeName": "FROM_URL_UPLOAD_REQUEST_CHECK_URL_DUPLICATES"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "Zero",
              "camelCase": {
                "unsafeName": "zero",
                "safeName": "zero"
              },
              "pascalCase": {
                "unsafeName": "Zero",
                "safeName": "Zero"
              },
              "snakeCase": {
                "unsafeName": "zero",
                "safeName": "zero"
              },
              "screamingSnakeCase": {
                "unsafeName": "ZERO",
                "safeName": "ZERO"
              }
            },
            "wireValue": "0"
          },
          {
            "name": {
              "originalName": "One",
              "camelCase": {
                "unsafeName": "one",
                "safeName": "one"
              },
              "pascalCase": {
                "unsafeName": "One",
                "safeName": "One"
              },
              "snakeCase": {
                "unsafeName": "one",
                "safeName": "one"
              },
              "screamingSnakeCase": {
                "unsafeName": "ONE",
                "safeName": "ONE"
              }
            },
            "wireValue": "1"
          }
        ],
        "type": "enum"
      },
      "type_upload:FromUrlUploadRequestSaveUrlDuplicates": {
        "declaration": {
          "name": {
            "originalName": "FromUrlUploadRequestSaveUrlDuplicates",
            "camelCase": {
              "unsafeName": "fromURLUploadRequestSaveURLDuplicates",
              "safeName": "fromURLUploadRequestSaveURLDuplicates"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadRequestSaveURLDuplicates",
              "safeName": "FromURLUploadRequestSaveURLDuplicates"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_request_save_url_duplicates",
              "safeName": "from_url_upload_request_save_url_duplicates"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_REQUEST_SAVE_URL_DUPLICATES",
              "safeName": "FROM_URL_UPLOAD_REQUEST_SAVE_URL_DUPLICATES"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "Zero",
              "camelCase": {
                "unsafeName": "zero",
                "safeName": "zero"
              },
              "pascalCase": {
                "unsafeName": "Zero",
                "safeName": "Zero"
              },
              "snakeCase": {
                "unsafeName": "zero",
                "safeName": "zero"
              },
              "screamingSnakeCase": {
                "unsafeName": "ZERO",
                "safeName": "ZERO"
              }
            },
            "wireValue": "0"
          },
          {
            "name": {
              "originalName": "One",
              "camelCase": {
                "unsafeName": "one",
                "safeName": "one"
              },
              "pascalCase": {
                "unsafeName": "One",
                "safeName": "One"
              },
              "snakeCase": {
                "unsafeName": "one",
                "safeName": "one"
              },
              "screamingSnakeCase": {
                "unsafeName": "ONE",
                "safeName": "ONE"
              }
            },
            "wireValue": "1"
          }
        ],
        "type": "enum"
      },
      "type_upload:FromUrlUploadResponse": {
        "declaration": {
          "name": {
            "originalName": "FromUrlUploadResponse",
            "camelCase": {
              "unsafeName": "fromURLUploadResponse",
              "safeName": "fromURLUploadResponse"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadResponse",
              "safeName": "FromURLUploadResponse"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_response",
              "safeName": "from_url_upload_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_RESPONSE",
              "safeName": "FROM_URL_UPLOAD_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "types": [
          {
            "value": "type_:FromUrlUploadResponseSchema",
            "type": "named"
          },
          {
            "value": "type_:FileUploadInfoFromUrl",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_upload:FromUrlUploadStatusResponse": {
        "declaration": {
          "name": {
            "originalName": "FromUrlUploadStatusResponse",
            "camelCase": {
              "unsafeName": "fromURLUploadStatusResponse",
              "safeName": "fromURLUploadStatusResponse"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadStatusResponse",
              "safeName": "FromURLUploadStatusResponse"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_status_response",
              "safeName": "from_url_upload_status_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_STATUS_RESPONSE",
              "safeName": "FROM_URL_UPLOAD_STATUS_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "types": [
          {
            "value": "type_:FileUploadInfoWaitingStatus",
            "type": "named"
          },
          {
            "value": "type_:FileUploadInfoProgressStatus",
            "type": "named"
          },
          {
            "value": "type_:FileUploadInfoSuccessStatus",
            "type": "named"
          },
          {
            "value": "type_:FileUploadInfoErrorStatus",
            "type": "named"
          },
          {
            "value": "type_:FileUploadInfoUnknownStatus",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:BaseUploadRequestBadRequestErrorBody": {
        "declaration": {
          "name": {
            "originalName": "BaseUploadRequestBadRequestErrorBody",
            "camelCase": {
              "unsafeName": "baseUploadRequestBadRequestErrorBody",
              "safeName": "baseUploadRequestBadRequestErrorBody"
            },
            "pascalCase": {
              "unsafeName": "BaseUploadRequestBadRequestErrorBody",
              "safeName": "BaseUploadRequestBadRequestErrorBody"
            },
            "snakeCase": {
              "unsafeName": "base_upload_request_bad_request_error_body",
              "safeName": "base_upload_request_bad_request_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE_UPLOAD_REQUEST_BAD_REQUEST_ERROR_BODY",
              "safeName": "BASE_UPLOAD_REQUEST_BAD_REQUEST_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:RequestFiledsNumberLimitExceededError",
            "type": "named"
          },
          {
            "value": "type_:PostRequestParserFailedError",
            "type": "named"
          },
          {
            "value": "type_:NullCharactersForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyDuplicatedError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyEmptyError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyLengthTooBigError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueEmptyError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueLengthTooBigError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeysNumberTooBigError",
            "type": "named"
          },
          {
            "value": "type_:SignatureRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationInvalidError",
            "type": "named"
          },
          {
            "value": "type_:FilesRequiredError",
            "type": "named"
          },
          {
            "value": "type_:FileSizeLimitExceededError",
            "type": "named"
          },
          {
            "value": "type_:FileTypeForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileInfectedError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:BaseUploadRequestForbiddenErrorBody": {
        "declaration": {
          "name": {
            "originalName": "BaseUploadRequestForbiddenErrorBody",
            "camelCase": {
              "unsafeName": "baseUploadRequestForbiddenErrorBody",
              "safeName": "baseUploadRequestForbiddenErrorBody"
            },
            "pascalCase": {
              "unsafeName": "BaseUploadRequestForbiddenErrorBody",
              "safeName": "BaseUploadRequestForbiddenErrorBody"
            },
            "snakeCase": {
              "unsafeName": "base_upload_request_forbidden_error_body",
              "safeName": "base_upload_request_forbidden_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE_UPLOAD_REQUEST_FORBIDDEN_ERROR_BODY",
              "safeName": "BASE_UPLOAD_REQUEST_FORBIDDEN_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:UploadcarePublicKeyRequiredError",
            "type": "named"
          },
          {
            "value": "type_:UploadcarePublicKeyInvalidError",
            "type": "named"
          },
          {
            "value": "type_:AutoStoreDisabledError",
            "type": "named"
          },
          {
            "value": "type_:ProjectPublicKeyRemovedError",
            "type": "named"
          },
          {
            "value": "type_:AccountBlockedError",
            "type": "named"
          },
          {
            "value": "type_:AccountUnpaidError",
            "type": "named"
          },
          {
            "value": "type_:UploadFailedError",
            "type": "named"
          },
          {
            "value": "type_:AccountLimitsExceededError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationError",
            "type": "named"
          },
          {
            "value": "type_:SignatureInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:MultipartFileUploadStartRequestBadRequestErrorBody": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileUploadStartRequestBadRequestErrorBody",
            "camelCase": {
              "unsafeName": "multipartFileUploadStartRequestBadRequestErrorBody",
              "safeName": "multipartFileUploadStartRequestBadRequestErrorBody"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadStartRequestBadRequestErrorBody",
              "safeName": "MultipartFileUploadStartRequestBadRequestErrorBody"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_start_request_bad_request_error_body",
              "safeName": "multipart_file_upload_start_request_bad_request_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_START_REQUEST_BAD_REQUEST_ERROR_BODY",
              "safeName": "MULTIPART_FILE_UPLOAD_START_REQUEST_BAD_REQUEST_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:RequestFiledsNumberLimitExceededError",
            "type": "named"
          },
          {
            "value": "type_:PostRequestParserFailedError",
            "type": "named"
          },
          {
            "value": "type_:NullCharactersForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyDuplicatedError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyEmptyError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyLengthTooBigError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueEmptyError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueLengthTooBigError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeysNumberTooBigError",
            "type": "named"
          },
          {
            "value": "type_:SignatureRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationInvalidError",
            "type": "named"
          },
          {
            "value": "type_:RequestParamRequiredError",
            "type": "named"
          },
          {
            "value": "type_:MultipartSizeInvalidError",
            "type": "named"
          },
          {
            "value": "type_:MultipartFileSizeLimitExceededError",
            "type": "named"
          },
          {
            "value": "type_:MultipartFileSizeTooSmallError",
            "type": "named"
          },
          {
            "value": "type_:MultipartPartSizeInvalidError",
            "type": "named"
          },
          {
            "value": "type_:MultipartPartSizeTooSmallError",
            "type": "named"
          },
          {
            "value": "type_:MultipartPartSizeTooBigError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:MultipartFileUploadStartRequestForbiddenErrorBody": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileUploadStartRequestForbiddenErrorBody",
            "camelCase": {
              "unsafeName": "multipartFileUploadStartRequestForbiddenErrorBody",
              "safeName": "multipartFileUploadStartRequestForbiddenErrorBody"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadStartRequestForbiddenErrorBody",
              "safeName": "MultipartFileUploadStartRequestForbiddenErrorBody"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_start_request_forbidden_error_body",
              "safeName": "multipart_file_upload_start_request_forbidden_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_START_REQUEST_FORBIDDEN_ERROR_BODY",
              "safeName": "MULTIPART_FILE_UPLOAD_START_REQUEST_FORBIDDEN_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:UploadcarePublicKeyRequiredError",
            "type": "named"
          },
          {
            "value": "type_:UploadcarePublicKeyInvalidError",
            "type": "named"
          },
          {
            "value": "type_:AutoStoreDisabledError",
            "type": "named"
          },
          {
            "value": "type_:ProjectPublicKeyRemovedError",
            "type": "named"
          },
          {
            "value": "type_:AccountBlockedError",
            "type": "named"
          },
          {
            "value": "type_:AccountUnpaidError",
            "type": "named"
          },
          {
            "value": "type_:UploadFailedError",
            "type": "named"
          },
          {
            "value": "type_:AccountLimitsExceededError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationError",
            "type": "named"
          },
          {
            "value": "type_:SignatureInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileUploadCompleteRequestBadRequestErrorBody",
            "camelCase": {
              "unsafeName": "multipartFileUploadCompleteRequestBadRequestErrorBody",
              "safeName": "multipartFileUploadCompleteRequestBadRequestErrorBody"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadCompleteRequestBadRequestErrorBody",
              "safeName": "MultipartFileUploadCompleteRequestBadRequestErrorBody"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_complete_request_bad_request_error_body",
              "safeName": "multipart_file_upload_complete_request_bad_request_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_COMPLETE_REQUEST_BAD_REQUEST_ERROR_BODY",
              "safeName": "MULTIPART_FILE_UPLOAD_COMPLETE_REQUEST_BAD_REQUEST_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:RequestFiledsNumberLimitExceededError",
            "type": "named"
          },
          {
            "value": "type_:PostRequestParserFailedError",
            "type": "named"
          },
          {
            "value": "type_:NullCharactersForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:MultipartFileIdRequiredError",
            "type": "named"
          },
          {
            "value": "type_:UuidInvalidError",
            "type": "named"
          },
          {
            "value": "type_:MultipartFileAlreadyUploadedError",
            "type": "named"
          },
          {
            "value": "type_:MultipartUploadSizeTooLargeError",
            "type": "named"
          },
          {
            "value": "type_:MultipartUploadSizeTooSmallError",
            "type": "named"
          },
          {
            "value": "type_:MultipartFileCompletionFailedError",
            "type": "named"
          },
          {
            "value": "type_:FileTypeForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileInfectedError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileUploadCompleteRequestForbiddenErrorBody",
            "camelCase": {
              "unsafeName": "multipartFileUploadCompleteRequestForbiddenErrorBody",
              "safeName": "multipartFileUploadCompleteRequestForbiddenErrorBody"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadCompleteRequestForbiddenErrorBody",
              "safeName": "MultipartFileUploadCompleteRequestForbiddenErrorBody"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_complete_request_forbidden_error_body",
              "safeName": "multipart_file_upload_complete_request_forbidden_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_COMPLETE_REQUEST_FORBIDDEN_ERROR_BODY",
              "safeName": "MULTIPART_FILE_UPLOAD_COMPLETE_REQUEST_FORBIDDEN_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:UploadcarePublicKeyRequiredError",
            "type": "named"
          },
          {
            "value": "type_:UploadcarePublicKeyInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:FromUrlUploadRequestBadRequestErrorBody": {
        "declaration": {
          "name": {
            "originalName": "FromUrlUploadRequestBadRequestErrorBody",
            "camelCase": {
              "unsafeName": "fromURLUploadRequestBadRequestErrorBody",
              "safeName": "fromURLUploadRequestBadRequestErrorBody"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadRequestBadRequestErrorBody",
              "safeName": "FromURLUploadRequestBadRequestErrorBody"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_request_bad_request_error_body",
              "safeName": "from_url_upload_request_bad_request_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_REQUEST_BAD_REQUEST_ERROR_BODY",
              "safeName": "FROM_URL_UPLOAD_REQUEST_BAD_REQUEST_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:RequestFiledsNumberLimitExceededError",
            "type": "named"
          },
          {
            "value": "type_:PostRequestParserFailedError",
            "type": "named"
          },
          {
            "value": "type_:NullCharactersForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyDuplicatedError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyEmptyError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeyLengthTooBigError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueEmptyError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataValueLengthTooBigError",
            "type": "named"
          },
          {
            "value": "type_:FileMetadataKeysNumberTooBigError",
            "type": "named"
          },
          {
            "value": "type_:SignatureRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationInvalidError",
            "type": "named"
          },
          {
            "value": "type_:SourceUrlRequiredError",
            "type": "named"
          },
          {
            "value": "type_:UrlParsingFailedError",
            "type": "named"
          },
          {
            "value": "type_:UrlSchemeRequiredError",
            "type": "named"
          },
          {
            "value": "type_:UrlSchemeInvalidError",
            "type": "named"
          },
          {
            "value": "type_:UrlHostRequiredError",
            "type": "named"
          },
          {
            "value": "type_:UrlBlacklistedError",
            "type": "named"
          },
          {
            "value": "type_:HostnameNotFoundError",
            "type": "named"
          },
          {
            "value": "type_:UrlHostMalformedError",
            "type": "named"
          },
          {
            "value": "type_:UrlHostPrivateIpForbiddenError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:FromUrlUploadRequestForbiddenErrorBody": {
        "declaration": {
          "name": {
            "originalName": "FromUrlUploadRequestForbiddenErrorBody",
            "camelCase": {
              "unsafeName": "fromURLUploadRequestForbiddenErrorBody",
              "safeName": "fromURLUploadRequestForbiddenErrorBody"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadRequestForbiddenErrorBody",
              "safeName": "FromURLUploadRequestForbiddenErrorBody"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_request_forbidden_error_body",
              "safeName": "from_url_upload_request_forbidden_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_REQUEST_FORBIDDEN_ERROR_BODY",
              "safeName": "FROM_URL_UPLOAD_REQUEST_FORBIDDEN_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:PublicKeyRequiredError",
            "type": "named"
          },
          {
            "value": "type_:PublicKeyInvalidError",
            "type": "named"
          },
          {
            "value": "type_:AutoStoreDisabledError",
            "type": "named"
          },
          {
            "value": "type_:ProjectPublicKeyRemovedError",
            "type": "named"
          },
          {
            "value": "type_:AccountBlockedError",
            "type": "named"
          },
          {
            "value": "type_:AccountUnpaidError",
            "type": "named"
          },
          {
            "value": "type_:UploadFailedError",
            "type": "named"
          },
          {
            "value": "type_:AccountLimitsExceededError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationError",
            "type": "named"
          },
          {
            "value": "type_:SignatureInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:FileUploadInfoRequestBadRequestErrorBody": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoRequestBadRequestErrorBody",
            "camelCase": {
              "unsafeName": "fileUploadInfoRequestBadRequestErrorBody",
              "safeName": "fileUploadInfoRequestBadRequestErrorBody"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoRequestBadRequestErrorBody",
              "safeName": "FileUploadInfoRequestBadRequestErrorBody"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_request_bad_request_error_body",
              "safeName": "file_upload_info_request_bad_request_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_REQUEST_BAD_REQUEST_ERROR_BODY",
              "safeName": "FILE_UPLOAD_INFO_REQUEST_BAD_REQUEST_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:NullCharactersForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:FileIdRequiredError",
            "type": "named"
          },
          {
            "value": "type_:FileIdInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:FileUploadInfoRequestForbiddenErrorBody": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoRequestForbiddenErrorBody",
            "camelCase": {
              "unsafeName": "fileUploadInfoRequestForbiddenErrorBody",
              "safeName": "fileUploadInfoRequestForbiddenErrorBody"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoRequestForbiddenErrorBody",
              "safeName": "FileUploadInfoRequestForbiddenErrorBody"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_request_forbidden_error_body",
              "safeName": "file_upload_info_request_forbidden_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_REQUEST_FORBIDDEN_ERROR_BODY",
              "safeName": "FILE_UPLOAD_INFO_REQUEST_FORBIDDEN_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:PublicKeyRequiredError",
            "type": "named"
          },
          {
            "value": "type_:PublicKeyInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:CreateFilesGroupRequestBadRequestErrorBody": {
        "declaration": {
          "name": {
            "originalName": "CreateFilesGroupRequestBadRequestErrorBody",
            "camelCase": {
              "unsafeName": "createFilesGroupRequestBadRequestErrorBody",
              "safeName": "createFilesGroupRequestBadRequestErrorBody"
            },
            "pascalCase": {
              "unsafeName": "CreateFilesGroupRequestBadRequestErrorBody",
              "safeName": "CreateFilesGroupRequestBadRequestErrorBody"
            },
            "snakeCase": {
              "unsafeName": "create_files_group_request_bad_request_error_body",
              "safeName": "create_files_group_request_bad_request_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_FILES_GROUP_REQUEST_BAD_REQUEST_ERROR_BODY",
              "safeName": "CREATE_FILES_GROUP_REQUEST_BAD_REQUEST_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:RequestFiledsNumberLimitExceededError",
            "type": "named"
          },
          {
            "value": "type_:PostRequestParserFailedError",
            "type": "named"
          },
          {
            "value": "type_:NullCharactersForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:SignatureRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationRequiredError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationInvalidError",
            "type": "named"
          },
          {
            "value": "type_:GroupFilesInvalidError",
            "type": "named"
          },
          {
            "value": "type_:GroupFileUrlParsingFailedError",
            "type": "named"
          },
          {
            "value": "type_:GroupFilesNotFoundError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:CreateFilesGroupRequestForbiddenErrorBody": {
        "declaration": {
          "name": {
            "originalName": "CreateFilesGroupRequestForbiddenErrorBody",
            "camelCase": {
              "unsafeName": "createFilesGroupRequestForbiddenErrorBody",
              "safeName": "createFilesGroupRequestForbiddenErrorBody"
            },
            "pascalCase": {
              "unsafeName": "CreateFilesGroupRequestForbiddenErrorBody",
              "safeName": "CreateFilesGroupRequestForbiddenErrorBody"
            },
            "snakeCase": {
              "unsafeName": "create_files_group_request_forbidden_error_body",
              "safeName": "create_files_group_request_forbidden_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_FILES_GROUP_REQUEST_FORBIDDEN_ERROR_BODY",
              "safeName": "CREATE_FILES_GROUP_REQUEST_FORBIDDEN_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:PublicKeyRequiredError",
            "type": "named"
          },
          {
            "value": "type_:PublicKeyInvalidError",
            "type": "named"
          },
          {
            "value": "type_:ProjectPublicKeyRemovedError",
            "type": "named"
          },
          {
            "value": "type_:AccountBlockedError",
            "type": "named"
          },
          {
            "value": "type_:AccountUnpaidError",
            "type": "named"
          },
          {
            "value": "type_:UploadFailedError",
            "type": "named"
          },
          {
            "value": "type_:AccountLimitsExceededError",
            "type": "named"
          },
          {
            "value": "type_:SignatureExpirationError",
            "type": "named"
          },
          {
            "value": "type_:SignatureInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:FilesGroupInfoRequestBadRequestErrorBody": {
        "declaration": {
          "name": {
            "originalName": "FilesGroupInfoRequestBadRequestErrorBody",
            "camelCase": {
              "unsafeName": "filesGroupInfoRequestBadRequestErrorBody",
              "safeName": "filesGroupInfoRequestBadRequestErrorBody"
            },
            "pascalCase": {
              "unsafeName": "FilesGroupInfoRequestBadRequestErrorBody",
              "safeName": "FilesGroupInfoRequestBadRequestErrorBody"
            },
            "snakeCase": {
              "unsafeName": "files_group_info_request_bad_request_error_body",
              "safeName": "files_group_info_request_bad_request_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILES_GROUP_INFO_REQUEST_BAD_REQUEST_ERROR_BODY",
              "safeName": "FILES_GROUP_INFO_REQUEST_BAD_REQUEST_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:NullCharactersForbiddenError",
            "type": "named"
          },
          {
            "value": "type_:GroupIdRequiredError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:FilesGroupInfoRequestForbiddenErrorBody": {
        "declaration": {
          "name": {
            "originalName": "FilesGroupInfoRequestForbiddenErrorBody",
            "camelCase": {
              "unsafeName": "filesGroupInfoRequestForbiddenErrorBody",
              "safeName": "filesGroupInfoRequestForbiddenErrorBody"
            },
            "pascalCase": {
              "unsafeName": "FilesGroupInfoRequestForbiddenErrorBody",
              "safeName": "FilesGroupInfoRequestForbiddenErrorBody"
            },
            "snakeCase": {
              "unsafeName": "files_group_info_request_forbidden_error_body",
              "safeName": "files_group_info_request_forbidden_error_body"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILES_GROUP_INFO_REQUEST_FORBIDDEN_ERROR_BODY",
              "safeName": "FILES_GROUP_INFO_REQUEST_FORBIDDEN_ERROR_BODY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:PublicKeyRequiredError",
            "type": "named"
          },
          {
            "value": "type_:PublicKeyInvalidError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:SignatureType": {
        "declaration": {
          "name": {
            "originalName": "SignatureType",
            "camelCase": {
              "unsafeName": "signatureType",
              "safeName": "signatureType"
            },
            "pascalCase": {
              "unsafeName": "SignatureType",
              "safeName": "SignatureType"
            },
            "snakeCase": {
              "unsafeName": "signature_type",
              "safeName": "signature_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGNATURE_TYPE",
              "safeName": "SIGNATURE_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:ExpireType": {
        "declaration": {
          "name": {
            "originalName": "ExpireType",
            "camelCase": {
              "unsafeName": "expireType",
              "safeName": "expireType"
            },
            "pascalCase": {
              "unsafeName": "ExpireType",
              "safeName": "ExpireType"
            },
            "snakeCase": {
              "unsafeName": "expire_type",
              "safeName": "expire_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "EXPIRE_TYPE",
              "safeName": "EXPIRE_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "DOUBLE",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:StoreType": {
        "declaration": {
          "name": {
            "originalName": "StoreType",
            "camelCase": {
              "unsafeName": "storeType",
              "safeName": "storeType"
            },
            "pascalCase": {
              "unsafeName": "StoreType",
              "safeName": "StoreType"
            },
            "snakeCase": {
              "unsafeName": "store_type",
              "safeName": "store_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "STORE_TYPE",
              "safeName": "STORE_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "Zero",
              "camelCase": {
                "unsafeName": "zero",
                "safeName": "zero"
              },
              "pascalCase": {
                "unsafeName": "Zero",
                "safeName": "Zero"
              },
              "snakeCase": {
                "unsafeName": "zero",
                "safeName": "zero"
              },
              "screamingSnakeCase": {
                "unsafeName": "ZERO",
                "safeName": "ZERO"
              }
            },
            "wireValue": "0"
          },
          {
            "name": {
              "originalName": "One",
              "camelCase": {
                "unsafeName": "one",
                "safeName": "one"
              },
              "pascalCase": {
                "unsafeName": "One",
                "safeName": "One"
              },
              "snakeCase": {
                "unsafeName": "one",
                "safeName": "one"
              },
              "screamingSnakeCase": {
                "unsafeName": "ONE",
                "safeName": "ONE"
              }
            },
            "wireValue": "1"
          },
          {
            "name": {
              "originalName": "auto",
              "camelCase": {
                "unsafeName": "auto",
                "safeName": "auto"
              },
              "pascalCase": {
                "unsafeName": "Auto",
                "safeName": "Auto"
              },
              "snakeCase": {
                "unsafeName": "auto",
                "safeName": "auto"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUTO",
                "safeName": "AUTO"
              }
            },
            "wireValue": "auto"
          }
        ],
        "type": "enum"
      },
      "type_:ProjectPublicKeyType": {
        "declaration": {
          "name": {
            "originalName": "ProjectPublicKeyType",
            "camelCase": {
              "unsafeName": "projectPublicKeyType",
              "safeName": "projectPublicKeyType"
            },
            "pascalCase": {
              "unsafeName": "ProjectPublicKeyType",
              "safeName": "ProjectPublicKeyType"
            },
            "snakeCase": {
              "unsafeName": "project_public_key_type",
              "safeName": "project_public_key_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROJECT_PUBLIC_KEY_TYPE",
              "safeName": "PROJECT_PUBLIC_KEY_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileUploadInfo": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfo",
            "camelCase": {
              "unsafeName": "fileUploadInfo",
              "safeName": "fileUploadInfo"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfo",
              "safeName": "FileUploadInfo"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info",
              "safeName": "file_upload_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO",
              "safeName": "FILE_UPLOAD_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "uuid",
                "camelCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                },
                "snakeCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "file_id",
                "camelCase": {
                  "unsafeName": "fileID",
                  "safeName": "fileID"
                },
                "pascalCase": {
                  "unsafeName": "FileID",
                  "safeName": "FileID"
                },
                "snakeCase": {
                  "unsafeName": "file_id",
                  "safeName": "file_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILE_ID",
                  "safeName": "FILE_ID"
                }
              },
              "wireValue": "file_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                }
              },
              "wireValue": "size"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total",
                "camelCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "pascalCase": {
                  "unsafeName": "Total",
                  "safeName": "Total"
                },
                "snakeCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL",
                  "safeName": "TOTAL"
                }
              },
              "wireValue": "total"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "done",
                "camelCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "pascalCase": {
                  "unsafeName": "Done",
                  "safeName": "Done"
                },
                "snakeCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DONE",
                  "safeName": "DONE"
                }
              },
              "wireValue": "done"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "original_filename",
                "camelCase": {
                  "unsafeName": "originalFilename",
                  "safeName": "originalFilename"
                },
                "pascalCase": {
                  "unsafeName": "OriginalFilename",
                  "safeName": "OriginalFilename"
                },
                "snakeCase": {
                  "unsafeName": "original_filename",
                  "safeName": "original_filename"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_FILENAME",
                  "safeName": "ORIGINAL_FILENAME"
                }
              },
              "wireValue": "original_filename"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "filename",
                "camelCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "pascalCase": {
                  "unsafeName": "Filename",
                  "safeName": "Filename"
                },
                "snakeCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILENAME",
                  "safeName": "FILENAME"
                }
              },
              "wireValue": "filename"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "mime_type",
                "camelCase": {
                  "unsafeName": "mimeType",
                  "safeName": "mimeType"
                },
                "pascalCase": {
                  "unsafeName": "MimeType",
                  "safeName": "MimeType"
                },
                "snakeCase": {
                  "unsafeName": "mime_type",
                  "safeName": "mime_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MIME_TYPE",
                  "safeName": "MIME_TYPE"
                }
              },
              "wireValue": "mime_type"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image_info",
                "camelCase": {
                  "unsafeName": "imageInfo",
                  "safeName": "imageInfo"
                },
                "pascalCase": {
                  "unsafeName": "ImageInfo",
                  "safeName": "ImageInfo"
                },
                "snakeCase": {
                  "unsafeName": "image_info",
                  "safeName": "image_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_INFO",
                  "safeName": "IMAGE_INFO"
                }
              },
              "wireValue": "image_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:ImageInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "video_info",
                "camelCase": {
                  "unsafeName": "videoInfo",
                  "safeName": "videoInfo"
                },
                "pascalCase": {
                  "unsafeName": "VideoInfo",
                  "safeName": "VideoInfo"
                },
                "snakeCase": {
                  "unsafeName": "video_info",
                  "safeName": "video_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VIDEO_INFO",
                  "safeName": "VIDEO_INFO"
                }
              },
              "wireValue": "video_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:LegacyVideoInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_info",
                "camelCase": {
                  "unsafeName": "contentInfo",
                  "safeName": "contentInfo"
                },
                "pascalCase": {
                  "unsafeName": "ContentInfo",
                  "safeName": "ContentInfo"
                },
                "snakeCase": {
                  "unsafeName": "content_info",
                  "safeName": "content_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_INFO",
                  "safeName": "CONTENT_INFO"
                }
              },
              "wireValue": "content_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:ContentInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                }
              },
              "wireValue": "metadata"
            },
            "typeReference": {
              "value": {
                "value": "type_:Metadata",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_image",
                "camelCase": {
                  "unsafeName": "isImage",
                  "safeName": "isImage"
                },
                "pascalCase": {
                  "unsafeName": "IsImage",
                  "safeName": "IsImage"
                },
                "snakeCase": {
                  "unsafeName": "is_image",
                  "safeName": "is_image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_IMAGE",
                  "safeName": "IS_IMAGE"
                }
              },
              "wireValue": "is_image"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_stored",
                "camelCase": {
                  "unsafeName": "isStored",
                  "safeName": "isStored"
                },
                "pascalCase": {
                  "unsafeName": "IsStored",
                  "safeName": "IsStored"
                },
                "snakeCase": {
                  "unsafeName": "is_stored",
                  "safeName": "is_stored"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_STORED",
                  "safeName": "IS_STORED"
                }
              },
              "wireValue": "is_stored"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_ready",
                "camelCase": {
                  "unsafeName": "isReady",
                  "safeName": "isReady"
                },
                "pascalCase": {
                  "unsafeName": "IsReady",
                  "safeName": "IsReady"
                },
                "snakeCase": {
                  "unsafeName": "is_ready",
                  "safeName": "is_ready"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_READY",
                  "safeName": "IS_READY"
                }
              },
              "wireValue": "is_ready"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s3_bucket",
                "camelCase": {
                  "unsafeName": "s3Bucket",
                  "safeName": "s3Bucket"
                },
                "pascalCase": {
                  "unsafeName": "S3Bucket",
                  "safeName": "S3Bucket"
                },
                "snakeCase": {
                  "unsafeName": "s3bucket",
                  "safeName": "s3bucket"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S3BUCKET",
                  "safeName": "S3BUCKET"
                }
              },
              "wireValue": "s3_bucket"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FileUploadInfoWaitingStatus": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoWaitingStatus",
            "camelCase": {
              "unsafeName": "fileUploadInfoWaitingStatus",
              "safeName": "fileUploadInfoWaitingStatus"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoWaitingStatus",
              "safeName": "FileUploadInfoWaitingStatus"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_waiting_status",
              "safeName": "file_upload_info_waiting_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_WAITING_STATUS",
              "safeName": "FILE_UPLOAD_INFO_WAITING_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "waiting",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FileUploadInfoProgressStatus": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoProgressStatus",
            "camelCase": {
              "unsafeName": "fileUploadInfoProgressStatus",
              "safeName": "fileUploadInfoProgressStatus"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoProgressStatus",
              "safeName": "FileUploadInfoProgressStatus"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_progress_status",
              "safeName": "file_upload_info_progress_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_PROGRESS_STATUS",
              "safeName": "FILE_UPLOAD_INFO_PROGRESS_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "progress",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total",
                "camelCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "pascalCase": {
                  "unsafeName": "Total",
                  "safeName": "Total"
                },
                "snakeCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL",
                  "safeName": "TOTAL"
                }
              },
              "wireValue": "total"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "done",
                "camelCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "pascalCase": {
                  "unsafeName": "Done",
                  "safeName": "Done"
                },
                "snakeCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DONE",
                  "safeName": "DONE"
                }
              },
              "wireValue": "done"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FileUploadInfoSuccessStatus": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoSuccessStatus",
            "camelCase": {
              "unsafeName": "fileUploadInfoSuccessStatus",
              "safeName": "fileUploadInfoSuccessStatus"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoSuccessStatus",
              "safeName": "FileUploadInfoSuccessStatus"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_success_status",
              "safeName": "file_upload_info_success_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_SUCCESS_STATUS",
              "safeName": "FILE_UPLOAD_INFO_SUCCESS_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "uuid",
                "camelCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                },
                "snakeCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "file_id",
                "camelCase": {
                  "unsafeName": "fileID",
                  "safeName": "fileID"
                },
                "pascalCase": {
                  "unsafeName": "FileID",
                  "safeName": "FileID"
                },
                "snakeCase": {
                  "unsafeName": "file_id",
                  "safeName": "file_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILE_ID",
                  "safeName": "FILE_ID"
                }
              },
              "wireValue": "file_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                }
              },
              "wireValue": "size"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total",
                "camelCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "pascalCase": {
                  "unsafeName": "Total",
                  "safeName": "Total"
                },
                "snakeCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL",
                  "safeName": "TOTAL"
                }
              },
              "wireValue": "total"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "done",
                "camelCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "pascalCase": {
                  "unsafeName": "Done",
                  "safeName": "Done"
                },
                "snakeCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DONE",
                  "safeName": "DONE"
                }
              },
              "wireValue": "done"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "original_filename",
                "camelCase": {
                  "unsafeName": "originalFilename",
                  "safeName": "originalFilename"
                },
                "pascalCase": {
                  "unsafeName": "OriginalFilename",
                  "safeName": "OriginalFilename"
                },
                "snakeCase": {
                  "unsafeName": "original_filename",
                  "safeName": "original_filename"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_FILENAME",
                  "safeName": "ORIGINAL_FILENAME"
                }
              },
              "wireValue": "original_filename"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "filename",
                "camelCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "pascalCase": {
                  "unsafeName": "Filename",
                  "safeName": "Filename"
                },
                "snakeCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILENAME",
                  "safeName": "FILENAME"
                }
              },
              "wireValue": "filename"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "mime_type",
                "camelCase": {
                  "unsafeName": "mimeType",
                  "safeName": "mimeType"
                },
                "pascalCase": {
                  "unsafeName": "MimeType",
                  "safeName": "MimeType"
                },
                "snakeCase": {
                  "unsafeName": "mime_type",
                  "safeName": "mime_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MIME_TYPE",
                  "safeName": "MIME_TYPE"
                }
              },
              "wireValue": "mime_type"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image_info",
                "camelCase": {
                  "unsafeName": "imageInfo",
                  "safeName": "imageInfo"
                },
                "pascalCase": {
                  "unsafeName": "ImageInfo",
                  "safeName": "ImageInfo"
                },
                "snakeCase": {
                  "unsafeName": "image_info",
                  "safeName": "image_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_INFO",
                  "safeName": "IMAGE_INFO"
                }
              },
              "wireValue": "image_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:ImageInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "video_info",
                "camelCase": {
                  "unsafeName": "videoInfo",
                  "safeName": "videoInfo"
                },
                "pascalCase": {
                  "unsafeName": "VideoInfo",
                  "safeName": "VideoInfo"
                },
                "snakeCase": {
                  "unsafeName": "video_info",
                  "safeName": "video_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VIDEO_INFO",
                  "safeName": "VIDEO_INFO"
                }
              },
              "wireValue": "video_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:LegacyVideoInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_info",
                "camelCase": {
                  "unsafeName": "contentInfo",
                  "safeName": "contentInfo"
                },
                "pascalCase": {
                  "unsafeName": "ContentInfo",
                  "safeName": "ContentInfo"
                },
                "snakeCase": {
                  "unsafeName": "content_info",
                  "safeName": "content_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_INFO",
                  "safeName": "CONTENT_INFO"
                }
              },
              "wireValue": "content_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:ContentInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                }
              },
              "wireValue": "metadata"
            },
            "typeReference": {
              "value": {
                "value": "type_:Metadata",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_image",
                "camelCase": {
                  "unsafeName": "isImage",
                  "safeName": "isImage"
                },
                "pascalCase": {
                  "unsafeName": "IsImage",
                  "safeName": "IsImage"
                },
                "snakeCase": {
                  "unsafeName": "is_image",
                  "safeName": "is_image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_IMAGE",
                  "safeName": "IS_IMAGE"
                }
              },
              "wireValue": "is_image"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_stored",
                "camelCase": {
                  "unsafeName": "isStored",
                  "safeName": "isStored"
                },
                "pascalCase": {
                  "unsafeName": "IsStored",
                  "safeName": "IsStored"
                },
                "snakeCase": {
                  "unsafeName": "is_stored",
                  "safeName": "is_stored"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_STORED",
                  "safeName": "IS_STORED"
                }
              },
              "wireValue": "is_stored"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_ready",
                "camelCase": {
                  "unsafeName": "isReady",
                  "safeName": "isReady"
                },
                "pascalCase": {
                  "unsafeName": "IsReady",
                  "safeName": "IsReady"
                },
                "snakeCase": {
                  "unsafeName": "is_ready",
                  "safeName": "is_ready"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_READY",
                  "safeName": "IS_READY"
                }
              },
              "wireValue": "is_ready"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s3_bucket",
                "camelCase": {
                  "unsafeName": "s3Bucket",
                  "safeName": "s3Bucket"
                },
                "pascalCase": {
                  "unsafeName": "S3Bucket",
                  "safeName": "S3Bucket"
                },
                "snakeCase": {
                  "unsafeName": "s3bucket",
                  "safeName": "s3bucket"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S3BUCKET",
                  "safeName": "S3BUCKET"
                }
              },
              "wireValue": "s3_bucket"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "success",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FileUploadInfoErrorStatus": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoErrorStatus",
            "camelCase": {
              "unsafeName": "fileUploadInfoErrorStatus",
              "safeName": "fileUploadInfoErrorStatus"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoErrorStatus",
              "safeName": "FileUploadInfoErrorStatus"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_error_status",
              "safeName": "file_upload_info_error_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_ERROR_STATUS",
              "safeName": "FILE_UPLOAD_INFO_ERROR_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "error",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                }
              },
              "wireValue": "error"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error_code",
                "camelCase": {
                  "unsafeName": "errorCode",
                  "safeName": "errorCode"
                },
                "pascalCase": {
                  "unsafeName": "ErrorCode",
                  "safeName": "ErrorCode"
                },
                "snakeCase": {
                  "unsafeName": "error_code",
                  "safeName": "error_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR_CODE",
                  "safeName": "ERROR_CODE"
                }
              },
              "wireValue": "error_code"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FileUploadInfoUnknownStatus": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoUnknownStatus",
            "camelCase": {
              "unsafeName": "fileUploadInfoUnknownStatus",
              "safeName": "fileUploadInfoUnknownStatus"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoUnknownStatus",
              "safeName": "FileUploadInfoUnknownStatus"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_unknown_status",
              "safeName": "file_upload_info_unknown_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_UNKNOWN_STATUS",
              "safeName": "FILE_UPLOAD_INFO_UNKNOWN_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "unknown",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FileUploadInfoFromUrl": {
        "declaration": {
          "name": {
            "originalName": "FileUploadInfoFromUrl",
            "camelCase": {
              "unsafeName": "fileUploadInfoFromURL",
              "safeName": "fileUploadInfoFromURL"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfoFromURL",
              "safeName": "FileUploadInfoFromURL"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info_from_url",
              "safeName": "file_upload_info_from_url"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO_FROM_URL",
              "safeName": "FILE_UPLOAD_INFO_FROM_URL"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "uuid",
                "camelCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "pascalCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                },
                "snakeCase": {
                  "unsafeName": "uuid",
                  "safeName": "uuid"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UUID",
                  "safeName": "UUID"
                }
              },
              "wireValue": "uuid"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "file_id",
                "camelCase": {
                  "unsafeName": "fileID",
                  "safeName": "fileID"
                },
                "pascalCase": {
                  "unsafeName": "FileID",
                  "safeName": "FileID"
                },
                "snakeCase": {
                  "unsafeName": "file_id",
                  "safeName": "file_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILE_ID",
                  "safeName": "FILE_ID"
                }
              },
              "wireValue": "file_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "size",
                "camelCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "pascalCase": {
                  "unsafeName": "Size",
                  "safeName": "Size"
                },
                "snakeCase": {
                  "unsafeName": "size",
                  "safeName": "size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SIZE",
                  "safeName": "SIZE"
                }
              },
              "wireValue": "size"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total",
                "camelCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "pascalCase": {
                  "unsafeName": "Total",
                  "safeName": "Total"
                },
                "snakeCase": {
                  "unsafeName": "total",
                  "safeName": "total"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL",
                  "safeName": "TOTAL"
                }
              },
              "wireValue": "total"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "done",
                "camelCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "pascalCase": {
                  "unsafeName": "Done",
                  "safeName": "Done"
                },
                "snakeCase": {
                  "unsafeName": "done",
                  "safeName": "done"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DONE",
                  "safeName": "DONE"
                }
              },
              "wireValue": "done"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "original_filename",
                "camelCase": {
                  "unsafeName": "originalFilename",
                  "safeName": "originalFilename"
                },
                "pascalCase": {
                  "unsafeName": "OriginalFilename",
                  "safeName": "OriginalFilename"
                },
                "snakeCase": {
                  "unsafeName": "original_filename",
                  "safeName": "original_filename"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIGINAL_FILENAME",
                  "safeName": "ORIGINAL_FILENAME"
                }
              },
              "wireValue": "original_filename"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "filename",
                "camelCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "pascalCase": {
                  "unsafeName": "Filename",
                  "safeName": "Filename"
                },
                "snakeCase": {
                  "unsafeName": "filename",
                  "safeName": "filename"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILENAME",
                  "safeName": "FILENAME"
                }
              },
              "wireValue": "filename"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "mime_type",
                "camelCase": {
                  "unsafeName": "mimeType",
                  "safeName": "mimeType"
                },
                "pascalCase": {
                  "unsafeName": "MimeType",
                  "safeName": "MimeType"
                },
                "snakeCase": {
                  "unsafeName": "mime_type",
                  "safeName": "mime_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MIME_TYPE",
                  "safeName": "MIME_TYPE"
                }
              },
              "wireValue": "mime_type"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image_info",
                "camelCase": {
                  "unsafeName": "imageInfo",
                  "safeName": "imageInfo"
                },
                "pascalCase": {
                  "unsafeName": "ImageInfo",
                  "safeName": "ImageInfo"
                },
                "snakeCase": {
                  "unsafeName": "image_info",
                  "safeName": "image_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE_INFO",
                  "safeName": "IMAGE_INFO"
                }
              },
              "wireValue": "image_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:ImageInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "video_info",
                "camelCase": {
                  "unsafeName": "videoInfo",
                  "safeName": "videoInfo"
                },
                "pascalCase": {
                  "unsafeName": "VideoInfo",
                  "safeName": "VideoInfo"
                },
                "snakeCase": {
                  "unsafeName": "video_info",
                  "safeName": "video_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VIDEO_INFO",
                  "safeName": "VIDEO_INFO"
                }
              },
              "wireValue": "video_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:LegacyVideoInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_info",
                "camelCase": {
                  "unsafeName": "contentInfo",
                  "safeName": "contentInfo"
                },
                "pascalCase": {
                  "unsafeName": "ContentInfo",
                  "safeName": "ContentInfo"
                },
                "snakeCase": {
                  "unsafeName": "content_info",
                  "safeName": "content_info"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_INFO",
                  "safeName": "CONTENT_INFO"
                }
              },
              "wireValue": "content_info"
            },
            "typeReference": {
              "value": {
                "value": "type_:ContentInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "metadata",
                "camelCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "pascalCase": {
                  "unsafeName": "Metadata",
                  "safeName": "Metadata"
                },
                "snakeCase": {
                  "unsafeName": "metadata",
                  "safeName": "metadata"
                },
                "screamingSnakeCase": {
                  "unsafeName": "METADATA",
                  "safeName": "METADATA"
                }
              },
              "wireValue": "metadata"
            },
            "typeReference": {
              "value": {
                "value": "type_:Metadata",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_image",
                "camelCase": {
                  "unsafeName": "isImage",
                  "safeName": "isImage"
                },
                "pascalCase": {
                  "unsafeName": "IsImage",
                  "safeName": "IsImage"
                },
                "snakeCase": {
                  "unsafeName": "is_image",
                  "safeName": "is_image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_IMAGE",
                  "safeName": "IS_IMAGE"
                }
              },
              "wireValue": "is_image"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_stored",
                "camelCase": {
                  "unsafeName": "isStored",
                  "safeName": "isStored"
                },
                "pascalCase": {
                  "unsafeName": "IsStored",
                  "safeName": "IsStored"
                },
                "snakeCase": {
                  "unsafeName": "is_stored",
                  "safeName": "is_stored"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_STORED",
                  "safeName": "IS_STORED"
                }
              },
              "wireValue": "is_stored"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "is_ready",
                "camelCase": {
                  "unsafeName": "isReady",
                  "safeName": "isReady"
                },
                "pascalCase": {
                  "unsafeName": "IsReady",
                  "safeName": "IsReady"
                },
                "snakeCase": {
                  "unsafeName": "is_ready",
                  "safeName": "is_ready"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IS_READY",
                  "safeName": "IS_READY"
                }
              },
              "wireValue": "is_ready"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "s3_bucket",
                "camelCase": {
                  "unsafeName": "s3Bucket",
                  "safeName": "s3Bucket"
                },
                "pascalCase": {
                  "unsafeName": "S3Bucket",
                  "safeName": "S3Bucket"
                },
                "snakeCase": {
                  "unsafeName": "s3bucket",
                  "safeName": "s3bucket"
                },
                "screamingSnakeCase": {
                  "unsafeName": "S3BUCKET",
                  "safeName": "S3BUCKET"
                }
              },
              "wireValue": "s3_bucket"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                }
              },
              "wireValue": "type"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "file_info",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FromUrlUploadResponseSchema": {
        "declaration": {
          "name": {
            "originalName": "FromUrlUploadResponseSchema",
            "camelCase": {
              "unsafeName": "fromURLUploadResponseSchema",
              "safeName": "fromURLUploadResponseSchema"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadResponseSchema",
              "safeName": "FromURLUploadResponseSchema"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_response_schema",
              "safeName": "from_url_upload_response_schema"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_RESPONSE_SCHEMA",
              "safeName": "FROM_URL_UPLOAD_RESPONSE_SCHEMA"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                }
              },
              "wireValue": "type"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "token",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "token",
                "camelCase": {
                  "unsafeName": "token",
                  "safeName": "token"
                },
                "pascalCase": {
                  "unsafeName": "Token",
                  "safeName": "Token"
                },
                "snakeCase": {
                  "unsafeName": "token",
                  "safeName": "token"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN",
                  "safeName": "TOKEN"
                }
              },
              "wireValue": "token"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:GroupInfo": {
        "declaration": {
          "name": {
            "originalName": "GroupInfo",
            "camelCase": {
              "unsafeName": "groupInfo",
              "safeName": "groupInfo"
            },
            "pascalCase": {
              "unsafeName": "GroupInfo",
              "safeName": "GroupInfo"
            },
            "snakeCase": {
              "unsafeName": "group_info",
              "safeName": "group_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "GROUP_INFO",
              "safeName": "GROUP_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "datetime_created",
                "camelCase": {
                  "unsafeName": "datetimeCreated",
                  "safeName": "datetimeCreated"
                },
                "pascalCase": {
                  "unsafeName": "DatetimeCreated",
                  "safeName": "DatetimeCreated"
                },
                "snakeCase": {
                  "unsafeName": "datetime_created",
                  "safeName": "datetime_created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATETIME_CREATED",
                  "safeName": "DATETIME_CREATED"
                }
              },
              "wireValue": "datetime_created"
            },
            "typeReference": {
              "value": {
                "value": "DATE_TIME",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "datetime_stored",
                "camelCase": {
                  "unsafeName": "datetimeStored",
                  "safeName": "datetimeStored"
                },
                "pascalCase": {
                  "unsafeName": "DatetimeStored",
                  "safeName": "DatetimeStored"
                },
                "snakeCase": {
                  "unsafeName": "datetime_stored",
                  "safeName": "datetime_stored"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATETIME_STORED",
                  "safeName": "DATETIME_STORED"
                }
              },
              "wireValue": "datetime_stored"
            },
            "typeReference": {
              "value": {
                "value": "DATE_TIME",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "files_count",
                "camelCase": {
                  "unsafeName": "filesCount",
                  "safeName": "filesCount"
                },
                "pascalCase": {
                  "unsafeName": "FilesCount",
                  "safeName": "FilesCount"
                },
                "snakeCase": {
                  "unsafeName": "files_count",
                  "safeName": "files_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILES_COUNT",
                  "safeName": "FILES_COUNT"
                }
              },
              "wireValue": "files_count"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "cdn_url",
                "camelCase": {
                  "unsafeName": "cdnURL",
                  "safeName": "cdnURL"
                },
                "pascalCase": {
                  "unsafeName": "CdnURL",
                  "safeName": "CdnURL"
                },
                "snakeCase": {
                  "unsafeName": "cdn_url",
                  "safeName": "cdn_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CDN_URL",
                  "safeName": "CDN_URL"
                }
              },
              "wireValue": "cdn_url"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "url",
                "camelCase": {
                  "unsafeName": "url",
                  "safeName": "url"
                },
                "pascalCase": {
                  "unsafeName": "URL",
                  "safeName": "URL"
                },
                "snakeCase": {
                  "unsafeName": "url",
                  "safeName": "url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "URL",
                  "safeName": "URL"
                }
              },
              "wireValue": "url"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "files",
                "camelCase": {
                  "unsafeName": "files",
                  "safeName": "files"
                },
                "pascalCase": {
                  "unsafeName": "Files",
                  "safeName": "Files"
                },
                "snakeCase": {
                  "unsafeName": "files",
                  "safeName": "files"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILES",
                  "safeName": "FILES"
                }
              },
              "wireValue": "files"
            },
            "typeReference": {
              "value": {
                "value": {
                  "type": "unknown"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:MetadataValue": {
        "declaration": {
          "name": {
            "originalName": "MetadataValue",
            "camelCase": {
              "unsafeName": "metadataValue",
              "safeName": "metadataValue"
            },
            "pascalCase": {
              "unsafeName": "MetadataValue",
              "safeName": "MetadataValue"
            },
            "snakeCase": {
              "unsafeName": "metadata_value",
              "safeName": "metadata_value"
            },
            "screamingSnakeCase": {
              "unsafeName": "METADATA_VALUE",
              "safeName": "METADATA_VALUE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:AutoStoreDisabledError": {
        "declaration": {
          "name": {
            "originalName": "AutoStoreDisabledError",
            "camelCase": {
              "unsafeName": "autoStoreDisabledError",
              "safeName": "autoStoreDisabledError"
            },
            "pascalCase": {
              "unsafeName": "AutoStoreDisabledError",
              "safeName": "AutoStoreDisabledError"
            },
            "snakeCase": {
              "unsafeName": "auto_store_disabled_error",
              "safeName": "auto_store_disabled_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUTO_STORE_DISABLED_ERROR",
              "safeName": "AUTO_STORE_DISABLED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UploadcarePublicKeyRequiredError": {
        "declaration": {
          "name": {
            "originalName": "UploadcarePublicKeyRequiredError",
            "camelCase": {
              "unsafeName": "uploadcarePublicKeyRequiredError",
              "safeName": "uploadcarePublicKeyRequiredError"
            },
            "pascalCase": {
              "unsafeName": "UploadcarePublicKeyRequiredError",
              "safeName": "UploadcarePublicKeyRequiredError"
            },
            "snakeCase": {
              "unsafeName": "uploadcare_public_key_required_error",
              "safeName": "uploadcare_public_key_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPLOADCARE_PUBLIC_KEY_REQUIRED_ERROR",
              "safeName": "UPLOADCARE_PUBLIC_KEY_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:PublicKeyRequiredError": {
        "declaration": {
          "name": {
            "originalName": "PublicKeyRequiredError",
            "camelCase": {
              "unsafeName": "publicKeyRequiredError",
              "safeName": "publicKeyRequiredError"
            },
            "pascalCase": {
              "unsafeName": "PublicKeyRequiredError",
              "safeName": "PublicKeyRequiredError"
            },
            "snakeCase": {
              "unsafeName": "public_key_required_error",
              "safeName": "public_key_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "PUBLIC_KEY_REQUIRED_ERROR",
              "safeName": "PUBLIC_KEY_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UploadcarePublicKeyInvalidError": {
        "declaration": {
          "name": {
            "originalName": "UploadcarePublicKeyInvalidError",
            "camelCase": {
              "unsafeName": "uploadcarePublicKeyInvalidError",
              "safeName": "uploadcarePublicKeyInvalidError"
            },
            "pascalCase": {
              "unsafeName": "UploadcarePublicKeyInvalidError",
              "safeName": "UploadcarePublicKeyInvalidError"
            },
            "snakeCase": {
              "unsafeName": "uploadcare_public_key_invalid_error",
              "safeName": "uploadcare_public_key_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPLOADCARE_PUBLIC_KEY_INVALID_ERROR",
              "safeName": "UPLOADCARE_PUBLIC_KEY_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:PublicKeyInvalidError": {
        "declaration": {
          "name": {
            "originalName": "PublicKeyInvalidError",
            "camelCase": {
              "unsafeName": "publicKeyInvalidError",
              "safeName": "publicKeyInvalidError"
            },
            "pascalCase": {
              "unsafeName": "PublicKeyInvalidError",
              "safeName": "PublicKeyInvalidError"
            },
            "snakeCase": {
              "unsafeName": "public_key_invalid_error",
              "safeName": "public_key_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "PUBLIC_KEY_INVALID_ERROR",
              "safeName": "PUBLIC_KEY_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:ProjectPublicKeyRemovedError": {
        "declaration": {
          "name": {
            "originalName": "ProjectPublicKeyRemovedError",
            "camelCase": {
              "unsafeName": "projectPublicKeyRemovedError",
              "safeName": "projectPublicKeyRemovedError"
            },
            "pascalCase": {
              "unsafeName": "ProjectPublicKeyRemovedError",
              "safeName": "ProjectPublicKeyRemovedError"
            },
            "snakeCase": {
              "unsafeName": "project_public_key_removed_error",
              "safeName": "project_public_key_removed_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "PROJECT_PUBLIC_KEY_REMOVED_ERROR",
              "safeName": "PROJECT_PUBLIC_KEY_REMOVED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:AccountBlockedError": {
        "declaration": {
          "name": {
            "originalName": "AccountBlockedError",
            "camelCase": {
              "unsafeName": "accountBlockedError",
              "safeName": "accountBlockedError"
            },
            "pascalCase": {
              "unsafeName": "AccountBlockedError",
              "safeName": "AccountBlockedError"
            },
            "snakeCase": {
              "unsafeName": "account_blocked_error",
              "safeName": "account_blocked_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "ACCOUNT_BLOCKED_ERROR",
              "safeName": "ACCOUNT_BLOCKED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:AccountUnpaidError": {
        "declaration": {
          "name": {
            "originalName": "AccountUnpaidError",
            "camelCase": {
              "unsafeName": "accountUnpaidError",
              "safeName": "accountUnpaidError"
            },
            "pascalCase": {
              "unsafeName": "AccountUnpaidError",
              "safeName": "AccountUnpaidError"
            },
            "snakeCase": {
              "unsafeName": "account_unpaid_error",
              "safeName": "account_unpaid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "ACCOUNT_UNPAID_ERROR",
              "safeName": "ACCOUNT_UNPAID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UploadFailedError": {
        "declaration": {
          "name": {
            "originalName": "UploadFailedError",
            "camelCase": {
              "unsafeName": "uploadFailedError",
              "safeName": "uploadFailedError"
            },
            "pascalCase": {
              "unsafeName": "UploadFailedError",
              "safeName": "UploadFailedError"
            },
            "snakeCase": {
              "unsafeName": "upload_failed_error",
              "safeName": "upload_failed_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPLOAD_FAILED_ERROR",
              "safeName": "UPLOAD_FAILED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:AccountLimitsExceededError": {
        "declaration": {
          "name": {
            "originalName": "AccountLimitsExceededError",
            "camelCase": {
              "unsafeName": "accountLimitsExceededError",
              "safeName": "accountLimitsExceededError"
            },
            "pascalCase": {
              "unsafeName": "AccountLimitsExceededError",
              "safeName": "AccountLimitsExceededError"
            },
            "snakeCase": {
              "unsafeName": "account_limits_exceeded_error",
              "safeName": "account_limits_exceeded_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "ACCOUNT_LIMITS_EXCEEDED_ERROR",
              "safeName": "ACCOUNT_LIMITS_EXCEEDED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:SignatureExpirationError": {
        "declaration": {
          "name": {
            "originalName": "SignatureExpirationError",
            "camelCase": {
              "unsafeName": "signatureExpirationError",
              "safeName": "signatureExpirationError"
            },
            "pascalCase": {
              "unsafeName": "SignatureExpirationError",
              "safeName": "SignatureExpirationError"
            },
            "snakeCase": {
              "unsafeName": "signature_expiration_error",
              "safeName": "signature_expiration_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGNATURE_EXPIRATION_ERROR",
              "safeName": "SIGNATURE_EXPIRATION_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:SignatureInvalidError": {
        "declaration": {
          "name": {
            "originalName": "SignatureInvalidError",
            "camelCase": {
              "unsafeName": "signatureInvalidError",
              "safeName": "signatureInvalidError"
            },
            "pascalCase": {
              "unsafeName": "SignatureInvalidError",
              "safeName": "SignatureInvalidError"
            },
            "snakeCase": {
              "unsafeName": "signature_invalid_error",
              "safeName": "signature_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGNATURE_INVALID_ERROR",
              "safeName": "SIGNATURE_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:RequestFiledsNumberLimitExceededError": {
        "declaration": {
          "name": {
            "originalName": "RequestFiledsNumberLimitExceededError",
            "camelCase": {
              "unsafeName": "requestFiledsNumberLimitExceededError",
              "safeName": "requestFiledsNumberLimitExceededError"
            },
            "pascalCase": {
              "unsafeName": "RequestFiledsNumberLimitExceededError",
              "safeName": "RequestFiledsNumberLimitExceededError"
            },
            "snakeCase": {
              "unsafeName": "request_fileds_number_limit_exceeded_error",
              "safeName": "request_fileds_number_limit_exceeded_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "REQUEST_FILEDS_NUMBER_LIMIT_EXCEEDED_ERROR",
              "safeName": "REQUEST_FILEDS_NUMBER_LIMIT_EXCEEDED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:PostRequestParserFailedError": {
        "declaration": {
          "name": {
            "originalName": "PostRequestParserFailedError",
            "camelCase": {
              "unsafeName": "postRequestParserFailedError",
              "safeName": "postRequestParserFailedError"
            },
            "pascalCase": {
              "unsafeName": "PostRequestParserFailedError",
              "safeName": "PostRequestParserFailedError"
            },
            "snakeCase": {
              "unsafeName": "post_request_parser_failed_error",
              "safeName": "post_request_parser_failed_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "POST_REQUEST_PARSER_FAILED_ERROR",
              "safeName": "POST_REQUEST_PARSER_FAILED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:NullCharactersForbiddenError": {
        "declaration": {
          "name": {
            "originalName": "NullCharactersForbiddenError",
            "camelCase": {
              "unsafeName": "nullCharactersForbiddenError",
              "safeName": "nullCharactersForbiddenError"
            },
            "pascalCase": {
              "unsafeName": "NullCharactersForbiddenError",
              "safeName": "NullCharactersForbiddenError"
            },
            "snakeCase": {
              "unsafeName": "null_characters_forbidden_error",
              "safeName": "null_characters_forbidden_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "NULL_CHARACTERS_FORBIDDEN_ERROR",
              "safeName": "NULL_CHARACTERS_FORBIDDEN_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataKeyDuplicatedError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataKeyDuplicatedError",
            "camelCase": {
              "unsafeName": "fileMetadataKeyDuplicatedError",
              "safeName": "fileMetadataKeyDuplicatedError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataKeyDuplicatedError",
              "safeName": "FileMetadataKeyDuplicatedError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_key_duplicated_error",
              "safeName": "file_metadata_key_duplicated_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_KEY_DUPLICATED_ERROR",
              "safeName": "FILE_METADATA_KEY_DUPLICATED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataKeyEmptyError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataKeyEmptyError",
            "camelCase": {
              "unsafeName": "fileMetadataKeyEmptyError",
              "safeName": "fileMetadataKeyEmptyError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataKeyEmptyError",
              "safeName": "FileMetadataKeyEmptyError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_key_empty_error",
              "safeName": "file_metadata_key_empty_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_KEY_EMPTY_ERROR",
              "safeName": "FILE_METADATA_KEY_EMPTY_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataKeyForbiddenError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataKeyForbiddenError",
            "camelCase": {
              "unsafeName": "fileMetadataKeyForbiddenError",
              "safeName": "fileMetadataKeyForbiddenError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataKeyForbiddenError",
              "safeName": "FileMetadataKeyForbiddenError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_key_forbidden_error",
              "safeName": "file_metadata_key_forbidden_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_KEY_FORBIDDEN_ERROR",
              "safeName": "FILE_METADATA_KEY_FORBIDDEN_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataKeyLengthTooBigError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataKeyLengthTooBigError",
            "camelCase": {
              "unsafeName": "fileMetadataKeyLengthTooBigError",
              "safeName": "fileMetadataKeyLengthTooBigError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataKeyLengthTooBigError",
              "safeName": "FileMetadataKeyLengthTooBigError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_key_length_too_big_error",
              "safeName": "file_metadata_key_length_too_big_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_KEY_LENGTH_TOO_BIG_ERROR",
              "safeName": "FILE_METADATA_KEY_LENGTH_TOO_BIG_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataValueEmptyError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataValueEmptyError",
            "camelCase": {
              "unsafeName": "fileMetadataValueEmptyError",
              "safeName": "fileMetadataValueEmptyError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataValueEmptyError",
              "safeName": "FileMetadataValueEmptyError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_value_empty_error",
              "safeName": "file_metadata_value_empty_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_VALUE_EMPTY_ERROR",
              "safeName": "FILE_METADATA_VALUE_EMPTY_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataValueForbiddenError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataValueForbiddenError",
            "camelCase": {
              "unsafeName": "fileMetadataValueForbiddenError",
              "safeName": "fileMetadataValueForbiddenError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataValueForbiddenError",
              "safeName": "FileMetadataValueForbiddenError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_value_forbidden_error",
              "safeName": "file_metadata_value_forbidden_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_VALUE_FORBIDDEN_ERROR",
              "safeName": "FILE_METADATA_VALUE_FORBIDDEN_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataValueLengthTooBigError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataValueLengthTooBigError",
            "camelCase": {
              "unsafeName": "fileMetadataValueLengthTooBigError",
              "safeName": "fileMetadataValueLengthTooBigError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataValueLengthTooBigError",
              "safeName": "FileMetadataValueLengthTooBigError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_value_length_too_big_error",
              "safeName": "file_metadata_value_length_too_big_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_VALUE_LENGTH_TOO_BIG_ERROR",
              "safeName": "FILE_METADATA_VALUE_LENGTH_TOO_BIG_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileMetadataKeysNumberTooBigError": {
        "declaration": {
          "name": {
            "originalName": "FileMetadataKeysNumberTooBigError",
            "camelCase": {
              "unsafeName": "fileMetadataKeysNumberTooBigError",
              "safeName": "fileMetadataKeysNumberTooBigError"
            },
            "pascalCase": {
              "unsafeName": "FileMetadataKeysNumberTooBigError",
              "safeName": "FileMetadataKeysNumberTooBigError"
            },
            "snakeCase": {
              "unsafeName": "file_metadata_keys_number_too_big_error",
              "safeName": "file_metadata_keys_number_too_big_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_METADATA_KEYS_NUMBER_TOO_BIG_ERROR",
              "safeName": "FILE_METADATA_KEYS_NUMBER_TOO_BIG_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FilesRequiredError": {
        "declaration": {
          "name": {
            "originalName": "FilesRequiredError",
            "camelCase": {
              "unsafeName": "filesRequiredError",
              "safeName": "filesRequiredError"
            },
            "pascalCase": {
              "unsafeName": "FilesRequiredError",
              "safeName": "FilesRequiredError"
            },
            "snakeCase": {
              "unsafeName": "files_required_error",
              "safeName": "files_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILES_REQUIRED_ERROR",
              "safeName": "FILES_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileSizeLimitExceededError": {
        "declaration": {
          "name": {
            "originalName": "FileSizeLimitExceededError",
            "camelCase": {
              "unsafeName": "fileSizeLimitExceededError",
              "safeName": "fileSizeLimitExceededError"
            },
            "pascalCase": {
              "unsafeName": "FileSizeLimitExceededError",
              "safeName": "FileSizeLimitExceededError"
            },
            "snakeCase": {
              "unsafeName": "file_size_limit_exceeded_error",
              "safeName": "file_size_limit_exceeded_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_SIZE_LIMIT_EXCEEDED_ERROR",
              "safeName": "FILE_SIZE_LIMIT_EXCEEDED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileTypeForbiddenError": {
        "declaration": {
          "name": {
            "originalName": "FileTypeForbiddenError",
            "camelCase": {
              "unsafeName": "fileTypeForbiddenError",
              "safeName": "fileTypeForbiddenError"
            },
            "pascalCase": {
              "unsafeName": "FileTypeForbiddenError",
              "safeName": "FileTypeForbiddenError"
            },
            "snakeCase": {
              "unsafeName": "file_type_forbidden_error",
              "safeName": "file_type_forbidden_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_TYPE_FORBIDDEN_ERROR",
              "safeName": "FILE_TYPE_FORBIDDEN_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileInfectedError": {
        "declaration": {
          "name": {
            "originalName": "FileInfectedError",
            "camelCase": {
              "unsafeName": "fileInfectedError",
              "safeName": "fileInfectedError"
            },
            "pascalCase": {
              "unsafeName": "FileInfectedError",
              "safeName": "FileInfectedError"
            },
            "snakeCase": {
              "unsafeName": "file_infected_error",
              "safeName": "file_infected_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_INFECTED_ERROR",
              "safeName": "FILE_INFECTED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:RequestParamRequiredError": {
        "declaration": {
          "name": {
            "originalName": "RequestParamRequiredError",
            "camelCase": {
              "unsafeName": "requestParamRequiredError",
              "safeName": "requestParamRequiredError"
            },
            "pascalCase": {
              "unsafeName": "RequestParamRequiredError",
              "safeName": "RequestParamRequiredError"
            },
            "snakeCase": {
              "unsafeName": "request_param_required_error",
              "safeName": "request_param_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "REQUEST_PARAM_REQUIRED_ERROR",
              "safeName": "REQUEST_PARAM_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartSizeInvalidError": {
        "declaration": {
          "name": {
            "originalName": "MultipartSizeInvalidError",
            "camelCase": {
              "unsafeName": "multipartSizeInvalidError",
              "safeName": "multipartSizeInvalidError"
            },
            "pascalCase": {
              "unsafeName": "MultipartSizeInvalidError",
              "safeName": "MultipartSizeInvalidError"
            },
            "snakeCase": {
              "unsafeName": "multipart_size_invalid_error",
              "safeName": "multipart_size_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_SIZE_INVALID_ERROR",
              "safeName": "MULTIPART_SIZE_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartFileSizeLimitExceededError": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileSizeLimitExceededError",
            "camelCase": {
              "unsafeName": "multipartFileSizeLimitExceededError",
              "safeName": "multipartFileSizeLimitExceededError"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileSizeLimitExceededError",
              "safeName": "MultipartFileSizeLimitExceededError"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_size_limit_exceeded_error",
              "safeName": "multipart_file_size_limit_exceeded_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_SIZE_LIMIT_EXCEEDED_ERROR",
              "safeName": "MULTIPART_FILE_SIZE_LIMIT_EXCEEDED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartFileSizeTooSmallError": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileSizeTooSmallError",
            "camelCase": {
              "unsafeName": "multipartFileSizeTooSmallError",
              "safeName": "multipartFileSizeTooSmallError"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileSizeTooSmallError",
              "safeName": "MultipartFileSizeTooSmallError"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_size_too_small_error",
              "safeName": "multipart_file_size_too_small_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_SIZE_TOO_SMALL_ERROR",
              "safeName": "MULTIPART_FILE_SIZE_TOO_SMALL_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartPartSizeInvalidError": {
        "declaration": {
          "name": {
            "originalName": "MultipartPartSizeInvalidError",
            "camelCase": {
              "unsafeName": "multipartPartSizeInvalidError",
              "safeName": "multipartPartSizeInvalidError"
            },
            "pascalCase": {
              "unsafeName": "MultipartPartSizeInvalidError",
              "safeName": "MultipartPartSizeInvalidError"
            },
            "snakeCase": {
              "unsafeName": "multipart_part_size_invalid_error",
              "safeName": "multipart_part_size_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_PART_SIZE_INVALID_ERROR",
              "safeName": "MULTIPART_PART_SIZE_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartPartSizeTooSmallError": {
        "declaration": {
          "name": {
            "originalName": "MultipartPartSizeTooSmallError",
            "camelCase": {
              "unsafeName": "multipartPartSizeTooSmallError",
              "safeName": "multipartPartSizeTooSmallError"
            },
            "pascalCase": {
              "unsafeName": "MultipartPartSizeTooSmallError",
              "safeName": "MultipartPartSizeTooSmallError"
            },
            "snakeCase": {
              "unsafeName": "multipart_part_size_too_small_error",
              "safeName": "multipart_part_size_too_small_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_PART_SIZE_TOO_SMALL_ERROR",
              "safeName": "MULTIPART_PART_SIZE_TOO_SMALL_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartPartSizeTooBigError": {
        "declaration": {
          "name": {
            "originalName": "MultipartPartSizeTooBigError",
            "camelCase": {
              "unsafeName": "multipartPartSizeTooBigError",
              "safeName": "multipartPartSizeTooBigError"
            },
            "pascalCase": {
              "unsafeName": "MultipartPartSizeTooBigError",
              "safeName": "MultipartPartSizeTooBigError"
            },
            "snakeCase": {
              "unsafeName": "multipart_part_size_too_big_error",
              "safeName": "multipart_part_size_too_big_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_PART_SIZE_TOO_BIG_ERROR",
              "safeName": "MULTIPART_PART_SIZE_TOO_BIG_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartFileIdRequiredError": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileIdRequiredError",
            "camelCase": {
              "unsafeName": "multipartFileIDRequiredError",
              "safeName": "multipartFileIDRequiredError"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileIDRequiredError",
              "safeName": "MultipartFileIDRequiredError"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_id_required_error",
              "safeName": "multipart_file_id_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_ID_REQUIRED_ERROR",
              "safeName": "MULTIPART_FILE_ID_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartFileAlreadyUploadedError": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileAlreadyUploadedError",
            "camelCase": {
              "unsafeName": "multipartFileAlreadyUploadedError",
              "safeName": "multipartFileAlreadyUploadedError"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileAlreadyUploadedError",
              "safeName": "MultipartFileAlreadyUploadedError"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_already_uploaded_error",
              "safeName": "multipart_file_already_uploaded_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_ALREADY_UPLOADED_ERROR",
              "safeName": "MULTIPART_FILE_ALREADY_UPLOADED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartUploadSizeTooLargeError": {
        "declaration": {
          "name": {
            "originalName": "MultipartUploadSizeTooLargeError",
            "camelCase": {
              "unsafeName": "multipartUploadSizeTooLargeError",
              "safeName": "multipartUploadSizeTooLargeError"
            },
            "pascalCase": {
              "unsafeName": "MultipartUploadSizeTooLargeError",
              "safeName": "MultipartUploadSizeTooLargeError"
            },
            "snakeCase": {
              "unsafeName": "multipart_upload_size_too_large_error",
              "safeName": "multipart_upload_size_too_large_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_UPLOAD_SIZE_TOO_LARGE_ERROR",
              "safeName": "MULTIPART_UPLOAD_SIZE_TOO_LARGE_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartUploadSizeTooSmallError": {
        "declaration": {
          "name": {
            "originalName": "MultipartUploadSizeTooSmallError",
            "camelCase": {
              "unsafeName": "multipartUploadSizeTooSmallError",
              "safeName": "multipartUploadSizeTooSmallError"
            },
            "pascalCase": {
              "unsafeName": "MultipartUploadSizeTooSmallError",
              "safeName": "MultipartUploadSizeTooSmallError"
            },
            "snakeCase": {
              "unsafeName": "multipart_upload_size_too_small_error",
              "safeName": "multipart_upload_size_too_small_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_UPLOAD_SIZE_TOO_SMALL_ERROR",
              "safeName": "MULTIPART_UPLOAD_SIZE_TOO_SMALL_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:MultipartFileCompletionFailedError": {
        "declaration": {
          "name": {
            "originalName": "MultipartFileCompletionFailedError",
            "camelCase": {
              "unsafeName": "multipartFileCompletionFailedError",
              "safeName": "multipartFileCompletionFailedError"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileCompletionFailedError",
              "safeName": "MultipartFileCompletionFailedError"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_completion_failed_error",
              "safeName": "multipart_file_completion_failed_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_COMPLETION_FAILED_ERROR",
              "safeName": "MULTIPART_FILE_COMPLETION_FAILED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UuidInvalidError": {
        "declaration": {
          "name": {
            "originalName": "UuidInvalidError",
            "camelCase": {
              "unsafeName": "uuidInvalidError",
              "safeName": "uuidInvalidError"
            },
            "pascalCase": {
              "unsafeName": "UUIDInvalidError",
              "safeName": "UUIDInvalidError"
            },
            "snakeCase": {
              "unsafeName": "uuid_invalid_error",
              "safeName": "uuid_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "UUID_INVALID_ERROR",
              "safeName": "UUID_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:SourceUrlRequiredError": {
        "declaration": {
          "name": {
            "originalName": "SourceUrlRequiredError",
            "camelCase": {
              "unsafeName": "sourceURLRequiredError",
              "safeName": "sourceURLRequiredError"
            },
            "pascalCase": {
              "unsafeName": "SourceURLRequiredError",
              "safeName": "SourceURLRequiredError"
            },
            "snakeCase": {
              "unsafeName": "source_url_required_error",
              "safeName": "source_url_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "SOURCE_URL_REQUIRED_ERROR",
              "safeName": "SOURCE_URL_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UrlParsingFailedError": {
        "declaration": {
          "name": {
            "originalName": "UrlParsingFailedError",
            "camelCase": {
              "unsafeName": "urlParsingFailedError",
              "safeName": "urlParsingFailedError"
            },
            "pascalCase": {
              "unsafeName": "URLParsingFailedError",
              "safeName": "URLParsingFailedError"
            },
            "snakeCase": {
              "unsafeName": "url_parsing_failed_error",
              "safeName": "url_parsing_failed_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "URL_PARSING_FAILED_ERROR",
              "safeName": "URL_PARSING_FAILED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UrlSchemeRequiredError": {
        "declaration": {
          "name": {
            "originalName": "UrlSchemeRequiredError",
            "camelCase": {
              "unsafeName": "urlSchemeRequiredError",
              "safeName": "urlSchemeRequiredError"
            },
            "pascalCase": {
              "unsafeName": "URLSchemeRequiredError",
              "safeName": "URLSchemeRequiredError"
            },
            "snakeCase": {
              "unsafeName": "url_scheme_required_error",
              "safeName": "url_scheme_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "URL_SCHEME_REQUIRED_ERROR",
              "safeName": "URL_SCHEME_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UrlSchemeInvalidError": {
        "declaration": {
          "name": {
            "originalName": "UrlSchemeInvalidError",
            "camelCase": {
              "unsafeName": "urlSchemeInvalidError",
              "safeName": "urlSchemeInvalidError"
            },
            "pascalCase": {
              "unsafeName": "URLSchemeInvalidError",
              "safeName": "URLSchemeInvalidError"
            },
            "snakeCase": {
              "unsafeName": "url_scheme_invalid_error",
              "safeName": "url_scheme_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "URL_SCHEME_INVALID_ERROR",
              "safeName": "URL_SCHEME_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UrlHostRequiredError": {
        "declaration": {
          "name": {
            "originalName": "UrlHostRequiredError",
            "camelCase": {
              "unsafeName": "urlHostRequiredError",
              "safeName": "urlHostRequiredError"
            },
            "pascalCase": {
              "unsafeName": "URLHostRequiredError",
              "safeName": "URLHostRequiredError"
            },
            "snakeCase": {
              "unsafeName": "url_host_required_error",
              "safeName": "url_host_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "URL_HOST_REQUIRED_ERROR",
              "safeName": "URL_HOST_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UrlBlacklistedError": {
        "declaration": {
          "name": {
            "originalName": "UrlBlacklistedError",
            "camelCase": {
              "unsafeName": "urlBlacklistedError",
              "safeName": "urlBlacklistedError"
            },
            "pascalCase": {
              "unsafeName": "URLBlacklistedError",
              "safeName": "URLBlacklistedError"
            },
            "snakeCase": {
              "unsafeName": "url_blacklisted_error",
              "safeName": "url_blacklisted_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "URL_BLACKLISTED_ERROR",
              "safeName": "URL_BLACKLISTED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:HostnameNotFoundError": {
        "declaration": {
          "name": {
            "originalName": "HostnameNotFoundError",
            "camelCase": {
              "unsafeName": "hostnameNotFoundError",
              "safeName": "hostnameNotFoundError"
            },
            "pascalCase": {
              "unsafeName": "HostnameNotFoundError",
              "safeName": "HostnameNotFoundError"
            },
            "snakeCase": {
              "unsafeName": "hostname_not_found_error",
              "safeName": "hostname_not_found_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "HOSTNAME_NOT_FOUND_ERROR",
              "safeName": "HOSTNAME_NOT_FOUND_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UrlHostMalformedError": {
        "declaration": {
          "name": {
            "originalName": "UrlHostMalformedError",
            "camelCase": {
              "unsafeName": "urlHostMalformedError",
              "safeName": "urlHostMalformedError"
            },
            "pascalCase": {
              "unsafeName": "URLHostMalformedError",
              "safeName": "URLHostMalformedError"
            },
            "snakeCase": {
              "unsafeName": "url_host_malformed_error",
              "safeName": "url_host_malformed_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "URL_HOST_MALFORMED_ERROR",
              "safeName": "URL_HOST_MALFORMED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:UrlHostPrivateIpForbiddenError": {
        "declaration": {
          "name": {
            "originalName": "UrlHostPrivateIpForbiddenError",
            "camelCase": {
              "unsafeName": "urlHostPrivateIPForbiddenError",
              "safeName": "urlHostPrivateIPForbiddenError"
            },
            "pascalCase": {
              "unsafeName": "URLHostPrivateIPForbiddenError",
              "safeName": "URLHostPrivateIPForbiddenError"
            },
            "snakeCase": {
              "unsafeName": "url_host_private_ip_forbidden_error",
              "safeName": "url_host_private_ip_forbidden_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "URL_HOST_PRIVATE_IP_FORBIDDEN_ERROR",
              "safeName": "URL_HOST_PRIVATE_IP_FORBIDDEN_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:TokenRequiredError": {
        "declaration": {
          "name": {
            "originalName": "TokenRequiredError",
            "camelCase": {
              "unsafeName": "tokenRequiredError",
              "safeName": "tokenRequiredError"
            },
            "pascalCase": {
              "unsafeName": "TokenRequiredError",
              "safeName": "TokenRequiredError"
            },
            "snakeCase": {
              "unsafeName": "token_required_error",
              "safeName": "token_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "TOKEN_REQUIRED_ERROR",
              "safeName": "TOKEN_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileIdRequiredError": {
        "declaration": {
          "name": {
            "originalName": "FileIdRequiredError",
            "camelCase": {
              "unsafeName": "fileIDRequiredError",
              "safeName": "fileIDRequiredError"
            },
            "pascalCase": {
              "unsafeName": "FileIDRequiredError",
              "safeName": "FileIDRequiredError"
            },
            "snakeCase": {
              "unsafeName": "file_id_required_error",
              "safeName": "file_id_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_ID_REQUIRED_ERROR",
              "safeName": "FILE_ID_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileIdInvalidError": {
        "declaration": {
          "name": {
            "originalName": "FileIdInvalidError",
            "camelCase": {
              "unsafeName": "fileIDInvalidError",
              "safeName": "fileIDInvalidError"
            },
            "pascalCase": {
              "unsafeName": "FileIDInvalidError",
              "safeName": "FileIDInvalidError"
            },
            "snakeCase": {
              "unsafeName": "file_id_invalid_error",
              "safeName": "file_id_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_ID_INVALID_ERROR",
              "safeName": "FILE_ID_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:FileNotFoundError": {
        "declaration": {
          "name": {
            "originalName": "FileNotFoundError",
            "camelCase": {
              "unsafeName": "fileNotFoundError",
              "safeName": "fileNotFoundError"
            },
            "pascalCase": {
              "unsafeName": "FileNotFoundError",
              "safeName": "FileNotFoundError"
            },
            "snakeCase": {
              "unsafeName": "file_not_found_error",
              "safeName": "file_not_found_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_NOT_FOUND_ERROR",
              "safeName": "FILE_NOT_FOUND_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:GroupFilesInvalidError": {
        "declaration": {
          "name": {
            "originalName": "GroupFilesInvalidError",
            "camelCase": {
              "unsafeName": "groupFilesInvalidError",
              "safeName": "groupFilesInvalidError"
            },
            "pascalCase": {
              "unsafeName": "GroupFilesInvalidError",
              "safeName": "GroupFilesInvalidError"
            },
            "snakeCase": {
              "unsafeName": "group_files_invalid_error",
              "safeName": "group_files_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "GROUP_FILES_INVALID_ERROR",
              "safeName": "GROUP_FILES_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:GroupFileUrlParsingFailedError": {
        "declaration": {
          "name": {
            "originalName": "GroupFileUrlParsingFailedError",
            "camelCase": {
              "unsafeName": "groupFileURLParsingFailedError",
              "safeName": "groupFileURLParsingFailedError"
            },
            "pascalCase": {
              "unsafeName": "GroupFileURLParsingFailedError",
              "safeName": "GroupFileURLParsingFailedError"
            },
            "snakeCase": {
              "unsafeName": "group_file_url_parsing_failed_error",
              "safeName": "group_file_url_parsing_failed_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "GROUP_FILE_URL_PARSING_FAILED_ERROR",
              "safeName": "GROUP_FILE_URL_PARSING_FAILED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:GroupFilesNotFoundError": {
        "declaration": {
          "name": {
            "originalName": "GroupFilesNotFoundError",
            "camelCase": {
              "unsafeName": "groupFilesNotFoundError",
              "safeName": "groupFilesNotFoundError"
            },
            "pascalCase": {
              "unsafeName": "GroupFilesNotFoundError",
              "safeName": "GroupFilesNotFoundError"
            },
            "snakeCase": {
              "unsafeName": "group_files_not_found_error",
              "safeName": "group_files_not_found_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "GROUP_FILES_NOT_FOUND_ERROR",
              "safeName": "GROUP_FILES_NOT_FOUND_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:GroupIdRequiredError": {
        "declaration": {
          "name": {
            "originalName": "GroupIdRequiredError",
            "camelCase": {
              "unsafeName": "groupIDRequiredError",
              "safeName": "groupIDRequiredError"
            },
            "pascalCase": {
              "unsafeName": "GroupIDRequiredError",
              "safeName": "GroupIDRequiredError"
            },
            "snakeCase": {
              "unsafeName": "group_id_required_error",
              "safeName": "group_id_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "GROUP_ID_REQUIRED_ERROR",
              "safeName": "GROUP_ID_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:GroupNotFoundError": {
        "declaration": {
          "name": {
            "originalName": "GroupNotFoundError",
            "camelCase": {
              "unsafeName": "groupNotFoundError",
              "safeName": "groupNotFoundError"
            },
            "pascalCase": {
              "unsafeName": "GroupNotFoundError",
              "safeName": "GroupNotFoundError"
            },
            "snakeCase": {
              "unsafeName": "group_not_found_error",
              "safeName": "group_not_found_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "GROUP_NOT_FOUND_ERROR",
              "safeName": "GROUP_NOT_FOUND_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:SignatureRequiredError": {
        "declaration": {
          "name": {
            "originalName": "SignatureRequiredError",
            "camelCase": {
              "unsafeName": "signatureRequiredError",
              "safeName": "signatureRequiredError"
            },
            "pascalCase": {
              "unsafeName": "SignatureRequiredError",
              "safeName": "SignatureRequiredError"
            },
            "snakeCase": {
              "unsafeName": "signature_required_error",
              "safeName": "signature_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGNATURE_REQUIRED_ERROR",
              "safeName": "SIGNATURE_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:SignatureExpirationRequiredError": {
        "declaration": {
          "name": {
            "originalName": "SignatureExpirationRequiredError",
            "camelCase": {
              "unsafeName": "signatureExpirationRequiredError",
              "safeName": "signatureExpirationRequiredError"
            },
            "pascalCase": {
              "unsafeName": "SignatureExpirationRequiredError",
              "safeName": "SignatureExpirationRequiredError"
            },
            "snakeCase": {
              "unsafeName": "signature_expiration_required_error",
              "safeName": "signature_expiration_required_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGNATURE_EXPIRATION_REQUIRED_ERROR",
              "safeName": "SIGNATURE_EXPIRATION_REQUIRED_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:SignatureExpirationInvalidError": {
        "declaration": {
          "name": {
            "originalName": "SignatureExpirationInvalidError",
            "camelCase": {
              "unsafeName": "signatureExpirationInvalidError",
              "safeName": "signatureExpirationInvalidError"
            },
            "pascalCase": {
              "unsafeName": "SignatureExpirationInvalidError",
              "safeName": "SignatureExpirationInvalidError"
            },
            "snakeCase": {
              "unsafeName": "signature_expiration_invalid_error",
              "safeName": "signature_expiration_invalid_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "SIGNATURE_EXPIRATION_INVALID_ERROR",
              "safeName": "SIGNATURE_EXPIRATION_INVALID_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        },
        "type": "alias"
      },
      "type_:ImageInfoColorMode": {
        "declaration": {
          "name": {
            "originalName": "ImageInfoColorMode",
            "camelCase": {
              "unsafeName": "imageInfoColorMode",
              "safeName": "imageInfoColorMode"
            },
            "pascalCase": {
              "unsafeName": "ImageInfoColorMode",
              "safeName": "ImageInfoColorMode"
            },
            "snakeCase": {
              "unsafeName": "image_info_color_mode",
              "safeName": "image_info_color_mode"
            },
            "screamingSnakeCase": {
              "unsafeName": "IMAGE_INFO_COLOR_MODE",
              "safeName": "IMAGE_INFO_COLOR_MODE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "RGB",
              "camelCase": {
                "unsafeName": "rgb",
                "safeName": "rgb"
              },
              "pascalCase": {
                "unsafeName": "Rgb",
                "safeName": "Rgb"
              },
              "snakeCase": {
                "unsafeName": "rgb",
                "safeName": "rgb"
              },
              "screamingSnakeCase": {
                "unsafeName": "RGB",
                "safeName": "RGB"
              }
            },
            "wireValue": "RGB"
          },
          {
            "name": {
              "originalName": "RGBA",
              "camelCase": {
                "unsafeName": "rgba",
                "safeName": "rgba"
              },
              "pascalCase": {
                "unsafeName": "Rgba",
                "safeName": "Rgba"
              },
              "snakeCase": {
                "unsafeName": "rgba",
                "safeName": "rgba"
              },
              "screamingSnakeCase": {
                "unsafeName": "RGBA",
                "safeName": "RGBA"
              }
            },
            "wireValue": "RGBA"
          },
          {
            "name": {
              "originalName": "RGBX",
              "camelCase": {
                "unsafeName": "rgbx",
                "safeName": "rgbx"
              },
              "pascalCase": {
                "unsafeName": "Rgbx",
                "safeName": "Rgbx"
              },
              "snakeCase": {
                "unsafeName": "rgbx",
                "safeName": "rgbx"
              },
              "screamingSnakeCase": {
                "unsafeName": "RGBX",
                "safeName": "RGBX"
              }
            },
            "wireValue": "RGBX"
          },
          {
            "name": {
              "originalName": "L",
              "camelCase": {
                "unsafeName": "l",
                "safeName": "l"
              },
              "pascalCase": {
                "unsafeName": "L",
                "safeName": "L"
              },
              "snakeCase": {
                "unsafeName": "l",
                "safeName": "l"
              },
              "screamingSnakeCase": {
                "unsafeName": "L",
                "safeName": "L"
              }
            },
            "wireValue": "L"
          },
          {
            "name": {
              "originalName": "LA",
              "camelCase": {
                "unsafeName": "la",
                "safeName": "la"
              },
              "pascalCase": {
                "unsafeName": "La",
                "safeName": "La"
              },
              "snakeCase": {
                "unsafeName": "la",
                "safeName": "la"
              },
              "screamingSnakeCase": {
                "unsafeName": "LA",
                "safeName": "LA"
              }
            },
            "wireValue": "LA"
          },
          {
            "name": {
              "originalName": "P",
              "camelCase": {
                "unsafeName": "p",
                "safeName": "p"
              },
              "pascalCase": {
                "unsafeName": "P",
                "safeName": "P"
              },
              "snakeCase": {
                "unsafeName": "p",
                "safeName": "p"
              },
              "screamingSnakeCase": {
                "unsafeName": "P",
                "safeName": "P"
              }
            },
            "wireValue": "P"
          },
          {
            "name": {
              "originalName": "PA",
              "camelCase": {
                "unsafeName": "pa",
                "safeName": "pa"
              },
              "pascalCase": {
                "unsafeName": "Pa",
                "safeName": "Pa"
              },
              "snakeCase": {
                "unsafeName": "pa",
                "safeName": "pa"
              },
              "screamingSnakeCase": {
                "unsafeName": "PA",
                "safeName": "PA"
              }
            },
            "wireValue": "PA"
          },
          {
            "name": {
              "originalName": "CMYK",
              "camelCase": {
                "unsafeName": "cmyk",
                "safeName": "cmyk"
              },
              "pascalCase": {
                "unsafeName": "Cmyk",
                "safeName": "Cmyk"
              },
              "snakeCase": {
                "unsafeName": "cmyk",
                "safeName": "cmyk"
              },
              "screamingSnakeCase": {
                "unsafeName": "CMYK",
                "safeName": "CMYK"
              }
            },
            "wireValue": "CMYK"
          },
          {
            "name": {
              "originalName": "YCbCr",
              "camelCase": {
                "unsafeName": "yCbCr",
                "safeName": "yCbCr"
              },
              "pascalCase": {
                "unsafeName": "YCbCr",
                "safeName": "YCbCr"
              },
              "snakeCase": {
                "unsafeName": "y_cb_cr",
                "safeName": "y_cb_cr"
              },
              "screamingSnakeCase": {
                "unsafeName": "Y_CB_CR",
                "safeName": "Y_CB_CR"
              }
            },
            "wireValue": "YCbCr"
          },
          {
            "name": {
              "originalName": "HSV",
              "camelCase": {
                "unsafeName": "hsv",
                "safeName": "hsv"
              },
              "pascalCase": {
                "unsafeName": "Hsv",
                "safeName": "Hsv"
              },
              "snakeCase": {
                "unsafeName": "hsv",
                "safeName": "hsv"
              },
              "screamingSnakeCase": {
                "unsafeName": "HSV",
                "safeName": "HSV"
              }
            },
            "wireValue": "HSV"
          },
          {
            "name": {
              "originalName": "LAB",
              "camelCase": {
                "unsafeName": "lab",
                "safeName": "lab"
              },
              "pascalCase": {
                "unsafeName": "Lab",
                "safeName": "Lab"
              },
              "snakeCase": {
                "unsafeName": "lab",
                "safeName": "lab"
              },
              "screamingSnakeCase": {
                "unsafeName": "LAB",
                "safeName": "LAB"
              }
            },
            "wireValue": "LAB"
          }
        ],
        "type": "enum"
      },
      "type_:ImageInfoGeoLocation": {
        "declaration": {
          "name": {
            "originalName": "ImageInfoGeoLocation",
            "camelCase": {
              "unsafeName": "imageInfoGeoLocation",
              "safeName": "imageInfoGeoLocation"
            },
            "pascalCase": {
              "unsafeName": "ImageInfoGeoLocation",
              "safeName": "ImageInfoGeoLocation"
            },
            "snakeCase": {
              "unsafeName": "image_info_geo_location",
              "safeName": "image_info_geo_location"
            },
            "screamingSnakeCase": {
              "unsafeName": "IMAGE_INFO_GEO_LOCATION",
              "safeName": "IMAGE_INFO_GEO_LOCATION"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "latitude",
                "camelCase": {
                  "unsafeName": "latitude",
                  "safeName": "latitude"
                },
                "pascalCase": {
                  "unsafeName": "Latitude",
                  "safeName": "Latitude"
                },
                "snakeCase": {
                  "unsafeName": "latitude",
                  "safeName": "latitude"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATITUDE",
                  "safeName": "LATITUDE"
                }
              },
              "wireValue": "latitude"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "longitude",
                "camelCase": {
                  "unsafeName": "longitude",
                  "safeName": "longitude"
                },
                "pascalCase": {
                  "unsafeName": "Longitude",
                  "safeName": "Longitude"
                },
                "snakeCase": {
                  "unsafeName": "longitude",
                  "safeName": "longitude"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LONGITUDE",
                  "safeName": "LONGITUDE"
                }
              },
              "wireValue": "longitude"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:ImageInfo": {
        "declaration": {
          "name": {
            "originalName": "ImageInfo",
            "camelCase": {
              "unsafeName": "imageInfo",
              "safeName": "imageInfo"
            },
            "pascalCase": {
              "unsafeName": "ImageInfo",
              "safeName": "ImageInfo"
            },
            "snakeCase": {
              "unsafeName": "image_info",
              "safeName": "image_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "IMAGE_INFO",
              "safeName": "IMAGE_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "color_mode",
                "camelCase": {
                  "unsafeName": "colorMode",
                  "safeName": "colorMode"
                },
                "pascalCase": {
                  "unsafeName": "ColorMode",
                  "safeName": "ColorMode"
                },
                "snakeCase": {
                  "unsafeName": "color_mode",
                  "safeName": "color_mode"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLOR_MODE",
                  "safeName": "COLOR_MODE"
                }
              },
              "wireValue": "color_mode"
            },
            "typeReference": {
              "value": "type_:ImageInfoColorMode",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "orientation",
                "camelCase": {
                  "unsafeName": "orientation",
                  "safeName": "orientation"
                },
                "pascalCase": {
                  "unsafeName": "Orientation",
                  "safeName": "Orientation"
                },
                "snakeCase": {
                  "unsafeName": "orientation",
                  "safeName": "orientation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIENTATION",
                  "safeName": "ORIENTATION"
                }
              },
              "wireValue": "orientation"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                }
              },
              "wireValue": "format"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sequence",
                "camelCase": {
                  "unsafeName": "sequence",
                  "safeName": "sequence"
                },
                "pascalCase": {
                  "unsafeName": "Sequence",
                  "safeName": "Sequence"
                },
                "snakeCase": {
                  "unsafeName": "sequence",
                  "safeName": "sequence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEQUENCE",
                  "safeName": "SEQUENCE"
                }
              },
              "wireValue": "sequence"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "height",
                "camelCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "pascalCase": {
                  "unsafeName": "Height",
                  "safeName": "Height"
                },
                "snakeCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HEIGHT",
                  "safeName": "HEIGHT"
                }
              },
              "wireValue": "height"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "width",
                "camelCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "pascalCase": {
                  "unsafeName": "Width",
                  "safeName": "Width"
                },
                "snakeCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WIDTH",
                  "safeName": "WIDTH"
                }
              },
              "wireValue": "width"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "geo_location",
                "camelCase": {
                  "unsafeName": "geoLocation",
                  "safeName": "geoLocation"
                },
                "pascalCase": {
                  "unsafeName": "GeoLocation",
                  "safeName": "GeoLocation"
                },
                "snakeCase": {
                  "unsafeName": "geo_location",
                  "safeName": "geo_location"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GEO_LOCATION",
                  "safeName": "GEO_LOCATION"
                }
              },
              "wireValue": "geo_location"
            },
            "typeReference": {
              "value": {
                "value": "type_:ImageInfoGeoLocation",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "datetime_original",
                "camelCase": {
                  "unsafeName": "datetimeOriginal",
                  "safeName": "datetimeOriginal"
                },
                "pascalCase": {
                  "unsafeName": "DatetimeOriginal",
                  "safeName": "DatetimeOriginal"
                },
                "snakeCase": {
                  "unsafeName": "datetime_original",
                  "safeName": "datetime_original"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATETIME_ORIGINAL",
                  "safeName": "DATETIME_ORIGINAL"
                }
              },
              "wireValue": "datetime_original"
            },
            "typeReference": {
              "value": {
                "value": "DATE_TIME",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "dpi",
                "camelCase": {
                  "unsafeName": "dpi",
                  "safeName": "dpi"
                },
                "pascalCase": {
                  "unsafeName": "Dpi",
                  "safeName": "Dpi"
                },
                "snakeCase": {
                  "unsafeName": "dpi",
                  "safeName": "dpi"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DPI",
                  "safeName": "DPI"
                }
              },
              "wireValue": "dpi"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "DOUBLE",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LegacyVideoInfoAudio": {
        "declaration": {
          "name": {
            "originalName": "LegacyVideoInfoAudio",
            "camelCase": {
              "unsafeName": "legacyVideoInfoAudio",
              "safeName": "legacyVideoInfoAudio"
            },
            "pascalCase": {
              "unsafeName": "LegacyVideoInfoAudio",
              "safeName": "LegacyVideoInfoAudio"
            },
            "snakeCase": {
              "unsafeName": "legacy_video_info_audio",
              "safeName": "legacy_video_info_audio"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEGACY_VIDEO_INFO_AUDIO",
              "safeName": "LEGACY_VIDEO_INFO_AUDIO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "bitrate",
                "camelCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "pascalCase": {
                  "unsafeName": "Bitrate",
                  "safeName": "Bitrate"
                },
                "snakeCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BITRATE",
                  "safeName": "BITRATE"
                }
              },
              "wireValue": "bitrate"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "codec",
                "camelCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "pascalCase": {
                  "unsafeName": "Codec",
                  "safeName": "Codec"
                },
                "snakeCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODEC",
                  "safeName": "CODEC"
                }
              },
              "wireValue": "codec"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sample_rate",
                "camelCase": {
                  "unsafeName": "sampleRate",
                  "safeName": "sampleRate"
                },
                "pascalCase": {
                  "unsafeName": "SampleRate",
                  "safeName": "SampleRate"
                },
                "snakeCase": {
                  "unsafeName": "sample_rate",
                  "safeName": "sample_rate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAMPLE_RATE",
                  "safeName": "SAMPLE_RATE"
                }
              },
              "wireValue": "sample_rate"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "channels",
                "camelCase": {
                  "unsafeName": "channels",
                  "safeName": "channels"
                },
                "pascalCase": {
                  "unsafeName": "Channels",
                  "safeName": "Channels"
                },
                "snakeCase": {
                  "unsafeName": "channels",
                  "safeName": "channels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHANNELS",
                  "safeName": "CHANNELS"
                }
              },
              "wireValue": "channels"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LegacyVideoInfoVideo": {
        "declaration": {
          "name": {
            "originalName": "LegacyVideoInfoVideo",
            "camelCase": {
              "unsafeName": "legacyVideoInfoVideo",
              "safeName": "legacyVideoInfoVideo"
            },
            "pascalCase": {
              "unsafeName": "LegacyVideoInfoVideo",
              "safeName": "LegacyVideoInfoVideo"
            },
            "snakeCase": {
              "unsafeName": "legacy_video_info_video",
              "safeName": "legacy_video_info_video"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEGACY_VIDEO_INFO_VIDEO",
              "safeName": "LEGACY_VIDEO_INFO_VIDEO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "height",
                "camelCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "pascalCase": {
                  "unsafeName": "Height",
                  "safeName": "Height"
                },
                "snakeCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HEIGHT",
                  "safeName": "HEIGHT"
                }
              },
              "wireValue": "height"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "width",
                "camelCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "pascalCase": {
                  "unsafeName": "Width",
                  "safeName": "Width"
                },
                "snakeCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WIDTH",
                  "safeName": "WIDTH"
                }
              },
              "wireValue": "width"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "frame_rate",
                "camelCase": {
                  "unsafeName": "frameRate",
                  "safeName": "frameRate"
                },
                "pascalCase": {
                  "unsafeName": "FrameRate",
                  "safeName": "FrameRate"
                },
                "snakeCase": {
                  "unsafeName": "frame_rate",
                  "safeName": "frame_rate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FRAME_RATE",
                  "safeName": "FRAME_RATE"
                }
              },
              "wireValue": "frame_rate"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bitrate",
                "camelCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "pascalCase": {
                  "unsafeName": "Bitrate",
                  "safeName": "Bitrate"
                },
                "snakeCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BITRATE",
                  "safeName": "BITRATE"
                }
              },
              "wireValue": "bitrate"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "codec",
                "camelCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "pascalCase": {
                  "unsafeName": "Codec",
                  "safeName": "Codec"
                },
                "snakeCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODEC",
                  "safeName": "CODEC"
                }
              },
              "wireValue": "codec"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LegacyVideoInfo": {
        "declaration": {
          "name": {
            "originalName": "LegacyVideoInfo",
            "camelCase": {
              "unsafeName": "legacyVideoInfo",
              "safeName": "legacyVideoInfo"
            },
            "pascalCase": {
              "unsafeName": "LegacyVideoInfo",
              "safeName": "LegacyVideoInfo"
            },
            "snakeCase": {
              "unsafeName": "legacy_video_info",
              "safeName": "legacy_video_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEGACY_VIDEO_INFO",
              "safeName": "LEGACY_VIDEO_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "duration",
                "camelCase": {
                  "unsafeName": "duration",
                  "safeName": "duration"
                },
                "pascalCase": {
                  "unsafeName": "Duration",
                  "safeName": "Duration"
                },
                "snakeCase": {
                  "unsafeName": "duration",
                  "safeName": "duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DURATION",
                  "safeName": "DURATION"
                }
              },
              "wireValue": "duration"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                }
              },
              "wireValue": "format"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bitrate",
                "camelCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "pascalCase": {
                  "unsafeName": "Bitrate",
                  "safeName": "Bitrate"
                },
                "snakeCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BITRATE",
                  "safeName": "BITRATE"
                }
              },
              "wireValue": "bitrate"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              },
              "wireValue": "audio"
            },
            "typeReference": {
              "value": {
                "value": "type_:LegacyVideoInfoAudio",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "video",
                "camelCase": {
                  "unsafeName": "video",
                  "safeName": "video"
                },
                "pascalCase": {
                  "unsafeName": "Video",
                  "safeName": "Video"
                },
                "snakeCase": {
                  "unsafeName": "video",
                  "safeName": "video"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VIDEO",
                  "safeName": "VIDEO"
                }
              },
              "wireValue": "video"
            },
            "typeReference": {
              "value": {
                "value": "type_:LegacyVideoInfoVideo",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SchemasImageInfoColorMode": {
        "declaration": {
          "name": {
            "originalName": "SchemasImageInfoColorMode",
            "camelCase": {
              "unsafeName": "schemasImageInfoColorMode",
              "safeName": "schemasImageInfoColorMode"
            },
            "pascalCase": {
              "unsafeName": "SchemasImageInfoColorMode",
              "safeName": "SchemasImageInfoColorMode"
            },
            "snakeCase": {
              "unsafeName": "schemas_image_info_color_mode",
              "safeName": "schemas_image_info_color_mode"
            },
            "screamingSnakeCase": {
              "unsafeName": "SCHEMAS_IMAGE_INFO_COLOR_MODE",
              "safeName": "SCHEMAS_IMAGE_INFO_COLOR_MODE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "RGB",
              "camelCase": {
                "unsafeName": "rgb",
                "safeName": "rgb"
              },
              "pascalCase": {
                "unsafeName": "Rgb",
                "safeName": "Rgb"
              },
              "snakeCase": {
                "unsafeName": "rgb",
                "safeName": "rgb"
              },
              "screamingSnakeCase": {
                "unsafeName": "RGB",
                "safeName": "RGB"
              }
            },
            "wireValue": "RGB"
          },
          {
            "name": {
              "originalName": "RGBA",
              "camelCase": {
                "unsafeName": "rgba",
                "safeName": "rgba"
              },
              "pascalCase": {
                "unsafeName": "Rgba",
                "safeName": "Rgba"
              },
              "snakeCase": {
                "unsafeName": "rgba",
                "safeName": "rgba"
              },
              "screamingSnakeCase": {
                "unsafeName": "RGBA",
                "safeName": "RGBA"
              }
            },
            "wireValue": "RGBA"
          },
          {
            "name": {
              "originalName": "RGBX",
              "camelCase": {
                "unsafeName": "rgbx",
                "safeName": "rgbx"
              },
              "pascalCase": {
                "unsafeName": "Rgbx",
                "safeName": "Rgbx"
              },
              "snakeCase": {
                "unsafeName": "rgbx",
                "safeName": "rgbx"
              },
              "screamingSnakeCase": {
                "unsafeName": "RGBX",
                "safeName": "RGBX"
              }
            },
            "wireValue": "RGBX"
          },
          {
            "name": {
              "originalName": "L",
              "camelCase": {
                "unsafeName": "l",
                "safeName": "l"
              },
              "pascalCase": {
                "unsafeName": "L",
                "safeName": "L"
              },
              "snakeCase": {
                "unsafeName": "l",
                "safeName": "l"
              },
              "screamingSnakeCase": {
                "unsafeName": "L",
                "safeName": "L"
              }
            },
            "wireValue": "L"
          },
          {
            "name": {
              "originalName": "LA",
              "camelCase": {
                "unsafeName": "la",
                "safeName": "la"
              },
              "pascalCase": {
                "unsafeName": "La",
                "safeName": "La"
              },
              "snakeCase": {
                "unsafeName": "la",
                "safeName": "la"
              },
              "screamingSnakeCase": {
                "unsafeName": "LA",
                "safeName": "LA"
              }
            },
            "wireValue": "LA"
          },
          {
            "name": {
              "originalName": "P",
              "camelCase": {
                "unsafeName": "p",
                "safeName": "p"
              },
              "pascalCase": {
                "unsafeName": "P",
                "safeName": "P"
              },
              "snakeCase": {
                "unsafeName": "p",
                "safeName": "p"
              },
              "screamingSnakeCase": {
                "unsafeName": "P",
                "safeName": "P"
              }
            },
            "wireValue": "P"
          },
          {
            "name": {
              "originalName": "PA",
              "camelCase": {
                "unsafeName": "pa",
                "safeName": "pa"
              },
              "pascalCase": {
                "unsafeName": "Pa",
                "safeName": "Pa"
              },
              "snakeCase": {
                "unsafeName": "pa",
                "safeName": "pa"
              },
              "screamingSnakeCase": {
                "unsafeName": "PA",
                "safeName": "PA"
              }
            },
            "wireValue": "PA"
          },
          {
            "name": {
              "originalName": "CMYK",
              "camelCase": {
                "unsafeName": "cmyk",
                "safeName": "cmyk"
              },
              "pascalCase": {
                "unsafeName": "Cmyk",
                "safeName": "Cmyk"
              },
              "snakeCase": {
                "unsafeName": "cmyk",
                "safeName": "cmyk"
              },
              "screamingSnakeCase": {
                "unsafeName": "CMYK",
                "safeName": "CMYK"
              }
            },
            "wireValue": "CMYK"
          },
          {
            "name": {
              "originalName": "YCbCr",
              "camelCase": {
                "unsafeName": "yCbCr",
                "safeName": "yCbCr"
              },
              "pascalCase": {
                "unsafeName": "YCbCr",
                "safeName": "YCbCr"
              },
              "snakeCase": {
                "unsafeName": "y_cb_cr",
                "safeName": "y_cb_cr"
              },
              "screamingSnakeCase": {
                "unsafeName": "Y_CB_CR",
                "safeName": "Y_CB_CR"
              }
            },
            "wireValue": "YCbCr"
          },
          {
            "name": {
              "originalName": "HSV",
              "camelCase": {
                "unsafeName": "hsv",
                "safeName": "hsv"
              },
              "pascalCase": {
                "unsafeName": "Hsv",
                "safeName": "Hsv"
              },
              "snakeCase": {
                "unsafeName": "hsv",
                "safeName": "hsv"
              },
              "screamingSnakeCase": {
                "unsafeName": "HSV",
                "safeName": "HSV"
              }
            },
            "wireValue": "HSV"
          },
          {
            "name": {
              "originalName": "LAB",
              "camelCase": {
                "unsafeName": "lab",
                "safeName": "lab"
              },
              "pascalCase": {
                "unsafeName": "Lab",
                "safeName": "Lab"
              },
              "snakeCase": {
                "unsafeName": "lab",
                "safeName": "lab"
              },
              "screamingSnakeCase": {
                "unsafeName": "LAB",
                "safeName": "LAB"
              }
            },
            "wireValue": "LAB"
          }
        ],
        "type": "enum"
      },
      "type_:SchemasImageInfoGeoLocation": {
        "declaration": {
          "name": {
            "originalName": "SchemasImageInfoGeoLocation",
            "camelCase": {
              "unsafeName": "schemasImageInfoGeoLocation",
              "safeName": "schemasImageInfoGeoLocation"
            },
            "pascalCase": {
              "unsafeName": "SchemasImageInfoGeoLocation",
              "safeName": "SchemasImageInfoGeoLocation"
            },
            "snakeCase": {
              "unsafeName": "schemas_image_info_geo_location",
              "safeName": "schemas_image_info_geo_location"
            },
            "screamingSnakeCase": {
              "unsafeName": "SCHEMAS_IMAGE_INFO_GEO_LOCATION",
              "safeName": "SCHEMAS_IMAGE_INFO_GEO_LOCATION"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "latitude",
                "camelCase": {
                  "unsafeName": "latitude",
                  "safeName": "latitude"
                },
                "pascalCase": {
                  "unsafeName": "Latitude",
                  "safeName": "Latitude"
                },
                "snakeCase": {
                  "unsafeName": "latitude",
                  "safeName": "latitude"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LATITUDE",
                  "safeName": "LATITUDE"
                }
              },
              "wireValue": "latitude"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "longitude",
                "camelCase": {
                  "unsafeName": "longitude",
                  "safeName": "longitude"
                },
                "pascalCase": {
                  "unsafeName": "Longitude",
                  "safeName": "Longitude"
                },
                "snakeCase": {
                  "unsafeName": "longitude",
                  "safeName": "longitude"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LONGITUDE",
                  "safeName": "LONGITUDE"
                }
              },
              "wireValue": "longitude"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SchemasImageInfo": {
        "declaration": {
          "name": {
            "originalName": "SchemasImageInfo",
            "camelCase": {
              "unsafeName": "schemasImageInfo",
              "safeName": "schemasImageInfo"
            },
            "pascalCase": {
              "unsafeName": "SchemasImageInfo",
              "safeName": "SchemasImageInfo"
            },
            "snakeCase": {
              "unsafeName": "schemas_image_info",
              "safeName": "schemas_image_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "SCHEMAS_IMAGE_INFO",
              "safeName": "SCHEMAS_IMAGE_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "color_mode",
                "camelCase": {
                  "unsafeName": "colorMode",
                  "safeName": "colorMode"
                },
                "pascalCase": {
                  "unsafeName": "ColorMode",
                  "safeName": "ColorMode"
                },
                "snakeCase": {
                  "unsafeName": "color_mode",
                  "safeName": "color_mode"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COLOR_MODE",
                  "safeName": "COLOR_MODE"
                }
              },
              "wireValue": "color_mode"
            },
            "typeReference": {
              "value": "type_:SchemasImageInfoColorMode",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "orientation",
                "camelCase": {
                  "unsafeName": "orientation",
                  "safeName": "orientation"
                },
                "pascalCase": {
                  "unsafeName": "Orientation",
                  "safeName": "Orientation"
                },
                "snakeCase": {
                  "unsafeName": "orientation",
                  "safeName": "orientation"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ORIENTATION",
                  "safeName": "ORIENTATION"
                }
              },
              "wireValue": "orientation"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                }
              },
              "wireValue": "format"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sequence",
                "camelCase": {
                  "unsafeName": "sequence",
                  "safeName": "sequence"
                },
                "pascalCase": {
                  "unsafeName": "Sequence",
                  "safeName": "Sequence"
                },
                "snakeCase": {
                  "unsafeName": "sequence",
                  "safeName": "sequence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEQUENCE",
                  "safeName": "SEQUENCE"
                }
              },
              "wireValue": "sequence"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "height",
                "camelCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "pascalCase": {
                  "unsafeName": "Height",
                  "safeName": "Height"
                },
                "snakeCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HEIGHT",
                  "safeName": "HEIGHT"
                }
              },
              "wireValue": "height"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "width",
                "camelCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "pascalCase": {
                  "unsafeName": "Width",
                  "safeName": "Width"
                },
                "snakeCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WIDTH",
                  "safeName": "WIDTH"
                }
              },
              "wireValue": "width"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "geo_location",
                "camelCase": {
                  "unsafeName": "geoLocation",
                  "safeName": "geoLocation"
                },
                "pascalCase": {
                  "unsafeName": "GeoLocation",
                  "safeName": "GeoLocation"
                },
                "snakeCase": {
                  "unsafeName": "geo_location",
                  "safeName": "geo_location"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GEO_LOCATION",
                  "safeName": "GEO_LOCATION"
                }
              },
              "wireValue": "geo_location"
            },
            "typeReference": {
              "value": {
                "value": "type_:SchemasImageInfoGeoLocation",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "datetime_original",
                "camelCase": {
                  "unsafeName": "datetimeOriginal",
                  "safeName": "datetimeOriginal"
                },
                "pascalCase": {
                  "unsafeName": "DatetimeOriginal",
                  "safeName": "DatetimeOriginal"
                },
                "snakeCase": {
                  "unsafeName": "datetime_original",
                  "safeName": "datetime_original"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DATETIME_ORIGINAL",
                  "safeName": "DATETIME_ORIGINAL"
                }
              },
              "wireValue": "datetime_original"
            },
            "typeReference": {
              "value": {
                "value": "DATE_TIME",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "dpi",
                "camelCase": {
                  "unsafeName": "dpi",
                  "safeName": "dpi"
                },
                "pascalCase": {
                  "unsafeName": "Dpi",
                  "safeName": "Dpi"
                },
                "snakeCase": {
                  "unsafeName": "dpi",
                  "safeName": "dpi"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DPI",
                  "safeName": "DPI"
                }
              },
              "wireValue": "dpi"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "DOUBLE",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:VideoInfoAudioItem": {
        "declaration": {
          "name": {
            "originalName": "VideoInfoAudioItem",
            "camelCase": {
              "unsafeName": "videoInfoAudioItem",
              "safeName": "videoInfoAudioItem"
            },
            "pascalCase": {
              "unsafeName": "VideoInfoAudioItem",
              "safeName": "VideoInfoAudioItem"
            },
            "snakeCase": {
              "unsafeName": "video_info_audio_item",
              "safeName": "video_info_audio_item"
            },
            "screamingSnakeCase": {
              "unsafeName": "VIDEO_INFO_AUDIO_ITEM",
              "safeName": "VIDEO_INFO_AUDIO_ITEM"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "bitrate",
                "camelCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "pascalCase": {
                  "unsafeName": "Bitrate",
                  "safeName": "Bitrate"
                },
                "snakeCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BITRATE",
                  "safeName": "BITRATE"
                }
              },
              "wireValue": "bitrate"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "codec",
                "camelCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "pascalCase": {
                  "unsafeName": "Codec",
                  "safeName": "Codec"
                },
                "snakeCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODEC",
                  "safeName": "CODEC"
                }
              },
              "wireValue": "codec"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sample_rate",
                "camelCase": {
                  "unsafeName": "sampleRate",
                  "safeName": "sampleRate"
                },
                "pascalCase": {
                  "unsafeName": "SampleRate",
                  "safeName": "SampleRate"
                },
                "snakeCase": {
                  "unsafeName": "sample_rate",
                  "safeName": "sample_rate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SAMPLE_RATE",
                  "safeName": "SAMPLE_RATE"
                }
              },
              "wireValue": "sample_rate"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "channels",
                "camelCase": {
                  "unsafeName": "channels",
                  "safeName": "channels"
                },
                "pascalCase": {
                  "unsafeName": "Channels",
                  "safeName": "Channels"
                },
                "snakeCase": {
                  "unsafeName": "channels",
                  "safeName": "channels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHANNELS",
                  "safeName": "CHANNELS"
                }
              },
              "wireValue": "channels"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:VideoInfoVideoItem": {
        "declaration": {
          "name": {
            "originalName": "VideoInfoVideoItem",
            "camelCase": {
              "unsafeName": "videoInfoVideoItem",
              "safeName": "videoInfoVideoItem"
            },
            "pascalCase": {
              "unsafeName": "VideoInfoVideoItem",
              "safeName": "VideoInfoVideoItem"
            },
            "snakeCase": {
              "unsafeName": "video_info_video_item",
              "safeName": "video_info_video_item"
            },
            "screamingSnakeCase": {
              "unsafeName": "VIDEO_INFO_VIDEO_ITEM",
              "safeName": "VIDEO_INFO_VIDEO_ITEM"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "height",
                "camelCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "pascalCase": {
                  "unsafeName": "Height",
                  "safeName": "Height"
                },
                "snakeCase": {
                  "unsafeName": "height",
                  "safeName": "height"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HEIGHT",
                  "safeName": "HEIGHT"
                }
              },
              "wireValue": "height"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "width",
                "camelCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "pascalCase": {
                  "unsafeName": "Width",
                  "safeName": "Width"
                },
                "snakeCase": {
                  "unsafeName": "width",
                  "safeName": "width"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WIDTH",
                  "safeName": "WIDTH"
                }
              },
              "wireValue": "width"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "frame_rate",
                "camelCase": {
                  "unsafeName": "frameRate",
                  "safeName": "frameRate"
                },
                "pascalCase": {
                  "unsafeName": "FrameRate",
                  "safeName": "FrameRate"
                },
                "snakeCase": {
                  "unsafeName": "frame_rate",
                  "safeName": "frame_rate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FRAME_RATE",
                  "safeName": "FRAME_RATE"
                }
              },
              "wireValue": "frame_rate"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bitrate",
                "camelCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "pascalCase": {
                  "unsafeName": "Bitrate",
                  "safeName": "Bitrate"
                },
                "snakeCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BITRATE",
                  "safeName": "BITRATE"
                }
              },
              "wireValue": "bitrate"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "codec",
                "camelCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "pascalCase": {
                  "unsafeName": "Codec",
                  "safeName": "Codec"
                },
                "snakeCase": {
                  "unsafeName": "codec",
                  "safeName": "codec"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CODEC",
                  "safeName": "CODEC"
                }
              },
              "wireValue": "codec"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:VideoInfo": {
        "declaration": {
          "name": {
            "originalName": "VideoInfo",
            "camelCase": {
              "unsafeName": "videoInfo",
              "safeName": "videoInfo"
            },
            "pascalCase": {
              "unsafeName": "VideoInfo",
              "safeName": "VideoInfo"
            },
            "snakeCase": {
              "unsafeName": "video_info",
              "safeName": "video_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "VIDEO_INFO",
              "safeName": "VIDEO_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "duration",
                "camelCase": {
                  "unsafeName": "duration",
                  "safeName": "duration"
                },
                "pascalCase": {
                  "unsafeName": "Duration",
                  "safeName": "Duration"
                },
                "snakeCase": {
                  "unsafeName": "duration",
                  "safeName": "duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DURATION",
                  "safeName": "DURATION"
                }
              },
              "wireValue": "duration"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format",
                "camelCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "pascalCase": {
                  "unsafeName": "Format",
                  "safeName": "Format"
                },
                "snakeCase": {
                  "unsafeName": "format",
                  "safeName": "format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT",
                  "safeName": "FORMAT"
                }
              },
              "wireValue": "format"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "bitrate",
                "camelCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "pascalCase": {
                  "unsafeName": "Bitrate",
                  "safeName": "Bitrate"
                },
                "snakeCase": {
                  "unsafeName": "bitrate",
                  "safeName": "bitrate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BITRATE",
                  "safeName": "BITRATE"
                }
              },
              "wireValue": "bitrate"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              },
              "wireValue": "audio"
            },
            "typeReference": {
              "value": {
                "value": "type_:VideoInfoAudioItem",
                "type": "named"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "video",
                "camelCase": {
                  "unsafeName": "video",
                  "safeName": "video"
                },
                "pascalCase": {
                  "unsafeName": "Video",
                  "safeName": "Video"
                },
                "snakeCase": {
                  "unsafeName": "video",
                  "safeName": "video"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VIDEO",
                  "safeName": "VIDEO"
                }
              },
              "wireValue": "video"
            },
            "typeReference": {
              "value": {
                "value": "type_:VideoInfoVideoItem",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:ContentInfoMime": {
        "declaration": {
          "name": {
            "originalName": "ContentInfoMime",
            "camelCase": {
              "unsafeName": "contentInfoMime",
              "safeName": "contentInfoMime"
            },
            "pascalCase": {
              "unsafeName": "ContentInfoMime",
              "safeName": "ContentInfoMime"
            },
            "snakeCase": {
              "unsafeName": "content_info_mime",
              "safeName": "content_info_mime"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONTENT_INFO_MIME",
              "safeName": "CONTENT_INFO_MIME"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "mime",
                "camelCase": {
                  "unsafeName": "mime",
                  "safeName": "mime"
                },
                "pascalCase": {
                  "unsafeName": "Mime",
                  "safeName": "Mime"
                },
                "snakeCase": {
                  "unsafeName": "mime",
                  "safeName": "mime"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MIME",
                  "safeName": "MIME"
                }
              },
              "wireValue": "mime"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                }
              },
              "wireValue": "type"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "subtype",
                "camelCase": {
                  "unsafeName": "subtype",
                  "safeName": "subtype"
                },
                "pascalCase": {
                  "unsafeName": "Subtype",
                  "safeName": "Subtype"
                },
                "snakeCase": {
                  "unsafeName": "subtype",
                  "safeName": "subtype"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUBTYPE",
                  "safeName": "SUBTYPE"
                }
              },
              "wireValue": "subtype"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:ContentInfo": {
        "declaration": {
          "name": {
            "originalName": "ContentInfo",
            "camelCase": {
              "unsafeName": "contentInfo",
              "safeName": "contentInfo"
            },
            "pascalCase": {
              "unsafeName": "ContentInfo",
              "safeName": "ContentInfo"
            },
            "snakeCase": {
              "unsafeName": "content_info",
              "safeName": "content_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONTENT_INFO",
              "safeName": "CONTENT_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "mime",
                "camelCase": {
                  "unsafeName": "mime",
                  "safeName": "mime"
                },
                "pascalCase": {
                  "unsafeName": "Mime",
                  "safeName": "Mime"
                },
                "snakeCase": {
                  "unsafeName": "mime",
                  "safeName": "mime"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MIME",
                  "safeName": "MIME"
                }
              },
              "wireValue": "mime"
            },
            "typeReference": {
              "value": {
                "value": "type_:ContentInfoMime",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "image",
                "camelCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "pascalCase": {
                  "unsafeName": "Image",
                  "safeName": "Image"
                },
                "snakeCase": {
                  "unsafeName": "image",
                  "safeName": "image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IMAGE",
                  "safeName": "IMAGE"
                }
              },
              "wireValue": "image"
            },
            "typeReference": {
              "value": {
                "value": "type_:SchemasImageInfo",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "video",
                "camelCase": {
                  "unsafeName": "video",
                  "safeName": "video"
                },
                "pascalCase": {
                  "unsafeName": "Video",
                  "safeName": "Video"
                },
                "snakeCase": {
                  "unsafeName": "video",
                  "safeName": "video"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VIDEO",
                  "safeName": "VIDEO"
                }
              },
              "wireValue": "video"
            },
            "typeReference": {
              "value": {
                "value": "type_:VideoInfo",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:Metadata": {
        "declaration": {
          "name": {
            "originalName": "Metadata",
            "camelCase": {
              "unsafeName": "metadata",
              "safeName": "metadata"
            },
            "pascalCase": {
              "unsafeName": "Metadata",
              "safeName": "Metadata"
            },
            "snakeCase": {
              "unsafeName": "metadata",
              "safeName": "metadata"
            },
            "screamingSnakeCase": {
              "unsafeName": "METADATA",
              "safeName": "METADATA"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": {
            "key": {
              "value": "STRING",
              "type": "primitive"
            },
            "value": {
              "type": "unknown"
            },
            "type": "map"
          },
          "type": "optional"
        },
        "type": "alias"
      }
    },
    "headers": [],
    "endpoints": {
      "endpoint_upload.baseUpload": {
        "declaration": {
          "name": {
            "originalName": "baseUpload",
            "camelCase": {
              "unsafeName": "baseUpload",
              "safeName": "baseUpload"
            },
            "pascalCase": {
              "unsafeName": "BaseUpload",
              "safeName": "BaseUpload"
            },
            "snakeCase": {
              "unsafeName": "base_upload",
              "safeName": "base_upload"
            },
            "screamingSnakeCase": {
              "unsafeName": "BASE_UPLOAD",
              "safeName": "BASE_UPLOAD"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/base/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "BaseUploadRequest",
              "camelCase": {
                "unsafeName": "baseUploadRequest",
                "safeName": "baseUploadRequest"
              },
              "pascalCase": {
                "unsafeName": "BaseUploadRequest",
                "safeName": "BaseUploadRequest"
              },
              "snakeCase": {
                "unsafeName": "base_upload_request",
                "safeName": "base_upload_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "BASE_UPLOAD_REQUEST",
                "safeName": "BASE_UPLOAD_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "upload",
                  "camelCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "pascalCase": {
                    "unsafeName": "Upload",
                    "safeName": "Upload"
                  },
                  "snakeCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD",
                    "safeName": "UPLOAD"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "UPLOADCARE_PUB_KEY",
                    "camelCase": {
                      "unsafeName": "uploadcarePubKey",
                      "safeName": "uploadcarePubKey"
                    },
                    "pascalCase": {
                      "unsafeName": "UploadcarePubKey",
                      "safeName": "UploadcarePubKey"
                    },
                    "snakeCase": {
                      "unsafeName": "uploadcare_pub_key",
                      "safeName": "uploadcare_pub_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "UPLOADCARE_PUB_KEY",
                      "safeName": "UPLOADCARE_PUB_KEY"
                    }
                  },
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "typeReference": {
                  "value": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "UPLOADCARE_STORE",
                    "camelCase": {
                      "unsafeName": "uploadcareStore",
                      "safeName": "uploadcareStore"
                    },
                    "pascalCase": {
                      "unsafeName": "UploadcareStore",
                      "safeName": "UploadcareStore"
                    },
                    "snakeCase": {
                      "unsafeName": "uploadcare_store",
                      "safeName": "uploadcare_store"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "UPLOADCARE_STORE",
                      "safeName": "UPLOADCARE_STORE"
                    }
                  },
                  "wireValue": "UPLOADCARE_STORE"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:StoreType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "originalName": "{filename}",
                  "camelCase": {
                    "unsafeName": "filename",
                    "safeName": "filename"
                  },
                  "pascalCase": {
                    "unsafeName": "Filename",
                    "safeName": "Filename"
                  },
                  "snakeCase": {
                    "unsafeName": "filename",
                    "safeName": "filename"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "FILENAME",
                    "safeName": "FILENAME"
                  }
                },
                "wireValue": "{filename}",
                "type": "fileArray"
              },
              {
                "name": {
                  "name": {
                    "originalName": "metadata[{key}]",
                    "camelCase": {
                      "unsafeName": "metadataKey",
                      "safeName": "metadataKey"
                    },
                    "pascalCase": {
                      "unsafeName": "MetadataKey",
                      "safeName": "MetadataKey"
                    },
                    "snakeCase": {
                      "unsafeName": "metadata_key",
                      "safeName": "metadata_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "METADATA_KEY",
                      "safeName": "METADATA_KEY"
                    }
                  },
                  "wireValue": "metadata[{key}]"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:MetadataValue",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "signature",
                    "camelCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "pascalCase": {
                      "unsafeName": "Signature",
                      "safeName": "Signature"
                    },
                    "snakeCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SIGNATURE",
                      "safeName": "SIGNATURE"
                    }
                  },
                  "wireValue": "signature"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:SignatureType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "expire",
                    "camelCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "pascalCase": {
                      "unsafeName": "Expire",
                      "safeName": "Expire"
                    },
                    "snakeCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "EXPIRE",
                      "safeName": "EXPIRE"
                    }
                  },
                  "wireValue": "expire"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:ExpireType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_upload.multipartFileUploadStart": {
        "declaration": {
          "name": {
            "originalName": "multipartFileUploadStart",
            "camelCase": {
              "unsafeName": "multipartFileUploadStart",
              "safeName": "multipartFileUploadStart"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadStart",
              "safeName": "MultipartFileUploadStart"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_start",
              "safeName": "multipart_file_upload_start"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_START",
              "safeName": "MULTIPART_FILE_UPLOAD_START"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/multipart/start/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "MultipartFileUploadStartRequest",
              "camelCase": {
                "unsafeName": "multipartFileUploadStartRequest",
                "safeName": "multipartFileUploadStartRequest"
              },
              "pascalCase": {
                "unsafeName": "MultipartFileUploadStartRequest",
                "safeName": "MultipartFileUploadStartRequest"
              },
              "snakeCase": {
                "unsafeName": "multipart_file_upload_start_request",
                "safeName": "multipart_file_upload_start_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "MULTIPART_FILE_UPLOAD_START_REQUEST",
                "safeName": "MULTIPART_FILE_UPLOAD_START_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "upload",
                  "camelCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "pascalCase": {
                    "unsafeName": "Upload",
                    "safeName": "Upload"
                  },
                  "snakeCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD",
                    "safeName": "UPLOAD"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "UPLOADCARE_PUB_KEY",
                    "camelCase": {
                      "unsafeName": "uploadcarePubKey",
                      "safeName": "uploadcarePubKey"
                    },
                    "pascalCase": {
                      "unsafeName": "UploadcarePubKey",
                      "safeName": "UploadcarePubKey"
                    },
                    "snakeCase": {
                      "unsafeName": "uploadcare_pub_key",
                      "safeName": "uploadcare_pub_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "UPLOADCARE_PUB_KEY",
                      "safeName": "UPLOADCARE_PUB_KEY"
                    }
                  },
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "typeReference": {
                  "value": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "UPLOADCARE_STORE",
                    "camelCase": {
                      "unsafeName": "uploadcareStore",
                      "safeName": "uploadcareStore"
                    },
                    "pascalCase": {
                      "unsafeName": "UploadcareStore",
                      "safeName": "UploadcareStore"
                    },
                    "snakeCase": {
                      "unsafeName": "uploadcare_store",
                      "safeName": "uploadcare_store"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "UPLOADCARE_STORE",
                      "safeName": "UPLOADCARE_STORE"
                    }
                  },
                  "wireValue": "UPLOADCARE_STORE"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:StoreType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "filename",
                    "camelCase": {
                      "unsafeName": "filename",
                      "safeName": "filename"
                    },
                    "pascalCase": {
                      "unsafeName": "Filename",
                      "safeName": "Filename"
                    },
                    "snakeCase": {
                      "unsafeName": "filename",
                      "safeName": "filename"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FILENAME",
                      "safeName": "FILENAME"
                    }
                  },
                  "wireValue": "filename"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "size",
                    "camelCase": {
                      "unsafeName": "size",
                      "safeName": "size"
                    },
                    "pascalCase": {
                      "unsafeName": "Size",
                      "safeName": "Size"
                    },
                    "snakeCase": {
                      "unsafeName": "size",
                      "safeName": "size"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SIZE",
                      "safeName": "SIZE"
                    }
                  },
                  "wireValue": "size"
                },
                "typeReference": {
                  "value": "INTEGER",
                  "type": "primitive"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "part_size",
                    "camelCase": {
                      "unsafeName": "partSize",
                      "safeName": "partSize"
                    },
                    "pascalCase": {
                      "unsafeName": "PartSize",
                      "safeName": "PartSize"
                    },
                    "snakeCase": {
                      "unsafeName": "part_size",
                      "safeName": "part_size"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PART_SIZE",
                      "safeName": "PART_SIZE"
                    }
                  },
                  "wireValue": "part_size"
                },
                "typeReference": {
                  "value": {
                    "value": "INTEGER",
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "content_type",
                    "camelCase": {
                      "unsafeName": "contentType",
                      "safeName": "contentType"
                    },
                    "pascalCase": {
                      "unsafeName": "ContentType",
                      "safeName": "ContentType"
                    },
                    "snakeCase": {
                      "unsafeName": "content_type",
                      "safeName": "content_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTENT_TYPE",
                      "safeName": "CONTENT_TYPE"
                    }
                  },
                  "wireValue": "content_type"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "metadata[{key}]",
                    "camelCase": {
                      "unsafeName": "metadataKey",
                      "safeName": "metadataKey"
                    },
                    "pascalCase": {
                      "unsafeName": "MetadataKey",
                      "safeName": "MetadataKey"
                    },
                    "snakeCase": {
                      "unsafeName": "metadata_key",
                      "safeName": "metadata_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "METADATA_KEY",
                      "safeName": "METADATA_KEY"
                    }
                  },
                  "wireValue": "metadata[{key}]"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:MetadataValue",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "signature",
                    "camelCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "pascalCase": {
                      "unsafeName": "Signature",
                      "safeName": "Signature"
                    },
                    "snakeCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SIGNATURE",
                      "safeName": "SIGNATURE"
                    }
                  },
                  "wireValue": "signature"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:SignatureType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "expire",
                    "camelCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "pascalCase": {
                      "unsafeName": "Expire",
                      "safeName": "Expire"
                    },
                    "snakeCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "EXPIRE",
                      "safeName": "EXPIRE"
                    }
                  },
                  "wireValue": "expire"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:ExpireType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_upload.multipartFileUploadPart": {
        "declaration": {
          "name": {
            "originalName": "multipartFileUploadPart",
            "camelCase": {
              "unsafeName": "multipartFileUploadPart",
              "safeName": "multipartFileUploadPart"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadPart",
              "safeName": "MultipartFileUploadPart"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_part",
              "safeName": "multipart_file_upload_part"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_PART",
              "safeName": "MULTIPART_FILE_UPLOAD_PART"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "location": {
          "method": "PUT",
          "path": "/<presigned-url-x>"
        },
        "request": {
          "pathParameters": [],
          "body": {
            "type": "bytes"
          },
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_upload.multipartFileUploadComplete": {
        "declaration": {
          "name": {
            "originalName": "multipartFileUploadComplete",
            "camelCase": {
              "unsafeName": "multipartFileUploadComplete",
              "safeName": "multipartFileUploadComplete"
            },
            "pascalCase": {
              "unsafeName": "MultipartFileUploadComplete",
              "safeName": "MultipartFileUploadComplete"
            },
            "snakeCase": {
              "unsafeName": "multipart_file_upload_complete",
              "safeName": "multipart_file_upload_complete"
            },
            "screamingSnakeCase": {
              "unsafeName": "MULTIPART_FILE_UPLOAD_COMPLETE",
              "safeName": "MULTIPART_FILE_UPLOAD_COMPLETE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/multipart/complete/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "MultipartFileUploadCompleteRequest",
              "camelCase": {
                "unsafeName": "multipartFileUploadCompleteRequest",
                "safeName": "multipartFileUploadCompleteRequest"
              },
              "pascalCase": {
                "unsafeName": "MultipartFileUploadCompleteRequest",
                "safeName": "MultipartFileUploadCompleteRequest"
              },
              "snakeCase": {
                "unsafeName": "multipart_file_upload_complete_request",
                "safeName": "multipart_file_upload_complete_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "MULTIPART_FILE_UPLOAD_COMPLETE_REQUEST",
                "safeName": "MULTIPART_FILE_UPLOAD_COMPLETE_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "upload",
                  "camelCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "pascalCase": {
                    "unsafeName": "Upload",
                    "safeName": "Upload"
                  },
                  "snakeCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD",
                    "safeName": "UPLOAD"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "UPLOADCARE_PUB_KEY",
                    "camelCase": {
                      "unsafeName": "uploadcarePubKey",
                      "safeName": "uploadcarePubKey"
                    },
                    "pascalCase": {
                      "unsafeName": "UploadcarePubKey",
                      "safeName": "UploadcarePubKey"
                    },
                    "snakeCase": {
                      "unsafeName": "uploadcare_pub_key",
                      "safeName": "uploadcare_pub_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "UPLOADCARE_PUB_KEY",
                      "safeName": "UPLOADCARE_PUB_KEY"
                    }
                  },
                  "wireValue": "UPLOADCARE_PUB_KEY"
                },
                "typeReference": {
                  "value": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "uuid",
                    "camelCase": {
                      "unsafeName": "uuid",
                      "safeName": "uuid"
                    },
                    "pascalCase": {
                      "unsafeName": "UUID",
                      "safeName": "UUID"
                    },
                    "snakeCase": {
                      "unsafeName": "uuid",
                      "safeName": "uuid"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "UUID",
                      "safeName": "UUID"
                    }
                  },
                  "wireValue": "uuid"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_upload.fromURLUpload": {
        "declaration": {
          "name": {
            "originalName": "fromURLUpload",
            "camelCase": {
              "unsafeName": "fromURLUpload",
              "safeName": "fromURLUpload"
            },
            "pascalCase": {
              "unsafeName": "FromURLUpload",
              "safeName": "FromURLUpload"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload",
              "safeName": "from_url_upload"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD",
              "safeName": "FROM_URL_UPLOAD"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/from_url/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "FromUrlUploadRequest",
              "camelCase": {
                "unsafeName": "fromURLUploadRequest",
                "safeName": "fromURLUploadRequest"
              },
              "pascalCase": {
                "unsafeName": "FromURLUploadRequest",
                "safeName": "FromURLUploadRequest"
              },
              "snakeCase": {
                "unsafeName": "from_url_upload_request",
                "safeName": "from_url_upload_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "FROM_URL_UPLOAD_REQUEST",
                "safeName": "FROM_URL_UPLOAD_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "upload",
                  "camelCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "pascalCase": {
                    "unsafeName": "Upload",
                    "safeName": "Upload"
                  },
                  "snakeCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD",
                    "safeName": "UPLOAD"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "pub_key",
                    "camelCase": {
                      "unsafeName": "pubKey",
                      "safeName": "pubKey"
                    },
                    "pascalCase": {
                      "unsafeName": "PubKey",
                      "safeName": "PubKey"
                    },
                    "snakeCase": {
                      "unsafeName": "pub_key",
                      "safeName": "pub_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PUB_KEY",
                      "safeName": "PUB_KEY"
                    }
                  },
                  "wireValue": "pub_key"
                },
                "typeReference": {
                  "value": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "source_url",
                    "camelCase": {
                      "unsafeName": "sourceURL",
                      "safeName": "sourceURL"
                    },
                    "pascalCase": {
                      "unsafeName": "SourceURL",
                      "safeName": "SourceURL"
                    },
                    "snakeCase": {
                      "unsafeName": "source_url",
                      "safeName": "source_url"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SOURCE_URL",
                      "safeName": "SOURCE_URL"
                    }
                  },
                  "wireValue": "source_url"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "store",
                    "camelCase": {
                      "unsafeName": "store",
                      "safeName": "store"
                    },
                    "pascalCase": {
                      "unsafeName": "Store",
                      "safeName": "Store"
                    },
                    "snakeCase": {
                      "unsafeName": "store",
                      "safeName": "store"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "STORE",
                      "safeName": "STORE"
                    }
                  },
                  "wireValue": "store"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:StoreType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "filename",
                    "camelCase": {
                      "unsafeName": "filename",
                      "safeName": "filename"
                    },
                    "pascalCase": {
                      "unsafeName": "Filename",
                      "safeName": "Filename"
                    },
                    "snakeCase": {
                      "unsafeName": "filename",
                      "safeName": "filename"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FILENAME",
                      "safeName": "FILENAME"
                    }
                  },
                  "wireValue": "filename"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "check_URL_duplicates",
                    "camelCase": {
                      "unsafeName": "checkURLDuplicates",
                      "safeName": "checkURLDuplicates"
                    },
                    "pascalCase": {
                      "unsafeName": "CheckURLDuplicates",
                      "safeName": "CheckURLDuplicates"
                    },
                    "snakeCase": {
                      "unsafeName": "check_url_duplicates",
                      "safeName": "check_url_duplicates"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CHECK_URL_DUPLICATES",
                      "safeName": "CHECK_URL_DUPLICATES"
                    }
                  },
                  "wireValue": "check_URL_duplicates"
                },
                "typeReference": {
                  "value": {
                    "value": "type_upload:FromUrlUploadRequestCheckUrlDuplicates",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "save_URL_duplicates",
                    "camelCase": {
                      "unsafeName": "saveURLDuplicates",
                      "safeName": "saveURLDuplicates"
                    },
                    "pascalCase": {
                      "unsafeName": "SaveURLDuplicates",
                      "safeName": "SaveURLDuplicates"
                    },
                    "snakeCase": {
                      "unsafeName": "save_url_duplicates",
                      "safeName": "save_url_duplicates"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SAVE_URL_DUPLICATES",
                      "safeName": "SAVE_URL_DUPLICATES"
                    }
                  },
                  "wireValue": "save_URL_duplicates"
                },
                "typeReference": {
                  "value": {
                    "value": "type_upload:FromUrlUploadRequestSaveUrlDuplicates",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "metadata[{key}]",
                    "camelCase": {
                      "unsafeName": "metadataKey",
                      "safeName": "metadataKey"
                    },
                    "pascalCase": {
                      "unsafeName": "MetadataKey",
                      "safeName": "MetadataKey"
                    },
                    "snakeCase": {
                      "unsafeName": "metadata_key",
                      "safeName": "metadata_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "METADATA_KEY",
                      "safeName": "METADATA_KEY"
                    }
                  },
                  "wireValue": "metadata[{key}]"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:MetadataValue",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "signature",
                    "camelCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "pascalCase": {
                      "unsafeName": "Signature",
                      "safeName": "Signature"
                    },
                    "snakeCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SIGNATURE",
                      "safeName": "SIGNATURE"
                    }
                  },
                  "wireValue": "signature"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:SignatureType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "expire",
                    "camelCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "pascalCase": {
                      "unsafeName": "Expire",
                      "safeName": "Expire"
                    },
                    "snakeCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "EXPIRE",
                      "safeName": "EXPIRE"
                    }
                  },
                  "wireValue": "expire"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:ExpireType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_upload.fromURLUploadStatus": {
        "declaration": {
          "name": {
            "originalName": "fromURLUploadStatus",
            "camelCase": {
              "unsafeName": "fromURLUploadStatus",
              "safeName": "fromURLUploadStatus"
            },
            "pascalCase": {
              "unsafeName": "FromURLUploadStatus",
              "safeName": "FromURLUploadStatus"
            },
            "snakeCase": {
              "unsafeName": "from_url_upload_status",
              "safeName": "from_url_upload_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "FROM_URL_UPLOAD_STATUS",
              "safeName": "FROM_URL_UPLOAD_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/from_url/status/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "FromUrlUploadStatusRequest",
              "camelCase": {
                "unsafeName": "fromURLUploadStatusRequest",
                "safeName": "fromURLUploadStatusRequest"
              },
              "pascalCase": {
                "unsafeName": "FromURLUploadStatusRequest",
                "safeName": "FromURLUploadStatusRequest"
              },
              "snakeCase": {
                "unsafeName": "from_url_upload_status_request",
                "safeName": "from_url_upload_status_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "FROM_URL_UPLOAD_STATUS_REQUEST",
                "safeName": "FROM_URL_UPLOAD_STATUS_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "upload",
                  "camelCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "pascalCase": {
                    "unsafeName": "Upload",
                    "safeName": "Upload"
                  },
                  "snakeCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD",
                    "safeName": "UPLOAD"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "token",
                  "camelCase": {
                    "unsafeName": "token",
                    "safeName": "token"
                  },
                  "pascalCase": {
                    "unsafeName": "Token",
                    "safeName": "Token"
                  },
                  "snakeCase": {
                    "unsafeName": "token",
                    "safeName": "token"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TOKEN",
                    "safeName": "TOKEN"
                  }
                },
                "wireValue": "token"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_upload.fileUploadInfo": {
        "declaration": {
          "name": {
            "originalName": "fileUploadInfo",
            "camelCase": {
              "unsafeName": "fileUploadInfo",
              "safeName": "fileUploadInfo"
            },
            "pascalCase": {
              "unsafeName": "FileUploadInfo",
              "safeName": "FileUploadInfo"
            },
            "snakeCase": {
              "unsafeName": "file_upload_info",
              "safeName": "file_upload_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILE_UPLOAD_INFO",
              "safeName": "FILE_UPLOAD_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "upload",
              "camelCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "pascalCase": {
                "unsafeName": "Upload",
                "safeName": "Upload"
              },
              "snakeCase": {
                "unsafeName": "upload",
                "safeName": "upload"
              },
              "screamingSnakeCase": {
                "unsafeName": "UPLOAD",
                "safeName": "UPLOAD"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/info/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "FileUploadInfoRequest",
              "camelCase": {
                "unsafeName": "fileUploadInfoRequest",
                "safeName": "fileUploadInfoRequest"
              },
              "pascalCase": {
                "unsafeName": "FileUploadInfoRequest",
                "safeName": "FileUploadInfoRequest"
              },
              "snakeCase": {
                "unsafeName": "file_upload_info_request",
                "safeName": "file_upload_info_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "FILE_UPLOAD_INFO_REQUEST",
                "safeName": "FILE_UPLOAD_INFO_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "upload",
                  "camelCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "pascalCase": {
                    "unsafeName": "Upload",
                    "safeName": "Upload"
                  },
                  "snakeCase": {
                    "unsafeName": "upload",
                    "safeName": "upload"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "UPLOAD",
                    "safeName": "UPLOAD"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "upload",
                "camelCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "pascalCase": {
                  "unsafeName": "Upload",
                  "safeName": "Upload"
                },
                "snakeCase": {
                  "unsafeName": "upload",
                  "safeName": "upload"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD",
                  "safeName": "UPLOAD"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "pub_key",
                  "camelCase": {
                    "unsafeName": "pubKey",
                    "safeName": "pubKey"
                  },
                  "pascalCase": {
                    "unsafeName": "PubKey",
                    "safeName": "PubKey"
                  },
                  "snakeCase": {
                    "unsafeName": "pub_key",
                    "safeName": "pub_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PUB_KEY",
                    "safeName": "PUB_KEY"
                  }
                },
                "wireValue": "pub_key"
              },
              "typeReference": {
                "value": "type_:ProjectPublicKeyType",
                "type": "named"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "file_id",
                  "camelCase": {
                    "unsafeName": "fileID",
                    "safeName": "fileID"
                  },
                  "pascalCase": {
                    "unsafeName": "FileID",
                    "safeName": "FileID"
                  },
                  "snakeCase": {
                    "unsafeName": "file_id",
                    "safeName": "file_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "FILE_ID",
                    "safeName": "FILE_ID"
                  }
                },
                "wireValue": "file_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_groups.createFilesGroup": {
        "declaration": {
          "name": {
            "originalName": "createFilesGroup",
            "camelCase": {
              "unsafeName": "createFilesGroup",
              "safeName": "createFilesGroup"
            },
            "pascalCase": {
              "unsafeName": "CreateFilesGroup",
              "safeName": "CreateFilesGroup"
            },
            "snakeCase": {
              "unsafeName": "create_files_group",
              "safeName": "create_files_group"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_FILES_GROUP",
              "safeName": "CREATE_FILES_GROUP"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "groups",
                "camelCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "pascalCase": {
                  "unsafeName": "Groups",
                  "safeName": "Groups"
                },
                "snakeCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GROUPS",
                  "safeName": "GROUPS"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "groups",
              "camelCase": {
                "unsafeName": "groups",
                "safeName": "groups"
              },
              "pascalCase": {
                "unsafeName": "Groups",
                "safeName": "Groups"
              },
              "snakeCase": {
                "unsafeName": "groups",
                "safeName": "groups"
              },
              "screamingSnakeCase": {
                "unsafeName": "GROUPS",
                "safeName": "GROUPS"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/group/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "CreateFilesGroupRequest",
              "camelCase": {
                "unsafeName": "createFilesGroupRequest",
                "safeName": "createFilesGroupRequest"
              },
              "pascalCase": {
                "unsafeName": "CreateFilesGroupRequest",
                "safeName": "CreateFilesGroupRequest"
              },
              "snakeCase": {
                "unsafeName": "create_files_group_request",
                "safeName": "create_files_group_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREATE_FILES_GROUP_REQUEST",
                "safeName": "CREATE_FILES_GROUP_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "groups",
                  "camelCase": {
                    "unsafeName": "groups",
                    "safeName": "groups"
                  },
                  "pascalCase": {
                    "unsafeName": "Groups",
                    "safeName": "Groups"
                  },
                  "snakeCase": {
                    "unsafeName": "groups",
                    "safeName": "groups"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GROUPS",
                    "safeName": "GROUPS"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "groups",
                "camelCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "pascalCase": {
                  "unsafeName": "Groups",
                  "safeName": "Groups"
                },
                "snakeCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GROUPS",
                  "safeName": "GROUPS"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "pub_key",
                    "camelCase": {
                      "unsafeName": "pubKey",
                      "safeName": "pubKey"
                    },
                    "pascalCase": {
                      "unsafeName": "PubKey",
                      "safeName": "PubKey"
                    },
                    "snakeCase": {
                      "unsafeName": "pub_key",
                      "safeName": "pub_key"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PUB_KEY",
                      "safeName": "PUB_KEY"
                    }
                  },
                  "wireValue": "pub_key"
                },
                "typeReference": {
                  "value": "type_:ProjectPublicKeyType",
                  "type": "named"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "files[]",
                    "camelCase": {
                      "unsafeName": "files",
                      "safeName": "files"
                    },
                    "pascalCase": {
                      "unsafeName": "Files",
                      "safeName": "Files"
                    },
                    "snakeCase": {
                      "unsafeName": "files",
                      "safeName": "files"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FILES",
                      "safeName": "FILES"
                    }
                  },
                  "wireValue": "files[]"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "list"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "signature",
                    "camelCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "pascalCase": {
                      "unsafeName": "Signature",
                      "safeName": "Signature"
                    },
                    "snakeCase": {
                      "unsafeName": "signature",
                      "safeName": "signature"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SIGNATURE",
                      "safeName": "SIGNATURE"
                    }
                  },
                  "wireValue": "signature"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:SignatureType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "name": {
                    "originalName": "expire",
                    "camelCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "pascalCase": {
                      "unsafeName": "Expire",
                      "safeName": "Expire"
                    },
                    "snakeCase": {
                      "unsafeName": "expire",
                      "safeName": "expire"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "EXPIRE",
                      "safeName": "EXPIRE"
                    }
                  },
                  "wireValue": "expire"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:ExpireType",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_groups.filesGroupInfo": {
        "declaration": {
          "name": {
            "originalName": "filesGroupInfo",
            "camelCase": {
              "unsafeName": "filesGroupInfo",
              "safeName": "filesGroupInfo"
            },
            "pascalCase": {
              "unsafeName": "FilesGroupInfo",
              "safeName": "FilesGroupInfo"
            },
            "snakeCase": {
              "unsafeName": "files_group_info",
              "safeName": "files_group_info"
            },
            "screamingSnakeCase": {
              "unsafeName": "FILES_GROUP_INFO",
              "safeName": "FILES_GROUP_INFO"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "groups",
                "camelCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "pascalCase": {
                  "unsafeName": "Groups",
                  "safeName": "Groups"
                },
                "snakeCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GROUPS",
                  "safeName": "GROUPS"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "groups",
              "camelCase": {
                "unsafeName": "groups",
                "safeName": "groups"
              },
              "pascalCase": {
                "unsafeName": "Groups",
                "safeName": "Groups"
              },
              "snakeCase": {
                "unsafeName": "groups",
                "safeName": "groups"
              },
              "screamingSnakeCase": {
                "unsafeName": "GROUPS",
                "safeName": "GROUPS"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/group/info/"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "FilesGroupInfoRequest",
              "camelCase": {
                "unsafeName": "filesGroupInfoRequest",
                "safeName": "filesGroupInfoRequest"
              },
              "pascalCase": {
                "unsafeName": "FilesGroupInfoRequest",
                "safeName": "FilesGroupInfoRequest"
              },
              "snakeCase": {
                "unsafeName": "files_group_info_request",
                "safeName": "files_group_info_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "FILES_GROUP_INFO_REQUEST",
                "safeName": "FILES_GROUP_INFO_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "groups",
                  "camelCase": {
                    "unsafeName": "groups",
                    "safeName": "groups"
                  },
                  "pascalCase": {
                    "unsafeName": "Groups",
                    "safeName": "Groups"
                  },
                  "snakeCase": {
                    "unsafeName": "groups",
                    "safeName": "groups"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GROUPS",
                    "safeName": "GROUPS"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "groups",
                "camelCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "pascalCase": {
                  "unsafeName": "Groups",
                  "safeName": "Groups"
                },
                "snakeCase": {
                  "unsafeName": "groups",
                  "safeName": "groups"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GROUPS",
                  "safeName": "GROUPS"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "pub_key",
                  "camelCase": {
                    "unsafeName": "pubKey",
                    "safeName": "pubKey"
                  },
                  "pascalCase": {
                    "unsafeName": "PubKey",
                    "safeName": "PubKey"
                  },
                  "snakeCase": {
                    "unsafeName": "pub_key",
                    "safeName": "pub_key"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "PUB_KEY",
                    "safeName": "PUB_KEY"
                  }
                },
                "wireValue": "pub_key"
              },
              "typeReference": {
                "value": "type_:ProjectPublicKeyType",
                "type": "named"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "group_id",
                  "camelCase": {
                    "unsafeName": "groupID",
                    "safeName": "groupID"
                  },
                  "pascalCase": {
                    "unsafeName": "GroupID",
                    "safeName": "GroupID"
                  },
                  "snakeCase": {
                    "unsafeName": "group_id",
                    "safeName": "group_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "GROUP_ID",
                    "safeName": "GROUP_ID"
                  }
                },
                "wireValue": "group_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      }
    },
    "pathParameters": [],
    "environments": {
      "defaultEnvironment": "Default",
      "environments": {
        "environments": [
          {
            "id": "Default",
            "name": {
              "originalName": "Default",
              "camelCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "pascalCase": {
                "unsafeName": "Default",
                "safeName": "Default"
              },
              "snakeCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "screamingSnakeCase": {
                "unsafeName": "DEFAULT",
                "safeName": "DEFAULT"
              }
            },
            "url": "https://upload.uploadcare.com"
          }
        ],
        "type": "singleBaseUrl"
      }
    }
  },
  "subpackages": {
    "subpackage_upload": {
      "fernFilepath": {
        "allParts": [
          "upload"
        ],
        "packagePath": [],
        "file": "upload"
      },
      "name": "upload",
      "service": "service_upload",
      "types": [
        "type_upload:BaseUploadResponse",
        "type_upload:MultipartFileUploadStartResponse",
        "type_upload:FromUrlUploadRequestCheckUrlDuplicates",
        "type_upload:FromUrlUploadRequestSaveUrlDuplicates",
        "type_upload:FromUrlUploadResponse",
        "type_upload:FromUrlUploadStatusResponse"
      ],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_groups": {
      "fernFilepath": {
        "allParts": [
          "groups"
        ],
        "packagePath": [],
        "file": "groups"
      },
      "name": "groups",
      "service": "service_groups",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "type_:BaseUploadRequestBadRequestErrorBody",
      "type_:BaseUploadRequestForbiddenErrorBody",
      "type_:MultipartFileUploadStartRequestBadRequestErrorBody",
      "type_:MultipartFileUploadStartRequestForbiddenErrorBody",
      "type_:MultipartFileUploadCompleteRequestBadRequestErrorBody",
      "type_:MultipartFileUploadCompleteRequestForbiddenErrorBody",
      "type_:FromUrlUploadRequestBadRequestErrorBody",
      "type_:FromUrlUploadRequestForbiddenErrorBody",
      "type_:FileUploadInfoRequestBadRequestErrorBody",
      "type_:FileUploadInfoRequestForbiddenErrorBody",
      "type_:CreateFilesGroupRequestBadRequestErrorBody",
      "type_:CreateFilesGroupRequestForbiddenErrorBody",
      "type_:FilesGroupInfoRequestBadRequestErrorBody",
      "type_:FilesGroupInfoRequestForbiddenErrorBody",
      "type_:SignatureType",
      "type_:ExpireType",
      "type_:StoreType",
      "type_:ProjectPublicKeyType",
      "type_:FileUploadInfo",
      "type_:FileUploadInfoWaitingStatus",
      "type_:FileUploadInfoProgressStatus",
      "type_:FileUploadInfoSuccessStatus",
      "type_:FileUploadInfoErrorStatus",
      "type_:FileUploadInfoUnknownStatus",
      "type_:FileUploadInfoFromUrl",
      "type_:FromUrlUploadResponseSchema",
      "type_:GroupInfo",
      "type_:MetadataValue",
      "type_:AutoStoreDisabledError",
      "type_:UploadcarePublicKeyRequiredError",
      "type_:PublicKeyRequiredError",
      "type_:UploadcarePublicKeyInvalidError",
      "type_:PublicKeyInvalidError",
      "type_:ProjectPublicKeyRemovedError",
      "type_:AccountBlockedError",
      "type_:AccountUnpaidError",
      "type_:UploadFailedError",
      "type_:AccountLimitsExceededError",
      "type_:SignatureExpirationError",
      "type_:SignatureInvalidError",
      "type_:RequestFiledsNumberLimitExceededError",
      "type_:PostRequestParserFailedError",
      "type_:NullCharactersForbiddenError",
      "type_:FileMetadataKeyDuplicatedError",
      "type_:FileMetadataKeyEmptyError",
      "type_:FileMetadataKeyForbiddenError",
      "type_:FileMetadataKeyLengthTooBigError",
      "type_:FileMetadataValueEmptyError",
      "type_:FileMetadataValueForbiddenError",
      "type_:FileMetadataValueLengthTooBigError",
      "type_:FileMetadataKeysNumberTooBigError",
      "type_:FilesRequiredError",
      "type_:FileSizeLimitExceededError",
      "type_:FileTypeForbiddenError",
      "type_:FileInfectedError",
      "type_:RequestParamRequiredError",
      "type_:MultipartSizeInvalidError",
      "type_:MultipartFileSizeLimitExceededError",
      "type_:MultipartFileSizeTooSmallError",
      "type_:MultipartPartSizeInvalidError",
      "type_:MultipartPartSizeTooSmallError",
      "type_:MultipartPartSizeTooBigError",
      "type_:MultipartFileIdRequiredError",
      "type_:MultipartFileAlreadyUploadedError",
      "type_:MultipartUploadSizeTooLargeError",
      "type_:MultipartUploadSizeTooSmallError",
      "type_:MultipartFileCompletionFailedError",
      "type_:UuidInvalidError",
      "type_:SourceUrlRequiredError",
      "type_:UrlParsingFailedError",
      "type_:UrlSchemeRequiredError",
      "type_:UrlSchemeInvalidError",
      "type_:UrlHostRequiredError",
      "type_:UrlBlacklistedError",
      "type_:HostnameNotFoundError",
      "type_:UrlHostMalformedError",
      "type_:UrlHostPrivateIpForbiddenError",
      "type_:TokenRequiredError",
      "type_:FileIdRequiredError",
      "type_:FileIdInvalidError",
      "type_:FileNotFoundError",
      "type_:GroupFilesInvalidError",
      "type_:GroupFileUrlParsingFailedError",
      "type_:GroupFilesNotFoundError",
      "type_:GroupIdRequiredError",
      "type_:GroupNotFoundError",
      "type_:SignatureRequiredError",
      "type_:SignatureExpirationRequiredError",
      "type_:SignatureExpirationInvalidError",
      "type_:ImageInfoColorMode",
      "type_:ImageInfoGeoLocation",
      "type_:ImageInfo",
      "type_:LegacyVideoInfoAudio",
      "type_:LegacyVideoInfoVideo",
      "type_:LegacyVideoInfo",
      "type_:SchemasImageInfoColorMode",
      "type_:SchemasImageInfoGeoLocation",
      "type_:SchemasImageInfo",
      "type_:VideoInfoAudioItem",
      "type_:VideoInfoVideoItem",
      "type_:VideoInfo",
      "type_:ContentInfoMime",
      "type_:ContentInfo",
      "type_:Metadata"
    ],
    "errors": [
      "error_:BaseUploadRequestBadRequestError",
      "error_:BaseUploadRequestForbiddenError",
      "error_:BaseUploadRequestContentTooLargeError",
      "error_:BaseUploadRequestTooManyRequestsError",
      "error_:MultipartFileUploadStartRequestBadRequestError",
      "error_:MultipartFileUploadStartRequestForbiddenError",
      "error_:MultipartFileUploadStartRequestTooManyRequestsError",
      "error_:MultipartFileUploadCompleteRequestBadRequestError",
      "error_:MultipartFileUploadCompleteRequestForbiddenError",
      "error_:MultipartFileUploadCompleteRequestNotFoundError",
      "error_:FromUrlUploadRequestBadRequestError",
      "error_:FromUrlUploadRequestForbiddenError",
      "error_:FromUrlUploadRequestTooManyRequestsError",
      "error_:FromUrlUploadStatusRequestBadRequestError",
      "error_:FileUploadInfoRequestBadRequestError",
      "error_:FileUploadInfoRequestForbiddenError",
      "error_:FileUploadInfoRequestNotFoundError",
      "error_:CreateFilesGroupRequestBadRequestError",
      "error_:CreateFilesGroupRequestForbiddenError",
      "error_:FilesGroupInfoRequestBadRequestError",
      "error_:FilesGroupInfoRequestForbiddenError",
      "error_:FilesGroupInfoRequestNotFoundError"
    ],
    "subpackages": [
      "subpackage_upload",
      "subpackage_groups"
    ],
    "hasEndpointsInTree": true
  },
  "sdkConfig": {
    "isAuthMandatory": false,
    "hasStreamingEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasFileDownloadEndpoints": false,
    "platformHeaders": {
      "language": "X-Fern-Language",
      "sdkName": "X-Fern-SDK-Name",
      "sdkVersion": "X-Fern-SDK-Version"
    }
  }
}