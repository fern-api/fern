{
  "selfHosted": false,
  "apiName": {
    "originalName": "api",
    "pascalCase": {
      "unsafeName": "API",
      "safeName": "API"
    }
  },
  "apiDisplayName": "Speechify API:",
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "bearerAuth",
        "name": {
          "name": {
            "originalName": "apiKey",
            "pascalCase": {
              "unsafeName": "APIKey",
              "safeName": "APIKey"
            }
          },
          "wireValue": "Authorization"
        },
        "valueType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "header"
      }
    ]
  },
  "headers": [
    {
      "name": {
        "name": "authorization",
        "wireValue": "Authorization"
      },
      "valueType": {
        "primitive": {
          "v1": "STRING",
          "v2": {
            "type": "string"
          }
        },
        "type": "primitive"
      },
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  ],
  "idempotencyHeaders": [],
  "types": {
    "type_audio:ExperimentalStreamRequestModel": {
      "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "inline": true,
      "name": {
        "name": "ExperimentalStreamRequestModel",
        "fernFilepath": {
          "allParts": [
            "audio"
          ],
          "packagePath": [],
          "file": "audio"
        },
        "typeId": "type_audio:ExperimentalStreamRequestModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "SimbaBase",
            "wireValue": "simba-base"
          }
        },
        "values": [
          {
            "name": {
              "name": "SimbaBase",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "SimbaEnglish",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "SimbaMultilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "SimbaTurbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_audio:GetSpeechRequestAudioFormat": {
      "docs": "The format for the output audio. Note, that the current default is \"wav\", but there's no guarantee it will not change in the future. We recommend always passing the specific param you expect.",
      "inline": true,
      "name": {
        "name": "GetSpeechRequestAudioFormat",
        "fernFilepath": {
          "allParts": [
            "audio"
          ],
          "packagePath": [],
          "file": "audio"
        },
        "typeId": "type_audio:GetSpeechRequestAudioFormat"
      },
      "shape": {
        "default": {
          "name": {
            "name": "wav",
            "wireValue": "wav"
          }
        },
        "values": [
          {
            "name": {
              "name": "wav",
              "wireValue": "wav"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "mp3",
                "snakeCase": {
                  "unsafeName": "mp3",
                  "safeName": "mp3"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MP3",
                  "safeName": "MP3"
                }
              },
              "wireValue": "mp3"
            }
          },
          {
            "name": {
              "name": "ogg",
              "wireValue": "ogg"
            }
          },
          {
            "name": {
              "name": "aac",
              "wireValue": "aac"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_audio:GetSpeechRequestModel": {
      "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "inline": true,
      "name": {
        "name": "GetSpeechRequestModel",
        "fernFilepath": {
          "allParts": [
            "audio"
          ],
          "packagePath": [],
          "file": "audio"
        },
        "typeId": "type_audio:GetSpeechRequestModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "SimbaBase",
            "wireValue": "simba-base"
          }
        },
        "values": [
          {
            "name": {
              "name": "SimbaBase",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "SimbaEnglish",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "SimbaMultilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "SimbaTurbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_audio:GetStreamRequestAccept": {
      "name": {
        "name": "GetStreamRequestAccept",
        "fernFilepath": {
          "allParts": [
            "audio"
          ],
          "packagePath": [],
          "file": "audio"
        },
        "typeId": "type_audio:GetStreamRequestAccept"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "AudioMpeg",
              "wireValue": "audio/mpeg"
            }
          },
          {
            "name": {
              "name": "AudioOgg",
              "wireValue": "audio/ogg"
            }
          },
          {
            "name": {
              "name": "AudioAac",
              "wireValue": "audio/aac"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_audio:GetStreamRequestModel": {
      "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
      "inline": true,
      "name": {
        "name": "GetStreamRequestModel",
        "fernFilepath": {
          "allParts": [
            "audio"
          ],
          "packagePath": [],
          "file": "audio"
        },
        "typeId": "type_audio:GetStreamRequestModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "SimbaBase",
            "wireValue": "simba-base"
          }
        },
        "values": [
          {
            "name": {
              "name": "SimbaBase",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "SimbaEnglish",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "SimbaMultilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "SimbaTurbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_auth:CreateAccessTokenRequestScope": {
      "docs": "The scope, or a space-delimited list of scopes the token is requested for\nin: body",
      "inline": true,
      "name": {
        "name": "CreateAccessTokenRequestScope",
        "fernFilepath": {
          "allParts": [
            "auth"
          ],
          "packagePath": [],
          "file": "auth"
        },
        "typeId": "type_auth:CreateAccessTokenRequestScope"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "AudioSpeech",
              "wireValue": "audio:speech"
            }
          },
          {
            "name": {
              "name": "AudioStream",
              "wireValue": "audio:stream"
            }
          },
          {
            "name": {
              "name": "AudioAll",
              "wireValue": "audio:all"
            }
          },
          {
            "name": {
              "name": "VoicesRead",
              "wireValue": "voices:read"
            }
          },
          {
            "name": {
              "name": "VoicesCreate",
              "wireValue": "voices:create"
            }
          },
          {
            "name": {
              "name": "VoicesDelete",
              "wireValue": "voices:delete"
            }
          },
          {
            "name": {
              "name": "VoicesAll",
              "wireValue": "voices:all"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ApiKey": {
      "name": {
        "name": {
          "originalName": "ApiKey",
          "pascalCase": {
            "unsafeName": "APIKey",
            "safeName": "APIKey"
          }
        },
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ApiKey"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "API key",
            "name": {
              "name": {
                "originalName": "api_key",
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                }
              },
              "wireValue": "api_key"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Creation time of the key",
            "name": {
              "name": "created_at",
              "wireValue": "created_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "ID of the key",
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Name of the key",
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Last updated time of the key",
            "name": {
              "name": "updated_at",
              "wireValue": "updated_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "User ID to whom the key belongs",
            "name": {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userID",
                  "safeName": "userID"
                },
                "pascalCase": {
                  "unsafeName": "UserID",
                  "safeName": "UserID"
                }
              },
              "wireValue": "user_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AccessTokenScope": {
      "docs": "The scope, or a space-delimited list of scopes the token is issued for",
      "inline": true,
      "name": {
        "name": "AccessTokenScope",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AccessTokenScope"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "AudioSpeech",
              "wireValue": "audio:speech"
            }
          },
          {
            "name": {
              "name": "AudioStream",
              "wireValue": "audio:stream"
            }
          },
          {
            "name": {
              "name": "AudioAll",
              "wireValue": "audio:all"
            }
          },
          {
            "name": {
              "name": "VoicesRead",
              "wireValue": "voices:read"
            }
          },
          {
            "name": {
              "name": "VoicesCreate",
              "wireValue": "voices:create"
            }
          },
          {
            "name": {
              "name": "VoicesDelete",
              "wireValue": "voices:delete"
            }
          },
          {
            "name": {
              "name": "VoicesAll",
              "wireValue": "voices:all"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AccessToken": {
      "name": {
        "name": "AccessToken",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AccessToken"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "access_token",
              "wireValue": "access_token"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Expiration time, in seconds from the issue time",
            "name": {
              "name": "expires_in",
              "wireValue": "expires_in"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The scope, or a space-delimited list of scopes the token is issued for",
            "name": {
              "name": "scope",
              "wireValue": "scope"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "AccessTokenScope",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:AccessTokenScope",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Token type",
            "name": {
              "name": "token_type",
              "wireValue": "token_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "bearer",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreateVoiceLanguage": {
      "name": {
        "name": "CreateVoiceLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateVoiceLanguage"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "locale",
              "wireValue": "locale"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "preview_audio",
              "wireValue": "preview_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreateVoiceModelName": {
      "inline": true,
      "name": {
        "name": "CreateVoiceModelName",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateVoiceModelName"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "SimbaBase",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "SimbaEnglish",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "SimbaMultilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "SimbaTurbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreateVoiceModel": {
      "name": {
        "name": "CreateVoiceModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateVoiceModel"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "CreateVoiceLanguage",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:CreateVoiceLanguage",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "CreateVoiceModelName",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:CreateVoiceModelName",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreatedVoiceType": {
      "inline": true,
      "name": {
        "name": "CreatedVoiceType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreatedVoiceType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "shared",
              "wireValue": "shared"
            }
          },
          {
            "name": {
              "name": "personal",
              "wireValue": "personal"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreatedVoice": {
      "name": {
        "name": "CreatedVoice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreatedVoice"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "display_name",
              "wireValue": "display_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "CreateVoiceModel",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:CreateVoiceModel",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "type",
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "CreatedVoiceType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:CreatedVoiceType",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ExperimentalStreamResponse": {
      "docs": "ExperimentalStreamResponse represents generated audio stream info",
      "name": {
        "name": "ExperimentalStreamResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ExperimentalStreamResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "URL to the synthesized audio file. It includes the expiration time and a signature in the query params.\nThe audio file will be available for download until the expiration time.\nFor the URL to work correctly, it must be used verbatim, with all the query parameters.",
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioURL",
                  "safeName": "audioURL"
                },
                "pascalCase": {
                  "unsafeName": "AudioURL",
                  "safeName": "AudioURL"
                }
              },
              "wireValue": "audio_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Expiry time of the audio file, in ISO-8601 format.",
            "name": {
              "name": "expires",
              "wireValue": "expires"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetSpeechOptionsRequest": {
      "docs": "GetSpeechOptionsRequest is the wrapper for request parameters to the client",
      "name": {
        "name": "GetSpeechOptionsRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetSpeechOptionsRequest"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Determines whether to normalize the audio loudness to a standard level.\nWhen enabled, loudness normalization aligns the audio output to the following standards:\nIntegrated loudness: -14 LUFS\nTrue peak: -2 dBTP\nLoudness range: 7 LU\nIf disabled, the audio loudness will match the original loudness of the selected voice, which may vary significantly and be either too quiet or too loud.\nEnabling loudness normalization can increase latency due to additional processing required for audio level adjustments.",
            "name": {
              "name": "loudness_normalization",
              "wireValue": "loudness_normalization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetSpeechResponseAudioFormat": {
      "docs": "The format of the audio data",
      "inline": true,
      "name": {
        "name": "GetSpeechResponseAudioFormat",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetSpeechResponseAudioFormat"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "wav",
              "wireValue": "wav"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "mp3",
                "snakeCase": {
                  "unsafeName": "mp3",
                  "safeName": "mp3"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MP3",
                  "safeName": "MP3"
                }
              },
              "wireValue": "mp3"
            }
          },
          {
            "name": {
              "name": "ogg",
              "wireValue": "ogg"
            }
          },
          {
            "name": {
              "name": "aac",
              "wireValue": "aac"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetSpeechResponse": {
      "name": {
        "name": "GetSpeechResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetSpeechResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Synthesized speech audio, Base64-encoded",
            "name": {
              "name": "audio_data",
              "wireValue": "audio_data"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The format of the audio data",
            "name": {
              "name": "audio_format",
              "wireValue": "audio_format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "GetSpeechResponseAudioFormat",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:GetSpeechResponseAudioFormat",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The number of billable characters processed in the request.",
            "name": {
              "name": "billable_characters_count",
              "wireValue": "billable_characters_count"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "speech_marks",
              "wireValue": "speech_marks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "SpeechMarks",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SpeechMarks",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetStreamOptionsRequest": {
      "docs": "GetStreamOptionsRequest is the wrapper for request parameters to the client",
      "name": {
        "name": "GetStreamOptionsRequest",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetStreamOptionsRequest"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Determines whether to normalize the audio loudness to a standard level.\nWhen enabled, loudness normalization aligns the audio output to the following standards:\nIntegrated loudness: -14 LUFS\nTrue peak: -2 dBTP\nLoudness range: 7 LU\nIf disabled, the audio loudness will match the original loudness of the selected voice, which may vary significantly and be either too quiet or too loud.\nEnabling loudness normalization can increase latency due to additional processing required for audio level adjustments.",
            "name": {
              "name": "loudness_normalization",
              "wireValue": "loudness_normalization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "default": true,
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetVoiceGender": {
      "inline": true,
      "name": {
        "name": "GetVoiceGender",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetVoiceGender"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "male",
              "wireValue": "male"
            }
          },
          {
            "name": {
              "name": "female",
              "wireValue": "female"
            }
          },
          {
            "name": {
              "name": "notSpecified",
              "wireValue": "notSpecified"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetVoiceType": {
      "inline": true,
      "name": {
        "name": "GetVoiceType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetVoiceType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "shared",
              "wireValue": "shared"
            }
          },
          {
            "name": {
              "name": "personal",
              "wireValue": "personal"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetVoice": {
      "name": {
        "name": "GetVoice",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetVoice"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "avatar_image",
              "wireValue": "avatar_image"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "display_name",
              "wireValue": "display_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "gender",
              "wireValue": "gender"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "GetVoiceGender",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:GetVoiceGender",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "models",
              "wireValue": "models"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "GetVoicesModel",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:GetVoicesModel",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "preview_audio",
              "wireValue": "preview_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "tags",
              "wireValue": "tags"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "type",
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "GetVoiceType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:GetVoiceType",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetVoiceLanguage": {
      "name": {
        "name": "GetVoiceLanguage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetVoiceLanguage"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "locale",
              "wireValue": "locale"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "preview_audio",
              "wireValue": "preview_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetVoicesModelName": {
      "inline": true,
      "name": {
        "name": "GetVoicesModelName",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetVoicesModelName"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "SimbaBase",
              "wireValue": "simba-base"
            }
          },
          {
            "name": {
              "name": "SimbaEnglish",
              "wireValue": "simba-english"
            }
          },
          {
            "name": {
              "name": "SimbaMultilingual",
              "wireValue": "simba-multilingual"
            }
          },
          {
            "name": {
              "name": "SimbaTurbo",
              "wireValue": "simba-turbo"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:GetVoicesModel": {
      "name": {
        "name": "GetVoicesModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:GetVoicesModel"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "languages",
              "wireValue": "languages"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "GetVoiceLanguage",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:GetVoiceLanguage",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "name",
              "wireValue": "name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "GetVoicesModelName",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:GetVoicesModelName",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:NestedChunk": {
      "docs": "It details the type of segment, its start and end points in the text, and its start and end times in the synthesized speech audio.",
      "name": {
        "name": "NestedChunk",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:NestedChunk"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_time",
              "wireValue": "end_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_time",
              "wireValue": "start_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "type",
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "value",
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:OAuthErrorError": {
      "inline": true,
      "name": {
        "name": "OAuthErrorError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:OAuthErrorError"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "invalid_client",
              "wireValue": "invalid_client"
            }
          },
          {
            "name": {
              "name": "unauthorized_client",
              "wireValue": "unauthorized_client"
            }
          },
          {
            "name": {
              "name": "invalid_request",
              "wireValue": "invalid_request"
            }
          },
          {
            "name": {
              "name": "unsupported_grant_type",
              "wireValue": "unsupported_grant_type"
            }
          },
          {
            "name": {
              "name": "invalid_scope",
              "wireValue": "invalid_scope"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:OAuthError": {
      "name": {
        "name": "OAuthError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:OAuthError"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "error",
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "OAuthErrorError",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:OAuthErrorError",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "error_description",
              "wireValue": "error_description"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SpeechMarks": {
      "docs": "It is used to annotate the audio data with metadata about the synthesis process, like word timing or phoneme details.",
      "name": {
        "name": "SpeechMarks",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SpeechMarks"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Array of NestedChunk, each providing detailed segment information within the synthesized speech.",
            "name": {
              "name": "chunks",
              "wireValue": "chunks"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "NestedChunk",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:NestedChunk",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end_time",
              "wireValue": "end_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start_time",
              "wireValue": "start_time"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "type",
              "wireValue": "type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "value",
              "wireValue": "value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    }
  },
  "errors": {
    "error_:ExperimentalStreamCreateRequestBadRequestError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:ExperimentalStreamCreateRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestBadRequestError",
        "wireValue": "ExperimentalStreamCreateRequestBadRequestError"
      },
      "docs": "Invalid request params",
      "statusCode": 400,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:ExperimentalStreamCreateRequestPaymentRequiredError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:ExperimentalStreamCreateRequestPaymentRequiredError"
      },
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestPaymentRequiredError",
        "wireValue": "ExperimentalStreamCreateRequestPaymentRequiredError"
      },
      "docs": "Insufficient credits",
      "statusCode": 402,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:ExperimentalStreamCreateRequestForbiddenError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:ExperimentalStreamCreateRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestForbiddenError",
        "wireValue": "ExperimentalStreamCreateRequestForbiddenError"
      },
      "docs": "Request access rejected",
      "statusCode": 403,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:ExperimentalStreamCreateRequestInternalServerError": {
      "name": {
        "name": "ExperimentalStreamCreateRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:ExperimentalStreamCreateRequestInternalServerError"
      },
      "discriminantValue": {
        "name": "ExperimentalStreamCreateRequestInternalServerError",
        "wireValue": "ExperimentalStreamCreateRequestInternalServerError"
      },
      "docs": "Internal server error",
      "statusCode": 500,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetSpeechRequestBadRequestError": {
      "name": {
        "name": "GetSpeechRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetSpeechRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "GetSpeechRequestBadRequestError",
        "wireValue": "GetSpeechRequestBadRequestError"
      },
      "docs": "Invalid request params",
      "statusCode": 400,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetSpeechRequestPaymentRequiredError": {
      "name": {
        "name": "GetSpeechRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetSpeechRequestPaymentRequiredError"
      },
      "discriminantValue": {
        "name": "GetSpeechRequestPaymentRequiredError",
        "wireValue": "GetSpeechRequestPaymentRequiredError"
      },
      "docs": "Insufficient credits",
      "statusCode": 402,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetSpeechRequestForbiddenError": {
      "name": {
        "name": "GetSpeechRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetSpeechRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "GetSpeechRequestForbiddenError",
        "wireValue": "GetSpeechRequestForbiddenError"
      },
      "docs": "Request access rejected",
      "statusCode": 403,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetSpeechRequestInternalServerError": {
      "name": {
        "name": "GetSpeechRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetSpeechRequestInternalServerError"
      },
      "discriminantValue": {
        "name": "GetSpeechRequestInternalServerError",
        "wireValue": "GetSpeechRequestInternalServerError"
      },
      "docs": "Internal server error",
      "statusCode": 500,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetStreamRequestBadRequestError": {
      "name": {
        "name": "GetStreamRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetStreamRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "GetStreamRequestBadRequestError",
        "wireValue": "GetStreamRequestBadRequestError"
      },
      "docs": "Invalid request params",
      "statusCode": 400,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetStreamRequestPaymentRequiredError": {
      "name": {
        "name": "GetStreamRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetStreamRequestPaymentRequiredError"
      },
      "discriminantValue": {
        "name": "GetStreamRequestPaymentRequiredError",
        "wireValue": "GetStreamRequestPaymentRequiredError"
      },
      "docs": "Insufficient credits",
      "statusCode": 402,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetStreamRequestForbiddenError": {
      "name": {
        "name": "GetStreamRequestForbiddenError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetStreamRequestForbiddenError"
      },
      "discriminantValue": {
        "name": "GetStreamRequestForbiddenError",
        "wireValue": "GetStreamRequestForbiddenError"
      },
      "docs": "Request access rejected",
      "statusCode": 403,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetStreamRequestInternalServerError": {
      "name": {
        "name": "GetStreamRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetStreamRequestInternalServerError"
      },
      "discriminantValue": {
        "name": "GetStreamRequestInternalServerError",
        "wireValue": "GetStreamRequestInternalServerError"
      },
      "docs": "Internal server error",
      "statusCode": 500,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:CreateAccessTokenRequestBadRequestError": {
      "name": {
        "name": "CreateAccessTokenRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:CreateAccessTokenRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "CreateAccessTokenRequestBadRequestError",
        "wireValue": "CreateAccessTokenRequestBadRequestError"
      },
      "docs": "Contains the details of the error",
      "statusCode": 400,
      "type": {
        "name": "OAuthError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:OAuthError",
        "type": "named"
      },
      "examples": [
        {
          "jsonExample": {},
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:OAuthError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "OAuthError"
              },
              "shape": {
                "properties": [],
                "type": "object"
              },
              "type": "named"
            },
            "jsonExample": {}
          }
        }
      ]
    },
    "error_:GetVoicesRequestNotFoundError": {
      "name": {
        "name": "GetVoicesRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetVoicesRequestNotFoundError"
      },
      "discriminantValue": {
        "name": "GetVoicesRequestNotFoundError",
        "wireValue": "GetVoicesRequestNotFoundError"
      },
      "docs": "No voices found",
      "statusCode": 404,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GetVoicesRequestInternalServerError": {
      "name": {
        "name": "GetVoicesRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GetVoicesRequestInternalServerError"
      },
      "discriminantValue": {
        "name": "GetVoicesRequestInternalServerError",
        "wireValue": "GetVoicesRequestInternalServerError"
      },
      "docs": "Internal server error",
      "statusCode": 500,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:CreateVoiceRequestBadRequestError": {
      "name": {
        "name": "CreateVoiceRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:CreateVoiceRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "CreateVoiceRequestBadRequestError",
        "wireValue": "CreateVoiceRequestBadRequestError"
      },
      "docs": "Invalid request params",
      "statusCode": 400,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:CreateVoiceRequestPaymentRequiredError": {
      "name": {
        "name": "CreateVoiceRequestPaymentRequiredError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:CreateVoiceRequestPaymentRequiredError"
      },
      "discriminantValue": {
        "name": "CreateVoiceRequestPaymentRequiredError",
        "wireValue": "CreateVoiceRequestPaymentRequiredError"
      },
      "docs": "Current billing plan does not have access to voice cloning",
      "statusCode": 402,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:CreateVoiceRequestInternalServerError": {
      "name": {
        "name": "CreateVoiceRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:CreateVoiceRequestInternalServerError"
      },
      "discriminantValue": {
        "name": "CreateVoiceRequestInternalServerError",
        "wireValue": "CreateVoiceRequestInternalServerError"
      },
      "docs": "Internal server error",
      "statusCode": 500,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:DeleteVoiceRequestBadRequestError": {
      "name": {
        "name": "DeleteVoiceRequestBadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:DeleteVoiceRequestBadRequestError"
      },
      "discriminantValue": {
        "name": "DeleteVoiceRequestBadRequestError",
        "wireValue": "DeleteVoiceRequestBadRequestError"
      },
      "docs": "Missing or invalid voice ID",
      "statusCode": 400,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:DeleteVoiceRequestNotFoundError": {
      "name": {
        "name": "DeleteVoiceRequestNotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:DeleteVoiceRequestNotFoundError"
      },
      "discriminantValue": {
        "name": "DeleteVoiceRequestNotFoundError",
        "wireValue": "DeleteVoiceRequestNotFoundError"
      },
      "docs": "Voice not found",
      "statusCode": 404,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:DeleteVoiceRequestInternalServerError": {
      "name": {
        "name": "DeleteVoiceRequestInternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:DeleteVoiceRequestInternalServerError"
      },
      "discriminantValue": {
        "name": "DeleteVoiceRequestInternalServerError",
        "wireValue": "DeleteVoiceRequestInternalServerError"
      },
      "docs": "Internal server error",
      "statusCode": 500,
      "type": {
        "type": "unknown"
      },
      "examples": []
    }
  },
  "services": {
    "service_audio": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "audio"
          ],
          "packagePath": [],
          "file": "audio"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Gets the stream speech for the given input",
          "id": "endpoint_audio.ExperimentalStreamCreate",
          "name": "ExperimentalStreamCreate",
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/experimental/audio/stream",
            "parts": []
          },
          "fullPath": {
            "head": "experimental/audio/stream",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "ExperimentalStreamRequest",
            "extends": [],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
                "name": {
                  "name": "input",
                  "wireValue": "input"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
                "name": {
                  "name": "language",
                  "wireValue": "language"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
                "name": {
                  "name": "model",
                  "wireValue": "model"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "ExperimentalStreamRequestModel",
                      "fernFilepath": {
                        "allParts": [
                          "audio"
                        ],
                        "packagePath": [],
                        "file": "audio"
                      },
                      "typeId": "type_audio:ExperimentalStreamRequestModel",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
                "name": {
                  "name": {
                    "originalName": "voice_id",
                    "camelCase": {
                      "unsafeName": "voiceID",
                      "safeName": "voiceID"
                    },
                    "pascalCase": {
                      "unsafeName": "VoiceID",
                      "safeName": "VoiceID"
                    }
                  },
                  "wireValue": "voice_id"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "ExperimentalStreamRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "",
                "responseBodyType": {
                  "name": "ExperimentalStreamResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ExperimentalStreamResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ExperimentalStreamCreateRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ExperimentalStreamCreateRequestPaymentRequiredError"
              }
            },
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ExperimentalStreamCreateRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "ExperimentalStreamCreateRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ExperimentalStreamCreateRequestInternalServerError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Gets the speech data for the given input",
          "id": "endpoint_audio.GetSpeech",
          "name": "GetSpeech",
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/v1/audio/speech",
            "parts": []
          },
          "fullPath": {
            "head": "v1/audio/speech",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "GetSpeechRequest",
            "extends": [],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "The format for the output audio. Note, that the current default is \"wav\", but there's no guarantee it will not change in the future. We recommend always passing the specific param you expect.",
                "name": {
                  "name": "audio_format",
                  "wireValue": "audio_format"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "GetSpeechRequestAudioFormat",
                      "fernFilepath": {
                        "allParts": [
                          "audio"
                        ],
                        "packagePath": [],
                        "file": "audio"
                      },
                      "typeId": "type_audio:GetSpeechRequestAudioFormat",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
                "name": {
                  "name": "input",
                  "wireValue": "input"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
                "name": {
                  "name": "language",
                  "wireValue": "language"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
                "name": {
                  "name": "model",
                  "wireValue": "model"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "GetSpeechRequestModel",
                      "fernFilepath": {
                        "allParts": [
                          "audio"
                        ],
                        "packagePath": [],
                        "file": "audio"
                      },
                      "typeId": "type_audio:GetSpeechRequestModel",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "name": {
                  "name": "options",
                  "wireValue": "options"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "GetSpeechOptionsRequest",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:GetSpeechOptionsRequest",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
                "name": {
                  "name": {
                    "originalName": "voice_id",
                    "camelCase": {
                      "unsafeName": "voiceID",
                      "safeName": "voiceID"
                    },
                    "pascalCase": {
                      "unsafeName": "VoiceID",
                      "safeName": "VoiceID"
                    }
                  },
                  "wireValue": "voice_id"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "GetSpeechRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "",
                "responseBodyType": {
                  "name": "GetSpeechResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:GetSpeechResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "GetSpeechRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetSpeechRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "GetSpeechRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetSpeechRequestPaymentRequiredError"
              }
            },
            {
              "error": {
                "name": "GetSpeechRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetSpeechRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "GetSpeechRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetSpeechRequestInternalServerError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Gets the stream speech for the given input",
          "id": "endpoint_audio.GetStream",
          "name": "GetStream",
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/v1/audio/stream",
            "parts": []
          },
          "fullPath": {
            "head": "v1/audio/stream",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": "accept",
                "wireValue": "Accept"
              },
              "valueType": {
                "name": "GetStreamRequestAccept",
                "fernFilepath": {
                  "allParts": [
                    "audio"
                  ],
                  "packagePath": [],
                  "file": "audio"
                },
                "typeId": "type_audio:GetStreamRequestAccept",
                "type": "named"
              },
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "requestBody": {
            "name": "GetStreamRequest",
            "extends": [],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "Plain text or SSML to be synthesized to speech.\nRefer to https://docs.sws.speechify.com/docs/api-limits for the input size limits.\nEmotion, Pitch and Speed Rate are configured in the ssml input, please refer to the ssml documentation for more information: https://docs.sws.speechify.com/docs/ssml#prosody",
                "name": {
                  "name": "input",
                  "wireValue": "input"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Language of the input. Follow the format of an ISO 639-1 language code and an ISO 3166-1 region code, separated by a hyphen, e.g. en-US.\nPlease refer to the list of the supported languages and recommendations regarding this parameter: https://docs.sws.speechify.com/docs/language-support.",
                "name": {
                  "name": "language",
                  "wireValue": "language"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Model used for audio synthesis\nsimba-base ModelBase  ModelBase is deprecated. Use simba-english or simba-multilingual instead.  @deprecated\nsimba-english ModelEnglish\nsimba-multilingual ModelMultilingual\nsimba-turbo ModelTurbo",
                "name": {
                  "name": "model",
                  "wireValue": "model"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "GetStreamRequestModel",
                      "fernFilepath": {
                        "allParts": [
                          "audio"
                        ],
                        "packagePath": [],
                        "file": "audio"
                      },
                      "typeId": "type_audio:GetStreamRequestModel",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "name": {
                  "name": "options",
                  "wireValue": "options"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "GetStreamOptionsRequest",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:GetStreamOptionsRequest",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Id of the voice to be used for synthesizing speech. Refer to /v1/voices endpoint for available voices",
                "name": {
                  "name": {
                    "originalName": "voice_id",
                    "camelCase": {
                      "unsafeName": "voiceID",
                      "safeName": "voiceID"
                    },
                    "pascalCase": {
                      "unsafeName": "VoiceID",
                      "safeName": "VoiceID"
                    }
                  },
                  "wireValue": "voice_id"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "GetStreamRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "",
                "responseBodyType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "GetStreamRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetStreamRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "GetStreamRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetStreamRequestPaymentRequiredError"
              }
            },
            {
              "error": {
                "name": "GetStreamRequestForbiddenError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetStreamRequestForbiddenError"
              }
            },
            {
              "error": {
                "name": "GetStreamRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetStreamRequestInternalServerError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    },
    "service_auth": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "auth"
          ],
          "packagePath": [],
          "file": "auth"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Create a new API token for the logged in user",
          "id": "endpoint_auth.CreateAccessToken",
          "name": "CreateAccessToken",
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/v1/auth/token",
            "parts": []
          },
          "fullPath": {
            "head": "v1/auth/token",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "CreateAccessTokenRequest",
            "extends": [],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "in: body",
                "name": {
                  "name": "grant_type",
                  "wireValue": "grant_type"
                },
                "valueType": {
                  "container": {
                    "literal": {
                      "string": "client_credentials",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The scope, or a space-delimited list of scopes the token is requested for\nin: body",
                "name": {
                  "name": "scope",
                  "wireValue": "scope"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "CreateAccessTokenRequestScope",
                      "fernFilepath": {
                        "allParts": [
                          "auth"
                        ],
                        "packagePath": [],
                        "file": "auth"
                      },
                      "typeId": "type_auth:CreateAccessTokenRequestScope",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "CreateAccessTokenRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Contains the details of the token which can be used by the user to access the API",
                "responseBodyType": {
                  "name": "AccessToken",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:AccessToken",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "CreateAccessTokenRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:CreateAccessTokenRequestBadRequestError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    },
    "service_apikey": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "apikey"
          ],
          "packagePath": [],
          "file": "apikey"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Fetches all the API keys for the logged in user",
          "id": "endpoint_apikey.ListAPIKeys",
          "name": {
            "originalName": "ListAPIKeys",
            "camelCase": {
              "unsafeName": "listAPIKeys",
              "safeName": "listAPIKeys"
            },
            "pascalCase": {
              "unsafeName": "ListAPIKeys",
              "safeName": "ListAPIKeys"
            }
          },
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "idempotent": false,
          "method": "GET",
          "path": {
            "head": "/v1/token",
            "parts": []
          },
          "fullPath": {
            "head": "v1/token",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "An array of all API keys for the user for the given request",
                "responseBodyType": {
                  "container": {
                    "list": {
                      "name": {
                        "originalName": "ApiKey",
                        "pascalCase": {
                          "unsafeName": "APIKey",
                          "safeName": "APIKey"
                        }
                      },
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:ApiKey",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Create a new API key for the logged in user",
          "id": "endpoint_apikey.CreateAPIKey",
          "name": {
            "originalName": "CreateAPIKey",
            "camelCase": {
              "unsafeName": "createAPIKey",
              "safeName": "createAPIKey"
            },
            "pascalCase": {
              "unsafeName": "CreateAPIKey",
              "safeName": "CreateAPIKey"
            }
          },
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/v1/token",
            "parts": []
          },
          "fullPath": {
            "head": "v1/token",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "APIKeyResponseWrapper contains the details of the API key which can be used by the user to access the API",
                "responseBodyType": {
                  "name": {
                    "originalName": "ApiKey",
                    "pascalCase": {
                      "unsafeName": "APIKey",
                      "safeName": "APIKey"
                    }
                  },
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ApiKey",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Deletes the given API key for the logged in user",
          "id": "endpoint_apikey.DeleteAPIKey",
          "name": {
            "originalName": "DeleteAPIKey",
            "camelCase": {
              "unsafeName": "deleteAPIKey",
              "safeName": "deleteAPIKey"
            },
            "pascalCase": {
              "unsafeName": "DeleteAPIKey",
              "safeName": "DeleteAPIKey"
            }
          },
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "idempotent": false,
          "method": "DELETE",
          "path": {
            "head": "/v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "fullPath": {
            "head": "v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "The ID of the API key to delete",
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "The ID of the API key to delete",
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {},
          "errors": [],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Update API key name for the logged in user",
          "id": "endpoint_apikey.UpdateApiKey",
          "name": {
            "originalName": "UpdateApiKey",
            "camelCase": {
              "unsafeName": "updateAPIKey",
              "safeName": "updateAPIKey"
            },
            "pascalCase": {
              "unsafeName": "UpdateAPIKey",
              "safeName": "UpdateAPIKey"
            }
          },
          "auth": true,
          "security": [
            {
              "userAuth": []
            }
          ],
          "idempotent": false,
          "method": "PATCH",
          "path": {
            "head": "/v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "fullPath": {
            "head": "v1/token/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "The ID of the key to edit",
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "The ID of the key to edit",
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "requestBodyType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "contentType": "application/json",
            "type": "reference"
          },
          "sdkRequest": {
            "shape": {
              "value": {
                "requestBodyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "typeReference"
              },
              "type": "justRequestBody"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "APIKeyResponseWrapper contains the details of the API key which can be used by the user to access the API",
                "responseBodyType": {
                  "name": {
                    "originalName": "ApiKey",
                    "pascalCase": {
                      "unsafeName": "APIKey",
                      "safeName": "APIKey"
                    }
                  },
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ApiKey",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    },
    "service_voices": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "voices"
          ],
          "packagePath": [],
          "file": "voices"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Gets the list of voices available for the user",
          "id": "endpoint_voices.GetVoices",
          "name": "GetVoices",
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "idempotent": false,
          "method": "GET",
          "path": {
            "head": "/v1/voices",
            "parts": []
          },
          "fullPath": {
            "head": "v1/voices",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "A list of voices",
                "responseBodyType": {
                  "container": {
                    "list": {
                      "name": "GetVoice",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:GetVoice",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "GetVoicesRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetVoicesRequestNotFoundError"
              }
            },
            {
              "error": {
                "name": "GetVoicesRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GetVoicesRequestInternalServerError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Create a personal (cloned) voice for the user",
          "id": "endpoint_voices.CreateVoice",
          "name": "CreateVoice",
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "idempotent": false,
          "method": "POST",
          "path": {
            "head": "/v1/voices",
            "parts": []
          },
          "fullPath": {
            "head": "v1/voices",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "contentType": "multipart/form-data",
            "name": "CreateVoiceRequest",
            "properties": [
              {
                "docs": "Name of the personal voice",
                "name": {
                  "name": "name",
                  "wireValue": "name"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "style": "form",
                "type": "bodyProperty"
              },
              {
                "value": {
                  "key": {
                    "name": "sample",
                    "wireValue": "sample"
                  },
                  "isOptional": false,
                  "docs": "Audio sample file",
                  "type": "file"
                },
                "type": "file"
              },
              {
                "docs": "User consent information in JSON format: {\"fullName\": \"\", \"email\": \"\"}\nFor example, {\"fullName\": \"John Doe\", \"email\": \"john@example.com\"}\nThis should include the fullName and email of the consenting individual.",
                "name": {
                  "name": "consent",
                  "wireValue": "consent"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                },
                "style": "form",
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "CreateVoiceRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "A created voice",
                "responseBodyType": {
                  "name": "CreatedVoice",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:CreatedVoice",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "CreateVoiceRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:CreateVoiceRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "CreateVoiceRequestPaymentRequiredError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:CreateVoiceRequestPaymentRequiredError"
              }
            },
            {
              "error": {
                "name": "CreateVoiceRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:CreateVoiceRequestInternalServerError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Delete a personal (cloned) voice",
          "id": "endpoint_voices.DeleteVoice",
          "name": "DeleteVoice",
          "auth": true,
          "security": [
            {
              "bearerAuth": []
            }
          ],
          "idempotent": false,
          "method": "DELETE",
          "path": {
            "head": "/v1/voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "fullPath": {
            "head": "v1/voices/",
            "parts": [
              {
                "pathParameter": "id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "The ID of the voice to delete",
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "The ID of the voice to delete",
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {},
          "errors": [
            {
              "error": {
                "name": "DeleteVoiceRequestBadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:DeleteVoiceRequestBadRequestError"
              }
            },
            {
              "error": {
                "name": "DeleteVoiceRequestNotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:DeleteVoiceRequestNotFoundError"
              }
            },
            {
              "error": {
                "name": "DeleteVoiceRequestInternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:DeleteVoiceRequestInternalServerError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceID",
          "safeName": "errorInstanceID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceID",
          "safeName": "ErrorInstanceID"
        }
      },
      "wireValue": "errorInstanceId"
    }
  },
  "environments": {
    "defaultEnvironment": "Default",
    "environments": {
      "environments": [
        {
          "id": "Default",
          "name": "Default",
          "url": "https://api.sws.speechify.com"
        }
      ],
      "type": "singleBaseUrl"
    }
  },
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "pathParameters": [],
  "variables": [],
  "serviceTypeReferenceInfo": {
    "typesReferencedOnlyByService": {
      "service_audio": [
        "type_audio:ExperimentalStreamRequestModel",
        "type_audio:GetSpeechRequestAudioFormat",
        "type_audio:GetSpeechRequestModel",
        "type_audio:GetStreamRequestAccept",
        "type_audio:GetStreamRequestModel",
        "type_:ExperimentalStreamResponse",
        "type_:GetSpeechOptionsRequest",
        "type_:GetSpeechResponseAudioFormat",
        "type_:GetSpeechResponse",
        "type_:GetStreamOptionsRequest",
        "type_:NestedChunk",
        "type_:SpeechMarks"
      ],
      "service_auth": [
        "type_auth:CreateAccessTokenRequestScope",
        "type_:AccessTokenScope",
        "type_:AccessToken"
      ],
      "service_apikey": [
        "type_:ApiKey"
      ],
      "service_voices": [
        "type_:CreateVoiceLanguage",
        "type_:CreateVoiceModelName",
        "type_:CreateVoiceModel",
        "type_:CreatedVoiceType",
        "type_:CreatedVoice",
        "type_:GetVoiceGender",
        "type_:GetVoiceType",
        "type_:GetVoice",
        "type_:GetVoiceLanguage",
        "type_:GetVoicesModelName",
        "type_:GetVoicesModel"
      ]
    },
    "sharedTypes": [
      "type_:OAuthErrorError",
      "type_:OAuthError"
    ]
  },
  "webhookGroups": {},
  "websocketChannels": {},
  "dynamic": {
    "version": "1.0.0",
    "types": {
      "type_audio:ExperimentalStreamRequestModel": {
        "declaration": {
          "name": {
            "originalName": "ExperimentalStreamRequestModel",
            "camelCase": {
              "unsafeName": "experimentalStreamRequestModel",
              "safeName": "experimentalStreamRequestModel"
            },
            "pascalCase": {
              "unsafeName": "ExperimentalStreamRequestModel",
              "safeName": "ExperimentalStreamRequestModel"
            },
            "snakeCase": {
              "unsafeName": "experimental_stream_request_model",
              "safeName": "experimental_stream_request_model"
            },
            "screamingSnakeCase": {
              "unsafeName": "EXPERIMENTAL_STREAM_REQUEST_MODEL",
              "safeName": "EXPERIMENTAL_STREAM_REQUEST_MODEL"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "SimbaBase",
              "camelCase": {
                "unsafeName": "simbaBase",
                "safeName": "simbaBase"
              },
              "pascalCase": {
                "unsafeName": "SimbaBase",
                "safeName": "SimbaBase"
              },
              "snakeCase": {
                "unsafeName": "simba_base",
                "safeName": "simba_base"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_BASE",
                "safeName": "SIMBA_BASE"
              }
            },
            "wireValue": "simba-base"
          },
          {
            "name": {
              "originalName": "SimbaEnglish",
              "camelCase": {
                "unsafeName": "simbaEnglish",
                "safeName": "simbaEnglish"
              },
              "pascalCase": {
                "unsafeName": "SimbaEnglish",
                "safeName": "SimbaEnglish"
              },
              "snakeCase": {
                "unsafeName": "simba_english",
                "safeName": "simba_english"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_ENGLISH",
                "safeName": "SIMBA_ENGLISH"
              }
            },
            "wireValue": "simba-english"
          },
          {
            "name": {
              "originalName": "SimbaMultilingual",
              "camelCase": {
                "unsafeName": "simbaMultilingual",
                "safeName": "simbaMultilingual"
              },
              "pascalCase": {
                "unsafeName": "SimbaMultilingual",
                "safeName": "SimbaMultilingual"
              },
              "snakeCase": {
                "unsafeName": "simba_multilingual",
                "safeName": "simba_multilingual"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_MULTILINGUAL",
                "safeName": "SIMBA_MULTILINGUAL"
              }
            },
            "wireValue": "simba-multilingual"
          },
          {
            "name": {
              "originalName": "SimbaTurbo",
              "camelCase": {
                "unsafeName": "simbaTurbo",
                "safeName": "simbaTurbo"
              },
              "pascalCase": {
                "unsafeName": "SimbaTurbo",
                "safeName": "SimbaTurbo"
              },
              "snakeCase": {
                "unsafeName": "simba_turbo",
                "safeName": "simba_turbo"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_TURBO",
                "safeName": "SIMBA_TURBO"
              }
            },
            "wireValue": "simba-turbo"
          }
        ],
        "type": "enum"
      },
      "type_audio:GetSpeechRequestAudioFormat": {
        "declaration": {
          "name": {
            "originalName": "GetSpeechRequestAudioFormat",
            "camelCase": {
              "unsafeName": "getSpeechRequestAudioFormat",
              "safeName": "getSpeechRequestAudioFormat"
            },
            "pascalCase": {
              "unsafeName": "GetSpeechRequestAudioFormat",
              "safeName": "GetSpeechRequestAudioFormat"
            },
            "snakeCase": {
              "unsafeName": "get_speech_request_audio_format",
              "safeName": "get_speech_request_audio_format"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPEECH_REQUEST_AUDIO_FORMAT",
              "safeName": "GET_SPEECH_REQUEST_AUDIO_FORMAT"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "wav",
              "camelCase": {
                "unsafeName": "wav",
                "safeName": "wav"
              },
              "pascalCase": {
                "unsafeName": "Wav",
                "safeName": "Wav"
              },
              "snakeCase": {
                "unsafeName": "wav",
                "safeName": "wav"
              },
              "screamingSnakeCase": {
                "unsafeName": "WAV",
                "safeName": "WAV"
              }
            },
            "wireValue": "wav"
          },
          {
            "name": {
              "originalName": "mp3",
              "camelCase": {
                "unsafeName": "mp3",
                "safeName": "mp3"
              },
              "pascalCase": {
                "unsafeName": "Mp3",
                "safeName": "Mp3"
              },
              "snakeCase": {
                "unsafeName": "mp3",
                "safeName": "mp3"
              },
              "screamingSnakeCase": {
                "unsafeName": "MP3",
                "safeName": "MP3"
              }
            },
            "wireValue": "mp3"
          },
          {
            "name": {
              "originalName": "ogg",
              "camelCase": {
                "unsafeName": "ogg",
                "safeName": "ogg"
              },
              "pascalCase": {
                "unsafeName": "Ogg",
                "safeName": "Ogg"
              },
              "snakeCase": {
                "unsafeName": "ogg",
                "safeName": "ogg"
              },
              "screamingSnakeCase": {
                "unsafeName": "OGG",
                "safeName": "OGG"
              }
            },
            "wireValue": "ogg"
          },
          {
            "name": {
              "originalName": "aac",
              "camelCase": {
                "unsafeName": "aac",
                "safeName": "aac"
              },
              "pascalCase": {
                "unsafeName": "Aac",
                "safeName": "Aac"
              },
              "snakeCase": {
                "unsafeName": "aac",
                "safeName": "aac"
              },
              "screamingSnakeCase": {
                "unsafeName": "AAC",
                "safeName": "AAC"
              }
            },
            "wireValue": "aac"
          }
        ],
        "type": "enum"
      },
      "type_audio:GetSpeechRequestModel": {
        "declaration": {
          "name": {
            "originalName": "GetSpeechRequestModel",
            "camelCase": {
              "unsafeName": "getSpeechRequestModel",
              "safeName": "getSpeechRequestModel"
            },
            "pascalCase": {
              "unsafeName": "GetSpeechRequestModel",
              "safeName": "GetSpeechRequestModel"
            },
            "snakeCase": {
              "unsafeName": "get_speech_request_model",
              "safeName": "get_speech_request_model"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPEECH_REQUEST_MODEL",
              "safeName": "GET_SPEECH_REQUEST_MODEL"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "SimbaBase",
              "camelCase": {
                "unsafeName": "simbaBase",
                "safeName": "simbaBase"
              },
              "pascalCase": {
                "unsafeName": "SimbaBase",
                "safeName": "SimbaBase"
              },
              "snakeCase": {
                "unsafeName": "simba_base",
                "safeName": "simba_base"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_BASE",
                "safeName": "SIMBA_BASE"
              }
            },
            "wireValue": "simba-base"
          },
          {
            "name": {
              "originalName": "SimbaEnglish",
              "camelCase": {
                "unsafeName": "simbaEnglish",
                "safeName": "simbaEnglish"
              },
              "pascalCase": {
                "unsafeName": "SimbaEnglish",
                "safeName": "SimbaEnglish"
              },
              "snakeCase": {
                "unsafeName": "simba_english",
                "safeName": "simba_english"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_ENGLISH",
                "safeName": "SIMBA_ENGLISH"
              }
            },
            "wireValue": "simba-english"
          },
          {
            "name": {
              "originalName": "SimbaMultilingual",
              "camelCase": {
                "unsafeName": "simbaMultilingual",
                "safeName": "simbaMultilingual"
              },
              "pascalCase": {
                "unsafeName": "SimbaMultilingual",
                "safeName": "SimbaMultilingual"
              },
              "snakeCase": {
                "unsafeName": "simba_multilingual",
                "safeName": "simba_multilingual"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_MULTILINGUAL",
                "safeName": "SIMBA_MULTILINGUAL"
              }
            },
            "wireValue": "simba-multilingual"
          },
          {
            "name": {
              "originalName": "SimbaTurbo",
              "camelCase": {
                "unsafeName": "simbaTurbo",
                "safeName": "simbaTurbo"
              },
              "pascalCase": {
                "unsafeName": "SimbaTurbo",
                "safeName": "SimbaTurbo"
              },
              "snakeCase": {
                "unsafeName": "simba_turbo",
                "safeName": "simba_turbo"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_TURBO",
                "safeName": "SIMBA_TURBO"
              }
            },
            "wireValue": "simba-turbo"
          }
        ],
        "type": "enum"
      },
      "type_audio:GetStreamRequestAccept": {
        "declaration": {
          "name": {
            "originalName": "GetStreamRequestAccept",
            "camelCase": {
              "unsafeName": "getStreamRequestAccept",
              "safeName": "getStreamRequestAccept"
            },
            "pascalCase": {
              "unsafeName": "GetStreamRequestAccept",
              "safeName": "GetStreamRequestAccept"
            },
            "snakeCase": {
              "unsafeName": "get_stream_request_accept",
              "safeName": "get_stream_request_accept"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_STREAM_REQUEST_ACCEPT",
              "safeName": "GET_STREAM_REQUEST_ACCEPT"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "AudioMpeg",
              "camelCase": {
                "unsafeName": "audioMpeg",
                "safeName": "audioMpeg"
              },
              "pascalCase": {
                "unsafeName": "AudioMpeg",
                "safeName": "AudioMpeg"
              },
              "snakeCase": {
                "unsafeName": "audio_mpeg",
                "safeName": "audio_mpeg"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_MPEG",
                "safeName": "AUDIO_MPEG"
              }
            },
            "wireValue": "audio/mpeg"
          },
          {
            "name": {
              "originalName": "AudioOgg",
              "camelCase": {
                "unsafeName": "audioOgg",
                "safeName": "audioOgg"
              },
              "pascalCase": {
                "unsafeName": "AudioOgg",
                "safeName": "AudioOgg"
              },
              "snakeCase": {
                "unsafeName": "audio_ogg",
                "safeName": "audio_ogg"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_OGG",
                "safeName": "AUDIO_OGG"
              }
            },
            "wireValue": "audio/ogg"
          },
          {
            "name": {
              "originalName": "AudioAac",
              "camelCase": {
                "unsafeName": "audioAac",
                "safeName": "audioAac"
              },
              "pascalCase": {
                "unsafeName": "AudioAac",
                "safeName": "AudioAac"
              },
              "snakeCase": {
                "unsafeName": "audio_aac",
                "safeName": "audio_aac"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_AAC",
                "safeName": "AUDIO_AAC"
              }
            },
            "wireValue": "audio/aac"
          }
        ],
        "type": "enum"
      },
      "type_audio:GetStreamRequestModel": {
        "declaration": {
          "name": {
            "originalName": "GetStreamRequestModel",
            "camelCase": {
              "unsafeName": "getStreamRequestModel",
              "safeName": "getStreamRequestModel"
            },
            "pascalCase": {
              "unsafeName": "GetStreamRequestModel",
              "safeName": "GetStreamRequestModel"
            },
            "snakeCase": {
              "unsafeName": "get_stream_request_model",
              "safeName": "get_stream_request_model"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_STREAM_REQUEST_MODEL",
              "safeName": "GET_STREAM_REQUEST_MODEL"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "SimbaBase",
              "camelCase": {
                "unsafeName": "simbaBase",
                "safeName": "simbaBase"
              },
              "pascalCase": {
                "unsafeName": "SimbaBase",
                "safeName": "SimbaBase"
              },
              "snakeCase": {
                "unsafeName": "simba_base",
                "safeName": "simba_base"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_BASE",
                "safeName": "SIMBA_BASE"
              }
            },
            "wireValue": "simba-base"
          },
          {
            "name": {
              "originalName": "SimbaEnglish",
              "camelCase": {
                "unsafeName": "simbaEnglish",
                "safeName": "simbaEnglish"
              },
              "pascalCase": {
                "unsafeName": "SimbaEnglish",
                "safeName": "SimbaEnglish"
              },
              "snakeCase": {
                "unsafeName": "simba_english",
                "safeName": "simba_english"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_ENGLISH",
                "safeName": "SIMBA_ENGLISH"
              }
            },
            "wireValue": "simba-english"
          },
          {
            "name": {
              "originalName": "SimbaMultilingual",
              "camelCase": {
                "unsafeName": "simbaMultilingual",
                "safeName": "simbaMultilingual"
              },
              "pascalCase": {
                "unsafeName": "SimbaMultilingual",
                "safeName": "SimbaMultilingual"
              },
              "snakeCase": {
                "unsafeName": "simba_multilingual",
                "safeName": "simba_multilingual"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_MULTILINGUAL",
                "safeName": "SIMBA_MULTILINGUAL"
              }
            },
            "wireValue": "simba-multilingual"
          },
          {
            "name": {
              "originalName": "SimbaTurbo",
              "camelCase": {
                "unsafeName": "simbaTurbo",
                "safeName": "simbaTurbo"
              },
              "pascalCase": {
                "unsafeName": "SimbaTurbo",
                "safeName": "SimbaTurbo"
              },
              "snakeCase": {
                "unsafeName": "simba_turbo",
                "safeName": "simba_turbo"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_TURBO",
                "safeName": "SIMBA_TURBO"
              }
            },
            "wireValue": "simba-turbo"
          }
        ],
        "type": "enum"
      },
      "type_auth:CreateAccessTokenRequestScope": {
        "declaration": {
          "name": {
            "originalName": "CreateAccessTokenRequestScope",
            "camelCase": {
              "unsafeName": "createAccessTokenRequestScope",
              "safeName": "createAccessTokenRequestScope"
            },
            "pascalCase": {
              "unsafeName": "CreateAccessTokenRequestScope",
              "safeName": "CreateAccessTokenRequestScope"
            },
            "snakeCase": {
              "unsafeName": "create_access_token_request_scope",
              "safeName": "create_access_token_request_scope"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_ACCESS_TOKEN_REQUEST_SCOPE",
              "safeName": "CREATE_ACCESS_TOKEN_REQUEST_SCOPE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "auth",
                "camelCase": {
                  "unsafeName": "auth",
                  "safeName": "auth"
                },
                "pascalCase": {
                  "unsafeName": "Auth",
                  "safeName": "Auth"
                },
                "snakeCase": {
                  "unsafeName": "auth",
                  "safeName": "auth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTH",
                  "safeName": "AUTH"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "auth",
              "camelCase": {
                "unsafeName": "auth",
                "safeName": "auth"
              },
              "pascalCase": {
                "unsafeName": "Auth",
                "safeName": "Auth"
              },
              "snakeCase": {
                "unsafeName": "auth",
                "safeName": "auth"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUTH",
                "safeName": "AUTH"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "AudioSpeech",
              "camelCase": {
                "unsafeName": "audioSpeech",
                "safeName": "audioSpeech"
              },
              "pascalCase": {
                "unsafeName": "AudioSpeech",
                "safeName": "AudioSpeech"
              },
              "snakeCase": {
                "unsafeName": "audio_speech",
                "safeName": "audio_speech"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_SPEECH",
                "safeName": "AUDIO_SPEECH"
              }
            },
            "wireValue": "audio:speech"
          },
          {
            "name": {
              "originalName": "AudioStream",
              "camelCase": {
                "unsafeName": "audioStream",
                "safeName": "audioStream"
              },
              "pascalCase": {
                "unsafeName": "AudioStream",
                "safeName": "AudioStream"
              },
              "snakeCase": {
                "unsafeName": "audio_stream",
                "safeName": "audio_stream"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_STREAM",
                "safeName": "AUDIO_STREAM"
              }
            },
            "wireValue": "audio:stream"
          },
          {
            "name": {
              "originalName": "AudioAll",
              "camelCase": {
                "unsafeName": "audioAll",
                "safeName": "audioAll"
              },
              "pascalCase": {
                "unsafeName": "AudioAll",
                "safeName": "AudioAll"
              },
              "snakeCase": {
                "unsafeName": "audio_all",
                "safeName": "audio_all"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_ALL",
                "safeName": "AUDIO_ALL"
              }
            },
            "wireValue": "audio:all"
          },
          {
            "name": {
              "originalName": "VoicesRead",
              "camelCase": {
                "unsafeName": "voicesRead",
                "safeName": "voicesRead"
              },
              "pascalCase": {
                "unsafeName": "VoicesRead",
                "safeName": "VoicesRead"
              },
              "snakeCase": {
                "unsafeName": "voices_read",
                "safeName": "voices_read"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_READ",
                "safeName": "VOICES_READ"
              }
            },
            "wireValue": "voices:read"
          },
          {
            "name": {
              "originalName": "VoicesCreate",
              "camelCase": {
                "unsafeName": "voicesCreate",
                "safeName": "voicesCreate"
              },
              "pascalCase": {
                "unsafeName": "VoicesCreate",
                "safeName": "VoicesCreate"
              },
              "snakeCase": {
                "unsafeName": "voices_create",
                "safeName": "voices_create"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_CREATE",
                "safeName": "VOICES_CREATE"
              }
            },
            "wireValue": "voices:create"
          },
          {
            "name": {
              "originalName": "VoicesDelete",
              "camelCase": {
                "unsafeName": "voicesDelete",
                "safeName": "voicesDelete"
              },
              "pascalCase": {
                "unsafeName": "VoicesDelete",
                "safeName": "VoicesDelete"
              },
              "snakeCase": {
                "unsafeName": "voices_delete",
                "safeName": "voices_delete"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_DELETE",
                "safeName": "VOICES_DELETE"
              }
            },
            "wireValue": "voices:delete"
          },
          {
            "name": {
              "originalName": "VoicesAll",
              "camelCase": {
                "unsafeName": "voicesAll",
                "safeName": "voicesAll"
              },
              "pascalCase": {
                "unsafeName": "VoicesAll",
                "safeName": "VoicesAll"
              },
              "snakeCase": {
                "unsafeName": "voices_all",
                "safeName": "voices_all"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_ALL",
                "safeName": "VOICES_ALL"
              }
            },
            "wireValue": "voices:all"
          }
        ],
        "type": "enum"
      },
      "type_:ApiKey": {
        "declaration": {
          "name": {
            "originalName": "ApiKey",
            "camelCase": {
              "unsafeName": "apiKey",
              "safeName": "apiKey"
            },
            "pascalCase": {
              "unsafeName": "APIKey",
              "safeName": "APIKey"
            },
            "snakeCase": {
              "unsafeName": "api_key",
              "safeName": "api_key"
            },
            "screamingSnakeCase": {
              "unsafeName": "API_KEY",
              "safeName": "API_KEY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "api_key",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "api_key"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_at",
                "camelCase": {
                  "unsafeName": "createdAt",
                  "safeName": "createdAt"
                },
                "pascalCase": {
                  "unsafeName": "CreatedAt",
                  "safeName": "CreatedAt"
                },
                "snakeCase": {
                  "unsafeName": "created_at",
                  "safeName": "created_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_AT",
                  "safeName": "CREATED_AT"
                }
              },
              "wireValue": "created_at"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                }
              },
              "wireValue": "name"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "updated_at",
                "camelCase": {
                  "unsafeName": "updatedAt",
                  "safeName": "updatedAt"
                },
                "pascalCase": {
                  "unsafeName": "UpdatedAt",
                  "safeName": "UpdatedAt"
                },
                "snakeCase": {
                  "unsafeName": "updated_at",
                  "safeName": "updated_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPDATED_AT",
                  "safeName": "UPDATED_AT"
                }
              },
              "wireValue": "updated_at"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "user_id",
                "camelCase": {
                  "unsafeName": "userID",
                  "safeName": "userID"
                },
                "pascalCase": {
                  "unsafeName": "UserID",
                  "safeName": "UserID"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                }
              },
              "wireValue": "user_id"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:AccessTokenScope": {
        "declaration": {
          "name": {
            "originalName": "AccessTokenScope",
            "camelCase": {
              "unsafeName": "accessTokenScope",
              "safeName": "accessTokenScope"
            },
            "pascalCase": {
              "unsafeName": "AccessTokenScope",
              "safeName": "AccessTokenScope"
            },
            "snakeCase": {
              "unsafeName": "access_token_scope",
              "safeName": "access_token_scope"
            },
            "screamingSnakeCase": {
              "unsafeName": "ACCESS_TOKEN_SCOPE",
              "safeName": "ACCESS_TOKEN_SCOPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "AudioSpeech",
              "camelCase": {
                "unsafeName": "audioSpeech",
                "safeName": "audioSpeech"
              },
              "pascalCase": {
                "unsafeName": "AudioSpeech",
                "safeName": "AudioSpeech"
              },
              "snakeCase": {
                "unsafeName": "audio_speech",
                "safeName": "audio_speech"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_SPEECH",
                "safeName": "AUDIO_SPEECH"
              }
            },
            "wireValue": "audio:speech"
          },
          {
            "name": {
              "originalName": "AudioStream",
              "camelCase": {
                "unsafeName": "audioStream",
                "safeName": "audioStream"
              },
              "pascalCase": {
                "unsafeName": "AudioStream",
                "safeName": "AudioStream"
              },
              "snakeCase": {
                "unsafeName": "audio_stream",
                "safeName": "audio_stream"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_STREAM",
                "safeName": "AUDIO_STREAM"
              }
            },
            "wireValue": "audio:stream"
          },
          {
            "name": {
              "originalName": "AudioAll",
              "camelCase": {
                "unsafeName": "audioAll",
                "safeName": "audioAll"
              },
              "pascalCase": {
                "unsafeName": "AudioAll",
                "safeName": "AudioAll"
              },
              "snakeCase": {
                "unsafeName": "audio_all",
                "safeName": "audio_all"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO_ALL",
                "safeName": "AUDIO_ALL"
              }
            },
            "wireValue": "audio:all"
          },
          {
            "name": {
              "originalName": "VoicesRead",
              "camelCase": {
                "unsafeName": "voicesRead",
                "safeName": "voicesRead"
              },
              "pascalCase": {
                "unsafeName": "VoicesRead",
                "safeName": "VoicesRead"
              },
              "snakeCase": {
                "unsafeName": "voices_read",
                "safeName": "voices_read"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_READ",
                "safeName": "VOICES_READ"
              }
            },
            "wireValue": "voices:read"
          },
          {
            "name": {
              "originalName": "VoicesCreate",
              "camelCase": {
                "unsafeName": "voicesCreate",
                "safeName": "voicesCreate"
              },
              "pascalCase": {
                "unsafeName": "VoicesCreate",
                "safeName": "VoicesCreate"
              },
              "snakeCase": {
                "unsafeName": "voices_create",
                "safeName": "voices_create"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_CREATE",
                "safeName": "VOICES_CREATE"
              }
            },
            "wireValue": "voices:create"
          },
          {
            "name": {
              "originalName": "VoicesDelete",
              "camelCase": {
                "unsafeName": "voicesDelete",
                "safeName": "voicesDelete"
              },
              "pascalCase": {
                "unsafeName": "VoicesDelete",
                "safeName": "VoicesDelete"
              },
              "snakeCase": {
                "unsafeName": "voices_delete",
                "safeName": "voices_delete"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_DELETE",
                "safeName": "VOICES_DELETE"
              }
            },
            "wireValue": "voices:delete"
          },
          {
            "name": {
              "originalName": "VoicesAll",
              "camelCase": {
                "unsafeName": "voicesAll",
                "safeName": "voicesAll"
              },
              "pascalCase": {
                "unsafeName": "VoicesAll",
                "safeName": "VoicesAll"
              },
              "snakeCase": {
                "unsafeName": "voices_all",
                "safeName": "voices_all"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES_ALL",
                "safeName": "VOICES_ALL"
              }
            },
            "wireValue": "voices:all"
          }
        ],
        "type": "enum"
      },
      "type_:AccessToken": {
        "declaration": {
          "name": {
            "originalName": "AccessToken",
            "camelCase": {
              "unsafeName": "accessToken",
              "safeName": "accessToken"
            },
            "pascalCase": {
              "unsafeName": "AccessToken",
              "safeName": "AccessToken"
            },
            "snakeCase": {
              "unsafeName": "access_token",
              "safeName": "access_token"
            },
            "screamingSnakeCase": {
              "unsafeName": "ACCESS_TOKEN",
              "safeName": "ACCESS_TOKEN"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "access_token",
                "camelCase": {
                  "unsafeName": "accessToken",
                  "safeName": "accessToken"
                },
                "pascalCase": {
                  "unsafeName": "AccessToken",
                  "safeName": "AccessToken"
                },
                "snakeCase": {
                  "unsafeName": "access_token",
                  "safeName": "access_token"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACCESS_TOKEN",
                  "safeName": "ACCESS_TOKEN"
                }
              },
              "wireValue": "access_token"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "expires_in",
                "camelCase": {
                  "unsafeName": "expiresIn",
                  "safeName": "expiresIn"
                },
                "pascalCase": {
                  "unsafeName": "ExpiresIn",
                  "safeName": "ExpiresIn"
                },
                "snakeCase": {
                  "unsafeName": "expires_in",
                  "safeName": "expires_in"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXPIRES_IN",
                  "safeName": "EXPIRES_IN"
                }
              },
              "wireValue": "expires_in"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "scope",
                "camelCase": {
                  "unsafeName": "scope",
                  "safeName": "scope"
                },
                "pascalCase": {
                  "unsafeName": "Scope",
                  "safeName": "Scope"
                },
                "snakeCase": {
                  "unsafeName": "scope",
                  "safeName": "scope"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SCOPE",
                  "safeName": "SCOPE"
                }
              },
              "wireValue": "scope"
            },
            "typeReference": {
              "value": {
                "value": "type_:AccessTokenScope",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "token_type",
                "camelCase": {
                  "unsafeName": "tokenType",
                  "safeName": "tokenType"
                },
                "pascalCase": {
                  "unsafeName": "TokenType",
                  "safeName": "TokenType"
                },
                "snakeCase": {
                  "unsafeName": "token_type",
                  "safeName": "token_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN_TYPE",
                  "safeName": "TOKEN_TYPE"
                }
              },
              "wireValue": "token_type"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "bearer",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:CreateVoiceLanguage": {
        "declaration": {
          "name": {
            "originalName": "CreateVoiceLanguage",
            "camelCase": {
              "unsafeName": "createVoiceLanguage",
              "safeName": "createVoiceLanguage"
            },
            "pascalCase": {
              "unsafeName": "CreateVoiceLanguage",
              "safeName": "CreateVoiceLanguage"
            },
            "snakeCase": {
              "unsafeName": "create_voice_language",
              "safeName": "create_voice_language"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_VOICE_LANGUAGE",
              "safeName": "CREATE_VOICE_LANGUAGE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "locale",
                "camelCase": {
                  "unsafeName": "locale",
                  "safeName": "locale"
                },
                "pascalCase": {
                  "unsafeName": "Locale",
                  "safeName": "Locale"
                },
                "snakeCase": {
                  "unsafeName": "locale",
                  "safeName": "locale"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOCALE",
                  "safeName": "LOCALE"
                }
              },
              "wireValue": "locale"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "preview_audio",
                "camelCase": {
                  "unsafeName": "previewAudio",
                  "safeName": "previewAudio"
                },
                "pascalCase": {
                  "unsafeName": "PreviewAudio",
                  "safeName": "PreviewAudio"
                },
                "snakeCase": {
                  "unsafeName": "preview_audio",
                  "safeName": "preview_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREVIEW_AUDIO",
                  "safeName": "PREVIEW_AUDIO"
                }
              },
              "wireValue": "preview_audio"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:CreateVoiceModelName": {
        "declaration": {
          "name": {
            "originalName": "CreateVoiceModelName",
            "camelCase": {
              "unsafeName": "createVoiceModelName",
              "safeName": "createVoiceModelName"
            },
            "pascalCase": {
              "unsafeName": "CreateVoiceModelName",
              "safeName": "CreateVoiceModelName"
            },
            "snakeCase": {
              "unsafeName": "create_voice_model_name",
              "safeName": "create_voice_model_name"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_VOICE_MODEL_NAME",
              "safeName": "CREATE_VOICE_MODEL_NAME"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "SimbaBase",
              "camelCase": {
                "unsafeName": "simbaBase",
                "safeName": "simbaBase"
              },
              "pascalCase": {
                "unsafeName": "SimbaBase",
                "safeName": "SimbaBase"
              },
              "snakeCase": {
                "unsafeName": "simba_base",
                "safeName": "simba_base"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_BASE",
                "safeName": "SIMBA_BASE"
              }
            },
            "wireValue": "simba-base"
          },
          {
            "name": {
              "originalName": "SimbaEnglish",
              "camelCase": {
                "unsafeName": "simbaEnglish",
                "safeName": "simbaEnglish"
              },
              "pascalCase": {
                "unsafeName": "SimbaEnglish",
                "safeName": "SimbaEnglish"
              },
              "snakeCase": {
                "unsafeName": "simba_english",
                "safeName": "simba_english"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_ENGLISH",
                "safeName": "SIMBA_ENGLISH"
              }
            },
            "wireValue": "simba-english"
          },
          {
            "name": {
              "originalName": "SimbaMultilingual",
              "camelCase": {
                "unsafeName": "simbaMultilingual",
                "safeName": "simbaMultilingual"
              },
              "pascalCase": {
                "unsafeName": "SimbaMultilingual",
                "safeName": "SimbaMultilingual"
              },
              "snakeCase": {
                "unsafeName": "simba_multilingual",
                "safeName": "simba_multilingual"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_MULTILINGUAL",
                "safeName": "SIMBA_MULTILINGUAL"
              }
            },
            "wireValue": "simba-multilingual"
          },
          {
            "name": {
              "originalName": "SimbaTurbo",
              "camelCase": {
                "unsafeName": "simbaTurbo",
                "safeName": "simbaTurbo"
              },
              "pascalCase": {
                "unsafeName": "SimbaTurbo",
                "safeName": "SimbaTurbo"
              },
              "snakeCase": {
                "unsafeName": "simba_turbo",
                "safeName": "simba_turbo"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_TURBO",
                "safeName": "SIMBA_TURBO"
              }
            },
            "wireValue": "simba-turbo"
          }
        ],
        "type": "enum"
      },
      "type_:CreateVoiceModel": {
        "declaration": {
          "name": {
            "originalName": "CreateVoiceModel",
            "camelCase": {
              "unsafeName": "createVoiceModel",
              "safeName": "createVoiceModel"
            },
            "pascalCase": {
              "unsafeName": "CreateVoiceModel",
              "safeName": "CreateVoiceModel"
            },
            "snakeCase": {
              "unsafeName": "create_voice_model",
              "safeName": "create_voice_model"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_VOICE_MODEL",
              "safeName": "CREATE_VOICE_MODEL"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "languages",
                "camelCase": {
                  "unsafeName": "languages",
                  "safeName": "languages"
                },
                "pascalCase": {
                  "unsafeName": "Languages",
                  "safeName": "Languages"
                },
                "snakeCase": {
                  "unsafeName": "languages",
                  "safeName": "languages"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGES",
                  "safeName": "LANGUAGES"
                }
              },
              "wireValue": "languages"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:CreateVoiceLanguage",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                }
              },
              "wireValue": "name"
            },
            "typeReference": {
              "value": {
                "value": "type_:CreateVoiceModelName",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:CreatedVoiceType": {
        "declaration": {
          "name": {
            "originalName": "CreatedVoiceType",
            "camelCase": {
              "unsafeName": "createdVoiceType",
              "safeName": "createdVoiceType"
            },
            "pascalCase": {
              "unsafeName": "CreatedVoiceType",
              "safeName": "CreatedVoiceType"
            },
            "snakeCase": {
              "unsafeName": "created_voice_type",
              "safeName": "created_voice_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATED_VOICE_TYPE",
              "safeName": "CREATED_VOICE_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "shared",
              "camelCase": {
                "unsafeName": "shared",
                "safeName": "shared"
              },
              "pascalCase": {
                "unsafeName": "Shared",
                "safeName": "Shared"
              },
              "snakeCase": {
                "unsafeName": "shared",
                "safeName": "shared"
              },
              "screamingSnakeCase": {
                "unsafeName": "SHARED",
                "safeName": "SHARED"
              }
            },
            "wireValue": "shared"
          },
          {
            "name": {
              "originalName": "personal",
              "camelCase": {
                "unsafeName": "personal",
                "safeName": "personal"
              },
              "pascalCase": {
                "unsafeName": "Personal",
                "safeName": "Personal"
              },
              "snakeCase": {
                "unsafeName": "personal",
                "safeName": "personal"
              },
              "screamingSnakeCase": {
                "unsafeName": "PERSONAL",
                "safeName": "PERSONAL"
              }
            },
            "wireValue": "personal"
          }
        ],
        "type": "enum"
      },
      "type_:CreatedVoice": {
        "declaration": {
          "name": {
            "originalName": "CreatedVoice",
            "camelCase": {
              "unsafeName": "createdVoice",
              "safeName": "createdVoice"
            },
            "pascalCase": {
              "unsafeName": "CreatedVoice",
              "safeName": "CreatedVoice"
            },
            "snakeCase": {
              "unsafeName": "created_voice",
              "safeName": "created_voice"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATED_VOICE",
              "safeName": "CREATED_VOICE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "display_name",
                "camelCase": {
                  "unsafeName": "displayName",
                  "safeName": "displayName"
                },
                "pascalCase": {
                  "unsafeName": "DisplayName",
                  "safeName": "DisplayName"
                },
                "snakeCase": {
                  "unsafeName": "display_name",
                  "safeName": "display_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISPLAY_NAME",
                  "safeName": "DISPLAY_NAME"
                }
              },
              "wireValue": "display_name"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "models",
                "camelCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "pascalCase": {
                  "unsafeName": "Models",
                  "safeName": "Models"
                },
                "snakeCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MODELS",
                  "safeName": "MODELS"
                }
              },
              "wireValue": "models"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:CreateVoiceModel",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                }
              },
              "wireValue": "type"
            },
            "typeReference": {
              "value": {
                "value": "type_:CreatedVoiceType",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:ExperimentalStreamResponse": {
        "declaration": {
          "name": {
            "originalName": "ExperimentalStreamResponse",
            "camelCase": {
              "unsafeName": "experimentalStreamResponse",
              "safeName": "experimentalStreamResponse"
            },
            "pascalCase": {
              "unsafeName": "ExperimentalStreamResponse",
              "safeName": "ExperimentalStreamResponse"
            },
            "snakeCase": {
              "unsafeName": "experimental_stream_response",
              "safeName": "experimental_stream_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "EXPERIMENTAL_STREAM_RESPONSE",
              "safeName": "EXPERIMENTAL_STREAM_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioURL",
                  "safeName": "audioURL"
                },
                "pascalCase": {
                  "unsafeName": "AudioURL",
                  "safeName": "AudioURL"
                },
                "snakeCase": {
                  "unsafeName": "audio_url",
                  "safeName": "audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_URL",
                  "safeName": "AUDIO_URL"
                }
              },
              "wireValue": "audio_url"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "expires",
                "camelCase": {
                  "unsafeName": "expires",
                  "safeName": "expires"
                },
                "pascalCase": {
                  "unsafeName": "Expires",
                  "safeName": "Expires"
                },
                "snakeCase": {
                  "unsafeName": "expires",
                  "safeName": "expires"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXPIRES",
                  "safeName": "EXPIRES"
                }
              },
              "wireValue": "expires"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:GetSpeechOptionsRequest": {
        "declaration": {
          "name": {
            "originalName": "GetSpeechOptionsRequest",
            "camelCase": {
              "unsafeName": "getSpeechOptionsRequest",
              "safeName": "getSpeechOptionsRequest"
            },
            "pascalCase": {
              "unsafeName": "GetSpeechOptionsRequest",
              "safeName": "GetSpeechOptionsRequest"
            },
            "snakeCase": {
              "unsafeName": "get_speech_options_request",
              "safeName": "get_speech_options_request"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPEECH_OPTIONS_REQUEST",
              "safeName": "GET_SPEECH_OPTIONS_REQUEST"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "loudness_normalization",
                "camelCase": {
                  "unsafeName": "loudnessNormalization",
                  "safeName": "loudnessNormalization"
                },
                "pascalCase": {
                  "unsafeName": "LoudnessNormalization",
                  "safeName": "LoudnessNormalization"
                },
                "snakeCase": {
                  "unsafeName": "loudness_normalization",
                  "safeName": "loudness_normalization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOUDNESS_NORMALIZATION",
                  "safeName": "LOUDNESS_NORMALIZATION"
                }
              },
              "wireValue": "loudness_normalization"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:GetSpeechResponseAudioFormat": {
        "declaration": {
          "name": {
            "originalName": "GetSpeechResponseAudioFormat",
            "camelCase": {
              "unsafeName": "getSpeechResponseAudioFormat",
              "safeName": "getSpeechResponseAudioFormat"
            },
            "pascalCase": {
              "unsafeName": "GetSpeechResponseAudioFormat",
              "safeName": "GetSpeechResponseAudioFormat"
            },
            "snakeCase": {
              "unsafeName": "get_speech_response_audio_format",
              "safeName": "get_speech_response_audio_format"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPEECH_RESPONSE_AUDIO_FORMAT",
              "safeName": "GET_SPEECH_RESPONSE_AUDIO_FORMAT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "wav",
              "camelCase": {
                "unsafeName": "wav",
                "safeName": "wav"
              },
              "pascalCase": {
                "unsafeName": "Wav",
                "safeName": "Wav"
              },
              "snakeCase": {
                "unsafeName": "wav",
                "safeName": "wav"
              },
              "screamingSnakeCase": {
                "unsafeName": "WAV",
                "safeName": "WAV"
              }
            },
            "wireValue": "wav"
          },
          {
            "name": {
              "originalName": "mp3",
              "camelCase": {
                "unsafeName": "mp3",
                "safeName": "mp3"
              },
              "pascalCase": {
                "unsafeName": "Mp3",
                "safeName": "Mp3"
              },
              "snakeCase": {
                "unsafeName": "mp3",
                "safeName": "mp3"
              },
              "screamingSnakeCase": {
                "unsafeName": "MP3",
                "safeName": "MP3"
              }
            },
            "wireValue": "mp3"
          },
          {
            "name": {
              "originalName": "ogg",
              "camelCase": {
                "unsafeName": "ogg",
                "safeName": "ogg"
              },
              "pascalCase": {
                "unsafeName": "Ogg",
                "safeName": "Ogg"
              },
              "snakeCase": {
                "unsafeName": "ogg",
                "safeName": "ogg"
              },
              "screamingSnakeCase": {
                "unsafeName": "OGG",
                "safeName": "OGG"
              }
            },
            "wireValue": "ogg"
          },
          {
            "name": {
              "originalName": "aac",
              "camelCase": {
                "unsafeName": "aac",
                "safeName": "aac"
              },
              "pascalCase": {
                "unsafeName": "Aac",
                "safeName": "Aac"
              },
              "snakeCase": {
                "unsafeName": "aac",
                "safeName": "aac"
              },
              "screamingSnakeCase": {
                "unsafeName": "AAC",
                "safeName": "AAC"
              }
            },
            "wireValue": "aac"
          }
        ],
        "type": "enum"
      },
      "type_:GetSpeechResponse": {
        "declaration": {
          "name": {
            "originalName": "GetSpeechResponse",
            "camelCase": {
              "unsafeName": "getSpeechResponse",
              "safeName": "getSpeechResponse"
            },
            "pascalCase": {
              "unsafeName": "GetSpeechResponse",
              "safeName": "GetSpeechResponse"
            },
            "snakeCase": {
              "unsafeName": "get_speech_response",
              "safeName": "get_speech_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPEECH_RESPONSE",
              "safeName": "GET_SPEECH_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_data",
                "camelCase": {
                  "unsafeName": "audioData",
                  "safeName": "audioData"
                },
                "pascalCase": {
                  "unsafeName": "AudioData",
                  "safeName": "AudioData"
                },
                "snakeCase": {
                  "unsafeName": "audio_data",
                  "safeName": "audio_data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DATA",
                  "safeName": "AUDIO_DATA"
                }
              },
              "wireValue": "audio_data"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "INTEGER",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_format",
                "camelCase": {
                  "unsafeName": "audioFormat",
                  "safeName": "audioFormat"
                },
                "pascalCase": {
                  "unsafeName": "AudioFormat",
                  "safeName": "AudioFormat"
                },
                "snakeCase": {
                  "unsafeName": "audio_format",
                  "safeName": "audio_format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_FORMAT",
                  "safeName": "AUDIO_FORMAT"
                }
              },
              "wireValue": "audio_format"
            },
            "typeReference": {
              "value": {
                "value": "type_:GetSpeechResponseAudioFormat",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "billable_characters_count",
                "camelCase": {
                  "unsafeName": "billableCharactersCount",
                  "safeName": "billableCharactersCount"
                },
                "pascalCase": {
                  "unsafeName": "BillableCharactersCount",
                  "safeName": "BillableCharactersCount"
                },
                "snakeCase": {
                  "unsafeName": "billable_characters_count",
                  "safeName": "billable_characters_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BILLABLE_CHARACTERS_COUNT",
                  "safeName": "BILLABLE_CHARACTERS_COUNT"
                }
              },
              "wireValue": "billable_characters_count"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speech_marks",
                "camelCase": {
                  "unsafeName": "speechMarks",
                  "safeName": "speechMarks"
                },
                "pascalCase": {
                  "unsafeName": "SpeechMarks",
                  "safeName": "SpeechMarks"
                },
                "snakeCase": {
                  "unsafeName": "speech_marks",
                  "safeName": "speech_marks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEECH_MARKS",
                  "safeName": "SPEECH_MARKS"
                }
              },
              "wireValue": "speech_marks"
            },
            "typeReference": {
              "value": {
                "value": "type_:SpeechMarks",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:GetStreamOptionsRequest": {
        "declaration": {
          "name": {
            "originalName": "GetStreamOptionsRequest",
            "camelCase": {
              "unsafeName": "getStreamOptionsRequest",
              "safeName": "getStreamOptionsRequest"
            },
            "pascalCase": {
              "unsafeName": "GetStreamOptionsRequest",
              "safeName": "GetStreamOptionsRequest"
            },
            "snakeCase": {
              "unsafeName": "get_stream_options_request",
              "safeName": "get_stream_options_request"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_STREAM_OPTIONS_REQUEST",
              "safeName": "GET_STREAM_OPTIONS_REQUEST"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "loudness_normalization",
                "camelCase": {
                  "unsafeName": "loudnessNormalization",
                  "safeName": "loudnessNormalization"
                },
                "pascalCase": {
                  "unsafeName": "LoudnessNormalization",
                  "safeName": "LoudnessNormalization"
                },
                "snakeCase": {
                  "unsafeName": "loudness_normalization",
                  "safeName": "loudness_normalization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOUDNESS_NORMALIZATION",
                  "safeName": "LOUDNESS_NORMALIZATION"
                }
              },
              "wireValue": "loudness_normalization"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:GetVoiceGender": {
        "declaration": {
          "name": {
            "originalName": "GetVoiceGender",
            "camelCase": {
              "unsafeName": "getVoiceGender",
              "safeName": "getVoiceGender"
            },
            "pascalCase": {
              "unsafeName": "GetVoiceGender",
              "safeName": "GetVoiceGender"
            },
            "snakeCase": {
              "unsafeName": "get_voice_gender",
              "safeName": "get_voice_gender"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_VOICE_GENDER",
              "safeName": "GET_VOICE_GENDER"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "male",
              "camelCase": {
                "unsafeName": "male",
                "safeName": "male"
              },
              "pascalCase": {
                "unsafeName": "Male",
                "safeName": "Male"
              },
              "snakeCase": {
                "unsafeName": "male",
                "safeName": "male"
              },
              "screamingSnakeCase": {
                "unsafeName": "MALE",
                "safeName": "MALE"
              }
            },
            "wireValue": "male"
          },
          {
            "name": {
              "originalName": "female",
              "camelCase": {
                "unsafeName": "female",
                "safeName": "female"
              },
              "pascalCase": {
                "unsafeName": "Female",
                "safeName": "Female"
              },
              "snakeCase": {
                "unsafeName": "female",
                "safeName": "female"
              },
              "screamingSnakeCase": {
                "unsafeName": "FEMALE",
                "safeName": "FEMALE"
              }
            },
            "wireValue": "female"
          },
          {
            "name": {
              "originalName": "notSpecified",
              "camelCase": {
                "unsafeName": "notSpecified",
                "safeName": "notSpecified"
              },
              "pascalCase": {
                "unsafeName": "NotSpecified",
                "safeName": "NotSpecified"
              },
              "snakeCase": {
                "unsafeName": "not_specified",
                "safeName": "not_specified"
              },
              "screamingSnakeCase": {
                "unsafeName": "NOT_SPECIFIED",
                "safeName": "NOT_SPECIFIED"
              }
            },
            "wireValue": "notSpecified"
          }
        ],
        "type": "enum"
      },
      "type_:GetVoiceType": {
        "declaration": {
          "name": {
            "originalName": "GetVoiceType",
            "camelCase": {
              "unsafeName": "getVoiceType",
              "safeName": "getVoiceType"
            },
            "pascalCase": {
              "unsafeName": "GetVoiceType",
              "safeName": "GetVoiceType"
            },
            "snakeCase": {
              "unsafeName": "get_voice_type",
              "safeName": "get_voice_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_VOICE_TYPE",
              "safeName": "GET_VOICE_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "shared",
              "camelCase": {
                "unsafeName": "shared",
                "safeName": "shared"
              },
              "pascalCase": {
                "unsafeName": "Shared",
                "safeName": "Shared"
              },
              "snakeCase": {
                "unsafeName": "shared",
                "safeName": "shared"
              },
              "screamingSnakeCase": {
                "unsafeName": "SHARED",
                "safeName": "SHARED"
              }
            },
            "wireValue": "shared"
          },
          {
            "name": {
              "originalName": "personal",
              "camelCase": {
                "unsafeName": "personal",
                "safeName": "personal"
              },
              "pascalCase": {
                "unsafeName": "Personal",
                "safeName": "Personal"
              },
              "snakeCase": {
                "unsafeName": "personal",
                "safeName": "personal"
              },
              "screamingSnakeCase": {
                "unsafeName": "PERSONAL",
                "safeName": "PERSONAL"
              }
            },
            "wireValue": "personal"
          }
        ],
        "type": "enum"
      },
      "type_:GetVoice": {
        "declaration": {
          "name": {
            "originalName": "GetVoice",
            "camelCase": {
              "unsafeName": "getVoice",
              "safeName": "getVoice"
            },
            "pascalCase": {
              "unsafeName": "GetVoice",
              "safeName": "GetVoice"
            },
            "snakeCase": {
              "unsafeName": "get_voice",
              "safeName": "get_voice"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_VOICE",
              "safeName": "GET_VOICE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "avatar_image",
                "camelCase": {
                  "unsafeName": "avatarImage",
                  "safeName": "avatarImage"
                },
                "pascalCase": {
                  "unsafeName": "AvatarImage",
                  "safeName": "AvatarImage"
                },
                "snakeCase": {
                  "unsafeName": "avatar_image",
                  "safeName": "avatar_image"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AVATAR_IMAGE",
                  "safeName": "AVATAR_IMAGE"
                }
              },
              "wireValue": "avatar_image"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "display_name",
                "camelCase": {
                  "unsafeName": "displayName",
                  "safeName": "displayName"
                },
                "pascalCase": {
                  "unsafeName": "DisplayName",
                  "safeName": "DisplayName"
                },
                "snakeCase": {
                  "unsafeName": "display_name",
                  "safeName": "display_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISPLAY_NAME",
                  "safeName": "DISPLAY_NAME"
                }
              },
              "wireValue": "display_name"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "gender",
                "camelCase": {
                  "unsafeName": "gender",
                  "safeName": "gender"
                },
                "pascalCase": {
                  "unsafeName": "Gender",
                  "safeName": "Gender"
                },
                "snakeCase": {
                  "unsafeName": "gender",
                  "safeName": "gender"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GENDER",
                  "safeName": "GENDER"
                }
              },
              "wireValue": "gender"
            },
            "typeReference": {
              "value": {
                "value": "type_:GetVoiceGender",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "models",
                "camelCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "pascalCase": {
                  "unsafeName": "Models",
                  "safeName": "Models"
                },
                "snakeCase": {
                  "unsafeName": "models",
                  "safeName": "models"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MODELS",
                  "safeName": "MODELS"
                }
              },
              "wireValue": "models"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:GetVoicesModel",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "preview_audio",
                "camelCase": {
                  "unsafeName": "previewAudio",
                  "safeName": "previewAudio"
                },
                "pascalCase": {
                  "unsafeName": "PreviewAudio",
                  "safeName": "PreviewAudio"
                },
                "snakeCase": {
                  "unsafeName": "preview_audio",
                  "safeName": "preview_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREVIEW_AUDIO",
                  "safeName": "PREVIEW_AUDIO"
                }
              },
              "wireValue": "preview_audio"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "tags",
                "camelCase": {
                  "unsafeName": "tags",
                  "safeName": "tags"
                },
                "pascalCase": {
                  "unsafeName": "Tags",
                  "safeName": "Tags"
                },
                "snakeCase": {
                  "unsafeName": "tags",
                  "safeName": "tags"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TAGS",
                  "safeName": "TAGS"
                }
              },
              "wireValue": "tags"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                }
              },
              "wireValue": "type"
            },
            "typeReference": {
              "value": {
                "value": "type_:GetVoiceType",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:GetVoiceLanguage": {
        "declaration": {
          "name": {
            "originalName": "GetVoiceLanguage",
            "camelCase": {
              "unsafeName": "getVoiceLanguage",
              "safeName": "getVoiceLanguage"
            },
            "pascalCase": {
              "unsafeName": "GetVoiceLanguage",
              "safeName": "GetVoiceLanguage"
            },
            "snakeCase": {
              "unsafeName": "get_voice_language",
              "safeName": "get_voice_language"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_VOICE_LANGUAGE",
              "safeName": "GET_VOICE_LANGUAGE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "locale",
                "camelCase": {
                  "unsafeName": "locale",
                  "safeName": "locale"
                },
                "pascalCase": {
                  "unsafeName": "Locale",
                  "safeName": "Locale"
                },
                "snakeCase": {
                  "unsafeName": "locale",
                  "safeName": "locale"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOCALE",
                  "safeName": "LOCALE"
                }
              },
              "wireValue": "locale"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "preview_audio",
                "camelCase": {
                  "unsafeName": "previewAudio",
                  "safeName": "previewAudio"
                },
                "pascalCase": {
                  "unsafeName": "PreviewAudio",
                  "safeName": "PreviewAudio"
                },
                "snakeCase": {
                  "unsafeName": "preview_audio",
                  "safeName": "preview_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREVIEW_AUDIO",
                  "safeName": "PREVIEW_AUDIO"
                }
              },
              "wireValue": "preview_audio"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:GetVoicesModelName": {
        "declaration": {
          "name": {
            "originalName": "GetVoicesModelName",
            "camelCase": {
              "unsafeName": "getVoicesModelName",
              "safeName": "getVoicesModelName"
            },
            "pascalCase": {
              "unsafeName": "GetVoicesModelName",
              "safeName": "GetVoicesModelName"
            },
            "snakeCase": {
              "unsafeName": "get_voices_model_name",
              "safeName": "get_voices_model_name"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_VOICES_MODEL_NAME",
              "safeName": "GET_VOICES_MODEL_NAME"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "SimbaBase",
              "camelCase": {
                "unsafeName": "simbaBase",
                "safeName": "simbaBase"
              },
              "pascalCase": {
                "unsafeName": "SimbaBase",
                "safeName": "SimbaBase"
              },
              "snakeCase": {
                "unsafeName": "simba_base",
                "safeName": "simba_base"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_BASE",
                "safeName": "SIMBA_BASE"
              }
            },
            "wireValue": "simba-base"
          },
          {
            "name": {
              "originalName": "SimbaEnglish",
              "camelCase": {
                "unsafeName": "simbaEnglish",
                "safeName": "simbaEnglish"
              },
              "pascalCase": {
                "unsafeName": "SimbaEnglish",
                "safeName": "SimbaEnglish"
              },
              "snakeCase": {
                "unsafeName": "simba_english",
                "safeName": "simba_english"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_ENGLISH",
                "safeName": "SIMBA_ENGLISH"
              }
            },
            "wireValue": "simba-english"
          },
          {
            "name": {
              "originalName": "SimbaMultilingual",
              "camelCase": {
                "unsafeName": "simbaMultilingual",
                "safeName": "simbaMultilingual"
              },
              "pascalCase": {
                "unsafeName": "SimbaMultilingual",
                "safeName": "SimbaMultilingual"
              },
              "snakeCase": {
                "unsafeName": "simba_multilingual",
                "safeName": "simba_multilingual"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_MULTILINGUAL",
                "safeName": "SIMBA_MULTILINGUAL"
              }
            },
            "wireValue": "simba-multilingual"
          },
          {
            "name": {
              "originalName": "SimbaTurbo",
              "camelCase": {
                "unsafeName": "simbaTurbo",
                "safeName": "simbaTurbo"
              },
              "pascalCase": {
                "unsafeName": "SimbaTurbo",
                "safeName": "SimbaTurbo"
              },
              "snakeCase": {
                "unsafeName": "simba_turbo",
                "safeName": "simba_turbo"
              },
              "screamingSnakeCase": {
                "unsafeName": "SIMBA_TURBO",
                "safeName": "SIMBA_TURBO"
              }
            },
            "wireValue": "simba-turbo"
          }
        ],
        "type": "enum"
      },
      "type_:GetVoicesModel": {
        "declaration": {
          "name": {
            "originalName": "GetVoicesModel",
            "camelCase": {
              "unsafeName": "getVoicesModel",
              "safeName": "getVoicesModel"
            },
            "pascalCase": {
              "unsafeName": "GetVoicesModel",
              "safeName": "GetVoicesModel"
            },
            "snakeCase": {
              "unsafeName": "get_voices_model",
              "safeName": "get_voices_model"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_VOICES_MODEL",
              "safeName": "GET_VOICES_MODEL"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "languages",
                "camelCase": {
                  "unsafeName": "languages",
                  "safeName": "languages"
                },
                "pascalCase": {
                  "unsafeName": "Languages",
                  "safeName": "Languages"
                },
                "snakeCase": {
                  "unsafeName": "languages",
                  "safeName": "languages"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGES",
                  "safeName": "LANGUAGES"
                }
              },
              "wireValue": "languages"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:GetVoiceLanguage",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "name",
                "camelCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "pascalCase": {
                  "unsafeName": "Name",
                  "safeName": "Name"
                },
                "snakeCase": {
                  "unsafeName": "name",
                  "safeName": "name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NAME",
                  "safeName": "NAME"
                }
              },
              "wireValue": "name"
            },
            "typeReference": {
              "value": {
                "value": "type_:GetVoicesModelName",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:NestedChunk": {
        "declaration": {
          "name": {
            "originalName": "NestedChunk",
            "camelCase": {
              "unsafeName": "nestedChunk",
              "safeName": "nestedChunk"
            },
            "pascalCase": {
              "unsafeName": "NestedChunk",
              "safeName": "NestedChunk"
            },
            "snakeCase": {
              "unsafeName": "nested_chunk",
              "safeName": "nested_chunk"
            },
            "screamingSnakeCase": {
              "unsafeName": "NESTED_CHUNK",
              "safeName": "NESTED_CHUNK"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end_time",
                "camelCase": {
                  "unsafeName": "endTime",
                  "safeName": "endTime"
                },
                "pascalCase": {
                  "unsafeName": "EndTime",
                  "safeName": "EndTime"
                },
                "snakeCase": {
                  "unsafeName": "end_time",
                  "safeName": "end_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END_TIME",
                  "safeName": "END_TIME"
                }
              },
              "wireValue": "end_time"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start_time",
                "camelCase": {
                  "unsafeName": "startTime",
                  "safeName": "startTime"
                },
                "pascalCase": {
                  "unsafeName": "StartTime",
                  "safeName": "StartTime"
                },
                "snakeCase": {
                  "unsafeName": "start_time",
                  "safeName": "start_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START_TIME",
                  "safeName": "START_TIME"
                }
              },
              "wireValue": "start_time"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                }
              },
              "wireValue": "type"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                }
              },
              "wireValue": "value"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:OAuthErrorError": {
        "declaration": {
          "name": {
            "originalName": "OAuthErrorError",
            "camelCase": {
              "unsafeName": "oAuthErrorError",
              "safeName": "oAuthErrorError"
            },
            "pascalCase": {
              "unsafeName": "OAuthErrorError",
              "safeName": "OAuthErrorError"
            },
            "snakeCase": {
              "unsafeName": "o_auth_error_error",
              "safeName": "o_auth_error_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "O_AUTH_ERROR_ERROR",
              "safeName": "O_AUTH_ERROR_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "invalid_client",
              "camelCase": {
                "unsafeName": "invalidClient",
                "safeName": "invalidClient"
              },
              "pascalCase": {
                "unsafeName": "InvalidClient",
                "safeName": "InvalidClient"
              },
              "snakeCase": {
                "unsafeName": "invalid_client",
                "safeName": "invalid_client"
              },
              "screamingSnakeCase": {
                "unsafeName": "INVALID_CLIENT",
                "safeName": "INVALID_CLIENT"
              }
            },
            "wireValue": "invalid_client"
          },
          {
            "name": {
              "originalName": "unauthorized_client",
              "camelCase": {
                "unsafeName": "unauthorizedClient",
                "safeName": "unauthorizedClient"
              },
              "pascalCase": {
                "unsafeName": "UnauthorizedClient",
                "safeName": "UnauthorizedClient"
              },
              "snakeCase": {
                "unsafeName": "unauthorized_client",
                "safeName": "unauthorized_client"
              },
              "screamingSnakeCase": {
                "unsafeName": "UNAUTHORIZED_CLIENT",
                "safeName": "UNAUTHORIZED_CLIENT"
              }
            },
            "wireValue": "unauthorized_client"
          },
          {
            "name": {
              "originalName": "invalid_request",
              "camelCase": {
                "unsafeName": "invalidRequest",
                "safeName": "invalidRequest"
              },
              "pascalCase": {
                "unsafeName": "InvalidRequest",
                "safeName": "InvalidRequest"
              },
              "snakeCase": {
                "unsafeName": "invalid_request",
                "safeName": "invalid_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "INVALID_REQUEST",
                "safeName": "INVALID_REQUEST"
              }
            },
            "wireValue": "invalid_request"
          },
          {
            "name": {
              "originalName": "unsupported_grant_type",
              "camelCase": {
                "unsafeName": "unsupportedGrantType",
                "safeName": "unsupportedGrantType"
              },
              "pascalCase": {
                "unsafeName": "UnsupportedGrantType",
                "safeName": "UnsupportedGrantType"
              },
              "snakeCase": {
                "unsafeName": "unsupported_grant_type",
                "safeName": "unsupported_grant_type"
              },
              "screamingSnakeCase": {
                "unsafeName": "UNSUPPORTED_GRANT_TYPE",
                "safeName": "UNSUPPORTED_GRANT_TYPE"
              }
            },
            "wireValue": "unsupported_grant_type"
          },
          {
            "name": {
              "originalName": "invalid_scope",
              "camelCase": {
                "unsafeName": "invalidScope",
                "safeName": "invalidScope"
              },
              "pascalCase": {
                "unsafeName": "InvalidScope",
                "safeName": "InvalidScope"
              },
              "snakeCase": {
                "unsafeName": "invalid_scope",
                "safeName": "invalid_scope"
              },
              "screamingSnakeCase": {
                "unsafeName": "INVALID_SCOPE",
                "safeName": "INVALID_SCOPE"
              }
            },
            "wireValue": "invalid_scope"
          }
        ],
        "type": "enum"
      },
      "type_:OAuthError": {
        "declaration": {
          "name": {
            "originalName": "OAuthError",
            "camelCase": {
              "unsafeName": "oAuthError",
              "safeName": "oAuthError"
            },
            "pascalCase": {
              "unsafeName": "OAuthError",
              "safeName": "OAuthError"
            },
            "snakeCase": {
              "unsafeName": "o_auth_error",
              "safeName": "o_auth_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "O_AUTH_ERROR",
              "safeName": "O_AUTH_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                }
              },
              "wireValue": "error"
            },
            "typeReference": {
              "value": {
                "value": "type_:OAuthErrorError",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error_description",
                "camelCase": {
                  "unsafeName": "errorDescription",
                  "safeName": "errorDescription"
                },
                "pascalCase": {
                  "unsafeName": "ErrorDescription",
                  "safeName": "ErrorDescription"
                },
                "snakeCase": {
                  "unsafeName": "error_description",
                  "safeName": "error_description"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR_DESCRIPTION",
                  "safeName": "ERROR_DESCRIPTION"
                }
              },
              "wireValue": "error_description"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SpeechMarks": {
        "declaration": {
          "name": {
            "originalName": "SpeechMarks",
            "camelCase": {
              "unsafeName": "speechMarks",
              "safeName": "speechMarks"
            },
            "pascalCase": {
              "unsafeName": "SpeechMarks",
              "safeName": "SpeechMarks"
            },
            "snakeCase": {
              "unsafeName": "speech_marks",
              "safeName": "speech_marks"
            },
            "screamingSnakeCase": {
              "unsafeName": "SPEECH_MARKS",
              "safeName": "SPEECH_MARKS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "chunks",
                "camelCase": {
                  "unsafeName": "chunks",
                  "safeName": "chunks"
                },
                "pascalCase": {
                  "unsafeName": "Chunks",
                  "safeName": "Chunks"
                },
                "snakeCase": {
                  "unsafeName": "chunks",
                  "safeName": "chunks"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHUNKS",
                  "safeName": "CHUNKS"
                }
              },
              "wireValue": "chunks"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:NestedChunk",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end_time",
                "camelCase": {
                  "unsafeName": "endTime",
                  "safeName": "endTime"
                },
                "pascalCase": {
                  "unsafeName": "EndTime",
                  "safeName": "EndTime"
                },
                "snakeCase": {
                  "unsafeName": "end_time",
                  "safeName": "end_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END_TIME",
                  "safeName": "END_TIME"
                }
              },
              "wireValue": "end_time"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start_time",
                "camelCase": {
                  "unsafeName": "startTime",
                  "safeName": "startTime"
                },
                "pascalCase": {
                  "unsafeName": "StartTime",
                  "safeName": "StartTime"
                },
                "snakeCase": {
                  "unsafeName": "start_time",
                  "safeName": "start_time"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START_TIME",
                  "safeName": "START_TIME"
                }
              },
              "wireValue": "start_time"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "type",
                "camelCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "pascalCase": {
                  "unsafeName": "Type",
                  "safeName": "Type"
                },
                "snakeCase": {
                  "unsafeName": "type",
                  "safeName": "type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TYPE",
                  "safeName": "TYPE"
                }
              },
              "wireValue": "type"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "value",
                "camelCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "pascalCase": {
                  "unsafeName": "Value",
                  "safeName": "Value"
                },
                "snakeCase": {
                  "unsafeName": "value",
                  "safeName": "value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VALUE",
                  "safeName": "VALUE"
                }
              },
              "wireValue": "value"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      }
    },
    "headers": [
      {
        "name": {
          "name": {
            "originalName": "authorization",
            "camelCase": {
              "unsafeName": "authorization",
              "safeName": "authorization"
            },
            "pascalCase": {
              "unsafeName": "Authorization",
              "safeName": "Authorization"
            },
            "snakeCase": {
              "unsafeName": "authorization",
              "safeName": "authorization"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUTHORIZATION",
              "safeName": "AUTHORIZATION"
            }
          },
          "wireValue": "Authorization"
        },
        "typeReference": {
          "value": "STRING",
          "type": "primitive"
        }
      }
    ],
    "endpoints": {
      "endpoint_audio.ExperimentalStreamCreate": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "ExperimentalStreamCreate",
            "camelCase": {
              "unsafeName": "experimentalStreamCreate",
              "safeName": "experimentalStreamCreate"
            },
            "pascalCase": {
              "unsafeName": "ExperimentalStreamCreate",
              "safeName": "ExperimentalStreamCreate"
            },
            "snakeCase": {
              "unsafeName": "experimental_stream_create",
              "safeName": "experimental_stream_create"
            },
            "screamingSnakeCase": {
              "unsafeName": "EXPERIMENTAL_STREAM_CREATE",
              "safeName": "EXPERIMENTAL_STREAM_CREATE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/experimental/audio/stream"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "ExperimentalStreamRequest",
              "camelCase": {
                "unsafeName": "experimentalStreamRequest",
                "safeName": "experimentalStreamRequest"
              },
              "pascalCase": {
                "unsafeName": "ExperimentalStreamRequest",
                "safeName": "ExperimentalStreamRequest"
              },
              "snakeCase": {
                "unsafeName": "experimental_stream_request",
                "safeName": "experimental_stream_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "EXPERIMENTAL_STREAM_REQUEST",
                "safeName": "EXPERIMENTAL_STREAM_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "audio",
                  "camelCase": {
                    "unsafeName": "audio",
                    "safeName": "audio"
                  },
                  "pascalCase": {
                    "unsafeName": "Audio",
                    "safeName": "Audio"
                  },
                  "snakeCase": {
                    "unsafeName": "audio",
                    "safeName": "audio"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "AUDIO",
                    "safeName": "AUDIO"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "input",
                    "camelCase": {
                      "unsafeName": "input",
                      "safeName": "input"
                    },
                    "pascalCase": {
                      "unsafeName": "Input",
                      "safeName": "Input"
                    },
                    "snakeCase": {
                      "unsafeName": "input",
                      "safeName": "input"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "INPUT",
                      "safeName": "INPUT"
                    }
                  },
                  "wireValue": "input"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "language",
                    "camelCase": {
                      "unsafeName": "language",
                      "safeName": "language"
                    },
                    "pascalCase": {
                      "unsafeName": "Language",
                      "safeName": "Language"
                    },
                    "snakeCase": {
                      "unsafeName": "language",
                      "safeName": "language"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LANGUAGE",
                      "safeName": "LANGUAGE"
                    }
                  },
                  "wireValue": "language"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "model",
                    "camelCase": {
                      "unsafeName": "model",
                      "safeName": "model"
                    },
                    "pascalCase": {
                      "unsafeName": "Model",
                      "safeName": "Model"
                    },
                    "snakeCase": {
                      "unsafeName": "model",
                      "safeName": "model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "MODEL",
                      "safeName": "MODEL"
                    }
                  },
                  "wireValue": "model"
                },
                "typeReference": {
                  "value": {
                    "value": "type_audio:ExperimentalStreamRequestModel",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "voice_id",
                    "camelCase": {
                      "unsafeName": "voiceID",
                      "safeName": "voiceID"
                    },
                    "pascalCase": {
                      "unsafeName": "VoiceID",
                      "safeName": "VoiceID"
                    },
                    "snakeCase": {
                      "unsafeName": "voice_id",
                      "safeName": "voice_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "VOICE_ID",
                      "safeName": "VOICE_ID"
                    }
                  },
                  "wireValue": "voice_id"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_audio.GetSpeech": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "GetSpeech",
            "camelCase": {
              "unsafeName": "getSpeech",
              "safeName": "getSpeech"
            },
            "pascalCase": {
              "unsafeName": "GetSpeech",
              "safeName": "GetSpeech"
            },
            "snakeCase": {
              "unsafeName": "get_speech",
              "safeName": "get_speech"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SPEECH",
              "safeName": "GET_SPEECH"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v1/audio/speech"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "GetSpeechRequest",
              "camelCase": {
                "unsafeName": "getSpeechRequest",
                "safeName": "getSpeechRequest"
              },
              "pascalCase": {
                "unsafeName": "GetSpeechRequest",
                "safeName": "GetSpeechRequest"
              },
              "snakeCase": {
                "unsafeName": "get_speech_request",
                "safeName": "get_speech_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "GET_SPEECH_REQUEST",
                "safeName": "GET_SPEECH_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "audio",
                  "camelCase": {
                    "unsafeName": "audio",
                    "safeName": "audio"
                  },
                  "pascalCase": {
                    "unsafeName": "Audio",
                    "safeName": "Audio"
                  },
                  "snakeCase": {
                    "unsafeName": "audio",
                    "safeName": "audio"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "AUDIO",
                    "safeName": "AUDIO"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "audio_format",
                    "camelCase": {
                      "unsafeName": "audioFormat",
                      "safeName": "audioFormat"
                    },
                    "pascalCase": {
                      "unsafeName": "AudioFormat",
                      "safeName": "AudioFormat"
                    },
                    "snakeCase": {
                      "unsafeName": "audio_format",
                      "safeName": "audio_format"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AUDIO_FORMAT",
                      "safeName": "AUDIO_FORMAT"
                    }
                  },
                  "wireValue": "audio_format"
                },
                "typeReference": {
                  "value": {
                    "value": "type_audio:GetSpeechRequestAudioFormat",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "input",
                    "camelCase": {
                      "unsafeName": "input",
                      "safeName": "input"
                    },
                    "pascalCase": {
                      "unsafeName": "Input",
                      "safeName": "Input"
                    },
                    "snakeCase": {
                      "unsafeName": "input",
                      "safeName": "input"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "INPUT",
                      "safeName": "INPUT"
                    }
                  },
                  "wireValue": "input"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "language",
                    "camelCase": {
                      "unsafeName": "language",
                      "safeName": "language"
                    },
                    "pascalCase": {
                      "unsafeName": "Language",
                      "safeName": "Language"
                    },
                    "snakeCase": {
                      "unsafeName": "language",
                      "safeName": "language"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LANGUAGE",
                      "safeName": "LANGUAGE"
                    }
                  },
                  "wireValue": "language"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "model",
                    "camelCase": {
                      "unsafeName": "model",
                      "safeName": "model"
                    },
                    "pascalCase": {
                      "unsafeName": "Model",
                      "safeName": "Model"
                    },
                    "snakeCase": {
                      "unsafeName": "model",
                      "safeName": "model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "MODEL",
                      "safeName": "MODEL"
                    }
                  },
                  "wireValue": "model"
                },
                "typeReference": {
                  "value": {
                    "value": "type_audio:GetSpeechRequestModel",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "options",
                    "camelCase": {
                      "unsafeName": "options",
                      "safeName": "options"
                    },
                    "pascalCase": {
                      "unsafeName": "Options",
                      "safeName": "Options"
                    },
                    "snakeCase": {
                      "unsafeName": "options",
                      "safeName": "options"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OPTIONS",
                      "safeName": "OPTIONS"
                    }
                  },
                  "wireValue": "options"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:GetSpeechOptionsRequest",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "voice_id",
                    "camelCase": {
                      "unsafeName": "voiceID",
                      "safeName": "voiceID"
                    },
                    "pascalCase": {
                      "unsafeName": "VoiceID",
                      "safeName": "VoiceID"
                    },
                    "snakeCase": {
                      "unsafeName": "voice_id",
                      "safeName": "voice_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "VOICE_ID",
                      "safeName": "VOICE_ID"
                    }
                  },
                  "wireValue": "voice_id"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_audio.GetStream": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "GetStream",
            "camelCase": {
              "unsafeName": "getStream",
              "safeName": "getStream"
            },
            "pascalCase": {
              "unsafeName": "GetStream",
              "safeName": "GetStream"
            },
            "snakeCase": {
              "unsafeName": "get_stream",
              "safeName": "get_stream"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_STREAM",
              "safeName": "GET_STREAM"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "audio",
              "camelCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "pascalCase": {
                "unsafeName": "Audio",
                "safeName": "Audio"
              },
              "snakeCase": {
                "unsafeName": "audio",
                "safeName": "audio"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUDIO",
                "safeName": "AUDIO"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v1/audio/stream"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "GetStreamRequest",
              "camelCase": {
                "unsafeName": "getStreamRequest",
                "safeName": "getStreamRequest"
              },
              "pascalCase": {
                "unsafeName": "GetStreamRequest",
                "safeName": "GetStreamRequest"
              },
              "snakeCase": {
                "unsafeName": "get_stream_request",
                "safeName": "get_stream_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "GET_STREAM_REQUEST",
                "safeName": "GET_STREAM_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "audio",
                  "camelCase": {
                    "unsafeName": "audio",
                    "safeName": "audio"
                  },
                  "pascalCase": {
                    "unsafeName": "Audio",
                    "safeName": "Audio"
                  },
                  "snakeCase": {
                    "unsafeName": "audio",
                    "safeName": "audio"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "AUDIO",
                    "safeName": "AUDIO"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "audio",
                "camelCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "pascalCase": {
                  "unsafeName": "Audio",
                  "safeName": "Audio"
                },
                "snakeCase": {
                  "unsafeName": "audio",
                  "safeName": "audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO",
                  "safeName": "AUDIO"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [
            {
              "name": {
                "name": {
                  "originalName": "accept",
                  "camelCase": {
                    "unsafeName": "accept",
                    "safeName": "accept"
                  },
                  "pascalCase": {
                    "unsafeName": "Accept",
                    "safeName": "Accept"
                  },
                  "snakeCase": {
                    "unsafeName": "accept",
                    "safeName": "accept"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ACCEPT",
                    "safeName": "ACCEPT"
                  }
                },
                "wireValue": "Accept"
              },
              "typeReference": {
                "value": "type_audio:GetStreamRequestAccept",
                "type": "named"
              }
            }
          ],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "input",
                    "camelCase": {
                      "unsafeName": "input",
                      "safeName": "input"
                    },
                    "pascalCase": {
                      "unsafeName": "Input",
                      "safeName": "Input"
                    },
                    "snakeCase": {
                      "unsafeName": "input",
                      "safeName": "input"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "INPUT",
                      "safeName": "INPUT"
                    }
                  },
                  "wireValue": "input"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "language",
                    "camelCase": {
                      "unsafeName": "language",
                      "safeName": "language"
                    },
                    "pascalCase": {
                      "unsafeName": "Language",
                      "safeName": "Language"
                    },
                    "snakeCase": {
                      "unsafeName": "language",
                      "safeName": "language"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LANGUAGE",
                      "safeName": "LANGUAGE"
                    }
                  },
                  "wireValue": "language"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "model",
                    "camelCase": {
                      "unsafeName": "model",
                      "safeName": "model"
                    },
                    "pascalCase": {
                      "unsafeName": "Model",
                      "safeName": "Model"
                    },
                    "snakeCase": {
                      "unsafeName": "model",
                      "safeName": "model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "MODEL",
                      "safeName": "MODEL"
                    }
                  },
                  "wireValue": "model"
                },
                "typeReference": {
                  "value": {
                    "value": "type_audio:GetStreamRequestModel",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "options",
                    "camelCase": {
                      "unsafeName": "options",
                      "safeName": "options"
                    },
                    "pascalCase": {
                      "unsafeName": "Options",
                      "safeName": "Options"
                    },
                    "snakeCase": {
                      "unsafeName": "options",
                      "safeName": "options"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "OPTIONS",
                      "safeName": "OPTIONS"
                    }
                  },
                  "wireValue": "options"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:GetStreamOptionsRequest",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "voice_id",
                    "camelCase": {
                      "unsafeName": "voiceID",
                      "safeName": "voiceID"
                    },
                    "pascalCase": {
                      "unsafeName": "VoiceID",
                      "safeName": "VoiceID"
                    },
                    "snakeCase": {
                      "unsafeName": "voice_id",
                      "safeName": "voice_id"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "VOICE_ID",
                      "safeName": "VOICE_ID"
                    }
                  },
                  "wireValue": "voice_id"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_auth.CreateAccessToken": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "CreateAccessToken",
            "camelCase": {
              "unsafeName": "createAccessToken",
              "safeName": "createAccessToken"
            },
            "pascalCase": {
              "unsafeName": "CreateAccessToken",
              "safeName": "CreateAccessToken"
            },
            "snakeCase": {
              "unsafeName": "create_access_token",
              "safeName": "create_access_token"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_ACCESS_TOKEN",
              "safeName": "CREATE_ACCESS_TOKEN"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "auth",
                "camelCase": {
                  "unsafeName": "auth",
                  "safeName": "auth"
                },
                "pascalCase": {
                  "unsafeName": "Auth",
                  "safeName": "Auth"
                },
                "snakeCase": {
                  "unsafeName": "auth",
                  "safeName": "auth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTH",
                  "safeName": "AUTH"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "auth",
              "camelCase": {
                "unsafeName": "auth",
                "safeName": "auth"
              },
              "pascalCase": {
                "unsafeName": "Auth",
                "safeName": "Auth"
              },
              "snakeCase": {
                "unsafeName": "auth",
                "safeName": "auth"
              },
              "screamingSnakeCase": {
                "unsafeName": "AUTH",
                "safeName": "AUTH"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v1/auth/token"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "CreateAccessTokenRequest",
              "camelCase": {
                "unsafeName": "createAccessTokenRequest",
                "safeName": "createAccessTokenRequest"
              },
              "pascalCase": {
                "unsafeName": "CreateAccessTokenRequest",
                "safeName": "CreateAccessTokenRequest"
              },
              "snakeCase": {
                "unsafeName": "create_access_token_request",
                "safeName": "create_access_token_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREATE_ACCESS_TOKEN_REQUEST",
                "safeName": "CREATE_ACCESS_TOKEN_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "auth",
                  "camelCase": {
                    "unsafeName": "auth",
                    "safeName": "auth"
                  },
                  "pascalCase": {
                    "unsafeName": "Auth",
                    "safeName": "Auth"
                  },
                  "snakeCase": {
                    "unsafeName": "auth",
                    "safeName": "auth"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "AUTH",
                    "safeName": "AUTH"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "auth",
                "camelCase": {
                  "unsafeName": "auth",
                  "safeName": "auth"
                },
                "pascalCase": {
                  "unsafeName": "Auth",
                  "safeName": "Auth"
                },
                "snakeCase": {
                  "unsafeName": "auth",
                  "safeName": "auth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTH",
                  "safeName": "AUTH"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "grant_type",
                    "camelCase": {
                      "unsafeName": "grantType",
                      "safeName": "grantType"
                    },
                    "pascalCase": {
                      "unsafeName": "GrantType",
                      "safeName": "GrantType"
                    },
                    "snakeCase": {
                      "unsafeName": "grant_type",
                      "safeName": "grant_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "GRANT_TYPE",
                      "safeName": "GRANT_TYPE"
                    }
                  },
                  "wireValue": "grant_type"
                },
                "typeReference": {
                  "value": {
                    "value": "client_credentials",
                    "type": "string"
                  },
                  "type": "literal"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "scope",
                    "camelCase": {
                      "unsafeName": "scope",
                      "safeName": "scope"
                    },
                    "pascalCase": {
                      "unsafeName": "Scope",
                      "safeName": "Scope"
                    },
                    "snakeCase": {
                      "unsafeName": "scope",
                      "safeName": "scope"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SCOPE",
                      "safeName": "SCOPE"
                    }
                  },
                  "wireValue": "scope"
                },
                "typeReference": {
                  "value": {
                    "value": "type_auth:CreateAccessTokenRequestScope",
                    "type": "named"
                  },
                  "type": "optional"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_apikey.ListAPIKeys": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "ListAPIKeys",
            "camelCase": {
              "unsafeName": "listAPIKeys",
              "safeName": "listAPIKeys"
            },
            "pascalCase": {
              "unsafeName": "ListAPIKeys",
              "safeName": "ListAPIKeys"
            },
            "snakeCase": {
              "unsafeName": "list_api_keys",
              "safeName": "list_api_keys"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST_API_KEYS",
              "safeName": "LIST_API_KEYS"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "apikey",
                "camelCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "pascalCase": {
                  "unsafeName": "Apikey",
                  "safeName": "Apikey"
                },
                "snakeCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "screamingSnakeCase": {
                  "unsafeName": "APIKEY",
                  "safeName": "APIKEY"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "apikey",
              "camelCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "pascalCase": {
                "unsafeName": "Apikey",
                "safeName": "Apikey"
              },
              "snakeCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "screamingSnakeCase": {
                "unsafeName": "APIKEY",
                "safeName": "APIKEY"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v1/token"
        },
        "request": {
          "pathParameters": [],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_apikey.CreateAPIKey": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "CreateAPIKey",
            "camelCase": {
              "unsafeName": "createAPIKey",
              "safeName": "createAPIKey"
            },
            "pascalCase": {
              "unsafeName": "CreateAPIKey",
              "safeName": "CreateAPIKey"
            },
            "snakeCase": {
              "unsafeName": "create_api_key",
              "safeName": "create_api_key"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_API_KEY",
              "safeName": "CREATE_API_KEY"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "apikey",
                "camelCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "pascalCase": {
                  "unsafeName": "Apikey",
                  "safeName": "Apikey"
                },
                "snakeCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "screamingSnakeCase": {
                  "unsafeName": "APIKEY",
                  "safeName": "APIKEY"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "apikey",
              "camelCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "pascalCase": {
                "unsafeName": "Apikey",
                "safeName": "Apikey"
              },
              "snakeCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "screamingSnakeCase": {
                "unsafeName": "APIKEY",
                "safeName": "APIKEY"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v1/token"
        },
        "request": {
          "pathParameters": [],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_apikey.DeleteAPIKey": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "DeleteAPIKey",
            "camelCase": {
              "unsafeName": "deleteAPIKey",
              "safeName": "deleteAPIKey"
            },
            "pascalCase": {
              "unsafeName": "DeleteAPIKey",
              "safeName": "DeleteAPIKey"
            },
            "snakeCase": {
              "unsafeName": "delete_api_key",
              "safeName": "delete_api_key"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_API_KEY",
              "safeName": "DELETE_API_KEY"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "apikey",
                "camelCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "pascalCase": {
                  "unsafeName": "Apikey",
                  "safeName": "Apikey"
                },
                "snakeCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "screamingSnakeCase": {
                  "unsafeName": "APIKEY",
                  "safeName": "APIKEY"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "apikey",
              "camelCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "pascalCase": {
                "unsafeName": "Apikey",
                "safeName": "Apikey"
              },
              "snakeCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "screamingSnakeCase": {
                "unsafeName": "APIKEY",
                "safeName": "APIKEY"
              }
            }
          }
        },
        "location": {
          "method": "DELETE",
          "path": "/v1/token/{id}"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "id",
                  "camelCase": {
                    "unsafeName": "id",
                    "safeName": "id"
                  },
                  "pascalCase": {
                    "unsafeName": "ID",
                    "safeName": "ID"
                  },
                  "snakeCase": {
                    "unsafeName": "id",
                    "safeName": "id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ID",
                    "safeName": "ID"
                  }
                },
                "wireValue": "id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_apikey.UpdateApiKey": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "UpdateApiKey",
            "camelCase": {
              "unsafeName": "updateAPIKey",
              "safeName": "updateAPIKey"
            },
            "pascalCase": {
              "unsafeName": "UpdateAPIKey",
              "safeName": "UpdateAPIKey"
            },
            "snakeCase": {
              "unsafeName": "update_api_key",
              "safeName": "update_api_key"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPDATE_API_KEY",
              "safeName": "UPDATE_API_KEY"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "apikey",
                "camelCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "pascalCase": {
                  "unsafeName": "Apikey",
                  "safeName": "Apikey"
                },
                "snakeCase": {
                  "unsafeName": "apikey",
                  "safeName": "apikey"
                },
                "screamingSnakeCase": {
                  "unsafeName": "APIKEY",
                  "safeName": "APIKEY"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "apikey",
              "camelCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "pascalCase": {
                "unsafeName": "Apikey",
                "safeName": "Apikey"
              },
              "snakeCase": {
                "unsafeName": "apikey",
                "safeName": "apikey"
              },
              "screamingSnakeCase": {
                "unsafeName": "APIKEY",
                "safeName": "APIKEY"
              }
            }
          }
        },
        "location": {
          "method": "PATCH",
          "path": "/v1/token/{id}"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "id",
                  "camelCase": {
                    "unsafeName": "id",
                    "safeName": "id"
                  },
                  "pascalCase": {
                    "unsafeName": "ID",
                    "safeName": "ID"
                  },
                  "snakeCase": {
                    "unsafeName": "id",
                    "safeName": "id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ID",
                    "safeName": "ID"
                  }
                },
                "wireValue": "id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "body": {
            "value": {
              "value": "STRING",
              "type": "primitive"
            },
            "type": "typeReference"
          },
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_voices.GetVoices": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "GetVoices",
            "camelCase": {
              "unsafeName": "getVoices",
              "safeName": "getVoices"
            },
            "pascalCase": {
              "unsafeName": "GetVoices",
              "safeName": "GetVoices"
            },
            "snakeCase": {
              "unsafeName": "get_voices",
              "safeName": "get_voices"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_VOICES",
              "safeName": "GET_VOICES"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "voices",
                "camelCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "pascalCase": {
                  "unsafeName": "Voices",
                  "safeName": "Voices"
                },
                "snakeCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VOICES",
                  "safeName": "VOICES"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "voices",
              "camelCase": {
                "unsafeName": "voices",
                "safeName": "voices"
              },
              "pascalCase": {
                "unsafeName": "Voices",
                "safeName": "Voices"
              },
              "snakeCase": {
                "unsafeName": "voices",
                "safeName": "voices"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES",
                "safeName": "VOICES"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v1/voices"
        },
        "request": {
          "pathParameters": [],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_voices.CreateVoice": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "CreateVoice",
            "camelCase": {
              "unsafeName": "createVoice",
              "safeName": "createVoice"
            },
            "pascalCase": {
              "unsafeName": "CreateVoice",
              "safeName": "CreateVoice"
            },
            "snakeCase": {
              "unsafeName": "create_voice",
              "safeName": "create_voice"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_VOICE",
              "safeName": "CREATE_VOICE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "voices",
                "camelCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "pascalCase": {
                  "unsafeName": "Voices",
                  "safeName": "Voices"
                },
                "snakeCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VOICES",
                  "safeName": "VOICES"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "voices",
              "camelCase": {
                "unsafeName": "voices",
                "safeName": "voices"
              },
              "pascalCase": {
                "unsafeName": "Voices",
                "safeName": "Voices"
              },
              "snakeCase": {
                "unsafeName": "voices",
                "safeName": "voices"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES",
                "safeName": "VOICES"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v1/voices"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "CreateVoiceRequest",
              "camelCase": {
                "unsafeName": "createVoiceRequest",
                "safeName": "createVoiceRequest"
              },
              "pascalCase": {
                "unsafeName": "CreateVoiceRequest",
                "safeName": "CreateVoiceRequest"
              },
              "snakeCase": {
                "unsafeName": "create_voice_request",
                "safeName": "create_voice_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREATE_VOICE_REQUEST",
                "safeName": "CREATE_VOICE_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "voices",
                  "camelCase": {
                    "unsafeName": "voices",
                    "safeName": "voices"
                  },
                  "pascalCase": {
                    "unsafeName": "Voices",
                    "safeName": "Voices"
                  },
                  "snakeCase": {
                    "unsafeName": "voices",
                    "safeName": "voices"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "VOICES",
                    "safeName": "VOICES"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "voices",
                "camelCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "pascalCase": {
                  "unsafeName": "Voices",
                  "safeName": "Voices"
                },
                "snakeCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VOICES",
                  "safeName": "VOICES"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "properties": [
              {
                "name": {
                  "name": {
                    "originalName": "name",
                    "camelCase": {
                      "unsafeName": "name",
                      "safeName": "name"
                    },
                    "pascalCase": {
                      "unsafeName": "Name",
                      "safeName": "Name"
                    },
                    "snakeCase": {
                      "unsafeName": "name",
                      "safeName": "name"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "NAME",
                      "safeName": "NAME"
                    }
                  },
                  "wireValue": "name"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "bodyProperty"
              },
              {
                "name": {
                  "originalName": "sample",
                  "camelCase": {
                    "unsafeName": "sample",
                    "safeName": "sample"
                  },
                  "pascalCase": {
                    "unsafeName": "Sample",
                    "safeName": "Sample"
                  },
                  "snakeCase": {
                    "unsafeName": "sample",
                    "safeName": "sample"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SAMPLE",
                    "safeName": "SAMPLE"
                  }
                },
                "wireValue": "sample",
                "type": "file"
              },
              {
                "name": {
                  "name": {
                    "originalName": "consent",
                    "camelCase": {
                      "unsafeName": "consent",
                      "safeName": "consent"
                    },
                    "pascalCase": {
                      "unsafeName": "Consent",
                      "safeName": "Consent"
                    },
                    "snakeCase": {
                      "unsafeName": "consent",
                      "safeName": "consent"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONSENT",
                      "safeName": "CONSENT"
                    }
                  },
                  "wireValue": "consent"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "bodyProperty"
              }
            ],
            "type": "fileUpload"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_voices.DeleteVoice": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "DeleteVoice",
            "camelCase": {
              "unsafeName": "deleteVoice",
              "safeName": "deleteVoice"
            },
            "pascalCase": {
              "unsafeName": "DeleteVoice",
              "safeName": "DeleteVoice"
            },
            "snakeCase": {
              "unsafeName": "delete_voice",
              "safeName": "delete_voice"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE_VOICE",
              "safeName": "DELETE_VOICE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "voices",
                "camelCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "pascalCase": {
                  "unsafeName": "Voices",
                  "safeName": "Voices"
                },
                "snakeCase": {
                  "unsafeName": "voices",
                  "safeName": "voices"
                },
                "screamingSnakeCase": {
                  "unsafeName": "VOICES",
                  "safeName": "VOICES"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "voices",
              "camelCase": {
                "unsafeName": "voices",
                "safeName": "voices"
              },
              "pascalCase": {
                "unsafeName": "Voices",
                "safeName": "Voices"
              },
              "snakeCase": {
                "unsafeName": "voices",
                "safeName": "voices"
              },
              "screamingSnakeCase": {
                "unsafeName": "VOICES",
                "safeName": "VOICES"
              }
            }
          }
        },
        "location": {
          "method": "DELETE",
          "path": "/v1/voices/{id}"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "id",
                  "camelCase": {
                    "unsafeName": "id",
                    "safeName": "id"
                  },
                  "pascalCase": {
                    "unsafeName": "ID",
                    "safeName": "ID"
                  },
                  "snakeCase": {
                    "unsafeName": "id",
                    "safeName": "id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "ID",
                    "safeName": "ID"
                  }
                },
                "wireValue": "id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      }
    },
    "pathParameters": [],
    "environments": {
      "defaultEnvironment": "Default",
      "environments": {
        "environments": [
          {
            "id": "Default",
            "name": {
              "originalName": "Default",
              "camelCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "pascalCase": {
                "unsafeName": "Default",
                "safeName": "Default"
              },
              "snakeCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "screamingSnakeCase": {
                "unsafeName": "DEFAULT",
                "safeName": "DEFAULT"
              }
            },
            "url": "https://api.sws.speechify.com"
          }
        ],
        "type": "singleBaseUrl"
      }
    }
  },
  "subpackages": {
    "subpackage_audio": {
      "fernFilepath": {
        "allParts": [
          "audio"
        ],
        "packagePath": [],
        "file": "audio"
      },
      "name": "audio",
      "service": "service_audio",
      "types": [
        "type_audio:ExperimentalStreamRequestModel",
        "type_audio:GetSpeechRequestAudioFormat",
        "type_audio:GetSpeechRequestModel",
        "type_audio:GetStreamRequestAccept",
        "type_audio:GetStreamRequestModel"
      ],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_auth": {
      "fernFilepath": {
        "allParts": [
          "auth"
        ],
        "packagePath": [],
        "file": "auth"
      },
      "name": "auth",
      "service": "service_auth",
      "types": [
        "type_auth:CreateAccessTokenRequestScope"
      ],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_apikey": {
      "fernFilepath": {
        "allParts": [
          "apikey"
        ],
        "packagePath": [],
        "file": "apikey"
      },
      "name": "apikey",
      "service": "service_apikey",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_voices": {
      "fernFilepath": {
        "allParts": [
          "voices"
        ],
        "packagePath": [],
        "file": "voices"
      },
      "name": "voices",
      "service": "service_voices",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "type_:ApiKey",
      "type_:AccessTokenScope",
      "type_:AccessToken",
      "type_:CreateVoiceLanguage",
      "type_:CreateVoiceModelName",
      "type_:CreateVoiceModel",
      "type_:CreatedVoiceType",
      "type_:CreatedVoice",
      "type_:ExperimentalStreamResponse",
      "type_:GetSpeechOptionsRequest",
      "type_:GetSpeechResponseAudioFormat",
      "type_:GetSpeechResponse",
      "type_:GetStreamOptionsRequest",
      "type_:GetVoiceGender",
      "type_:GetVoiceType",
      "type_:GetVoice",
      "type_:GetVoiceLanguage",
      "type_:GetVoicesModelName",
      "type_:GetVoicesModel",
      "type_:NestedChunk",
      "type_:OAuthErrorError",
      "type_:OAuthError",
      "type_:SpeechMarks"
    ],
    "errors": [
      "error_:ExperimentalStreamCreateRequestBadRequestError",
      "error_:ExperimentalStreamCreateRequestPaymentRequiredError",
      "error_:ExperimentalStreamCreateRequestForbiddenError",
      "error_:ExperimentalStreamCreateRequestInternalServerError",
      "error_:GetSpeechRequestBadRequestError",
      "error_:GetSpeechRequestPaymentRequiredError",
      "error_:GetSpeechRequestForbiddenError",
      "error_:GetSpeechRequestInternalServerError",
      "error_:GetStreamRequestBadRequestError",
      "error_:GetStreamRequestPaymentRequiredError",
      "error_:GetStreamRequestForbiddenError",
      "error_:GetStreamRequestInternalServerError",
      "error_:CreateAccessTokenRequestBadRequestError",
      "error_:GetVoicesRequestNotFoundError",
      "error_:GetVoicesRequestInternalServerError",
      "error_:CreateVoiceRequestBadRequestError",
      "error_:CreateVoiceRequestPaymentRequiredError",
      "error_:CreateVoiceRequestInternalServerError",
      "error_:DeleteVoiceRequestBadRequestError",
      "error_:DeleteVoiceRequestNotFoundError",
      "error_:DeleteVoiceRequestInternalServerError"
    ],
    "subpackages": [
      "subpackage_audio",
      "subpackage_auth",
      "subpackage_apikey",
      "subpackage_voices"
    ],
    "hasEndpointsInTree": true
  },
  "sdkConfig": {
    "isAuthMandatory": true,
    "hasStreamingEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasFileDownloadEndpoints": false,
    "platformHeaders": {
      "language": "X-Fern-Language",
      "sdkName": "X-Fern-SDK-Name",
      "sdkVersion": "X-Fern-SDK-Version"
    }
  }
}