{
  "selfHosted": false,
  "apiName": {
    "originalName": "api",
    "pascalCase": {
      "unsafeName": "API",
      "safeName": "API"
    }
  },
  "apiDisplayName": "AssemblyAI API",
  "auth": {
    "requirement": "ALL",
    "schemes": [
      {
        "key": "ApiKey",
        "name": {
          "name": {
            "originalName": "apiKey",
            "pascalCase": {
              "unsafeName": "APIKey",
              "safeName": "APIKey"
            }
          },
          "wireValue": "Authorization"
        },
        "valueType": {
          "primitive": {
            "v1": "STRING",
            "v2": {
              "type": "string"
            }
          },
          "type": "primitive"
        },
        "type": "header"
      }
    ]
  },
  "headers": [],
  "idempotencyHeaders": [],
  "types": {
    "type_transcript:TranscriptListRequestStatus": {
      "docs": "The status of your transcription. Possible values are queued, processing, completed, or error.",
      "name": {
        "name": "TranscriptListRequestStatus",
        "fernFilepath": {
          "allParts": [
            "transcript"
          ],
          "packagePath": [],
          "file": "transcript"
        },
        "typeId": "type_transcript:TranscriptListRequestStatus"
      },
      "shape": {
        "values": [
          {
            "docs": "The audio file is in the queue to be processed by the API.",
            "name": {
              "name": "queued",
              "wireValue": "queued"
            }
          },
          {
            "docs": "The audio file is being processed by the API.",
            "name": {
              "name": "processing",
              "wireValue": "processing"
            }
          },
          {
            "docs": "The transcription job has been completed successfully.",
            "name": {
              "name": "completed",
              "wireValue": "completed"
            }
          },
          {
            "docs": "An error occurred while processing the audio file.",
            "name": {
              "name": "error",
              "wireValue": "error"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_userId:sendMessage": {
      "docs": "Send messages to the WebSocket",
      "name": {
        "name": "sendMessage",
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "userId",
              "camelCase": {
                "unsafeName": "userID",
                "safeName": "userID"
              },
              "pascalCase": {
                "unsafeName": "UserID",
                "safeName": "UserID"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "userId",
            "camelCase": {
              "unsafeName": "userID",
              "safeName": "userID"
            },
            "pascalCase": {
              "unsafeName": "UserID",
              "safeName": "UserID"
            }
          }
        },
        "typeId": "type_userId:sendMessage"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "AudioData",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Audio Data",
              "typeId": "type_:AudioData",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "TerminateSession",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Terminate Session",
              "typeId": "type_:TerminateSession",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_userId:receiveMessage": {
      "docs": "Receive messages from the WebSocket",
      "name": {
        "name": "receiveMessage",
        "fernFilepath": {
          "allParts": [
            {
              "originalName": "userId",
              "camelCase": {
                "unsafeName": "userID",
                "safeName": "userID"
              },
              "pascalCase": {
                "unsafeName": "UserID",
                "safeName": "UserID"
              }
            }
          ],
          "packagePath": [],
          "file": {
            "originalName": "userId",
            "camelCase": {
              "unsafeName": "userID",
              "safeName": "userID"
            },
            "pascalCase": {
              "unsafeName": "UserID",
              "safeName": "UserID"
            }
          }
        },
        "typeId": "type_userId:receiveMessage"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "SessionBegins",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Session Begins",
              "typeId": "type_:SessionBegins",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PartialTranscript",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Partial Transcript",
              "typeId": "type_:PartialTranscript",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FinalTranscript",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Final Transcript",
              "typeId": "type_:FinalTranscript",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SessionTerminated",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Session Terminated",
              "typeId": "type_:SessionTerminated",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "RealtimeError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Realtime Error",
              "typeId": "type_:RealtimeError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RedactedAudioResponse": {
      "name": {
        "name": "RedactedAudioResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RedactedAudioResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The status of the redacted audio",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "name": "RedactedAudioStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:RedactedAudioStatus",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The URL of the redacted audio file",
            "name": {
              "name": {
                "originalName": "redacted_audio_url",
                "camelCase": {
                  "unsafeName": "redactedAudioURL",
                  "safeName": "redactedAudioURL"
                },
                "pascalCase": {
                  "unsafeName": "RedactedAudioURL",
                  "safeName": "RedactedAudioURL"
                }
              },
              "wireValue": "redacted_audio_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RedactedAudioStatus": {
      "docs": "The status of the redacted audio",
      "name": {
        "name": "RedactedAudioStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RedactedAudioStatus"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "literal": {
              "string": "redacted_audio_ready",
              "type": "string"
            },
            "type": "literal"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "literal": {
              "string": "redacted_audio_ready",
              "type": "string"
            },
            "type": "literal"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SubtitleFormat": {
      "docs": "Format of the subtitles",
      "name": {
        "name": "SubtitleFormat",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SubtitleFormat"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "srt",
              "wireValue": "srt"
            }
          },
          {
            "name": {
              "name": "vtt",
              "wireValue": "vtt"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:WordSearchResponse": {
      "name": {
        "name": "WordSearchResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:WordSearchResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The ID of the transcript",
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The total count of all matched instances. For e.g., word 1 matched 2 times, and word 2 matched 3 times, `total_count` will equal 5.",
            "name": {
              "name": "total_count",
              "wireValue": "total_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The matches of the search",
            "name": {
              "name": "matches",
              "wireValue": "matches"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "WordSearchMatch",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:WordSearchMatch",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:WordSearchMatch": {
      "name": {
        "name": "WordSearchMatch",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:WordSearchMatch"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The matched word",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The total amount of times the word is in the transcript",
            "name": {
              "name": "count",
              "wireValue": "count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of timestamps",
            "name": {
              "name": "timestamps",
              "wireValue": "timestamps"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "WordSearchTimestamp",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:WordSearchTimestamp",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of all index locations for that word within the `words` array of the completed transcript",
            "name": {
              "name": "indexes",
              "wireValue": "indexes"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:WordSearchTimestamp": {
      "docs": "An array of timestamps structured as [`start_time`, `end_time`] in milliseconds",
      "name": {
        "name": "WordSearchTimestamp",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:WordSearchTimestamp"
      },
      "shape": {
        "aliasOf": {
          "container": {
            "list": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "type": "list"
          },
          "type": "container"
        },
        "resolvedType": {
          "container": {
            "list": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "type": "list"
          },
          "type": "container"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Timestamp": {
      "docs": "Timestamp containing a start and end property in milliseconds.",
      "name": {
        "name": "Timestamp",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Timestamp"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The start time in milliseconds",
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The end time in milliseconds",
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:CreateTranscriptOptionalParameters": {
      "docs": "The parameters for creating a transcript",
      "name": {
        "name": "CreateTranscriptOptionalParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:CreateTranscriptOptionalParameters"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/Concepts/supported_languages).\nThe default value is 'en_us'.",
            "name": {
              "name": "language_code",
              "wireValue": "language_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "TranscriptLanguageCode",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptLanguageCode",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable Automatic Punctuation, can be true or false.",
            "name": {
              "name": "punctuate",
              "wireValue": "punctuate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable Text Formatting, can be true or false.",
            "name": {
              "name": "format_text",
              "wireValue": "format_text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Dual Channel](https://assemblyai.com/docs/Models/speech_recognition#dual-channel-transcription) transcription, can be true or false.",
            "name": {
              "name": "dual_channel",
              "wireValue": "dual_channel"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The URL to which we send webhooks upon trancription completion, if provided in the transcription request.",
            "name": {
              "name": {
                "originalName": "webhook_url",
                "camelCase": {
                  "unsafeName": "webhookURL",
                  "safeName": "webhookURL"
                },
                "pascalCase": {
                  "unsafeName": "WebhookURL",
                  "safeName": "WebhookURL"
                }
              },
              "wireValue": "webhook_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The header name which should be sent back with webhook calls, if provided in the transcription request.",
            "name": {
              "name": "webhook_auth_header_name",
              "wireValue": "webhook_auth_header_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Defaults to null. Optionally allows a user to specify a header name and value to send back with a webhook call for added security.",
            "name": {
              "name": "webhook_auth_header_value",
              "wireValue": "webhook_auth_header_value"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether Key Phrases was enabled in the transcription request, either true or false",
            "name": {
              "name": "auto_highlights",
              "wireValue": "auto_highlights"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The point in time, in milliseconds, to begin transcription from in your media file",
            "name": {
              "name": "audio_start_from",
              "wireValue": "audio_start_from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The point in time, in milliseconds, to stop transcribing in your media file",
            "name": {
              "name": "audio_end_at",
              "wireValue": "audio_end_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The list of custom vocabulary to boost transcription probability for, if provided in the transcription request.",
            "name": {
              "name": "word_boost",
              "wireValue": "word_boost"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The word boost parameter value, if provided in the transcription request.",
            "name": {
              "name": "boost_param",
              "wireValue": "boost_param"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "TranscriptBoostParam",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptBoostParam",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Filter profanity from the transcribed text, can be true or false.",
            "name": {
              "name": "filter_profanity",
              "wireValue": "filter_profanity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Redact PII from the transcribed text using the Redact PII model, can be true or false",
            "name": {
              "name": "redact_pii",
              "wireValue": "redact_pii"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Generate a copy of the original media file with spoken PII \"beeped\" out, can be true or false. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "name": {
              "name": "redact_pii_audio",
              "wireValue": "redact_pii_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "name": {
              "name": "redact_pii_audio_quality",
              "wireValue": "redact_pii_audio_quality"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "default": "mp3",
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The list of PII Redaction policies to enable. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "name": {
              "name": "redact_pii_policies",
              "wireValue": "redact_pii_policies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "PiiPolicy",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:PiiPolicy",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The replacement logic for detected PII, can be \"entity_type\" or \"hash\". See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "name": {
              "name": "redact_pii_sub",
              "wireValue": "redact_pii_sub"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "SubstitutionPolicy",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SubstitutionPolicy",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization), can be true or false",
            "name": {
              "name": "speaker_labels",
              "wireValue": "speaker_labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Tells the speaker label model how many speakers it should attempt to identify, up to 10. See [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization) for more details.",
            "name": {
              "name": "speakers_expected",
              "wireValue": "speakers_expected"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Content Moderation](https://www.assemblyai.com/docs/Models/content_moderation), can be true or false",
            "name": {
              "name": "content_safety",
              "wireValue": "content_safety"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification), can be true or false",
            "name": {
              "name": "iab_categories",
              "wireValue": "iab_categories"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether [Automatic language detection](https://www.assemblyai.com/docs/Models/speech_recognition#automatic-language-detection) was enabled in the transcription request, either true or false.",
            "name": {
              "name": "language_detection",
              "wireValue": "language_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Customize how words are spelled and formatted using to and from values",
            "name": {
              "name": "custom_spelling",
              "wireValue": "custom_spelling"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "TranscriptCustomSpelling",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:TranscriptCustomSpelling",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false.",
            "name": {
              "name": "disfluencies",
              "wireValue": "disfluencies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Sentiment Analysis](https://www.assemblyai.com/docs/Models/sentiment_analysis), can be true or false",
            "name": {
              "name": "sentiment_analysis",
              "wireValue": "sentiment_analysis"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Auto Chapters](https://www.assemblyai.com/docs/Models/auto_chapters), can be true or false",
            "name": {
              "name": "auto_chapters",
              "wireValue": "auto_chapters"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Entity Detection](https://www.assemblyai.com/docs/Models/entity_detection), can be true or false",
            "name": {
              "name": "entity_detection",
              "wireValue": "entity_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.",
            "name": {
              "name": "speech_threshold",
              "wireValue": "speech_threshold"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Summarization](https://www.assemblyai.com/docs/Models/summarization), can be true or false",
            "name": {
              "name": "summarization",
              "wireValue": "summarization"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The model to summarize the transcript",
            "name": {
              "name": "summary_model",
              "wireValue": "summary_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "SummaryModel",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SummaryModel",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The type of summary",
            "name": {
              "name": "summary_type",
              "wireValue": "summary_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "SummaryType",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SummaryType",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether custom topics was enabled in the transcription request, either true or false",
            "name": {
              "name": "custom_topics",
              "wireValue": "custom_topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The list of custom topics provided if custom topics was enabled in the transcription request",
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SummaryModel": {
      "docs": "The model to summarize the transcript",
      "name": {
        "name": "SummaryModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SummaryModel"
      },
      "shape": {
        "default": {
          "name": {
            "name": "informative",
            "wireValue": "informative"
          }
        },
        "values": [
          {
            "name": {
              "name": "informative",
              "wireValue": "informative"
            }
          },
          {
            "name": {
              "name": "conversational",
              "wireValue": "conversational"
            }
          },
          {
            "name": {
              "name": "catchy",
              "wireValue": "catchy"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SummaryType": {
      "docs": "The type of summary",
      "name": {
        "name": "SummaryType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SummaryType"
      },
      "shape": {
        "default": {
          "name": {
            "name": "bullets",
            "wireValue": "bullets"
          }
        },
        "values": [
          {
            "name": {
              "name": "bullets",
              "wireValue": "bullets"
            }
          },
          {
            "name": {
              "name": "bullets_verbose",
              "wireValue": "bullets_verbose"
            }
          },
          {
            "name": {
              "name": "gist",
              "wireValue": "gist"
            }
          },
          {
            "name": {
              "name": "headline",
              "wireValue": "headline"
            }
          },
          {
            "name": {
              "name": "paragraph",
              "wireValue": "paragraph"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptBoostParam": {
      "docs": "The word boost parameter value, if provided in the transcription request.",
      "name": {
        "name": "TranscriptBoostParam",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptBoostParam"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "low",
              "wireValue": "low"
            }
          },
          {
            "name": {
              "name": "default",
              "wireValue": "default"
            }
          },
          {
            "name": {
              "name": "high",
              "wireValue": "high"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptCustomSpelling": {
      "docs": "Object containing words or phrases to replace, and the word or phrase to replace with",
      "name": {
        "name": "TranscriptCustomSpelling",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptCustomSpelling"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Words or phrases to replace",
            "name": {
              "name": "from",
              "wireValue": "from"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Word or phrase to replace with",
            "name": {
              "name": "to",
              "wireValue": "to"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptUtterance": {
      "name": {
        "name": "TranscriptUtterance",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptUtterance"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "channel",
              "wireValue": "channel"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "TranscriptWord",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptWord",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SubstitutionPolicy": {
      "docs": "The replacement logic for detected PII, can be \"entity_type\" or \"hash\". See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
      "name": {
        "name": "SubstitutionPolicy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SubstitutionPolicy"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "entity_type",
              "wireValue": "entity_type"
            }
          },
          {
            "name": {
              "name": "hash",
              "wireValue": "hash"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:PiiPolicy": {
      "name": {
        "name": "PiiPolicy",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:PiiPolicy"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "medical_process",
              "wireValue": "medical_process"
            }
          },
          {
            "name": {
              "name": "medical_condition",
              "wireValue": "medical_condition"
            }
          },
          {
            "name": {
              "name": "blood_type",
              "wireValue": "blood_type"
            }
          },
          {
            "name": {
              "name": "drug",
              "wireValue": "drug"
            }
          },
          {
            "name": {
              "name": "injury",
              "wireValue": "injury"
            }
          },
          {
            "name": {
              "name": "number_sequence",
              "wireValue": "number_sequence"
            }
          },
          {
            "name": {
              "name": "email_address",
              "wireValue": "email_address"
            }
          },
          {
            "name": {
              "name": "date_of_birth",
              "wireValue": "date_of_birth"
            }
          },
          {
            "name": {
              "name": "phone_number",
              "wireValue": "phone_number"
            }
          },
          {
            "name": {
              "name": "us_social_security_number",
              "wireValue": "us_social_security_number"
            }
          },
          {
            "name": {
              "name": "credit_card_number",
              "wireValue": "credit_card_number"
            }
          },
          {
            "name": {
              "name": "credit_card_expiration",
              "wireValue": "credit_card_expiration"
            }
          },
          {
            "name": {
              "name": "credit_card_cvv",
              "wireValue": "credit_card_cvv"
            }
          },
          {
            "name": {
              "name": "date",
              "wireValue": "date"
            }
          },
          {
            "name": {
              "name": "nationality",
              "wireValue": "nationality"
            }
          },
          {
            "name": {
              "name": "event",
              "wireValue": "event"
            }
          },
          {
            "name": {
              "name": "language",
              "wireValue": "language"
            }
          },
          {
            "name": {
              "name": "location",
              "wireValue": "location"
            }
          },
          {
            "name": {
              "name": "money_amount",
              "wireValue": "money_amount"
            }
          },
          {
            "name": {
              "name": "person_name",
              "wireValue": "person_name"
            }
          },
          {
            "name": {
              "name": "person_age",
              "wireValue": "person_age"
            }
          },
          {
            "name": {
              "name": "organization",
              "wireValue": "organization"
            }
          },
          {
            "name": {
              "name": "political_affiliation",
              "wireValue": "political_affiliation"
            }
          },
          {
            "name": {
              "name": "occupation",
              "wireValue": "occupation"
            }
          },
          {
            "name": {
              "name": "religion",
              "wireValue": "religion"
            }
          },
          {
            "name": {
              "name": "drivers_license",
              "wireValue": "drivers_license"
            }
          },
          {
            "name": {
              "name": "banking_information",
              "wireValue": "banking_information"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptLanguageCode": {
      "docs": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/Concepts/supported_languages).\nThe default value is 'en_us'.",
      "name": {
        "name": "TranscriptLanguageCode",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptLanguageCode"
      },
      "shape": {
        "default": {
          "name": {
            "name": "en_us",
            "wireValue": "en_us"
          }
        },
        "values": [
          {
            "name": {
              "name": "en",
              "wireValue": "en"
            }
          },
          {
            "name": {
              "name": "en_au",
              "wireValue": "en_au"
            }
          },
          {
            "name": {
              "name": "en_uk",
              "wireValue": "en_uk"
            }
          },
          {
            "name": {
              "name": "en_us",
              "wireValue": "en_us"
            }
          },
          {
            "name": {
              "name": "es",
              "wireValue": "es"
            }
          },
          {
            "name": {
              "name": "fr",
              "wireValue": "fr"
            }
          },
          {
            "name": {
              "name": "de",
              "wireValue": "de"
            }
          },
          {
            "name": {
              "name": "it",
              "wireValue": "it"
            }
          },
          {
            "name": {
              "name": "pt",
              "wireValue": "pt"
            }
          },
          {
            "name": {
              "name": "nl",
              "wireValue": "nl"
            }
          },
          {
            "name": {
              "name": "hi",
              "wireValue": "hi"
            }
          },
          {
            "name": {
              "name": "ja",
              "wireValue": "ja"
            }
          },
          {
            "name": {
              "name": "zh",
              "wireValue": "zh"
            }
          },
          {
            "name": {
              "name": "fi",
              "wireValue": "fi"
            }
          },
          {
            "name": {
              "name": "ko",
              "wireValue": "ko"
            }
          },
          {
            "name": {
              "name": "pl",
              "wireValue": "pl"
            }
          },
          {
            "name": {
              "name": "ru",
              "wireValue": "ru"
            }
          },
          {
            "name": {
              "name": "tr",
              "wireValue": "tr"
            }
          },
          {
            "name": {
              "name": "uk",
              "wireValue": "uk"
            }
          },
          {
            "name": {
              "name": "vi",
              "wireValue": "vi"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptStatus": {
      "docs": "The status of your transcription. Possible values are queued, processing, completed, or error.",
      "name": {
        "name": "TranscriptStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptStatus"
      },
      "shape": {
        "values": [
          {
            "docs": "The audio file is in the queue to be processed by the API.",
            "name": {
              "name": "queued",
              "wireValue": "queued"
            }
          },
          {
            "docs": "The audio file is being processed by the API.",
            "name": {
              "name": "processing",
              "wireValue": "processing"
            }
          },
          {
            "docs": "The transcription job has been completed successfully.",
            "name": {
              "name": "completed",
              "wireValue": "completed"
            }
          },
          {
            "docs": "An error occurred while processing the audio file.",
            "name": {
              "name": "error",
              "wireValue": "error"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptContentSafetyLabels": {
      "docs": "An array of results for the Content Moderation model, if it was enabled during the transcription request.\nSee [Content moderation](https://www.assemblyai.com/docs/Models/content_moderation) for more information.",
      "inline": true,
      "name": {
        "name": "TranscriptContentSafetyLabels",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptContentSafetyLabels"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Will be either success, or unavailable in the rare case that the Content Safety Labels model failed.",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "name": "AudioIntelligenceModelStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:AudioIntelligenceModelStatus",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "ContentSafetyLabelResult",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ContentSafetyLabelResult",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptIabCategoriesResult": {
      "docs": "An array of results for the Topic Detection model, if it was enabled during the transcription request.\nSee [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification) for more information.",
      "inline": true,
      "name": {
        "name": "TranscriptIabCategoriesResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptIabCategoriesResult"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Will be either success, or unavailable in the rare case that the Content Moderation model failed.",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "name": "AudioIntelligenceModelStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:AudioIntelligenceModelStatus",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of results for the Topic Detection model.",
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "TopicDetectionResult",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TopicDetectionResult",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The overall relevance of topic to the entire audio file",
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "map"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Transcript": {
      "docs": "A transcript object",
      "name": {
        "name": "Transcript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Transcript"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The unique identifier of your transcription",
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The language model that was used for the transcription",
            "availability": {
              "status": "DEPRECATED"
            },
            "name": {
              "name": "language_model",
              "wireValue": "language_model"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The acoustic model that was used for the transcription",
            "availability": {
              "status": "DEPRECATED"
            },
            "name": {
              "name": "acoustic_model",
              "wireValue": "acoustic_model"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The status of your transcription. Possible values are queued, processing, completed, or error.",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "name": "TranscriptStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:TranscriptStatus",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The language of your audio file.\nPossible values are found in [Supported Languages](https://www.assemblyai.com/docs/Concepts/supported_languages).\nThe default value is 'en_us'.",
            "name": {
              "name": "language_code",
              "wireValue": "language_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "TranscriptLanguageCode",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptLanguageCode",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The URL of the media that was transcribed",
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioURL",
                  "safeName": "audioURL"
                },
                "pascalCase": {
                  "unsafeName": "AudioURL",
                  "safeName": "AudioURL"
                }
              },
              "wireValue": "audio_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The textual transcript of your media file",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of temporally-sequential word objects, one for each word in the transcript.\nSee [Speech recognition](https://www.assemblyai.com/docs/Models/speech_recognition) for more information.",
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "TranscriptWord",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:TranscriptWord",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "When dual_channel or speaker_labels is enabled, a list of turn-by-turn utterance objects.\nSee [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization) for more information.",
            "name": {
              "name": "utterances",
              "wireValue": "utterances"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "TranscriptUtterance",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:TranscriptUtterance",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The confidence score for the transcript, between 0.0 (low confidence) and 1.0 (high confidence)",
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "validation": {
                        "min": 0,
                        "max": 1
                      },
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The duration of this transcript object's media file, in seconds",
            "name": {
              "name": "audio_duration",
              "wireValue": "audio_duration"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether Automatic Punctuation was enabled in the transcription request, either true or false.",
            "name": {
              "name": "punctuate",
              "wireValue": "punctuate"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether Text Formatting was enabled in the transcription request, either true or false",
            "name": {
              "name": "format_text",
              "wireValue": "format_text"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether [Dual channel transcription](https://www.assemblyai.com/docs/Models/speech_recognition#dual-channel-transcription) was enabled in the transcription request, either true or false",
            "name": {
              "name": "dual_channel",
              "wireValue": "dual_channel"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The URL to which we send webhooks upon trancription completion, if provided in the transcription request",
            "name": {
              "name": {
                "originalName": "webhook_url",
                "camelCase": {
                  "unsafeName": "webhookURL",
                  "safeName": "webhookURL"
                },
                "pascalCase": {
                  "unsafeName": "WebhookURL",
                  "safeName": "WebhookURL"
                }
              },
              "wireValue": "webhook_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The status code we received from your server when delivering your webhook, if a webhook URL was provided in the transcription request",
            "name": {
              "name": "webhook_status_code",
              "wireValue": "webhook_status_code"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether webhook authentication details were provided in the transcription request",
            "name": {
              "name": "webhook_auth",
              "wireValue": "webhook_auth"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The header name which should be sent back with webhook calls, if provided in the transcription request",
            "name": {
              "name": "webhook_auth_header_name",
              "wireValue": "webhook_auth_header_name"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether speed boost was enabled in the transcription request",
            "availability": {
              "status": "DEPRECATED"
            },
            "name": {
              "name": "speed_boost",
              "wireValue": "speed_boost"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether Key Phrases was enabled in the transcription request, either true or false",
            "name": {
              "name": "auto_highlights",
              "wireValue": "auto_highlights"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of results for the Key Phrases model, if it was enabled during the transcription request.\nSee [Key phrases](https://www.assemblyai.com/docs/Models/key_phrases) for more information.",
            "name": {
              "name": "auto_highlights_result",
              "wireValue": "auto_highlights_result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "AutoHighlightsResult",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:AutoHighlightsResult",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The point in time, in milliseconds, in the file at which the transcription was started, if provided in the transcription request",
            "name": {
              "name": "audio_start_from",
              "wireValue": "audio_start_from"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The point in time, in milliseconds, in the file at which the transcription was terminated, if provided in the transcription request",
            "name": {
              "name": "audio_end_at",
              "wireValue": "audio_end_at"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The list of custom vocabulary to boost transcription probability for, if provided in the transcription request",
            "name": {
              "name": "word_boost",
              "wireValue": "word_boost"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The word boost parameter value, if provided in the transcription request",
            "name": {
              "name": "boost_param",
              "wireValue": "boost_param"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether [Profanity Filtering](https://www.assemblyai.com/docs/Models/speech_recognition#profanity-filtering) was enabled in the transcription request, either true or false",
            "name": {
              "name": "filter_profanity",
              "wireValue": "filter_profanity"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether [PII Redaction](https://www.assemblyai.com/docs/Models/pii_redaction) was enabled in the transcription request, either true or false",
            "name": {
              "name": "redact_pii",
              "wireValue": "redact_pii"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether a redacted version of the audio file was generated (enabled or disabled in the transcription request),\neither true or false. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more information.",
            "name": {
              "name": "redact_pii_audio",
              "wireValue": "redact_pii_audio"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The audio quality of the PII-redacted audio file, if enabled in the transcription request.\nSee [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more information.",
            "name": {
              "name": "redact_pii_audio_quality",
              "wireValue": "redact_pii_audio_quality"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The list of PII Redaction policies that were enabled, if PII Redaction is enabled.\nSee [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more information.",
            "name": {
              "name": "redact_pii_policies",
              "wireValue": "redact_pii_policies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "PiiPolicy",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:PiiPolicy",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The replacement logic for detected PII, can be \"entity_type\" or \"hash\". See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
            "name": {
              "name": "redact_pii_sub",
              "wireValue": "redact_pii_sub"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "SubstitutionPolicy",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SubstitutionPolicy",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization), can be true or false",
            "name": {
              "name": "speaker_labels",
              "wireValue": "speaker_labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Defaults to null. Tells the speaker label model how many speakers it should attempt to identify, up to 10. See [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization) for more details.",
            "name": {
              "name": "speakers_expected",
              "wireValue": "speakers_expected"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Content Moderation](https://www.assemblyai.com/docs/Models/content_moderation), can be true or false",
            "name": {
              "name": "content_safety",
              "wireValue": "content_safety"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of results for the Content Moderation model, if it was enabled during the transcription request.\nSee [Content moderation](https://www.assemblyai.com/docs/Models/content_moderation) for more information.",
            "name": {
              "name": "content_safety_labels",
              "wireValue": "content_safety_labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "TranscriptContentSafetyLabels",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptContentSafetyLabels",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification), can be true or false",
            "name": {
              "name": "iab_categories",
              "wireValue": "iab_categories"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of results for the Topic Detection model, if it was enabled during the transcription request.\nSee [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification) for more information.",
            "name": {
              "name": "iab_categories_result",
              "wireValue": "iab_categories_result"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "TranscriptIabCategoriesResult",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptIabCategoriesResult",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether [Automatic language detection](https://www.assemblyai.com/docs/Models/speech_recognition#automatic-language-detection) was enabled in the transcription request, either true or false",
            "name": {
              "name": "language_detection",
              "wireValue": "language_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Customize how words are spelled and formatted using to and from values",
            "name": {
              "name": "custom_spelling",
              "wireValue": "custom_spelling"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "TranscriptCustomSpelling",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:TranscriptCustomSpelling",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Auto Chapters](https://www.assemblyai.com/docs/Models/auto_chapters), can be true or false",
            "name": {
              "name": "auto_chapters",
              "wireValue": "auto_chapters"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of temporally sequential chapters for the audio file",
            "name": {
              "name": "chapters",
              "wireValue": "chapters"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "Chapter",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:Chapter",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request, either true or false",
            "name": {
              "name": "summarization",
              "wireValue": "summarization"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The type of summary generated, if [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request",
            "name": {
              "name": "summary_type",
              "wireValue": "summary_type"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The Summarization model used to generate the summary,\nif [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request",
            "name": {
              "name": "summary_model",
              "wireValue": "summary_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The generated summary of the media file, if [Summarization](https://www.assemblyai.com/docs/Models/summarization) was enabled in the transcription request",
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether custom topics was enabled in the transcription request, either true or false",
            "name": {
              "name": "custom_topics",
              "wireValue": "custom_topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The list of custom topics provided if custom topics was enabled in the transcription request",
            "name": {
              "name": "topics",
              "wireValue": "topics"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false",
            "name": {
              "name": "disfluencies",
              "wireValue": "disfluencies"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Sentiment Analysis](https://www.assemblyai.com/docs/Models/sentiment_analysis), can be true or false",
            "name": {
              "name": "sentiment_analysis",
              "wireValue": "sentiment_analysis"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of results for the Sentiment Analysis model, if it was enabled during the transcription request.\nSee [Sentiment analysis](https://www.assemblyai.com/docs/Models/sentiment_analysis) for more information.",
            "name": {
              "name": "sentiment_analysis_results",
              "wireValue": "sentiment_analysis_results"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "SentimentAnalysisResult",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SentimentAnalysisResult",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Enable [Entity Detection](https://www.assemblyai.com/docs/Models/entity_detection), can be true or false",
            "name": {
              "name": "entity_detection",
              "wireValue": "entity_detection"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of results for the Entity Detection model, if it was enabled during the transcription request.\nSee [Entity detection](https://www.assemblyai.com/docs/Models/entity_detection) for more information.",
            "name": {
              "name": "entities",
              "wireValue": "entities"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "Entity",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:Entity",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Defaults to null. Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.",
            "name": {
              "name": "speech_threshold",
              "wireValue": "speech_threshold"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "True while a request is throttled and false when a request is no longer throttled",
            "name": {
              "name": "throttled",
              "wireValue": "throttled"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Error message of why the transcript failed",
            "name": {
              "name": "error",
              "wireValue": "error"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Chapter": {
      "docs": "Chapter of the audio file",
      "name": {
        "name": "Chapter",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Chapter"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "An ultra-short summary (just a few words) of the content spoken in the chapter",
            "name": {
              "name": "gist",
              "wireValue": "gist"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "A single sentence summary of the content spoken during the chapter",
            "name": {
              "name": "headline",
              "wireValue": "headline"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "A one paragraph summary of the content spoken during the chapter",
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The starting time, in milliseconds, for the chapter",
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The starting time, in milliseconds, for the chapter",
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Entity": {
      "docs": "A detected entity",
      "name": {
        "name": "Entity",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Entity"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The type of entity for the detected entity",
            "name": {
              "name": "entity_type",
              "wireValue": "entity_type"
            },
            "valueType": {
              "name": "EntityType",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:EntityType",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The text for the detected entity",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The starting time, in milliseconds, at which the detected entity appears in the audio file",
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The ending time, in milliseconds, for the detected entity in the audio file",
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:EntityType": {
      "docs": "The type of entity for the detected entity",
      "name": {
        "name": "EntityType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:EntityType"
      },
      "shape": {
        "values": [
          {
            "docs": "Banking information, including account and routing numbers",
            "name": {
              "name": "banking_information",
              "wireValue": "banking_information"
            }
          },
          {
            "docs": "Blood type (e.g., O-, AB positive)",
            "name": {
              "name": "blood_type",
              "wireValue": "blood_type"
            }
          },
          {
            "docs": "Credit card verification code (e.g., CVV: 080)",
            "name": {
              "name": "credit_card_cvv",
              "wireValue": "credit_card_cvv"
            }
          },
          {
            "docs": "Expiration date of a credit card",
            "name": {
              "name": "credit_card_expiration",
              "wireValue": "credit_card_expiration"
            }
          },
          {
            "docs": "Credit card number",
            "name": {
              "name": "credit_card_number",
              "wireValue": "credit_card_number"
            }
          },
          {
            "docs": "Specific calendar date (e.g., December 18)",
            "name": {
              "name": "date",
              "wireValue": "date"
            }
          },
          {
            "docs": "Date of Birth (e.g., Date of Birth: March 7, 1961)",
            "name": {
              "name": "date_of_birth",
              "wireValue": "date_of_birth"
            }
          },
          {
            "docs": "Driver's license number (e.g., DL #356933-540)",
            "name": {
              "name": "drivers_license",
              "wireValue": "drivers_license"
            }
          },
          {
            "docs": "Medications, vitamins, or supplements (e.g., Advil, Acetaminophen, Panadol)",
            "name": {
              "name": "drug",
              "wireValue": "drug"
            }
          },
          {
            "docs": "Email address (e.g., support@assemblyai.com)",
            "name": {
              "name": "email_address",
              "wireValue": "email_address"
            }
          },
          {
            "docs": "Name of an event or holiday (e.g., Olympics, Yom Kippur)",
            "name": {
              "name": "event",
              "wireValue": "event"
            }
          },
          {
            "docs": "Bodily injury (e.g., I broke my arm, I have a sprained wrist)",
            "name": {
              "name": "injury",
              "wireValue": "injury"
            }
          },
          {
            "docs": "Name of a natural language (e.g., Spanish, French)",
            "name": {
              "name": "language",
              "wireValue": "language"
            }
          },
          {
            "docs": "Any location reference including mailing address, postal code, city, state, province, or country",
            "name": {
              "name": "location",
              "wireValue": "location"
            }
          },
          {
            "docs": "Name of a medical condition, disease, syndrome, deficit, or disorder (e.g., chronic fatigue syndrome, arrhythmia, depression)",
            "name": {
              "name": "medical_condition",
              "wireValue": "medical_condition"
            }
          },
          {
            "docs": "Medical process, including treatments, procedures, and tests (e.g., heart surgery, CT scan)",
            "name": {
              "name": "medical_process",
              "wireValue": "medical_process"
            }
          },
          {
            "docs": "Name and/or amount of currency (e.g., 15 pesos, $94.50)",
            "name": {
              "name": "money_amount",
              "wireValue": "money_amount"
            }
          },
          {
            "docs": "Terms indicating nationality, ethnicity, or race (e.g., American, Asian, Caucasian)",
            "name": {
              "name": "nationality",
              "wireValue": "nationality"
            }
          },
          {
            "docs": "Job title or profession (e.g., professor, actors, engineer, CPA)",
            "name": {
              "name": "occupation",
              "wireValue": "occupation"
            }
          },
          {
            "docs": "Name of an organization (e.g., CNN, McDonalds, University of Alaska)",
            "name": {
              "name": "organization",
              "wireValue": "organization"
            }
          },
          {
            "docs": "Account passwords, PINs, access keys, or verification answers (e.g., 27%alfalfa, temp1234, My mother's maiden name is Smith)",
            "name": {
              "name": "password",
              "wireValue": "password"
            }
          },
          {
            "docs": "Number associated with an age (e.g., 27, 75)",
            "name": {
              "name": "person_age",
              "wireValue": "person_age"
            }
          },
          {
            "docs": "Name of a person (e.g., Bob, Doug Jones)",
            "name": {
              "name": "person_name",
              "wireValue": "person_name"
            }
          },
          {
            "docs": "Telephone or fax number",
            "name": {
              "name": "phone_number",
              "wireValue": "phone_number"
            }
          },
          {
            "docs": "Terms referring to a political party, movement, or ideology (e.g., Republican, Liberal)",
            "name": {
              "name": "political_affiliation",
              "wireValue": "political_affiliation"
            }
          },
          {
            "docs": "Terms indicating religious affiliation (e.g., Hindu, Catholic)",
            "name": {
              "name": "religion",
              "wireValue": "religion"
            }
          },
          {
            "docs": "Expressions indicating clock times (e.g., 19:37:28, 10pm EST)",
            "name": {
              "name": "time",
              "wireValue": "time"
            }
          },
          {
            "docs": "Internet addresses (e.g., www.assemblyai.com)",
            "name": {
              "name": {
                "originalName": "url",
                "pascalCase": {
                  "unsafeName": "URL",
                  "safeName": "URL"
                }
              },
              "wireValue": "url"
            }
          },
          {
            "docs": "Social Security Number or equivalent",
            "name": {
              "name": "us_social_security_number",
              "wireValue": "us_social_security_number"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SentimentAnalysisResult": {
      "docs": "The result of the sentiment analysis model.",
      "name": {
        "name": "SentimentAnalysisResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SentimentAnalysisResult"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The transcript of the sentence",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The starting time, in milliseconds, of the sentence",
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The ending time, in milliseconds, of the sentence",
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The detected sentiment for the sentence, one of POSITIVE, NEUTRAL, NEGATIVE",
            "name": {
              "name": "sentiment",
              "wireValue": "sentiment"
            },
            "valueType": {
              "name": "Sentiment",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:Sentiment",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The confidence score for the detected sentiment of the sentence, from 0 to 1",
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The speaker of the sentence if Speaker Diarization is enabled, else null",
            "name": {
              "name": "speaker",
              "wireValue": "speaker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Sentiment": {
      "name": {
        "name": "Sentiment",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Sentiment"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "POSITIVE",
              "wireValue": "POSITIVE"
            }
          },
          {
            "name": {
              "name": "NEUTRAL",
              "wireValue": "NEUTRAL"
            }
          },
          {
            "name": {
              "name": "NEGATIVE",
              "wireValue": "NEGATIVE"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TopicDetectionResultLabelsItem": {
      "inline": true,
      "name": {
        "name": "TopicDetectionResultLabelsItem",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TopicDetectionResultLabelsItem"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "How relevant the detected topic is of a detected topic",
            "name": {
              "name": "relevance",
              "wireValue": "relevance"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The IAB taxonomical label for the label of the detected topic, where > denotes supertopic/subtopic relationship",
            "name": {
              "name": "label",
              "wireValue": "label"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TopicDetectionResult": {
      "docs": "THe result of the topic detection model.",
      "name": {
        "name": "TopicDetectionResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TopicDetectionResult"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The text in the transcript in which a detected topic occurs",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "labels",
              "wireValue": "labels"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "name": "TopicDetectionResultLabelsItem",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:TopicDetectionResultLabelsItem",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "timestamp",
              "wireValue": "timestamp"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "Timestamp",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Timestamp",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ContentSafetyLabel": {
      "name": {
        "name": "ContentSafetyLabel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ContentSafetyLabel"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The label of the sensitive topic",
            "name": {
              "name": "label",
              "wireValue": "label"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The confidence score for the topic being discussed, from 0 to 1",
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "How severely the topic is discussed in the section, from 0 to 1",
            "name": {
              "name": "severity",
              "wireValue": "severity"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ContentSafetyLabelResult": {
      "name": {
        "name": "ContentSafetyLabelResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ContentSafetyLabelResult"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The transcript of the section flagged by the Content Moderation model",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of objects, one per sensitive topic that was detected in the section",
            "name": {
              "name": "labels",
              "wireValue": "labels"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "ContentSafetyLabel",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ContentSafetyLabel",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The sentence index at which the section begins",
            "name": {
              "name": "sentences_idx_start",
              "wireValue": "sentences_idx_start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The sentence index at which the section ends",
            "name": {
              "name": "sentences_idx_end",
              "wireValue": "sentences_idx_end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Timestamp information for the section",
            "name": {
              "name": "timestamp",
              "wireValue": "timestamp"
            },
            "valueType": {
              "name": "Timestamp",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:Timestamp",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "A summary of the Content Moderation confidence results for the entire audio file",
            "name": {
              "name": "summary",
              "wireValue": "summary"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "primitive": {
                    "v1": "DOUBLE",
                    "v2": {
                      "type": "double"
                    }
                  },
                  "type": "primitive"
                },
                "type": "map"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "A summary of the Content Moderation severity results for the entire audio file",
            "name": {
              "name": "severity_score_summary",
              "wireValue": "severity_score_summary"
            },
            "valueType": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "name": "SeverityScoreSummary",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SeverityScoreSummary",
                  "type": "named"
                },
                "type": "map"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SeverityScoreSummary": {
      "name": {
        "name": "SeverityScoreSummary",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SeverityScoreSummary"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "low",
              "wireValue": "low"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "medium",
              "wireValue": "medium"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "high",
              "wireValue": "high"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AutoHighlightsResult": {
      "docs": "An array of results for the Key Phrases model, if it was enabled during the transcription request.\nSee [Key phrases](https://www.assemblyai.com/docs/Models/key_phrases) for more information.",
      "name": {
        "name": "AutoHighlightsResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AutoHighlightsResult"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "A temporally-sequential array of Key Phrases",
            "name": {
              "name": "results",
              "wireValue": "results"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "AutoHighlightResult",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:AutoHighlightResult",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AutoHighlightResult": {
      "name": {
        "name": "AutoHighlightResult",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AutoHighlightResult"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The total number of times the key phrase appears in the audio file",
            "name": {
              "name": "count",
              "wireValue": "count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The total relevancy to the overall audio file of this key phrase - a greater number means more relevant",
            "name": {
              "name": "rank",
              "wireValue": "rank"
            },
            "valueType": {
              "primitive": {
                "v1": "FLOAT"
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The text itself of the key phrase",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The timestamp of the of the key phrase",
            "name": {
              "name": "timestamps",
              "wireValue": "timestamps"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "Timestamp",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Timestamp",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptWord": {
      "name": {
        "name": "TranscriptWord",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptWord"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "speaker",
              "wireValue": "speaker"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptSentence": {
      "name": {
        "name": "TranscriptSentence",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptSentence"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "TranscriptWord",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptWord",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SentencesResponse": {
      "name": {
        "name": "SentencesResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SentencesResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "audio_duration",
              "wireValue": "audio_duration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "sentences",
              "wireValue": "sentences"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "TranscriptSentence",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptSentence",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptParagraph": {
      "name": {
        "name": "TranscriptParagraph",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptParagraph"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "TranscriptWord",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptWord",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:ParagraphsResponse": {
      "name": {
        "name": "ParagraphsResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:ParagraphsResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "audio_duration",
              "wireValue": "audio_duration"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "paragraphs",
              "wireValue": "paragraphs"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "TranscriptParagraph",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptParagraph",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:PageDetails": {
      "name": {
        "name": "PageDetails",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:PageDetails"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "limit",
              "wireValue": "limit"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "result_count",
              "wireValue": "result_count"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "current_url",
                "camelCase": {
                  "unsafeName": "currentURL",
                  "safeName": "currentURL"
                },
                "pascalCase": {
                  "unsafeName": "CurrentURL",
                  "safeName": "CurrentURL"
                }
              },
              "wireValue": "current_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "prev_url",
                "camelCase": {
                  "unsafeName": "prevURL",
                  "safeName": "prevURL"
                },
                "pascalCase": {
                  "unsafeName": "PrevURL",
                  "safeName": "PrevURL"
                }
              },
              "wireValue": "prev_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "next_url",
                "camelCase": {
                  "unsafeName": "nextURL",
                  "safeName": "nextURL"
                },
                "pascalCase": {
                  "unsafeName": "NextURL",
                  "safeName": "NextURL"
                }
              },
              "wireValue": "next_url"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptListParameters": {
      "name": {
        "name": "TranscriptListParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptListParameters"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Maximum amount of transcripts to retrieve",
            "name": {
              "name": "limit",
              "wireValue": "limit"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "LONG",
                    "v2": {
                      "default": 10,
                      "type": "long"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Filter by transcript status",
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "TranscriptStatus",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptStatus",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Only get transcripts created on this date",
            "name": {
              "name": "created_on",
              "wireValue": "created_on"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "validation": {
                        "format": "date"
                      },
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Get transcripts that were created before this transcript ID",
            "name": {
              "name": {
                "originalName": "before_id",
                "camelCase": {
                  "unsafeName": "beforeID",
                  "safeName": "beforeID"
                },
                "pascalCase": {
                  "unsafeName": "BeforeID",
                  "safeName": "BeforeID"
                }
              },
              "wireValue": "before_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Get transcripts that were created after this transcript ID",
            "name": {
              "name": {
                "originalName": "after_id",
                "camelCase": {
                  "unsafeName": "afterID",
                  "safeName": "afterID"
                },
                "pascalCase": {
                  "unsafeName": "AfterID",
                  "safeName": "AfterID"
                }
              },
              "wireValue": "after_id"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Only get throttled transcripts, overrides the status filter",
            "name": {
              "name": "throttled_only",
              "wireValue": "throttled_only"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "BOOLEAN",
                    "v2": {
                      "type": "boolean"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptListItem": {
      "name": {
        "name": "TranscriptListItem",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptListItem"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_url",
                "camelCase": {
                  "unsafeName": "resourceURL",
                  "safeName": "resourceURL"
                },
                "pascalCase": {
                  "unsafeName": "ResourceURL",
                  "safeName": "ResourceURL"
                }
              },
              "wireValue": "resource_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "name": "TranscriptStatus",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:TranscriptStatus",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME"
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "completed",
              "wireValue": "completed"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "DATE_TIME"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioURL",
                  "safeName": "audioURL"
                },
                "pascalCase": {
                  "unsafeName": "AudioURL",
                  "safeName": "AudioURL"
                }
              },
              "wireValue": "audio_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TranscriptList": {
      "name": {
        "name": "TranscriptList",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TranscriptList"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "page_details",
              "wireValue": "page_details"
            },
            "valueType": {
              "name": "PageDetails",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:PageDetails",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "transcripts",
              "wireValue": "transcripts"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "TranscriptListItem",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptListItem",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:UploadedFile": {
      "name": {
        "name": "UploadedFile",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:UploadedFile"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "A URL that points to your audio file, accessible only by AssemblyAI's servers",
            "name": {
              "name": {
                "originalName": "upload_url",
                "camelCase": {
                  "unsafeName": "uploadURL",
                  "safeName": "uploadURL"
                },
                "pascalCase": {
                  "unsafeName": "UploadURL",
                  "safeName": "UploadURL"
                }
              },
              "wireValue": "upload_url"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RealtimeTemporaryTokenResponse": {
      "name": {
        "name": "RealtimeTemporaryTokenResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RealtimeTemporaryTokenResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The temporary authentication token for real-time transcription",
            "name": {
              "name": "token",
              "wireValue": "token"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AudioIntelligenceModelStatus": {
      "docs": "Will be either success, or unavailable in the rare case that the model failed.",
      "name": {
        "name": "AudioIntelligenceModelStatus",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AudioIntelligenceModelStatus"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "success",
              "wireValue": "success"
            }
          },
          {
            "name": {
              "name": "unavailable",
              "wireValue": "unavailable"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:PurgeLemurRequestDataResponse": {
      "name": {
        "name": "PurgeLemurRequestDataResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:PurgeLemurRequestDataResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The ID of the LeMUR request",
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The ID of the deletion request of the LeMUR request",
            "name": {
              "name": {
                "originalName": "request_id_to_purge",
                "camelCase": {
                  "unsafeName": "requestIDToPurge",
                  "safeName": "requestIDToPurge"
                },
                "pascalCase": {
                  "unsafeName": "RequestIDToPurge",
                  "safeName": "RequestIDToPurge"
                }
              },
              "wireValue": "request_id_to_purge"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether the request data was deleted.",
            "name": {
              "name": "deleted",
              "wireValue": "deleted"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurBaseResponse": {
      "name": {
        "name": "LemurBaseResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurBaseResponse"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The ID of the LeMUR request",
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurSummaryResponse": {
      "name": {
        "name": "LemurSummaryResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurSummaryResponse"
      },
      "shape": {
        "extends": [
          {
            "name": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:LemurBaseResponse"
          }
        ],
        "properties": [
          {
            "docs": "The response generated by LeMUR.",
            "name": {
              "name": "response",
              "wireValue": "response"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "The ID of the LeMUR request",
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurQuestionAnswerResponse": {
      "name": {
        "name": "LemurQuestionAnswerResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurQuestionAnswerResponse"
      },
      "shape": {
        "extends": [
          {
            "name": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:LemurBaseResponse"
          }
        ],
        "properties": [
          {
            "docs": "The answers generated by LeMUR and their questions.",
            "name": {
              "name": "response",
              "wireValue": "response"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "LemurQuestionAnswer",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurQuestionAnswer",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "The ID of the LeMUR request",
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurQuestionAnswer": {
      "docs": "An answer generated by LeMUR and its question.",
      "name": {
        "name": "LemurQuestionAnswer",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurQuestionAnswer"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The question for LeMUR to answer.",
            "name": {
              "name": "question",
              "wireValue": "question"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The answer generated by LeMUR.",
            "name": {
              "name": "answer",
              "wireValue": "answer"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurActionItemsResponse": {
      "name": {
        "name": "LemurActionItemsResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurActionItemsResponse"
      },
      "shape": {
        "extends": [
          {
            "name": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:LemurBaseResponse"
          }
        ],
        "properties": [
          {
            "docs": "The response generated by LeMUR.",
            "name": {
              "name": "response",
              "wireValue": "response"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "The ID of the LeMUR request",
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurTaskResponse": {
      "name": {
        "name": "LemurTaskResponse",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurTaskResponse"
      },
      "shape": {
        "extends": [
          {
            "name": "LemurBaseResponse",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:LemurBaseResponse"
          }
        ],
        "properties": [
          {
            "docs": "The response generated by LeMUR.",
            "name": {
              "name": "response",
              "wireValue": "response"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "The ID of the LeMUR request",
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "wireValue": "request_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurBaseParametersContext": {
      "docs": "Context to provide the model. This can be a string or a free-form JSON value.",
      "inline": true,
      "name": {
        "name": "LemurBaseParametersContext",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurBaseParametersContext"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurBaseParameters": {
      "name": {
        "name": "LemurBaseParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurBaseParameters"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "A list of completed transcripts with text. Up to 100 files max, or 100 hours max. Whichever is lower.",
            "name": {
              "name": {
                "originalName": "transcript_ids",
                "camelCase": {
                  "unsafeName": "transcriptIDs",
                  "safeName": "transcriptIDs"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptIDs",
                  "safeName": "TranscriptIDs"
                }
              },
              "wireValue": "transcript_ids"
            },
            "valueType": {
              "container": {
                "list": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Context to provide the model. This can be a string or a free-form JSON value.",
            "name": {
              "name": "context",
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LemurBaseParametersContext",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurBaseParametersContext",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "final_model",
              "wireValue": "final_model"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LemurModel",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurModel",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Max output size in tokens. Up to 4000 allowed.",
            "name": {
              "name": "max_output_size",
              "wireValue": "max_output_size"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The temperature to use for the model.\nHigher values result in answers that are more creative, lower values are more conservative.\nCan be any value between 0.0 and 1.0 inclusive.",
            "name": {
              "name": "temperature",
              "wireValue": "temperature"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "FLOAT"
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurQuestionContext": {
      "docs": "Any context about the transcripts you wish to provide. This can be a string, or free-form JSON.",
      "inline": true,
      "name": {
        "name": "LemurQuestionContext",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurQuestionContext"
      },
      "shape": {
        "members": [
          {
            "type": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            }
          },
          {
            "type": {
              "container": {
                "keyType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "valueType": {
                  "type": "unknown"
                },
                "type": "map"
              },
              "type": "container"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurQuestion": {
      "name": {
        "name": "LemurQuestion",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurQuestion"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "The question you wish to ask. For more complex questions use default model.",
            "name": {
              "name": "question",
              "wireValue": "question"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Any context about the transcripts you wish to provide. This can be a string, or free-form JSON.",
            "name": {
              "name": "context",
              "wireValue": "context"
            },
            "valueType": {
              "container": {
                "optional": {
                  "name": "LemurQuestionContext",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurQuestionContext",
                  "type": "named"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "How you want the answer to be returned. This can be any text. Can't be used with answer_options. Examples: \"short sentence\", \"bullet points\"",
            "name": {
              "name": "answer_format",
              "wireValue": "answer_format"
            },
            "valueType": {
              "container": {
                "optional": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "What discrete options to return. Useful for precise responses. Can't be used with answer_format. Example: [\"Yes\", \"No\"]",
            "name": {
              "name": "answer_options",
              "wireValue": "answer_options"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurActionItemsParameters": {
      "name": {
        "name": "LemurActionItemsParameters",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurActionItemsParameters"
      },
      "shape": {
        "aliasOf": {
          "name": "LemurBaseParameters",
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          },
          "typeId": "type_:LemurBaseParameters",
          "type": "named"
        },
        "resolvedType": {
          "name": {
            "name": "LemurBaseParameters",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:LemurBaseParameters",
            "type": "named"
          },
          "shape": "OBJECT",
          "type": "named"
        },
        "type": "alias"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:LemurModel": {
      "docs": "The model that is used for the final prompt after compression is performed (options: \"basic\" and \"default\").",
      "name": {
        "name": "LemurModel",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:LemurModel"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "default",
              "wireValue": "default"
            }
          },
          {
            "name": {
              "name": "basic",
              "wireValue": "basic"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Error": {
      "name": {
        "name": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Error"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Error message",
            "name": {
              "name": "error",
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "name": {
              "name": "status",
              "wireValue": "status"
            },
            "valueType": {
              "container": {
                "optional": {
                  "container": {
                    "literal": {
                      "string": "error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "type": "container"
                },
                "type": "optional"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RealtimeBaseMessage": {
      "name": {
        "name": "RealtimeBaseMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RealtimeBaseMessage"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Describes the type of the message.",
            "name": {
              "name": "message_type",
              "wireValue": "message_type"
            },
            "valueType": {
              "name": "MessageType",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:MessageType",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RealtimeMessage": {
      "name": {
        "name": "RealtimeMessage",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RealtimeMessage"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "SessionBegins",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Session Begins",
              "typeId": "type_:SessionBegins",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "PartialTranscript",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Partial Transcript",
              "typeId": "type_:PartialTranscript",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FinalTranscript",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Final Transcript",
              "typeId": "type_:FinalTranscript",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "SessionTerminated",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Session Terminated",
              "typeId": "type_:SessionTerminated",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "RealtimeError",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Realtime Error",
              "typeId": "type_:RealtimeError",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RealtimeError": {
      "name": {
        "name": "RealtimeError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RealtimeError"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "name": {
              "name": "error",
              "wireValue": "error"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:MessageType": {
      "name": {
        "name": "MessageType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:MessageType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "SessionBegins",
              "wireValue": "SessionBegins"
            }
          },
          {
            "name": {
              "name": "PartialTranscript",
              "wireValue": "PartialTranscript"
            }
          },
          {
            "name": {
              "name": "FinalTranscript",
              "wireValue": "FinalTranscript"
            }
          },
          {
            "name": {
              "name": "SessionTerminated",
              "wireValue": "SessionTerminated"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RealtimeTranscriptType": {
      "name": {
        "name": "RealtimeTranscriptType",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RealtimeTranscriptType"
      },
      "shape": {
        "values": [
          {
            "name": {
              "name": "PartialTranscript",
              "wireValue": "PartialTranscript"
            }
          },
          {
            "name": {
              "name": "FinalTranscript",
              "wireValue": "FinalTranscript"
            }
          }
        ],
        "type": "enum"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RealtimeTranscript": {
      "name": {
        "name": "RealtimeTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RealtimeTranscript"
      },
      "shape": {
        "members": [
          {
            "type": {
              "name": "PartialTranscript",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Partial Transcript",
              "typeId": "type_:PartialTranscript",
              "type": "named"
            }
          },
          {
            "type": {
              "name": "FinalTranscript",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "displayName": "Final Transcript",
              "typeId": "type_:FinalTranscript",
              "type": "named"
            }
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SessionBegins": {
      "name": {
        "name": "SessionBegins",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SessionBegins"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Describes the type of the message.",
            "name": {
              "name": "message_type",
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "SessionBegins",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Unique identifier for the established session.",
            "name": {
              "name": {
                "originalName": "session_id",
                "camelCase": {
                  "unsafeName": "sessionID",
                  "safeName": "sessionID"
                },
                "pascalCase": {
                  "unsafeName": "SessionID",
                  "safeName": "SessionID"
                }
              },
              "wireValue": "session_id"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Timestamp when this session will expire.",
            "name": {
              "name": "expires_at",
              "wireValue": "expires_at"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME"
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:SessionTerminated": {
      "name": {
        "name": "SessionTerminated",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:SessionTerminated"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Describes the type of the message.",
            "name": {
              "name": "message_type",
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "SessionTerminated",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:RealtimeBaseTranscript": {
      "name": {
        "name": "RealtimeBaseTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:RealtimeBaseTranscript"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Start time of audio sample relative to session start, in milliseconds.",
            "name": {
              "name": "audio_start",
              "wireValue": "audio_start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "End time of audio sample relative to session start, in milliseconds.",
            "name": {
              "name": "audio_end",
              "wireValue": "audio_end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The confidence score of the entire transcription, between 0 and 1.",
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The partial transcript for your audio.",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of objects, with the information for each word in the transcription text. Includes the start/end time (in milliseconds) of the word, the confidence score of the word, and the text (i.e. the word itself).",
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "Word",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Word",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The timestamp for the partial transcript.",
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME"
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:PartialTranscript": {
      "name": {
        "name": "PartialTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:PartialTranscript"
      },
      "shape": {
        "extends": [
          {
            "name": "RealtimeBaseTranscript",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:RealtimeBaseTranscript"
          }
        ],
        "properties": [
          {
            "docs": "Describes the type of message.",
            "name": {
              "name": "message_type",
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "PartialTranscript",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "Start time of audio sample relative to session start, in milliseconds.",
            "name": {
              "name": "audio_start",
              "wireValue": "audio_start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "End time of audio sample relative to session start, in milliseconds.",
            "name": {
              "name": "audio_end",
              "wireValue": "audio_end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The confidence score of the entire transcription, between 0 and 1.",
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The partial transcript for your audio.",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of objects, with the information for each word in the transcription text. Includes the start/end time (in milliseconds) of the word, the confidence score of the word, and the text (i.e. the word itself).",
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "Word",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Word",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The timestamp for the partial transcript.",
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME"
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:FinalTranscript": {
      "name": {
        "name": "FinalTranscript",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:FinalTranscript"
      },
      "shape": {
        "extends": [
          {
            "name": "RealtimeBaseTranscript",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:RealtimeBaseTranscript"
          }
        ],
        "properties": [
          {
            "docs": "Describes the type of message.",
            "name": {
              "name": "message_type",
              "wireValue": "message_type"
            },
            "valueType": {
              "container": {
                "literal": {
                  "string": "FinalTranscript",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether the text has been punctuated and cased.",
            "name": {
              "name": "punctuated",
              "wireValue": "punctuated"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Whether the text has been formatted (e.g. Dollar -> $)",
            "name": {
              "name": "text_formatted",
              "wireValue": "text_formatted"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "Start time of audio sample relative to session start, in milliseconds.",
            "name": {
              "name": "audio_start",
              "wireValue": "audio_start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "End time of audio sample relative to session start, in milliseconds.",
            "name": {
              "name": "audio_end",
              "wireValue": "audio_end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The confidence score of the entire transcription, between 0 and 1.",
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The partial transcript for your audio.",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "An array of objects, with the information for each word in the transcription text. Includes the start/end time (in milliseconds) of the word, the confidence score of the word, and the text (i.e. the word itself).",
            "name": {
              "name": "words",
              "wireValue": "words"
            },
            "valueType": {
              "container": {
                "list": {
                  "name": "Word",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Word",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "container"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The timestamp for the partial transcript.",
            "name": {
              "name": "created",
              "wireValue": "created"
            },
            "valueType": {
              "primitive": {
                "v1": "DATE_TIME"
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:Word": {
      "name": {
        "name": "Word",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Word"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Start time of the word in milliseconds",
            "name": {
              "name": "start",
              "wireValue": "start"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "End time of the word in milliseconds",
            "name": {
              "name": "end",
              "wireValue": "end"
            },
            "valueType": {
              "primitive": {
                "v1": "INTEGER",
                "v2": {
                  "type": "integer"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "Confidence score of the word",
            "name": {
              "name": "confidence",
              "wireValue": "confidence"
            },
            "valueType": {
              "primitive": {
                "v1": "DOUBLE",
                "v2": {
                  "validation": {
                    "min": 0,
                    "max": 1
                  },
                  "type": "double"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          },
          {
            "docs": "The word itself",
            "name": {
              "name": "text",
              "wireValue": "text"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:AudioData": {
      "name": {
        "name": "AudioData",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:AudioData"
      },
      "shape": {
        "extends": [],
        "properties": [
          {
            "docs": "Raw audio data, base64 encoded. This can be the raw data recorded directly from a microphone or read from an audio file.",
            "name": {
              "name": "audio_data",
              "wireValue": "audio_data"
            },
            "valueType": {
              "primitive": {
                "v1": "STRING",
                "v2": {
                  "type": "string"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    },
    "type_:TerminateSession": {
      "name": {
        "name": "TerminateSession",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:TerminateSession"
      },
      "shape": {
        "extends": [
          {
            "name": "RealtimeBaseMessage",
            "fernFilepath": {
              "allParts": [],
              "packagePath": []
            },
            "typeId": "type_:RealtimeBaseMessage"
          }
        ],
        "properties": [
          {
            "docs": "A boolean value to communicate that you wish to end your real-time session forever.",
            "name": {
              "name": "terminate_session",
              "wireValue": "terminate_session"
            },
            "valueType": {
              "primitive": {
                "v1": "BOOLEAN",
                "v2": {
                  "type": "boolean"
                }
              },
              "type": "primitive"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "extraProperties": false,
        "extendedProperties": [
          {
            "docs": "Describes the type of the message.",
            "name": {
              "name": "message_type",
              "wireValue": "message_type"
            },
            "valueType": {
              "name": "MessageType",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:MessageType",
              "type": "named"
            },
            "v2Examples": {
              "userSpecifiedExamples": {},
              "autogeneratedExamples": {}
            }
          }
        ],
        "type": "object"
      },
      "referencedTypes": {},
      "encoding": {
        "json": {}
      },
      "userProvidedExamples": [],
      "autogeneratedExamples": []
    }
  },
  "errors": {
    "error_:BadRequestError": {
      "name": {
        "name": "BadRequestError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:BadRequestError"
      },
      "discriminantValue": {
        "name": "BadRequestError",
        "wireValue": "BadRequestError"
      },
      "docs": "Bad Request",
      "statusCode": 400,
      "type": {
        "name": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Error",
        "type": "named"
      },
      "examples": [
        {
          "jsonExample": {
            "error": "error"
          },
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:Error",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "Error"
              },
              "shape": {
                "properties": [
                  {
                    "name": {
                      "name": "error",
                      "wireValue": "error"
                    },
                    "value": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "error"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "error"
                    },
                    "originalTypeDeclaration": {
                      "typeId": "type_:Error",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Error"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "named"
            },
            "jsonExample": {
              "error": "error"
            }
          }
        }
      ]
    },
    "error_:UnauthorizedError": {
      "name": {
        "name": "UnauthorizedError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:UnauthorizedError"
      },
      "discriminantValue": {
        "name": "UnauthorizedError",
        "wireValue": "UnauthorizedError"
      },
      "docs": "Unauthorized",
      "statusCode": 401,
      "type": {
        "name": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Error",
        "type": "named"
      },
      "examples": [
        {
          "jsonExample": {
            "error": "error"
          },
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:Error",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "Error"
              },
              "shape": {
                "properties": [
                  {
                    "name": {
                      "name": "error",
                      "wireValue": "error"
                    },
                    "value": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "error"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "error"
                    },
                    "originalTypeDeclaration": {
                      "typeId": "type_:Error",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Error"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "named"
            },
            "jsonExample": {
              "error": "error"
            }
          }
        }
      ]
    },
    "error_:NotFoundError": {
      "name": {
        "name": "NotFoundError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:NotFoundError"
      },
      "discriminantValue": {
        "name": "NotFoundError",
        "wireValue": "NotFoundError"
      },
      "docs": "Not found",
      "statusCode": 404,
      "type": {
        "name": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Error",
        "type": "named"
      },
      "examples": [
        {
          "jsonExample": {
            "error": "error"
          },
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:Error",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "Error"
              },
              "shape": {
                "properties": [
                  {
                    "name": {
                      "name": "error",
                      "wireValue": "error"
                    },
                    "value": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "error"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "error"
                    },
                    "originalTypeDeclaration": {
                      "typeId": "type_:Error",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Error"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "named"
            },
            "jsonExample": {
              "error": "error"
            }
          }
        }
      ]
    },
    "error_:TooManyRequestsError": {
      "name": {
        "name": "TooManyRequestsError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:TooManyRequestsError"
      },
      "discriminantValue": {
        "name": "TooManyRequestsError",
        "wireValue": "TooManyRequestsError"
      },
      "docs": "Too Many Requests",
      "statusCode": 429,
      "type": {
        "name": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Error",
        "type": "named"
      },
      "examples": [
        {
          "jsonExample": {
            "error": "error"
          },
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:Error",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "Error"
              },
              "shape": {
                "properties": [
                  {
                    "name": {
                      "name": "error",
                      "wireValue": "error"
                    },
                    "value": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "error"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "error"
                    },
                    "originalTypeDeclaration": {
                      "typeId": "type_:Error",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Error"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "named"
            },
            "jsonExample": {
              "error": "error"
            }
          }
        }
      ]
    },
    "error_:InternalServerError": {
      "name": {
        "name": "InternalServerError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:InternalServerError"
      },
      "discriminantValue": {
        "name": "InternalServerError",
        "wireValue": "InternalServerError"
      },
      "docs": "An error occurred while processing the request",
      "statusCode": 500,
      "type": {
        "name": "Error",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "typeId": "type_:Error",
        "type": "named"
      },
      "examples": [
        {
          "jsonExample": {
            "error": "error"
          },
          "shape": {
            "shape": {
              "typeName": {
                "typeId": "type_:Error",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "name": "Error"
              },
              "shape": {
                "properties": [
                  {
                    "name": {
                      "name": "error",
                      "wireValue": "error"
                    },
                    "value": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "error"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "error"
                    },
                    "originalTypeDeclaration": {
                      "typeId": "type_:Error",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "name": "Error"
                    }
                  }
                ],
                "type": "object"
              },
              "type": "named"
            },
            "jsonExample": {
              "error": "error"
            }
          }
        }
      ]
    },
    "error_:ServiceUnavailableError": {
      "name": {
        "name": "ServiceUnavailableError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:ServiceUnavailableError"
      },
      "discriminantValue": {
        "name": "ServiceUnavailableError",
        "wireValue": "ServiceUnavailableError"
      },
      "docs": "Service Unavailable",
      "statusCode": 503,
      "type": {
        "type": "unknown"
      },
      "examples": []
    },
    "error_:GatewayTimeoutError": {
      "name": {
        "name": "GatewayTimeoutError",
        "fernFilepath": {
          "allParts": [],
          "packagePath": []
        },
        "errorId": "error_:GatewayTimeoutError"
      },
      "discriminantValue": {
        "name": "GatewayTimeoutError",
        "wireValue": "GatewayTimeoutError"
      },
      "docs": "Gateway Timeout",
      "statusCode": 504,
      "type": {
        "type": "unknown"
      },
      "examples": []
    }
  },
  "services": {
    "service_files": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "files"
          ],
          "packagePath": [],
          "file": "files"
        }
      },
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Upload your audio or video file directly to the AssemblyAI API if it isn't accessible via a URL already.",
          "id": "endpoint_files.upload",
          "name": "upload",
          "displayName": "Upload an audio or video file which can be transcribed.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "POST",
          "path": {
            "head": "/v2/upload",
            "parts": []
          },
          "fullPath": {
            "head": "v2/upload",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "isOptional": false,
            "contentType": "application/octet-stream",
            "type": "bytes"
          },
          "sdkRequest": {
            "shape": {
              "value": {
                "isOptional": false,
                "type": "bytes"
              },
              "type": "justRequestBody"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "File uploaded successfully",
                "responseBodyType": {
                  "name": "UploadedFile",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:UploadedFile",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    },
    "service_transcript": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "transcript"
          ],
          "packagePath": [],
          "file": "transcript"
        }
      },
      "displayName": "transcript",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Retrieve a list of transcripts you have created.",
          "id": "endpoint_transcript.list",
          "name": "list",
          "displayName": "List transcripts",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "GET",
          "path": {
            "head": "/v2/transcript",
            "parts": []
          },
          "fullPath": {
            "head": "v2/transcript",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [
            {
              "docs": "Maximum amount of transcripts to retrieve",
              "name": {
                "name": "limit",
                "wireValue": "limit"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "LONG",
                      "v2": {
                        "default": 10,
                        "type": "long"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "Filter by transcript status",
              "name": {
                "name": "status",
                "wireValue": "status"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "name": "TranscriptListRequestStatus",
                    "fernFilepath": {
                      "allParts": [
                        "transcript"
                      ],
                      "packagePath": [],
                      "file": "transcript"
                    },
                    "typeId": "type_transcript:TranscriptListRequestStatus",
                    "type": "named"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "Only get transcripts created on this date",
              "name": {
                "name": "created_on",
                "wireValue": "created_on"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "validation": {
                          "format": "date"
                        },
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "Get transcripts that were created before this transcript ID",
              "name": {
                "name": {
                  "originalName": "before_id",
                  "camelCase": {
                    "unsafeName": "beforeID",
                    "safeName": "beforeID"
                  },
                  "pascalCase": {
                    "unsafeName": "BeforeID",
                    "safeName": "BeforeID"
                  }
                },
                "wireValue": "before_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "Get transcripts that were created after this transcript ID",
              "name": {
                "name": {
                  "originalName": "after_id",
                  "camelCase": {
                    "unsafeName": "afterID",
                    "safeName": "afterID"
                  },
                  "pascalCase": {
                    "unsafeName": "AfterID",
                    "safeName": "AfterID"
                  }
                },
                "wireValue": "after_id"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "Only get throttled transcripts, overrides the status filter",
              "name": {
                "name": "throttled_only",
                "wireValue": "throttled_only"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "BOOLEAN",
                      "v2": {
                        "type": "boolean"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "sdkRequest": {
            "shape": {
              "wrapperName": "TranscriptListRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "A list of transcripts filtered by `limit` and `status`",
                "responseBodyType": {
                  "name": "TranscriptList",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:TranscriptList",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Create a transcript from an audio or video file that is accessible via a URL.",
          "id": "endpoint_transcript.create",
          "name": "create",
          "displayName": "Create a transcript from an audio file",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "POST",
          "path": {
            "head": "/v2/transcript",
            "parts": []
          },
          "fullPath": {
            "head": "v2/transcript",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "CreateTranscriptParameters",
            "extends": [
              {
                "name": "CreateTranscriptOptionalParameters",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:CreateTranscriptOptionalParameters"
              }
            ],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "The URL of the audio or video file to transcribe.",
                "name": {
                  "name": {
                    "originalName": "audio_url",
                    "camelCase": {
                      "unsafeName": "audioURL",
                      "safeName": "audioURL"
                    },
                    "pascalCase": {
                      "unsafeName": "AudioURL",
                      "safeName": "AudioURL"
                    }
                  },
                  "wireValue": "audio_url"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [
              {
                "docs": "The language of your audio file. Possible values are found in [Supported Languages](https://www.assemblyai.com/docs/Concepts/supported_languages).\nThe default value is 'en_us'.",
                "name": {
                  "name": "language_code",
                  "wireValue": "language_code"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "TranscriptLanguageCode",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:TranscriptLanguageCode",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable Automatic Punctuation, can be true or false.",
                "name": {
                  "name": "punctuate",
                  "wireValue": "punctuate"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable Text Formatting, can be true or false.",
                "name": {
                  "name": "format_text",
                  "wireValue": "format_text"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Dual Channel](https://assemblyai.com/docs/Models/speech_recognition#dual-channel-transcription) transcription, can be true or false.",
                "name": {
                  "name": "dual_channel",
                  "wireValue": "dual_channel"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The URL to which we send webhooks upon trancription completion, if provided in the transcription request.",
                "name": {
                  "name": {
                    "originalName": "webhook_url",
                    "camelCase": {
                      "unsafeName": "webhookURL",
                      "safeName": "webhookURL"
                    },
                    "pascalCase": {
                      "unsafeName": "WebhookURL",
                      "safeName": "WebhookURL"
                    }
                  },
                  "wireValue": "webhook_url"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The header name which should be sent back with webhook calls, if provided in the transcription request.",
                "name": {
                  "name": "webhook_auth_header_name",
                  "wireValue": "webhook_auth_header_name"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Defaults to null. Optionally allows a user to specify a header name and value to send back with a webhook call for added security.",
                "name": {
                  "name": "webhook_auth_header_value",
                  "wireValue": "webhook_auth_header_value"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Whether Key Phrases was enabled in the transcription request, either true or false",
                "name": {
                  "name": "auto_highlights",
                  "wireValue": "auto_highlights"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The point in time, in milliseconds, to begin transcription from in your media file",
                "name": {
                  "name": "audio_start_from",
                  "wireValue": "audio_start_from"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The point in time, in milliseconds, to stop transcribing in your media file",
                "name": {
                  "name": "audio_end_at",
                  "wireValue": "audio_end_at"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The list of custom vocabulary to boost transcription probability for, if provided in the transcription request.",
                "name": {
                  "name": "word_boost",
                  "wireValue": "word_boost"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The word boost parameter value, if provided in the transcription request.",
                "name": {
                  "name": "boost_param",
                  "wireValue": "boost_param"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "TranscriptBoostParam",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:TranscriptBoostParam",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Filter profanity from the transcribed text, can be true or false.",
                "name": {
                  "name": "filter_profanity",
                  "wireValue": "filter_profanity"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Redact PII from the transcribed text using the Redact PII model, can be true or false",
                "name": {
                  "name": "redact_pii",
                  "wireValue": "redact_pii"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Generate a copy of the original media file with spoken PII \"beeped\" out, can be true or false. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
                "name": {
                  "name": "redact_pii_audio",
                  "wireValue": "redact_pii_audio"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Controls the filetype of the audio created by redact_pii_audio. Currently supports mp3 (default) and wav. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
                "name": {
                  "name": "redact_pii_audio_quality",
                  "wireValue": "redact_pii_audio_quality"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "default": "mp3",
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The list of PII Redaction policies to enable. See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
                "name": {
                  "name": "redact_pii_policies",
                  "wireValue": "redact_pii_policies"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "name": "PiiPolicy",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "typeId": "type_:PiiPolicy",
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The replacement logic for detected PII, can be \"entity_type\" or \"hash\". See [PII redaction](https://www.assemblyai.com/docs/Models/pii_redaction) for more details.",
                "name": {
                  "name": "redact_pii_sub",
                  "wireValue": "redact_pii_sub"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "SubstitutionPolicy",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SubstitutionPolicy",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization), can be true or false",
                "name": {
                  "name": "speaker_labels",
                  "wireValue": "speaker_labels"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Tells the speaker label model how many speakers it should attempt to identify, up to 10. See [Speaker diarization](https://www.assemblyai.com/docs/Models/speaker_diarization) for more details.",
                "name": {
                  "name": "speakers_expected",
                  "wireValue": "speakers_expected"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Content Moderation](https://www.assemblyai.com/docs/Models/content_moderation), can be true or false",
                "name": {
                  "name": "content_safety",
                  "wireValue": "content_safety"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Topic Detection](https://www.assemblyai.com/docs/Models/iab_classification), can be true or false",
                "name": {
                  "name": "iab_categories",
                  "wireValue": "iab_categories"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Whether [Automatic language detection](https://www.assemblyai.com/docs/Models/speech_recognition#automatic-language-detection) was enabled in the transcription request, either true or false.",
                "name": {
                  "name": "language_detection",
                  "wireValue": "language_detection"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Customize how words are spelled and formatted using to and from values",
                "name": {
                  "name": "custom_spelling",
                  "wireValue": "custom_spelling"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "name": "TranscriptCustomSpelling",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "typeId": "type_:TranscriptCustomSpelling",
                          "type": "named"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Transcribe Filler Words, like \"umm\", in your media file; can be true or false.",
                "name": {
                  "name": "disfluencies",
                  "wireValue": "disfluencies"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Sentiment Analysis](https://www.assemblyai.com/docs/Models/sentiment_analysis), can be true or false",
                "name": {
                  "name": "sentiment_analysis",
                  "wireValue": "sentiment_analysis"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Auto Chapters](https://www.assemblyai.com/docs/Models/auto_chapters), can be true or false",
                "name": {
                  "name": "auto_chapters",
                  "wireValue": "auto_chapters"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Entity Detection](https://www.assemblyai.com/docs/Models/entity_detection), can be true or false",
                "name": {
                  "name": "entity_detection",
                  "wireValue": "entity_detection"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Reject audio files that contain less than this fraction of speech.\nValid values are in the range [0, 1] inclusive.",
                "name": {
                  "name": "speech_threshold",
                  "wireValue": "speech_threshold"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "FLOAT"
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Enable [Summarization](https://www.assemblyai.com/docs/Models/summarization), can be true or false",
                "name": {
                  "name": "summarization",
                  "wireValue": "summarization"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The model to summarize the transcript",
                "name": {
                  "name": "summary_model",
                  "wireValue": "summary_model"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "SummaryModel",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SummaryModel",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The type of summary",
                "name": {
                  "name": "summary_type",
                  "wireValue": "summary_type"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "SummaryType",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:SummaryType",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Whether custom topics was enabled in the transcription request, either true or false",
                "name": {
                  "name": "custom_topics",
                  "wireValue": "custom_topics"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "BOOLEAN",
                        "v2": {
                          "type": "boolean"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The list of custom topics provided if custom topics was enabled in the transcription request",
                "name": {
                  "name": "topics",
                  "wireValue": "topics"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "container": {
                        "list": {
                          "primitive": {
                            "v1": "STRING",
                            "v2": {
                              "type": "string"
                            }
                          },
                          "type": "primitive"
                        },
                        "type": "list"
                      },
                      "type": "container"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "CreateTranscriptParameters",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Transcript created and queued for processing.",
                "responseBodyType": {
                  "name": "Transcript",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Transcript",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 201
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Get the transcript resource. The transcript is ready when the \"status\" is \"completed\".",
          "id": "endpoint_transcript.get",
          "name": "get",
          "displayName": "Get the transcript",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "GET",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "fullPath": {
            "head": "v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "The transcript resource",
                "responseBodyType": {
                  "name": "Transcript",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Transcript",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Delete the transcript",
          "id": "endpoint_transcript.delete",
          "name": "delete",
          "displayName": "Delete the transcript",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "DELETE",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "fullPath": {
            "head": "v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "The deleted transcript response.",
                "responseBodyType": {
                  "name": "Transcript",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:Transcript",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Export your transcript in SRT or VTT format, to be plugged into a video player for subtitles and closed captions.",
          "id": "endpoint_transcript.getSubtitles",
          "name": "getSubtitles",
          "displayName": "Export transcript as SRT or VTT captions.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "GET",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/"
              },
              {
                "pathParameter": "subtitle_format",
                "tail": ""
              }
            ]
          },
          "fullPath": {
            "head": "v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/"
              },
              {
                "pathParameter": "subtitle_format",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "The format of the captions.",
              "name": "subtitle_format",
              "valueType": {
                "name": "SubtitleFormat",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:SubtitleFormat",
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            },
            {
              "docs": "The format of the captions.",
              "name": "subtitle_format",
              "valueType": {
                "name": "SubtitleFormat",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:SubtitleFormat",
                "type": "named"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "docs": "The maximum number of characters per caption",
              "name": {
                "name": "chars_per_caption",
                "wireValue": "chars_per_caption"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "INTEGER",
                      "v2": {
                        "type": "integer"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": false,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "sdkRequest": {
            "shape": {
              "wrapperName": "TranscriptGetSubtitlesRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "docs": "The exported captions as text",
              "type": "text"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Get the transcript split by sentences. The API will attempt to semantically segment the transcript into sentences to create more reader-friendly transcripts.",
          "id": "endpoint_transcript.getSentences",
          "name": "getSentences",
          "displayName": "Get the transcript split by sentences",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "GET",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/sentences"
              }
            ]
          },
          "fullPath": {
            "head": "v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/sentences"
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "Exported sentences",
                "responseBodyType": {
                  "name": "SentencesResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:SentencesResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Get the transcript split by paragraphs. The API will attempt to semantically segment your transcript into paragraphs to create more reader-friendly transcripts.",
          "id": "endpoint_transcript.getParagraphs",
          "name": "getParagraphs",
          "displayName": "Get the transcript split by paragraphs",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "GET",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/paragraphs"
              }
            ]
          },
          "fullPath": {
            "head": "v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/paragraphs"
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "Exported paragraphs",
                "responseBodyType": {
                  "name": "ParagraphsResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:ParagraphsResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Search through the transcript for a specific set of keywords. You can search for individual words, numbers, or phrases containing up to five words or numbers.",
          "id": "endpoint_transcript.wordSearch",
          "name": "wordSearch",
          "displayName": "Search the given transcript for words, numbers, or phrases",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "GET",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/word-search"
              }
            ]
          },
          "fullPath": {
            "head": "v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/word-search"
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [
            {
              "docs": "Keywords to search for",
              "name": {
                "name": "words",
                "wireValue": "words"
              },
              "valueType": {
                "container": {
                  "optional": {
                    "primitive": {
                      "v1": "STRING",
                      "v2": {
                        "type": "string"
                      }
                    },
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "container"
              },
              "allowMultiple": true,
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "headers": [],
          "sdkRequest": {
            "shape": {
              "wrapperName": "TranscriptWordSearchRequest",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Word search response",
                "responseBodyType": {
                  "name": "WordSearchResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:WordSearchResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Retrieves the redacted audio object containing the status and URL to the redacted audio.",
          "id": "endpoint_transcript.getRedactedAudio",
          "name": "getRedactedAudio",
          "displayName": "Retrieves the redacted audio object containing the status and URL to the redacted audio.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "GET",
          "path": {
            "head": "/v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/redacted-audio"
              }
            ]
          },
          "fullPath": {
            "head": "v2/transcript/",
            "parts": [
              {
                "pathParameter": "transcript_id",
                "tail": "/redacted-audio"
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "ID of the transcript",
              "name": {
                "originalName": "transcript_id",
                "camelCase": {
                  "unsafeName": "transcriptID",
                  "safeName": "transcriptID"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptID",
                  "safeName": "TranscriptID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "The redacted audio object containing the status and URL to the redacted audio.",
                "responseBodyType": {
                  "name": "RedactedAudioResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:RedactedAudioResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    },
    "service_realtime": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "realtime"
          ],
          "packagePath": [],
          "file": "realtime"
        }
      },
      "displayName": "realtime",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Create a temporary authentication token for real-time transcription",
          "id": "endpoint_realtime.createTemporaryToken",
          "name": "createTemporaryToken",
          "displayName": "Create a temporary authentication token for real-time transcription",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "POST",
          "path": {
            "head": "/v2/realtime/token",
            "parts": []
          },
          "fullPath": {
            "head": "v2/realtime/token",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "CreateRealtimeTemporaryTokenParameters",
            "extends": [],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "The amount of time until the token expires in seconds.",
                "name": {
                  "name": "expires_in",
                  "wireValue": "expires_in"
                },
                "valueType": {
                  "primitive": {
                    "v1": "INTEGER",
                    "v2": {
                      "validation": {
                        "min": 60
                      },
                      "type": "integer"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "CreateRealtimeTemporaryTokenParameters",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "Temporary authentication token generated.",
                "responseBodyType": {
                  "name": "RealtimeTemporaryTokenResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:RealtimeTemporaryTokenResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    },
    "service_lemur": {
      "name": {
        "fernFilepath": {
          "allParts": [
            "lemur"
          ],
          "packagePath": [],
          "file": "lemur"
        }
      },
      "displayName": "LeMUR",
      "basePath": {
        "head": "",
        "parts": []
      },
      "headers": [],
      "pathParameters": [],
      "encoding": {
        "json": {}
      },
      "transport": {
        "type": "http"
      },
      "endpoints": [
        {
          "docs": "Custom Summary allows you to distill a piece of audio into a few impactful sentences. You can give the model context to obtain more targeted results while outputting the results in a variety of formats described in human language.",
          "id": "endpoint_lemur.summary",
          "name": "summary",
          "displayName": "Generate a custom summary from one or more transcripts.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "POST",
          "path": {
            "head": "/lemur/v3/generate/summary",
            "parts": []
          },
          "fullPath": {
            "head": "lemur/v3/generate/summary",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "LemurSummaryParameters",
            "extends": [
              {
                "name": "LemurBaseParameters",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:LemurBaseParameters"
              }
            ],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "How you want the summary to be returned. This can be any text. Examples: \"TLDR\", \"bullet points\"",
                "name": {
                  "name": "answer_format",
                  "wireValue": "answer_format"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [
              {
                "docs": "A list of completed transcripts with text. Up to 100 files max, or 100 hours max. Whichever is lower.",
                "name": {
                  "name": {
                    "originalName": "transcript_ids",
                    "camelCase": {
                      "unsafeName": "transcriptIDs",
                      "safeName": "transcriptIDs"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptIDs",
                      "safeName": "TranscriptIDs"
                    }
                  },
                  "wireValue": "transcript_ids"
                },
                "valueType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Context to provide the model. This can be a string or a free-form JSON value.",
                "name": {
                  "name": "context",
                  "wireValue": "context"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "LemurBaseParametersContext",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:LemurBaseParametersContext",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "name": {
                  "name": "final_model",
                  "wireValue": "final_model"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "LemurModel",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:LemurModel",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Max output size in tokens. Up to 4000 allowed.",
                "name": {
                  "name": "max_output_size",
                  "wireValue": "max_output_size"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The temperature to use for the model.\nHigher values result in answers that are more creative, lower values are more conservative.\nCan be any value between 0.0 and 1.0 inclusive.",
                "name": {
                  "name": "temperature",
                  "wireValue": "temperature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "FLOAT"
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "LemurSummaryParameters",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "LeMUR summary response",
                "responseBodyType": {
                  "name": "LemurSummaryResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurSummaryResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Question & Answer allows you to ask free-form questions about a single transcript or a group of transcripts. The questions can be any whose answers you find useful, such as judging whether a caller is likely to become a customer or whether all items on a meeting's agenda were covered.",
          "id": "endpoint_lemur.questionAnswer",
          "name": "questionAnswer",
          "displayName": "Create answers to one or more questions about one or more transcripts.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "POST",
          "path": {
            "head": "/lemur/v3/generate/question-answer",
            "parts": []
          },
          "fullPath": {
            "head": "lemur/v3/generate/question-answer",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "LemurQuestionAnswerParameters",
            "extends": [
              {
                "name": "LemurBaseParameters",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:LemurBaseParameters"
              }
            ],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "A list of questions to ask.",
                "name": {
                  "name": "questions",
                  "wireValue": "questions"
                },
                "valueType": {
                  "container": {
                    "list": {
                      "name": "LemurQuestion",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:LemurQuestion",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [
              {
                "docs": "A list of completed transcripts with text. Up to 100 files max, or 100 hours max. Whichever is lower.",
                "name": {
                  "name": {
                    "originalName": "transcript_ids",
                    "camelCase": {
                      "unsafeName": "transcriptIDs",
                      "safeName": "transcriptIDs"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptIDs",
                      "safeName": "TranscriptIDs"
                    }
                  },
                  "wireValue": "transcript_ids"
                },
                "valueType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Context to provide the model. This can be a string or a free-form JSON value.",
                "name": {
                  "name": "context",
                  "wireValue": "context"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "LemurBaseParametersContext",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:LemurBaseParametersContext",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "name": {
                  "name": "final_model",
                  "wireValue": "final_model"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "LemurModel",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:LemurModel",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Max output size in tokens. Up to 4000 allowed.",
                "name": {
                  "name": "max_output_size",
                  "wireValue": "max_output_size"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The temperature to use for the model.\nHigher values result in answers that are more creative, lower values are more conservative.\nCan be any value between 0.0 and 1.0 inclusive.",
                "name": {
                  "name": "temperature",
                  "wireValue": "temperature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "FLOAT"
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "LemurQuestionAnswerParameters",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "LeMUR question & answer response",
                "responseBodyType": {
                  "name": "LemurQuestionAnswerResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurQuestionAnswerResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Use LeMUR to generate a list of Action Items from a transcript",
          "id": "endpoint_lemur.actionItems",
          "name": "actionItems",
          "displayName": "Extract action items from one or more meeting transcripts.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "POST",
          "path": {
            "head": "/lemur/v3/generate/action-items",
            "parts": []
          },
          "fullPath": {
            "head": "lemur/v3/generate/action-items",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "requestBodyType": {
              "name": "LemurActionItemsParameters",
              "fernFilepath": {
                "allParts": [],
                "packagePath": []
              },
              "typeId": "type_:LemurActionItemsParameters",
              "type": "named"
            },
            "contentType": "application/json",
            "type": "reference"
          },
          "sdkRequest": {
            "shape": {
              "value": {
                "requestBodyType": {
                  "name": "LemurActionItemsParameters",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurActionItemsParameters",
                  "type": "named"
                },
                "type": "typeReference"
              },
              "type": "justRequestBody"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "LeMUR action items response",
                "responseBodyType": {
                  "name": "LemurActionItemsResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurActionItemsResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Use LeMUR to ask anything with Custom Task",
          "id": "endpoint_lemur.task",
          "name": "task",
          "displayName": "Ask LeMUR to use one or more transcripts with a Custom Task to handle your specialized task.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "POST",
          "path": {
            "head": "/lemur/v3/generate/task",
            "parts": []
          },
          "fullPath": {
            "head": "lemur/v3/generate/task",
            "parts": []
          },
          "pathParameters": [],
          "allPathParameters": [],
          "queryParameters": [],
          "headers": [],
          "requestBody": {
            "name": "LemurTaskParameters",
            "extends": [
              {
                "name": "LemurBaseParameters",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "typeId": "type_:LemurBaseParameters"
              }
            ],
            "contentType": "application/json",
            "properties": [
              {
                "docs": "Your text to prompt the model to produce a desired output, including any context you want to pass into the model.",
                "name": {
                  "name": "prompt",
                  "wireValue": "prompt"
                },
                "valueType": {
                  "primitive": {
                    "v1": "STRING",
                    "v2": {
                      "type": "string"
                    }
                  },
                  "type": "primitive"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "extraProperties": false,
            "extendedProperties": [
              {
                "docs": "A list of completed transcripts with text. Up to 100 files max, or 100 hours max. Whichever is lower.",
                "name": {
                  "name": {
                    "originalName": "transcript_ids",
                    "camelCase": {
                      "unsafeName": "transcriptIDs",
                      "safeName": "transcriptIDs"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptIDs",
                      "safeName": "TranscriptIDs"
                    }
                  },
                  "wireValue": "transcript_ids"
                },
                "valueType": {
                  "container": {
                    "list": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Context to provide the model. This can be a string or a free-form JSON value.",
                "name": {
                  "name": "context",
                  "wireValue": "context"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "LemurBaseParametersContext",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:LemurBaseParametersContext",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "name": {
                  "name": "final_model",
                  "wireValue": "final_model"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "name": "LemurModel",
                      "fernFilepath": {
                        "allParts": [],
                        "packagePath": []
                      },
                      "typeId": "type_:LemurModel",
                      "type": "named"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "Max output size in tokens. Up to 4000 allowed.",
                "name": {
                  "name": "max_output_size",
                  "wireValue": "max_output_size"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              },
              {
                "docs": "The temperature to use for the model.\nHigher values result in answers that are more creative, lower values are more conservative.\nCan be any value between 0.0 and 1.0 inclusive.",
                "name": {
                  "name": "temperature",
                  "wireValue": "temperature"
                },
                "valueType": {
                  "container": {
                    "optional": {
                      "primitive": {
                        "v1": "FLOAT"
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "v2Examples": {
                  "userSpecifiedExamples": {},
                  "autogeneratedExamples": {}
                }
              }
            ],
            "type": "inlinedRequestBody"
          },
          "sdkRequest": {
            "shape": {
              "wrapperName": "LemurTaskParameters",
              "bodyKey": "body",
              "includePathParameters": false,
              "onlyPathParameters": false,
              "type": "wrapper"
            },
            "requestParameterName": "request"
          },
          "response": {
            "body": {
              "value": {
                "docs": "LeMUR task response",
                "responseBodyType": {
                  "name": "LemurTaskResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:LemurTaskResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        },
        {
          "docs": "Delete the data for a previously submitted LeMUR request.\nThe LLM response data, as well as any context provided in the original request will be removed.",
          "id": "endpoint_lemur.purgeRequestData",
          "name": "purgeRequestData",
          "displayName": "Delete the data for a previously submitted LeMUR request.",
          "auth": false,
          "idempotent": false,
          "baseUrl": "Base",
          "method": "DELETE",
          "path": {
            "head": "/lemur/v3/",
            "parts": [
              {
                "pathParameter": "request_id",
                "tail": ""
              }
            ]
          },
          "fullPath": {
            "head": "lemur/v3/",
            "parts": [
              {
                "pathParameter": "request_id",
                "tail": ""
              }
            ]
          },
          "pathParameters": [
            {
              "docs": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.",
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "allPathParameters": [
            {
              "docs": "The ID of the LeMUR request whose data you want to delete. This would be found in the response of the original request.",
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                }
              },
              "valueType": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "location": "ENDPOINT",
              "v2Examples": {
                "userSpecifiedExamples": {},
                "autogeneratedExamples": {}
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "body": {
              "value": {
                "docs": "LeMUR request data deleted.",
                "responseBodyType": {
                  "name": "PurgeLemurRequestDataResponse",
                  "fernFilepath": {
                    "allParts": [],
                    "packagePath": []
                  },
                  "typeId": "type_:PurgeLemurRequestDataResponse",
                  "type": "named"
                },
                "type": "response"
              },
              "type": "json"
            },
            "statusCode": 200
          },
          "errors": [
            {
              "error": {
                "name": "BadRequestError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:BadRequestError"
              }
            },
            {
              "error": {
                "name": "UnauthorizedError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:UnauthorizedError"
              }
            },
            {
              "error": {
                "name": "NotFoundError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:NotFoundError"
              }
            },
            {
              "error": {
                "name": "TooManyRequestsError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:TooManyRequestsError"
              }
            },
            {
              "error": {
                "name": "InternalServerError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:InternalServerError"
              }
            },
            {
              "error": {
                "name": "ServiceUnavailableError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:ServiceUnavailableError"
              }
            },
            {
              "error": {
                "name": "GatewayTimeoutError",
                "fernFilepath": {
                  "allParts": [],
                  "packagePath": []
                },
                "errorId": "error_:GatewayTimeoutError"
              }
            }
          ],
          "userSpecifiedExamples": [],
          "autogeneratedExamples": []
        }
      ]
    }
  },
  "constants": {
    "errorInstanceIdKey": {
      "name": {
        "originalName": "errorInstanceId",
        "camelCase": {
          "unsafeName": "errorInstanceID",
          "safeName": "errorInstanceID"
        },
        "pascalCase": {
          "unsafeName": "ErrorInstanceID",
          "safeName": "ErrorInstanceID"
        }
      },
      "wireValue": "errorInstanceId"
    }
  },
  "environments": {
    "defaultEnvironment": "Default",
    "environments": {
      "baseUrls": [
        {
          "id": "Base",
          "name": "Base"
        },
        {
          "id": "API",
          "name": {
            "originalName": "API",
            "pascalCase": {
              "unsafeName": "API",
              "safeName": "API"
            }
          }
        }
      ],
      "environments": [
        {
          "id": "Default",
          "name": "Default",
          "urls": {
            "Base": "https://api.assemblyai.com",
            "API": "wss://api.assemblyai.com/v2/realtime/ws"
          }
        }
      ],
      "type": "multipleBaseUrls"
    }
  },
  "errorDiscriminationStrategy": {
    "type": "statusCode"
  },
  "pathParameters": [],
  "variables": [],
  "serviceTypeReferenceInfo": {
    "typesReferencedOnlyByService": {
      "service_transcript": [
        "type_transcript:TranscriptListRequestStatus",
        "type_:RedactedAudioResponse",
        "type_:RedactedAudioStatus",
        "type_:SubtitleFormat",
        "type_:WordSearchResponse",
        "type_:WordSearchMatch",
        "type_:WordSearchTimestamp",
        "type_:Timestamp",
        "type_:CreateTranscriptOptionalParameters",
        "type_:SummaryModel",
        "type_:SummaryType",
        "type_:TranscriptBoostParam",
        "type_:TranscriptCustomSpelling",
        "type_:TranscriptUtterance",
        "type_:SubstitutionPolicy",
        "type_:PiiPolicy",
        "type_:TranscriptLanguageCode",
        "type_:TranscriptStatus",
        "type_:TranscriptContentSafetyLabels",
        "type_:TranscriptIabCategoriesResult",
        "type_:Transcript",
        "type_:Chapter",
        "type_:Entity",
        "type_:EntityType",
        "type_:SentimentAnalysisResult",
        "type_:Sentiment",
        "type_:TopicDetectionResultLabelsItem",
        "type_:TopicDetectionResult",
        "type_:ContentSafetyLabel",
        "type_:ContentSafetyLabelResult",
        "type_:SeverityScoreSummary",
        "type_:AutoHighlightsResult",
        "type_:AutoHighlightResult",
        "type_:TranscriptWord",
        "type_:TranscriptSentence",
        "type_:SentencesResponse",
        "type_:TranscriptParagraph",
        "type_:ParagraphsResponse",
        "type_:PageDetails",
        "type_:TranscriptListItem",
        "type_:TranscriptList",
        "type_:AudioIntelligenceModelStatus"
      ],
      "service_files": [
        "type_:UploadedFile"
      ],
      "service_realtime": [
        "type_:RealtimeTemporaryTokenResponse"
      ],
      "service_lemur": [
        "type_:PurgeLemurRequestDataResponse",
        "type_:LemurBaseResponse",
        "type_:LemurSummaryResponse",
        "type_:LemurQuestionAnswerResponse",
        "type_:LemurQuestionAnswer",
        "type_:LemurActionItemsResponse",
        "type_:LemurTaskResponse",
        "type_:LemurBaseParametersContext",
        "type_:LemurBaseParameters",
        "type_:LemurQuestionContext",
        "type_:LemurQuestion",
        "type_:LemurActionItemsParameters",
        "type_:LemurModel"
      ]
    },
    "sharedTypes": [
      "type_userId:sendMessage",
      "type_userId:receiveMessage",
      "type_:TranscriptListParameters",
      "type_:Error",
      "type_:RealtimeBaseMessage",
      "type_:RealtimeMessage",
      "type_:RealtimeError",
      "type_:MessageType",
      "type_:RealtimeTranscriptType",
      "type_:RealtimeTranscript",
      "type_:SessionBegins",
      "type_:SessionTerminated",
      "type_:RealtimeBaseTranscript",
      "type_:PartialTranscript",
      "type_:FinalTranscript",
      "type_:Word",
      "type_:AudioData",
      "type_:TerminateSession"
    ]
  },
  "webhookGroups": {},
  "websocketChannels": {
    "channel_userId": {
      "path": {
        "head": "/",
        "parts": [
          {
            "pathParameter": "userId",
            "tail": ""
          }
        ]
      },
      "baseUrl": "API",
      "auth": false,
      "name": {
        "originalName": "userId",
        "camelCase": {
          "unsafeName": "userID",
          "safeName": "userID"
        },
        "pascalCase": {
          "unsafeName": "UserID",
          "safeName": "UserID"
        }
      },
      "headers": [
        {
          "docs": "Authenticate using your AssemblyAI API key.",
          "name": {
            "name": "authentication",
            "wireValue": "Authentication"
          },
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {}
          }
        }
      ],
      "pathParameters": [
        {
          "docs": "The ID of the user.",
          "name": {
            "originalName": "userId",
            "camelCase": {
              "unsafeName": "userID",
              "safeName": "userID"
            },
            "pascalCase": {
              "unsafeName": "UserID",
              "safeName": "UserID"
            }
          },
          "valueType": {
            "primitive": {
              "v1": "STRING",
              "v2": {
                "type": "string"
              }
            },
            "type": "primitive"
          },
          "location": "ENDPOINT",
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {}
          }
        }
      ],
      "queryParameters": [
        {
          "docs": "The sample rate of the streamed audio.",
          "name": {
            "name": "sample_rate",
            "wireValue": "sample_rate"
          },
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "INTEGER",
                  "v2": {
                    "type": "integer"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {}
          }
        },
        {
          "docs": "Add up to 2500 characters of custom vocabulary.\nThe parameter should map to a JSON encoded list of strings.",
          "name": {
            "name": "word_boost",
            "wireValue": "word_boost"
          },
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {}
          }
        },
        {
          "docs": "Authenticate using a [generated temporary token](https://www.assemblyai.com/docs/Guides/real-time_streaming_transcription#creating-temporary-authentication-tokens)",
          "name": {
            "name": "token",
            "wireValue": "token"
          },
          "valueType": {
            "container": {
              "optional": {
                "primitive": {
                  "v1": "STRING",
                  "v2": {
                    "type": "string"
                  }
                },
                "type": "primitive"
              },
              "type": "optional"
            },
            "type": "container"
          },
          "allowMultiple": false,
          "v2Examples": {
            "userSpecifiedExamples": {},
            "autogeneratedExamples": {}
          }
        }
      ],
      "messages": [
        {
          "type": "publish",
          "origin": "client",
          "body": {
            "bodyType": {
              "name": "sendMessage",
              "fernFilepath": {
                "allParts": [
                  {
                    "originalName": "userId",
                    "camelCase": {
                      "unsafeName": "userID",
                      "safeName": "userID"
                    },
                    "pascalCase": {
                      "unsafeName": "UserID",
                      "safeName": "UserID"
                    }
                  }
                ],
                "packagePath": [],
                "file": {
                  "originalName": "userId",
                  "camelCase": {
                    "unsafeName": "userID",
                    "safeName": "userID"
                  },
                  "pascalCase": {
                    "unsafeName": "UserID",
                    "safeName": "UserID"
                  }
                }
              },
              "typeId": "type_userId:sendMessage",
              "type": "named"
            },
            "type": "reference"
          }
        },
        {
          "type": "subscribe",
          "origin": "server",
          "body": {
            "bodyType": {
              "name": "receiveMessage",
              "fernFilepath": {
                "allParts": [
                  {
                    "originalName": "userId",
                    "camelCase": {
                      "unsafeName": "userID",
                      "safeName": "userID"
                    },
                    "pascalCase": {
                      "unsafeName": "UserID",
                      "safeName": "UserID"
                    }
                  }
                ],
                "packagePath": [],
                "file": {
                  "originalName": "userId",
                  "camelCase": {
                    "unsafeName": "userID",
                    "safeName": "userID"
                  },
                  "pascalCase": {
                    "unsafeName": "UserID",
                    "safeName": "UserID"
                  }
                }
              },
              "typeId": "type_userId:receiveMessage",
              "type": "named"
            },
            "type": "reference"
          }
        }
      ],
      "examples": [
        {
          "url": "/{userId}",
          "pathParameters": [],
          "headers": [
            {
              "name": {
                "name": "authentication",
                "wireValue": "Authentication"
              },
              "value": {
                "shape": {
                  "container": {
                    "optional": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "Authentication"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "Authentication"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "jsonExample": "Authentication"
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": "sample_rate",
                "wireValue": "sample_rate"
              },
              "value": {
                "shape": {
                  "container": {
                    "optional": {
                      "shape": {
                        "primitive": {
                          "integer": 1,
                          "type": "integer"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": 1
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "INTEGER",
                        "v2": {
                          "type": "integer"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "jsonExample": 1
              },
              "shape": {
                "type": "single"
              }
            },
            {
              "name": {
                "name": "word_boost",
                "wireValue": "word_boost"
              },
              "value": {
                "shape": {
                  "container": {
                    "optional": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "word_boost"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "word_boost"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "jsonExample": "word_boost"
              },
              "shape": {
                "type": "single"
              }
            },
            {
              "name": {
                "name": "token",
                "wireValue": "token"
              },
              "value": {
                "shape": {
                  "container": {
                    "optional": {
                      "shape": {
                        "primitive": {
                          "string": {
                            "original": "token"
                          },
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "jsonExample": "token"
                    },
                    "valueType": {
                      "primitive": {
                        "v1": "STRING",
                        "v2": {
                          "type": "string"
                        }
                      },
                      "type": "primitive"
                    },
                    "type": "optional"
                  },
                  "type": "container"
                },
                "jsonExample": "token"
              },
              "shape": {
                "type": "single"
              }
            }
          ],
          "messages": [
            {
              "type": "publish",
              "body": {
                "shape": {
                  "typeName": {
                    "typeId": "type_userId:sendMessage",
                    "fernFilepath": {
                      "allParts": [
                        {
                          "originalName": "userId",
                          "camelCase": {
                            "unsafeName": "userID",
                            "safeName": "userID"
                          },
                          "pascalCase": {
                            "unsafeName": "UserID",
                            "safeName": "UserID"
                          }
                        }
                      ],
                      "packagePath": [],
                      "file": {
                        "originalName": "userId",
                        "camelCase": {
                          "unsafeName": "userID",
                          "safeName": "userID"
                        },
                        "pascalCase": {
                          "unsafeName": "UserID",
                          "safeName": "UserID"
                        }
                      }
                    },
                    "name": "sendMessage"
                  },
                  "shape": {
                    "index": 0,
                    "singleUnionType": {
                      "shape": {
                        "typeName": {
                          "typeId": "type_:AudioData",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "AudioData"
                        },
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "audio_data",
                                "wireValue": "audio_data"
                              },
                              "value": {
                                "shape": {
                                  "primitive": {
                                    "string": {
                                      "original": "base64-encoded-audio-data"
                                    },
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "jsonExample": "base64-encoded-audio-data"
                              },
                              "originalTypeDeclaration": {
                                "typeId": "type_:AudioData",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "AudioData"
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "type": "named"
                      },
                      "jsonExample": {
                        "audio_data": "base64-encoded-audio-data"
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "type": "named"
                },
                "jsonExample": {
                  "audio_data": "base64-encoded-audio-data"
                },
                "type": "reference"
              }
            },
            {
              "type": "publish",
              "body": {
                "shape": {
                  "typeName": {
                    "typeId": "type_userId:sendMessage",
                    "fernFilepath": {
                      "allParts": [
                        {
                          "originalName": "userId",
                          "camelCase": {
                            "unsafeName": "userID",
                            "safeName": "userID"
                          },
                          "pascalCase": {
                            "unsafeName": "UserID",
                            "safeName": "UserID"
                          }
                        }
                      ],
                      "packagePath": [],
                      "file": {
                        "originalName": "userId",
                        "camelCase": {
                          "unsafeName": "userID",
                          "safeName": "userID"
                        },
                        "pascalCase": {
                          "unsafeName": "UserID",
                          "safeName": "UserID"
                        }
                      }
                    },
                    "name": "sendMessage"
                  },
                  "shape": {
                    "index": 1,
                    "singleUnionType": {
                      "shape": {
                        "typeName": {
                          "typeId": "type_:TerminateSession",
                          "fernFilepath": {
                            "allParts": [],
                            "packagePath": []
                          },
                          "name": "TerminateSession"
                        },
                        "shape": {
                          "properties": [
                            {
                              "name": {
                                "name": "message_type",
                                "wireValue": "message_type"
                              },
                              "value": {
                                "shape": {
                                  "typeName": {
                                    "typeId": "type_:MessageType",
                                    "fernFilepath": {
                                      "allParts": [],
                                      "packagePath": []
                                    },
                                    "name": "MessageType"
                                  },
                                  "shape": {
                                    "value": {
                                      "name": "SessionBegins",
                                      "wireValue": "SessionBegins"
                                    },
                                    "type": "enum"
                                  },
                                  "type": "named"
                                },
                                "jsonExample": "SessionBegins"
                              },
                              "originalTypeDeclaration": {
                                "name": "RealtimeBaseMessage",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "typeId": "type_:RealtimeBaseMessage",
                                "type": "named"
                              }
                            },
                            {
                              "name": {
                                "name": "terminate_session",
                                "wireValue": "terminate_session"
                              },
                              "value": {
                                "shape": {
                                  "primitive": {
                                    "boolean": true,
                                    "type": "boolean"
                                  },
                                  "type": "primitive"
                                },
                                "jsonExample": true
                              },
                              "originalTypeDeclaration": {
                                "typeId": "type_:TerminateSession",
                                "fernFilepath": {
                                  "allParts": [],
                                  "packagePath": []
                                },
                                "name": "TerminateSession"
                              }
                            }
                          ],
                          "type": "object"
                        },
                        "type": "named"
                      },
                      "jsonExample": {
                        "message_type": "SessionBegins",
                        "terminate_session": true
                      }
                    },
                    "type": "undiscriminatedUnion"
                  },
                  "type": "named"
                },
                "jsonExample": {
                  "message_type": "SessionBegins",
                  "terminate_session": true
                },
                "type": "reference"
              }
            }
          ]
        }
      ],
      "v2Examples": {
        "userSpecifiedExamples": {},
        "autogeneratedExamples": {}
      }
    }
  },
  "dynamic": {
    "version": "1.0.0",
    "types": {
      "type_transcript:TranscriptListRequestStatus": {
        "declaration": {
          "name": {
            "originalName": "TranscriptListRequestStatus",
            "camelCase": {
              "unsafeName": "transcriptListRequestStatus",
              "safeName": "transcriptListRequestStatus"
            },
            "pascalCase": {
              "unsafeName": "TranscriptListRequestStatus",
              "safeName": "TranscriptListRequestStatus"
            },
            "snakeCase": {
              "unsafeName": "transcript_list_request_status",
              "safeName": "transcript_list_request_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_LIST_REQUEST_STATUS",
              "safeName": "TRANSCRIPT_LIST_REQUEST_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "values": [
          {
            "name": {
              "originalName": "queued",
              "camelCase": {
                "unsafeName": "queued",
                "safeName": "queued"
              },
              "pascalCase": {
                "unsafeName": "Queued",
                "safeName": "Queued"
              },
              "snakeCase": {
                "unsafeName": "queued",
                "safeName": "queued"
              },
              "screamingSnakeCase": {
                "unsafeName": "QUEUED",
                "safeName": "QUEUED"
              }
            },
            "wireValue": "queued"
          },
          {
            "name": {
              "originalName": "processing",
              "camelCase": {
                "unsafeName": "processing",
                "safeName": "processing"
              },
              "pascalCase": {
                "unsafeName": "Processing",
                "safeName": "Processing"
              },
              "snakeCase": {
                "unsafeName": "processing",
                "safeName": "processing"
              },
              "screamingSnakeCase": {
                "unsafeName": "PROCESSING",
                "safeName": "PROCESSING"
              }
            },
            "wireValue": "processing"
          },
          {
            "name": {
              "originalName": "completed",
              "camelCase": {
                "unsafeName": "completed",
                "safeName": "completed"
              },
              "pascalCase": {
                "unsafeName": "Completed",
                "safeName": "Completed"
              },
              "snakeCase": {
                "unsafeName": "completed",
                "safeName": "completed"
              },
              "screamingSnakeCase": {
                "unsafeName": "COMPLETED",
                "safeName": "COMPLETED"
              }
            },
            "wireValue": "completed"
          },
          {
            "name": {
              "originalName": "error",
              "camelCase": {
                "unsafeName": "error",
                "safeName": "error"
              },
              "pascalCase": {
                "unsafeName": "Error",
                "safeName": "Error"
              },
              "snakeCase": {
                "unsafeName": "error",
                "safeName": "error"
              },
              "screamingSnakeCase": {
                "unsafeName": "ERROR",
                "safeName": "ERROR"
              }
            },
            "wireValue": "error"
          }
        ],
        "type": "enum"
      },
      "type_userId:sendMessage": {
        "declaration": {
          "name": {
            "originalName": "sendMessage",
            "camelCase": {
              "unsafeName": "sendMessage",
              "safeName": "sendMessage"
            },
            "pascalCase": {
              "unsafeName": "SendMessage",
              "safeName": "SendMessage"
            },
            "snakeCase": {
              "unsafeName": "send_message",
              "safeName": "send_message"
            },
            "screamingSnakeCase": {
              "unsafeName": "SEND_MESSAGE",
              "safeName": "SEND_MESSAGE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "userId",
                "camelCase": {
                  "unsafeName": "userID",
                  "safeName": "userID"
                },
                "pascalCase": {
                  "unsafeName": "UserID",
                  "safeName": "UserID"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "userId",
              "camelCase": {
                "unsafeName": "userID",
                "safeName": "userID"
              },
              "pascalCase": {
                "unsafeName": "UserID",
                "safeName": "UserID"
              },
              "snakeCase": {
                "unsafeName": "user_id",
                "safeName": "user_id"
              },
              "screamingSnakeCase": {
                "unsafeName": "USER_ID",
                "safeName": "USER_ID"
              }
            }
          }
        },
        "types": [
          {
            "value": "type_:AudioData",
            "type": "named"
          },
          {
            "value": "type_:TerminateSession",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_userId:receiveMessage": {
        "declaration": {
          "name": {
            "originalName": "receiveMessage",
            "camelCase": {
              "unsafeName": "receiveMessage",
              "safeName": "receiveMessage"
            },
            "pascalCase": {
              "unsafeName": "ReceiveMessage",
              "safeName": "ReceiveMessage"
            },
            "snakeCase": {
              "unsafeName": "receive_message",
              "safeName": "receive_message"
            },
            "screamingSnakeCase": {
              "unsafeName": "RECEIVE_MESSAGE",
              "safeName": "RECEIVE_MESSAGE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "userId",
                "camelCase": {
                  "unsafeName": "userID",
                  "safeName": "userID"
                },
                "pascalCase": {
                  "unsafeName": "UserID",
                  "safeName": "UserID"
                },
                "snakeCase": {
                  "unsafeName": "user_id",
                  "safeName": "user_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "USER_ID",
                  "safeName": "USER_ID"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "userId",
              "camelCase": {
                "unsafeName": "userID",
                "safeName": "userID"
              },
              "pascalCase": {
                "unsafeName": "UserID",
                "safeName": "UserID"
              },
              "snakeCase": {
                "unsafeName": "user_id",
                "safeName": "user_id"
              },
              "screamingSnakeCase": {
                "unsafeName": "USER_ID",
                "safeName": "USER_ID"
              }
            }
          }
        },
        "types": [
          {
            "value": "type_:SessionBegins",
            "type": "named"
          },
          {
            "value": "type_:PartialTranscript",
            "type": "named"
          },
          {
            "value": "type_:FinalTranscript",
            "type": "named"
          },
          {
            "value": "type_:SessionTerminated",
            "type": "named"
          },
          {
            "value": "type_:RealtimeError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:RedactedAudioResponse": {
        "declaration": {
          "name": {
            "originalName": "RedactedAudioResponse",
            "camelCase": {
              "unsafeName": "redactedAudioResponse",
              "safeName": "redactedAudioResponse"
            },
            "pascalCase": {
              "unsafeName": "RedactedAudioResponse",
              "safeName": "RedactedAudioResponse"
            },
            "snakeCase": {
              "unsafeName": "redacted_audio_response",
              "safeName": "redacted_audio_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "REDACTED_AUDIO_RESPONSE",
              "safeName": "REDACTED_AUDIO_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": "type_:RedactedAudioStatus",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redacted_audio_url",
                "camelCase": {
                  "unsafeName": "redactedAudioURL",
                  "safeName": "redactedAudioURL"
                },
                "pascalCase": {
                  "unsafeName": "RedactedAudioURL",
                  "safeName": "RedactedAudioURL"
                },
                "snakeCase": {
                  "unsafeName": "redacted_audio_url",
                  "safeName": "redacted_audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACTED_AUDIO_URL",
                  "safeName": "REDACTED_AUDIO_URL"
                }
              },
              "wireValue": "redacted_audio_url"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:RedactedAudioStatus": {
        "declaration": {
          "name": {
            "originalName": "RedactedAudioStatus",
            "camelCase": {
              "unsafeName": "redactedAudioStatus",
              "safeName": "redactedAudioStatus"
            },
            "pascalCase": {
              "unsafeName": "RedactedAudioStatus",
              "safeName": "RedactedAudioStatus"
            },
            "snakeCase": {
              "unsafeName": "redacted_audio_status",
              "safeName": "redacted_audio_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "REDACTED_AUDIO_STATUS",
              "safeName": "REDACTED_AUDIO_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": {
            "value": "redacted_audio_ready",
            "type": "string"
          },
          "type": "literal"
        },
        "type": "alias"
      },
      "type_:SubtitleFormat": {
        "declaration": {
          "name": {
            "originalName": "SubtitleFormat",
            "camelCase": {
              "unsafeName": "subtitleFormat",
              "safeName": "subtitleFormat"
            },
            "pascalCase": {
              "unsafeName": "SubtitleFormat",
              "safeName": "SubtitleFormat"
            },
            "snakeCase": {
              "unsafeName": "subtitle_format",
              "safeName": "subtitle_format"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUBTITLE_FORMAT",
              "safeName": "SUBTITLE_FORMAT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "srt",
              "camelCase": {
                "unsafeName": "srt",
                "safeName": "srt"
              },
              "pascalCase": {
                "unsafeName": "Srt",
                "safeName": "Srt"
              },
              "snakeCase": {
                "unsafeName": "srt",
                "safeName": "srt"
              },
              "screamingSnakeCase": {
                "unsafeName": "SRT",
                "safeName": "SRT"
              }
            },
            "wireValue": "srt"
          },
          {
            "name": {
              "originalName": "vtt",
              "camelCase": {
                "unsafeName": "vtt",
                "safeName": "vtt"
              },
              "pascalCase": {
                "unsafeName": "Vtt",
                "safeName": "Vtt"
              },
              "snakeCase": {
                "unsafeName": "vtt",
                "safeName": "vtt"
              },
              "screamingSnakeCase": {
                "unsafeName": "VTT",
                "safeName": "VTT"
              }
            },
            "wireValue": "vtt"
          }
        ],
        "type": "enum"
      },
      "type_:WordSearchResponse": {
        "declaration": {
          "name": {
            "originalName": "WordSearchResponse",
            "camelCase": {
              "unsafeName": "wordSearchResponse",
              "safeName": "wordSearchResponse"
            },
            "pascalCase": {
              "unsafeName": "WordSearchResponse",
              "safeName": "WordSearchResponse"
            },
            "snakeCase": {
              "unsafeName": "word_search_response",
              "safeName": "word_search_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "WORD_SEARCH_RESPONSE",
              "safeName": "WORD_SEARCH_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "total_count",
                "camelCase": {
                  "unsafeName": "totalCount",
                  "safeName": "totalCount"
                },
                "pascalCase": {
                  "unsafeName": "TotalCount",
                  "safeName": "TotalCount"
                },
                "snakeCase": {
                  "unsafeName": "total_count",
                  "safeName": "total_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOTAL_COUNT",
                  "safeName": "TOTAL_COUNT"
                }
              },
              "wireValue": "total_count"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "matches",
                "camelCase": {
                  "unsafeName": "matches",
                  "safeName": "matches"
                },
                "pascalCase": {
                  "unsafeName": "Matches",
                  "safeName": "Matches"
                },
                "snakeCase": {
                  "unsafeName": "matches",
                  "safeName": "matches"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MATCHES",
                  "safeName": "MATCHES"
                }
              },
              "wireValue": "matches"
            },
            "typeReference": {
              "value": {
                "value": "type_:WordSearchMatch",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:WordSearchMatch": {
        "declaration": {
          "name": {
            "originalName": "WordSearchMatch",
            "camelCase": {
              "unsafeName": "wordSearchMatch",
              "safeName": "wordSearchMatch"
            },
            "pascalCase": {
              "unsafeName": "WordSearchMatch",
              "safeName": "WordSearchMatch"
            },
            "snakeCase": {
              "unsafeName": "word_search_match",
              "safeName": "word_search_match"
            },
            "screamingSnakeCase": {
              "unsafeName": "WORD_SEARCH_MATCH",
              "safeName": "WORD_SEARCH_MATCH"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "count",
                "camelCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "pascalCase": {
                  "unsafeName": "Count",
                  "safeName": "Count"
                },
                "snakeCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COUNT",
                  "safeName": "COUNT"
                }
              },
              "wireValue": "count"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamps",
                "camelCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "pascalCase": {
                  "unsafeName": "Timestamps",
                  "safeName": "Timestamps"
                },
                "snakeCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMPS",
                  "safeName": "TIMESTAMPS"
                }
              },
              "wireValue": "timestamps"
            },
            "typeReference": {
              "value": {
                "value": "type_:WordSearchTimestamp",
                "type": "named"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "indexes",
                "camelCase": {
                  "unsafeName": "indexes",
                  "safeName": "indexes"
                },
                "pascalCase": {
                  "unsafeName": "Indexes",
                  "safeName": "Indexes"
                },
                "snakeCase": {
                  "unsafeName": "indexes",
                  "safeName": "indexes"
                },
                "screamingSnakeCase": {
                  "unsafeName": "INDEXES",
                  "safeName": "INDEXES"
                }
              },
              "wireValue": "indexes"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:WordSearchTimestamp": {
        "declaration": {
          "name": {
            "originalName": "WordSearchTimestamp",
            "camelCase": {
              "unsafeName": "wordSearchTimestamp",
              "safeName": "wordSearchTimestamp"
            },
            "pascalCase": {
              "unsafeName": "WordSearchTimestamp",
              "safeName": "WordSearchTimestamp"
            },
            "snakeCase": {
              "unsafeName": "word_search_timestamp",
              "safeName": "word_search_timestamp"
            },
            "screamingSnakeCase": {
              "unsafeName": "WORD_SEARCH_TIMESTAMP",
              "safeName": "WORD_SEARCH_TIMESTAMP"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": {
            "value": "INTEGER",
            "type": "primitive"
          },
          "type": "list"
        },
        "type": "alias"
      },
      "type_:Timestamp": {
        "declaration": {
          "name": {
            "originalName": "Timestamp",
            "camelCase": {
              "unsafeName": "timestamp",
              "safeName": "timestamp"
            },
            "pascalCase": {
              "unsafeName": "Timestamp",
              "safeName": "Timestamp"
            },
            "snakeCase": {
              "unsafeName": "timestamp",
              "safeName": "timestamp"
            },
            "screamingSnakeCase": {
              "unsafeName": "TIMESTAMP",
              "safeName": "TIMESTAMP"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:CreateTranscriptOptionalParameters": {
        "declaration": {
          "name": {
            "originalName": "CreateTranscriptOptionalParameters",
            "camelCase": {
              "unsafeName": "createTranscriptOptionalParameters",
              "safeName": "createTranscriptOptionalParameters"
            },
            "pascalCase": {
              "unsafeName": "CreateTranscriptOptionalParameters",
              "safeName": "CreateTranscriptOptionalParameters"
            },
            "snakeCase": {
              "unsafeName": "create_transcript_optional_parameters",
              "safeName": "create_transcript_optional_parameters"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_TRANSCRIPT_OPTIONAL_PARAMETERS",
              "safeName": "CREATE_TRANSCRIPT_OPTIONAL_PARAMETERS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "language_code",
                "camelCase": {
                  "unsafeName": "languageCode",
                  "safeName": "languageCode"
                },
                "pascalCase": {
                  "unsafeName": "LanguageCode",
                  "safeName": "LanguageCode"
                },
                "snakeCase": {
                  "unsafeName": "language_code",
                  "safeName": "language_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_CODE",
                  "safeName": "LANGUAGE_CODE"
                }
              },
              "wireValue": "language_code"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptLanguageCode",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "punctuate",
                "camelCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "pascalCase": {
                  "unsafeName": "Punctuate",
                  "safeName": "Punctuate"
                },
                "snakeCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PUNCTUATE",
                  "safeName": "PUNCTUATE"
                }
              },
              "wireValue": "punctuate"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format_text",
                "camelCase": {
                  "unsafeName": "formatText",
                  "safeName": "formatText"
                },
                "pascalCase": {
                  "unsafeName": "FormatText",
                  "safeName": "FormatText"
                },
                "snakeCase": {
                  "unsafeName": "format_text",
                  "safeName": "format_text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT_TEXT",
                  "safeName": "FORMAT_TEXT"
                }
              },
              "wireValue": "format_text"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "dual_channel",
                "camelCase": {
                  "unsafeName": "dualChannel",
                  "safeName": "dualChannel"
                },
                "pascalCase": {
                  "unsafeName": "DualChannel",
                  "safeName": "DualChannel"
                },
                "snakeCase": {
                  "unsafeName": "dual_channel",
                  "safeName": "dual_channel"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DUAL_CHANNEL",
                  "safeName": "DUAL_CHANNEL"
                }
              },
              "wireValue": "dual_channel"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_url",
                "camelCase": {
                  "unsafeName": "webhookURL",
                  "safeName": "webhookURL"
                },
                "pascalCase": {
                  "unsafeName": "WebhookURL",
                  "safeName": "WebhookURL"
                },
                "snakeCase": {
                  "unsafeName": "webhook_url",
                  "safeName": "webhook_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_URL",
                  "safeName": "WEBHOOK_URL"
                }
              },
              "wireValue": "webhook_url"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth_header_name",
                "camelCase": {
                  "unsafeName": "webhookAuthHeaderName",
                  "safeName": "webhookAuthHeaderName"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuthHeaderName",
                  "safeName": "WebhookAuthHeaderName"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth_header_name",
                  "safeName": "webhook_auth_header_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH_HEADER_NAME",
                  "safeName": "WEBHOOK_AUTH_HEADER_NAME"
                }
              },
              "wireValue": "webhook_auth_header_name"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth_header_value",
                "camelCase": {
                  "unsafeName": "webhookAuthHeaderValue",
                  "safeName": "webhookAuthHeaderValue"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuthHeaderValue",
                  "safeName": "WebhookAuthHeaderValue"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth_header_value",
                  "safeName": "webhook_auth_header_value"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH_HEADER_VALUE",
                  "safeName": "WEBHOOK_AUTH_HEADER_VALUE"
                }
              },
              "wireValue": "webhook_auth_header_value"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_highlights",
                "camelCase": {
                  "unsafeName": "autoHighlights",
                  "safeName": "autoHighlights"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlights",
                  "safeName": "AutoHighlights"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights",
                  "safeName": "auto_highlights"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS",
                  "safeName": "AUTO_HIGHLIGHTS"
                }
              },
              "wireValue": "auto_highlights"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_start_from",
                "camelCase": {
                  "unsafeName": "audioStartFrom",
                  "safeName": "audioStartFrom"
                },
                "pascalCase": {
                  "unsafeName": "AudioStartFrom",
                  "safeName": "AudioStartFrom"
                },
                "snakeCase": {
                  "unsafeName": "audio_start_from",
                  "safeName": "audio_start_from"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START_FROM",
                  "safeName": "AUDIO_START_FROM"
                }
              },
              "wireValue": "audio_start_from"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end_at",
                "camelCase": {
                  "unsafeName": "audioEndAt",
                  "safeName": "audioEndAt"
                },
                "pascalCase": {
                  "unsafeName": "AudioEndAt",
                  "safeName": "AudioEndAt"
                },
                "snakeCase": {
                  "unsafeName": "audio_end_at",
                  "safeName": "audio_end_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END_AT",
                  "safeName": "AUDIO_END_AT"
                }
              },
              "wireValue": "audio_end_at"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "word_boost",
                "camelCase": {
                  "unsafeName": "wordBoost",
                  "safeName": "wordBoost"
                },
                "pascalCase": {
                  "unsafeName": "WordBoost",
                  "safeName": "WordBoost"
                },
                "snakeCase": {
                  "unsafeName": "word_boost",
                  "safeName": "word_boost"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORD_BOOST",
                  "safeName": "WORD_BOOST"
                }
              },
              "wireValue": "word_boost"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "boost_param",
                "camelCase": {
                  "unsafeName": "boostParam",
                  "safeName": "boostParam"
                },
                "pascalCase": {
                  "unsafeName": "BoostParam",
                  "safeName": "BoostParam"
                },
                "snakeCase": {
                  "unsafeName": "boost_param",
                  "safeName": "boost_param"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BOOST_PARAM",
                  "safeName": "BOOST_PARAM"
                }
              },
              "wireValue": "boost_param"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptBoostParam",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "filter_profanity",
                "camelCase": {
                  "unsafeName": "filterProfanity",
                  "safeName": "filterProfanity"
                },
                "pascalCase": {
                  "unsafeName": "FilterProfanity",
                  "safeName": "FilterProfanity"
                },
                "snakeCase": {
                  "unsafeName": "filter_profanity",
                  "safeName": "filter_profanity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILTER_PROFANITY",
                  "safeName": "FILTER_PROFANITY"
                }
              },
              "wireValue": "filter_profanity"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii",
                "camelCase": {
                  "unsafeName": "redactPii",
                  "safeName": "redactPii"
                },
                "pascalCase": {
                  "unsafeName": "RedactPii",
                  "safeName": "RedactPii"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii",
                  "safeName": "redact_pii"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII",
                  "safeName": "REDACT_PII"
                }
              },
              "wireValue": "redact_pii"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio",
                "camelCase": {
                  "unsafeName": "redactPiiAudio",
                  "safeName": "redactPiiAudio"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudio",
                  "safeName": "RedactPiiAudio"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio",
                  "safeName": "redact_pii_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO",
                  "safeName": "REDACT_PII_AUDIO"
                }
              },
              "wireValue": "redact_pii_audio"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio_quality",
                "camelCase": {
                  "unsafeName": "redactPiiAudioQuality",
                  "safeName": "redactPiiAudioQuality"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudioQuality",
                  "safeName": "RedactPiiAudioQuality"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio_quality",
                  "safeName": "redact_pii_audio_quality"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO_QUALITY",
                  "safeName": "REDACT_PII_AUDIO_QUALITY"
                }
              },
              "wireValue": "redact_pii_audio_quality"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_policies",
                "camelCase": {
                  "unsafeName": "redactPiiPolicies",
                  "safeName": "redactPiiPolicies"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiPolicies",
                  "safeName": "RedactPiiPolicies"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_policies",
                  "safeName": "redact_pii_policies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_POLICIES",
                  "safeName": "REDACT_PII_POLICIES"
                }
              },
              "wireValue": "redact_pii_policies"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:PiiPolicy",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_sub",
                "camelCase": {
                  "unsafeName": "redactPiiSub",
                  "safeName": "redactPiiSub"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiSub",
                  "safeName": "RedactPiiSub"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_sub",
                  "safeName": "redact_pii_sub"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_SUB",
                  "safeName": "REDACT_PII_SUB"
                }
              },
              "wireValue": "redact_pii_sub"
            },
            "typeReference": {
              "value": {
                "value": "type_:SubstitutionPolicy",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker_labels",
                "camelCase": {
                  "unsafeName": "speakerLabels",
                  "safeName": "speakerLabels"
                },
                "pascalCase": {
                  "unsafeName": "SpeakerLabels",
                  "safeName": "SpeakerLabels"
                },
                "snakeCase": {
                  "unsafeName": "speaker_labels",
                  "safeName": "speaker_labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER_LABELS",
                  "safeName": "SPEAKER_LABELS"
                }
              },
              "wireValue": "speaker_labels"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speakers_expected",
                "camelCase": {
                  "unsafeName": "speakersExpected",
                  "safeName": "speakersExpected"
                },
                "pascalCase": {
                  "unsafeName": "SpeakersExpected",
                  "safeName": "SpeakersExpected"
                },
                "snakeCase": {
                  "unsafeName": "speakers_expected",
                  "safeName": "speakers_expected"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKERS_EXPECTED",
                  "safeName": "SPEAKERS_EXPECTED"
                }
              },
              "wireValue": "speakers_expected"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_safety",
                "camelCase": {
                  "unsafeName": "contentSafety",
                  "safeName": "contentSafety"
                },
                "pascalCase": {
                  "unsafeName": "ContentSafety",
                  "safeName": "ContentSafety"
                },
                "snakeCase": {
                  "unsafeName": "content_safety",
                  "safeName": "content_safety"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_SAFETY",
                  "safeName": "CONTENT_SAFETY"
                }
              },
              "wireValue": "content_safety"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "iab_categories",
                "camelCase": {
                  "unsafeName": "iabCategories",
                  "safeName": "iabCategories"
                },
                "pascalCase": {
                  "unsafeName": "IabCategories",
                  "safeName": "IabCategories"
                },
                "snakeCase": {
                  "unsafeName": "iab_categories",
                  "safeName": "iab_categories"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IAB_CATEGORIES",
                  "safeName": "IAB_CATEGORIES"
                }
              },
              "wireValue": "iab_categories"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_detection",
                "camelCase": {
                  "unsafeName": "languageDetection",
                  "safeName": "languageDetection"
                },
                "pascalCase": {
                  "unsafeName": "LanguageDetection",
                  "safeName": "LanguageDetection"
                },
                "snakeCase": {
                  "unsafeName": "language_detection",
                  "safeName": "language_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_DETECTION",
                  "safeName": "LANGUAGE_DETECTION"
                }
              },
              "wireValue": "language_detection"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_spelling",
                "camelCase": {
                  "unsafeName": "customSpelling",
                  "safeName": "customSpelling"
                },
                "pascalCase": {
                  "unsafeName": "CustomSpelling",
                  "safeName": "CustomSpelling"
                },
                "snakeCase": {
                  "unsafeName": "custom_spelling",
                  "safeName": "custom_spelling"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SPELLING",
                  "safeName": "CUSTOM_SPELLING"
                }
              },
              "wireValue": "custom_spelling"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:TranscriptCustomSpelling",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "disfluencies",
                "camelCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "pascalCase": {
                  "unsafeName": "Disfluencies",
                  "safeName": "Disfluencies"
                },
                "snakeCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISFLUENCIES",
                  "safeName": "DISFLUENCIES"
                }
              },
              "wireValue": "disfluencies"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment_analysis",
                "camelCase": {
                  "unsafeName": "sentimentAnalysis",
                  "safeName": "sentimentAnalysis"
                },
                "pascalCase": {
                  "unsafeName": "SentimentAnalysis",
                  "safeName": "SentimentAnalysis"
                },
                "snakeCase": {
                  "unsafeName": "sentiment_analysis",
                  "safeName": "sentiment_analysis"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT_ANALYSIS",
                  "safeName": "SENTIMENT_ANALYSIS"
                }
              },
              "wireValue": "sentiment_analysis"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_chapters",
                "camelCase": {
                  "unsafeName": "autoChapters",
                  "safeName": "autoChapters"
                },
                "pascalCase": {
                  "unsafeName": "AutoChapters",
                  "safeName": "AutoChapters"
                },
                "snakeCase": {
                  "unsafeName": "auto_chapters",
                  "safeName": "auto_chapters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_CHAPTERS",
                  "safeName": "AUTO_CHAPTERS"
                }
              },
              "wireValue": "auto_chapters"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "entity_detection",
                "camelCase": {
                  "unsafeName": "entityDetection",
                  "safeName": "entityDetection"
                },
                "pascalCase": {
                  "unsafeName": "EntityDetection",
                  "safeName": "EntityDetection"
                },
                "snakeCase": {
                  "unsafeName": "entity_detection",
                  "safeName": "entity_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_DETECTION",
                  "safeName": "ENTITY_DETECTION"
                }
              },
              "wireValue": "entity_detection"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speech_threshold",
                "camelCase": {
                  "unsafeName": "speechThreshold",
                  "safeName": "speechThreshold"
                },
                "pascalCase": {
                  "unsafeName": "SpeechThreshold",
                  "safeName": "SpeechThreshold"
                },
                "snakeCase": {
                  "unsafeName": "speech_threshold",
                  "safeName": "speech_threshold"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEECH_THRESHOLD",
                  "safeName": "SPEECH_THRESHOLD"
                }
              },
              "wireValue": "speech_threshold"
            },
            "typeReference": {
              "value": {
                "value": "FLOAT",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summarization",
                "camelCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "pascalCase": {
                  "unsafeName": "Summarization",
                  "safeName": "Summarization"
                },
                "snakeCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARIZATION",
                  "safeName": "SUMMARIZATION"
                }
              },
              "wireValue": "summarization"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_model",
                "camelCase": {
                  "unsafeName": "summaryModel",
                  "safeName": "summaryModel"
                },
                "pascalCase": {
                  "unsafeName": "SummaryModel",
                  "safeName": "SummaryModel"
                },
                "snakeCase": {
                  "unsafeName": "summary_model",
                  "safeName": "summary_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_MODEL",
                  "safeName": "SUMMARY_MODEL"
                }
              },
              "wireValue": "summary_model"
            },
            "typeReference": {
              "value": {
                "value": "type_:SummaryModel",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_type",
                "camelCase": {
                  "unsafeName": "summaryType",
                  "safeName": "summaryType"
                },
                "pascalCase": {
                  "unsafeName": "SummaryType",
                  "safeName": "SummaryType"
                },
                "snakeCase": {
                  "unsafeName": "summary_type",
                  "safeName": "summary_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_TYPE",
                  "safeName": "SUMMARY_TYPE"
                }
              },
              "wireValue": "summary_type"
            },
            "typeReference": {
              "value": {
                "value": "type_:SummaryType",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_topics",
                "camelCase": {
                  "unsafeName": "customTopics",
                  "safeName": "customTopics"
                },
                "pascalCase": {
                  "unsafeName": "CustomTopics",
                  "safeName": "CustomTopics"
                },
                "snakeCase": {
                  "unsafeName": "custom_topics",
                  "safeName": "custom_topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_TOPICS",
                  "safeName": "CUSTOM_TOPICS"
                }
              },
              "wireValue": "custom_topics"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "topics",
                "camelCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "pascalCase": {
                  "unsafeName": "Topics",
                  "safeName": "Topics"
                },
                "snakeCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOPICS",
                  "safeName": "TOPICS"
                }
              },
              "wireValue": "topics"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SummaryModel": {
        "declaration": {
          "name": {
            "originalName": "SummaryModel",
            "camelCase": {
              "unsafeName": "summaryModel",
              "safeName": "summaryModel"
            },
            "pascalCase": {
              "unsafeName": "SummaryModel",
              "safeName": "SummaryModel"
            },
            "snakeCase": {
              "unsafeName": "summary_model",
              "safeName": "summary_model"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUMMARY_MODEL",
              "safeName": "SUMMARY_MODEL"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "informative",
              "camelCase": {
                "unsafeName": "informative",
                "safeName": "informative"
              },
              "pascalCase": {
                "unsafeName": "Informative",
                "safeName": "Informative"
              },
              "snakeCase": {
                "unsafeName": "informative",
                "safeName": "informative"
              },
              "screamingSnakeCase": {
                "unsafeName": "INFORMATIVE",
                "safeName": "INFORMATIVE"
              }
            },
            "wireValue": "informative"
          },
          {
            "name": {
              "originalName": "conversational",
              "camelCase": {
                "unsafeName": "conversational",
                "safeName": "conversational"
              },
              "pascalCase": {
                "unsafeName": "Conversational",
                "safeName": "Conversational"
              },
              "snakeCase": {
                "unsafeName": "conversational",
                "safeName": "conversational"
              },
              "screamingSnakeCase": {
                "unsafeName": "CONVERSATIONAL",
                "safeName": "CONVERSATIONAL"
              }
            },
            "wireValue": "conversational"
          },
          {
            "name": {
              "originalName": "catchy",
              "camelCase": {
                "unsafeName": "catchy",
                "safeName": "catchy"
              },
              "pascalCase": {
                "unsafeName": "Catchy",
                "safeName": "Catchy"
              },
              "snakeCase": {
                "unsafeName": "catchy",
                "safeName": "catchy"
              },
              "screamingSnakeCase": {
                "unsafeName": "CATCHY",
                "safeName": "CATCHY"
              }
            },
            "wireValue": "catchy"
          }
        ],
        "type": "enum"
      },
      "type_:SummaryType": {
        "declaration": {
          "name": {
            "originalName": "SummaryType",
            "camelCase": {
              "unsafeName": "summaryType",
              "safeName": "summaryType"
            },
            "pascalCase": {
              "unsafeName": "SummaryType",
              "safeName": "SummaryType"
            },
            "snakeCase": {
              "unsafeName": "summary_type",
              "safeName": "summary_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUMMARY_TYPE",
              "safeName": "SUMMARY_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "bullets",
              "camelCase": {
                "unsafeName": "bullets",
                "safeName": "bullets"
              },
              "pascalCase": {
                "unsafeName": "Bullets",
                "safeName": "Bullets"
              },
              "snakeCase": {
                "unsafeName": "bullets",
                "safeName": "bullets"
              },
              "screamingSnakeCase": {
                "unsafeName": "BULLETS",
                "safeName": "BULLETS"
              }
            },
            "wireValue": "bullets"
          },
          {
            "name": {
              "originalName": "bullets_verbose",
              "camelCase": {
                "unsafeName": "bulletsVerbose",
                "safeName": "bulletsVerbose"
              },
              "pascalCase": {
                "unsafeName": "BulletsVerbose",
                "safeName": "BulletsVerbose"
              },
              "snakeCase": {
                "unsafeName": "bullets_verbose",
                "safeName": "bullets_verbose"
              },
              "screamingSnakeCase": {
                "unsafeName": "BULLETS_VERBOSE",
                "safeName": "BULLETS_VERBOSE"
              }
            },
            "wireValue": "bullets_verbose"
          },
          {
            "name": {
              "originalName": "gist",
              "camelCase": {
                "unsafeName": "gist",
                "safeName": "gist"
              },
              "pascalCase": {
                "unsafeName": "Gist",
                "safeName": "Gist"
              },
              "snakeCase": {
                "unsafeName": "gist",
                "safeName": "gist"
              },
              "screamingSnakeCase": {
                "unsafeName": "GIST",
                "safeName": "GIST"
              }
            },
            "wireValue": "gist"
          },
          {
            "name": {
              "originalName": "headline",
              "camelCase": {
                "unsafeName": "headline",
                "safeName": "headline"
              },
              "pascalCase": {
                "unsafeName": "Headline",
                "safeName": "Headline"
              },
              "snakeCase": {
                "unsafeName": "headline",
                "safeName": "headline"
              },
              "screamingSnakeCase": {
                "unsafeName": "HEADLINE",
                "safeName": "HEADLINE"
              }
            },
            "wireValue": "headline"
          },
          {
            "name": {
              "originalName": "paragraph",
              "camelCase": {
                "unsafeName": "paragraph",
                "safeName": "paragraph"
              },
              "pascalCase": {
                "unsafeName": "Paragraph",
                "safeName": "Paragraph"
              },
              "snakeCase": {
                "unsafeName": "paragraph",
                "safeName": "paragraph"
              },
              "screamingSnakeCase": {
                "unsafeName": "PARAGRAPH",
                "safeName": "PARAGRAPH"
              }
            },
            "wireValue": "paragraph"
          }
        ],
        "type": "enum"
      },
      "type_:TranscriptBoostParam": {
        "declaration": {
          "name": {
            "originalName": "TranscriptBoostParam",
            "camelCase": {
              "unsafeName": "transcriptBoostParam",
              "safeName": "transcriptBoostParam"
            },
            "pascalCase": {
              "unsafeName": "TranscriptBoostParam",
              "safeName": "TranscriptBoostParam"
            },
            "snakeCase": {
              "unsafeName": "transcript_boost_param",
              "safeName": "transcript_boost_param"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_BOOST_PARAM",
              "safeName": "TRANSCRIPT_BOOST_PARAM"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "low",
              "camelCase": {
                "unsafeName": "low",
                "safeName": "low"
              },
              "pascalCase": {
                "unsafeName": "Low",
                "safeName": "Low"
              },
              "snakeCase": {
                "unsafeName": "low",
                "safeName": "low"
              },
              "screamingSnakeCase": {
                "unsafeName": "LOW",
                "safeName": "LOW"
              }
            },
            "wireValue": "low"
          },
          {
            "name": {
              "originalName": "default",
              "camelCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "pascalCase": {
                "unsafeName": "Default",
                "safeName": "Default"
              },
              "snakeCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "screamingSnakeCase": {
                "unsafeName": "DEFAULT",
                "safeName": "DEFAULT"
              }
            },
            "wireValue": "default"
          },
          {
            "name": {
              "originalName": "high",
              "camelCase": {
                "unsafeName": "high",
                "safeName": "high"
              },
              "pascalCase": {
                "unsafeName": "High",
                "safeName": "High"
              },
              "snakeCase": {
                "unsafeName": "high",
                "safeName": "high"
              },
              "screamingSnakeCase": {
                "unsafeName": "HIGH",
                "safeName": "HIGH"
              }
            },
            "wireValue": "high"
          }
        ],
        "type": "enum"
      },
      "type_:TranscriptCustomSpelling": {
        "declaration": {
          "name": {
            "originalName": "TranscriptCustomSpelling",
            "camelCase": {
              "unsafeName": "transcriptCustomSpelling",
              "safeName": "transcriptCustomSpelling"
            },
            "pascalCase": {
              "unsafeName": "TranscriptCustomSpelling",
              "safeName": "TranscriptCustomSpelling"
            },
            "snakeCase": {
              "unsafeName": "transcript_custom_spelling",
              "safeName": "transcript_custom_spelling"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_CUSTOM_SPELLING",
              "safeName": "TRANSCRIPT_CUSTOM_SPELLING"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "from",
                "camelCase": {
                  "unsafeName": "from",
                  "safeName": "from"
                },
                "pascalCase": {
                  "unsafeName": "From",
                  "safeName": "From"
                },
                "snakeCase": {
                  "unsafeName": "from",
                  "safeName": "from"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FROM",
                  "safeName": "FROM"
                }
              },
              "wireValue": "from"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "to",
                "camelCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "pascalCase": {
                  "unsafeName": "To",
                  "safeName": "To"
                },
                "snakeCase": {
                  "unsafeName": "to",
                  "safeName": "to"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TO",
                  "safeName": "TO"
                }
              },
              "wireValue": "to"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptUtterance": {
        "declaration": {
          "name": {
            "originalName": "TranscriptUtterance",
            "camelCase": {
              "unsafeName": "transcriptUtterance",
              "safeName": "transcriptUtterance"
            },
            "pascalCase": {
              "unsafeName": "TranscriptUtterance",
              "safeName": "TranscriptUtterance"
            },
            "snakeCase": {
              "unsafeName": "transcript_utterance",
              "safeName": "transcript_utterance"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_UTTERANCE",
              "safeName": "TRANSCRIPT_UTTERANCE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "channel",
                "camelCase": {
                  "unsafeName": "channel",
                  "safeName": "channel"
                },
                "pascalCase": {
                  "unsafeName": "Channel",
                  "safeName": "Channel"
                },
                "snakeCase": {
                  "unsafeName": "channel",
                  "safeName": "channel"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHANNEL",
                  "safeName": "CHANNEL"
                }
              },
              "wireValue": "channel"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                }
              },
              "wireValue": "words"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptWord",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SubstitutionPolicy": {
        "declaration": {
          "name": {
            "originalName": "SubstitutionPolicy",
            "camelCase": {
              "unsafeName": "substitutionPolicy",
              "safeName": "substitutionPolicy"
            },
            "pascalCase": {
              "unsafeName": "SubstitutionPolicy",
              "safeName": "SubstitutionPolicy"
            },
            "snakeCase": {
              "unsafeName": "substitution_policy",
              "safeName": "substitution_policy"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUBSTITUTION_POLICY",
              "safeName": "SUBSTITUTION_POLICY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "entity_type",
              "camelCase": {
                "unsafeName": "entityType",
                "safeName": "entityType"
              },
              "pascalCase": {
                "unsafeName": "EntityType",
                "safeName": "EntityType"
              },
              "snakeCase": {
                "unsafeName": "entity_type",
                "safeName": "entity_type"
              },
              "screamingSnakeCase": {
                "unsafeName": "ENTITY_TYPE",
                "safeName": "ENTITY_TYPE"
              }
            },
            "wireValue": "entity_type"
          },
          {
            "name": {
              "originalName": "hash",
              "camelCase": {
                "unsafeName": "hash",
                "safeName": "hash"
              },
              "pascalCase": {
                "unsafeName": "Hash",
                "safeName": "Hash"
              },
              "snakeCase": {
                "unsafeName": "hash",
                "safeName": "hash"
              },
              "screamingSnakeCase": {
                "unsafeName": "HASH",
                "safeName": "HASH"
              }
            },
            "wireValue": "hash"
          }
        ],
        "type": "enum"
      },
      "type_:PiiPolicy": {
        "declaration": {
          "name": {
            "originalName": "PiiPolicy",
            "camelCase": {
              "unsafeName": "piiPolicy",
              "safeName": "piiPolicy"
            },
            "pascalCase": {
              "unsafeName": "PiiPolicy",
              "safeName": "PiiPolicy"
            },
            "snakeCase": {
              "unsafeName": "pii_policy",
              "safeName": "pii_policy"
            },
            "screamingSnakeCase": {
              "unsafeName": "PII_POLICY",
              "safeName": "PII_POLICY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "medical_process",
              "camelCase": {
                "unsafeName": "medicalProcess",
                "safeName": "medicalProcess"
              },
              "pascalCase": {
                "unsafeName": "MedicalProcess",
                "safeName": "MedicalProcess"
              },
              "snakeCase": {
                "unsafeName": "medical_process",
                "safeName": "medical_process"
              },
              "screamingSnakeCase": {
                "unsafeName": "MEDICAL_PROCESS",
                "safeName": "MEDICAL_PROCESS"
              }
            },
            "wireValue": "medical_process"
          },
          {
            "name": {
              "originalName": "medical_condition",
              "camelCase": {
                "unsafeName": "medicalCondition",
                "safeName": "medicalCondition"
              },
              "pascalCase": {
                "unsafeName": "MedicalCondition",
                "safeName": "MedicalCondition"
              },
              "snakeCase": {
                "unsafeName": "medical_condition",
                "safeName": "medical_condition"
              },
              "screamingSnakeCase": {
                "unsafeName": "MEDICAL_CONDITION",
                "safeName": "MEDICAL_CONDITION"
              }
            },
            "wireValue": "medical_condition"
          },
          {
            "name": {
              "originalName": "blood_type",
              "camelCase": {
                "unsafeName": "bloodType",
                "safeName": "bloodType"
              },
              "pascalCase": {
                "unsafeName": "BloodType",
                "safeName": "BloodType"
              },
              "snakeCase": {
                "unsafeName": "blood_type",
                "safeName": "blood_type"
              },
              "screamingSnakeCase": {
                "unsafeName": "BLOOD_TYPE",
                "safeName": "BLOOD_TYPE"
              }
            },
            "wireValue": "blood_type"
          },
          {
            "name": {
              "originalName": "drug",
              "camelCase": {
                "unsafeName": "drug",
                "safeName": "drug"
              },
              "pascalCase": {
                "unsafeName": "Drug",
                "safeName": "Drug"
              },
              "snakeCase": {
                "unsafeName": "drug",
                "safeName": "drug"
              },
              "screamingSnakeCase": {
                "unsafeName": "DRUG",
                "safeName": "DRUG"
              }
            },
            "wireValue": "drug"
          },
          {
            "name": {
              "originalName": "injury",
              "camelCase": {
                "unsafeName": "injury",
                "safeName": "injury"
              },
              "pascalCase": {
                "unsafeName": "Injury",
                "safeName": "Injury"
              },
              "snakeCase": {
                "unsafeName": "injury",
                "safeName": "injury"
              },
              "screamingSnakeCase": {
                "unsafeName": "INJURY",
                "safeName": "INJURY"
              }
            },
            "wireValue": "injury"
          },
          {
            "name": {
              "originalName": "number_sequence",
              "camelCase": {
                "unsafeName": "numberSequence",
                "safeName": "numberSequence"
              },
              "pascalCase": {
                "unsafeName": "NumberSequence",
                "safeName": "NumberSequence"
              },
              "snakeCase": {
                "unsafeName": "number_sequence",
                "safeName": "number_sequence"
              },
              "screamingSnakeCase": {
                "unsafeName": "NUMBER_SEQUENCE",
                "safeName": "NUMBER_SEQUENCE"
              }
            },
            "wireValue": "number_sequence"
          },
          {
            "name": {
              "originalName": "email_address",
              "camelCase": {
                "unsafeName": "emailAddress",
                "safeName": "emailAddress"
              },
              "pascalCase": {
                "unsafeName": "EmailAddress",
                "safeName": "EmailAddress"
              },
              "snakeCase": {
                "unsafeName": "email_address",
                "safeName": "email_address"
              },
              "screamingSnakeCase": {
                "unsafeName": "EMAIL_ADDRESS",
                "safeName": "EMAIL_ADDRESS"
              }
            },
            "wireValue": "email_address"
          },
          {
            "name": {
              "originalName": "date_of_birth",
              "camelCase": {
                "unsafeName": "dateOfBirth",
                "safeName": "dateOfBirth"
              },
              "pascalCase": {
                "unsafeName": "DateOfBirth",
                "safeName": "DateOfBirth"
              },
              "snakeCase": {
                "unsafeName": "date_of_birth",
                "safeName": "date_of_birth"
              },
              "screamingSnakeCase": {
                "unsafeName": "DATE_OF_BIRTH",
                "safeName": "DATE_OF_BIRTH"
              }
            },
            "wireValue": "date_of_birth"
          },
          {
            "name": {
              "originalName": "phone_number",
              "camelCase": {
                "unsafeName": "phoneNumber",
                "safeName": "phoneNumber"
              },
              "pascalCase": {
                "unsafeName": "PhoneNumber",
                "safeName": "PhoneNumber"
              },
              "snakeCase": {
                "unsafeName": "phone_number",
                "safeName": "phone_number"
              },
              "screamingSnakeCase": {
                "unsafeName": "PHONE_NUMBER",
                "safeName": "PHONE_NUMBER"
              }
            },
            "wireValue": "phone_number"
          },
          {
            "name": {
              "originalName": "us_social_security_number",
              "camelCase": {
                "unsafeName": "usSocialSecurityNumber",
                "safeName": "usSocialSecurityNumber"
              },
              "pascalCase": {
                "unsafeName": "UsSocialSecurityNumber",
                "safeName": "UsSocialSecurityNumber"
              },
              "snakeCase": {
                "unsafeName": "us_social_security_number",
                "safeName": "us_social_security_number"
              },
              "screamingSnakeCase": {
                "unsafeName": "US_SOCIAL_SECURITY_NUMBER",
                "safeName": "US_SOCIAL_SECURITY_NUMBER"
              }
            },
            "wireValue": "us_social_security_number"
          },
          {
            "name": {
              "originalName": "credit_card_number",
              "camelCase": {
                "unsafeName": "creditCardNumber",
                "safeName": "creditCardNumber"
              },
              "pascalCase": {
                "unsafeName": "CreditCardNumber",
                "safeName": "CreditCardNumber"
              },
              "snakeCase": {
                "unsafeName": "credit_card_number",
                "safeName": "credit_card_number"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREDIT_CARD_NUMBER",
                "safeName": "CREDIT_CARD_NUMBER"
              }
            },
            "wireValue": "credit_card_number"
          },
          {
            "name": {
              "originalName": "credit_card_expiration",
              "camelCase": {
                "unsafeName": "creditCardExpiration",
                "safeName": "creditCardExpiration"
              },
              "pascalCase": {
                "unsafeName": "CreditCardExpiration",
                "safeName": "CreditCardExpiration"
              },
              "snakeCase": {
                "unsafeName": "credit_card_expiration",
                "safeName": "credit_card_expiration"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREDIT_CARD_EXPIRATION",
                "safeName": "CREDIT_CARD_EXPIRATION"
              }
            },
            "wireValue": "credit_card_expiration"
          },
          {
            "name": {
              "originalName": "credit_card_cvv",
              "camelCase": {
                "unsafeName": "creditCardCvv",
                "safeName": "creditCardCvv"
              },
              "pascalCase": {
                "unsafeName": "CreditCardCvv",
                "safeName": "CreditCardCvv"
              },
              "snakeCase": {
                "unsafeName": "credit_card_cvv",
                "safeName": "credit_card_cvv"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREDIT_CARD_CVV",
                "safeName": "CREDIT_CARD_CVV"
              }
            },
            "wireValue": "credit_card_cvv"
          },
          {
            "name": {
              "originalName": "date",
              "camelCase": {
                "unsafeName": "date",
                "safeName": "date"
              },
              "pascalCase": {
                "unsafeName": "Date",
                "safeName": "Date"
              },
              "snakeCase": {
                "unsafeName": "date",
                "safeName": "date"
              },
              "screamingSnakeCase": {
                "unsafeName": "DATE",
                "safeName": "DATE"
              }
            },
            "wireValue": "date"
          },
          {
            "name": {
              "originalName": "nationality",
              "camelCase": {
                "unsafeName": "nationality",
                "safeName": "nationality"
              },
              "pascalCase": {
                "unsafeName": "Nationality",
                "safeName": "Nationality"
              },
              "snakeCase": {
                "unsafeName": "nationality",
                "safeName": "nationality"
              },
              "screamingSnakeCase": {
                "unsafeName": "NATIONALITY",
                "safeName": "NATIONALITY"
              }
            },
            "wireValue": "nationality"
          },
          {
            "name": {
              "originalName": "event",
              "camelCase": {
                "unsafeName": "event",
                "safeName": "event"
              },
              "pascalCase": {
                "unsafeName": "Event",
                "safeName": "Event"
              },
              "snakeCase": {
                "unsafeName": "event",
                "safeName": "event"
              },
              "screamingSnakeCase": {
                "unsafeName": "EVENT",
                "safeName": "EVENT"
              }
            },
            "wireValue": "event"
          },
          {
            "name": {
              "originalName": "language",
              "camelCase": {
                "unsafeName": "language",
                "safeName": "language"
              },
              "pascalCase": {
                "unsafeName": "Language",
                "safeName": "Language"
              },
              "snakeCase": {
                "unsafeName": "language",
                "safeName": "language"
              },
              "screamingSnakeCase": {
                "unsafeName": "LANGUAGE",
                "safeName": "LANGUAGE"
              }
            },
            "wireValue": "language"
          },
          {
            "name": {
              "originalName": "location",
              "camelCase": {
                "unsafeName": "location",
                "safeName": "location"
              },
              "pascalCase": {
                "unsafeName": "Location",
                "safeName": "Location"
              },
              "snakeCase": {
                "unsafeName": "location",
                "safeName": "location"
              },
              "screamingSnakeCase": {
                "unsafeName": "LOCATION",
                "safeName": "LOCATION"
              }
            },
            "wireValue": "location"
          },
          {
            "name": {
              "originalName": "money_amount",
              "camelCase": {
                "unsafeName": "moneyAmount",
                "safeName": "moneyAmount"
              },
              "pascalCase": {
                "unsafeName": "MoneyAmount",
                "safeName": "MoneyAmount"
              },
              "snakeCase": {
                "unsafeName": "money_amount",
                "safeName": "money_amount"
              },
              "screamingSnakeCase": {
                "unsafeName": "MONEY_AMOUNT",
                "safeName": "MONEY_AMOUNT"
              }
            },
            "wireValue": "money_amount"
          },
          {
            "name": {
              "originalName": "person_name",
              "camelCase": {
                "unsafeName": "personName",
                "safeName": "personName"
              },
              "pascalCase": {
                "unsafeName": "PersonName",
                "safeName": "PersonName"
              },
              "snakeCase": {
                "unsafeName": "person_name",
                "safeName": "person_name"
              },
              "screamingSnakeCase": {
                "unsafeName": "PERSON_NAME",
                "safeName": "PERSON_NAME"
              }
            },
            "wireValue": "person_name"
          },
          {
            "name": {
              "originalName": "person_age",
              "camelCase": {
                "unsafeName": "personAge",
                "safeName": "personAge"
              },
              "pascalCase": {
                "unsafeName": "PersonAge",
                "safeName": "PersonAge"
              },
              "snakeCase": {
                "unsafeName": "person_age",
                "safeName": "person_age"
              },
              "screamingSnakeCase": {
                "unsafeName": "PERSON_AGE",
                "safeName": "PERSON_AGE"
              }
            },
            "wireValue": "person_age"
          },
          {
            "name": {
              "originalName": "organization",
              "camelCase": {
                "unsafeName": "organization",
                "safeName": "organization"
              },
              "pascalCase": {
                "unsafeName": "Organization",
                "safeName": "Organization"
              },
              "snakeCase": {
                "unsafeName": "organization",
                "safeName": "organization"
              },
              "screamingSnakeCase": {
                "unsafeName": "ORGANIZATION",
                "safeName": "ORGANIZATION"
              }
            },
            "wireValue": "organization"
          },
          {
            "name": {
              "originalName": "political_affiliation",
              "camelCase": {
                "unsafeName": "politicalAffiliation",
                "safeName": "politicalAffiliation"
              },
              "pascalCase": {
                "unsafeName": "PoliticalAffiliation",
                "safeName": "PoliticalAffiliation"
              },
              "snakeCase": {
                "unsafeName": "political_affiliation",
                "safeName": "political_affiliation"
              },
              "screamingSnakeCase": {
                "unsafeName": "POLITICAL_AFFILIATION",
                "safeName": "POLITICAL_AFFILIATION"
              }
            },
            "wireValue": "political_affiliation"
          },
          {
            "name": {
              "originalName": "occupation",
              "camelCase": {
                "unsafeName": "occupation",
                "safeName": "occupation"
              },
              "pascalCase": {
                "unsafeName": "Occupation",
                "safeName": "Occupation"
              },
              "snakeCase": {
                "unsafeName": "occupation",
                "safeName": "occupation"
              },
              "screamingSnakeCase": {
                "unsafeName": "OCCUPATION",
                "safeName": "OCCUPATION"
              }
            },
            "wireValue": "occupation"
          },
          {
            "name": {
              "originalName": "religion",
              "camelCase": {
                "unsafeName": "religion",
                "safeName": "religion"
              },
              "pascalCase": {
                "unsafeName": "Religion",
                "safeName": "Religion"
              },
              "snakeCase": {
                "unsafeName": "religion",
                "safeName": "religion"
              },
              "screamingSnakeCase": {
                "unsafeName": "RELIGION",
                "safeName": "RELIGION"
              }
            },
            "wireValue": "religion"
          },
          {
            "name": {
              "originalName": "drivers_license",
              "camelCase": {
                "unsafeName": "driversLicense",
                "safeName": "driversLicense"
              },
              "pascalCase": {
                "unsafeName": "DriversLicense",
                "safeName": "DriversLicense"
              },
              "snakeCase": {
                "unsafeName": "drivers_license",
                "safeName": "drivers_license"
              },
              "screamingSnakeCase": {
                "unsafeName": "DRIVERS_LICENSE",
                "safeName": "DRIVERS_LICENSE"
              }
            },
            "wireValue": "drivers_license"
          },
          {
            "name": {
              "originalName": "banking_information",
              "camelCase": {
                "unsafeName": "bankingInformation",
                "safeName": "bankingInformation"
              },
              "pascalCase": {
                "unsafeName": "BankingInformation",
                "safeName": "BankingInformation"
              },
              "snakeCase": {
                "unsafeName": "banking_information",
                "safeName": "banking_information"
              },
              "screamingSnakeCase": {
                "unsafeName": "BANKING_INFORMATION",
                "safeName": "BANKING_INFORMATION"
              }
            },
            "wireValue": "banking_information"
          }
        ],
        "type": "enum"
      },
      "type_:TranscriptLanguageCode": {
        "declaration": {
          "name": {
            "originalName": "TranscriptLanguageCode",
            "camelCase": {
              "unsafeName": "transcriptLanguageCode",
              "safeName": "transcriptLanguageCode"
            },
            "pascalCase": {
              "unsafeName": "TranscriptLanguageCode",
              "safeName": "TranscriptLanguageCode"
            },
            "snakeCase": {
              "unsafeName": "transcript_language_code",
              "safeName": "transcript_language_code"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_LANGUAGE_CODE",
              "safeName": "TRANSCRIPT_LANGUAGE_CODE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "en",
              "camelCase": {
                "unsafeName": "en",
                "safeName": "en"
              },
              "pascalCase": {
                "unsafeName": "En",
                "safeName": "En"
              },
              "snakeCase": {
                "unsafeName": "en",
                "safeName": "en"
              },
              "screamingSnakeCase": {
                "unsafeName": "EN",
                "safeName": "EN"
              }
            },
            "wireValue": "en"
          },
          {
            "name": {
              "originalName": "en_au",
              "camelCase": {
                "unsafeName": "enAu",
                "safeName": "enAu"
              },
              "pascalCase": {
                "unsafeName": "EnAu",
                "safeName": "EnAu"
              },
              "snakeCase": {
                "unsafeName": "en_au",
                "safeName": "en_au"
              },
              "screamingSnakeCase": {
                "unsafeName": "EN_AU",
                "safeName": "EN_AU"
              }
            },
            "wireValue": "en_au"
          },
          {
            "name": {
              "originalName": "en_uk",
              "camelCase": {
                "unsafeName": "enUk",
                "safeName": "enUk"
              },
              "pascalCase": {
                "unsafeName": "EnUk",
                "safeName": "EnUk"
              },
              "snakeCase": {
                "unsafeName": "en_uk",
                "safeName": "en_uk"
              },
              "screamingSnakeCase": {
                "unsafeName": "EN_UK",
                "safeName": "EN_UK"
              }
            },
            "wireValue": "en_uk"
          },
          {
            "name": {
              "originalName": "en_us",
              "camelCase": {
                "unsafeName": "enUs",
                "safeName": "enUs"
              },
              "pascalCase": {
                "unsafeName": "EnUs",
                "safeName": "EnUs"
              },
              "snakeCase": {
                "unsafeName": "en_us",
                "safeName": "en_us"
              },
              "screamingSnakeCase": {
                "unsafeName": "EN_US",
                "safeName": "EN_US"
              }
            },
            "wireValue": "en_us"
          },
          {
            "name": {
              "originalName": "es",
              "camelCase": {
                "unsafeName": "es",
                "safeName": "es"
              },
              "pascalCase": {
                "unsafeName": "Es",
                "safeName": "Es"
              },
              "snakeCase": {
                "unsafeName": "es",
                "safeName": "es"
              },
              "screamingSnakeCase": {
                "unsafeName": "ES",
                "safeName": "ES"
              }
            },
            "wireValue": "es"
          },
          {
            "name": {
              "originalName": "fr",
              "camelCase": {
                "unsafeName": "fr",
                "safeName": "fr"
              },
              "pascalCase": {
                "unsafeName": "Fr",
                "safeName": "Fr"
              },
              "snakeCase": {
                "unsafeName": "fr",
                "safeName": "fr"
              },
              "screamingSnakeCase": {
                "unsafeName": "FR",
                "safeName": "FR"
              }
            },
            "wireValue": "fr"
          },
          {
            "name": {
              "originalName": "de",
              "camelCase": {
                "unsafeName": "de",
                "safeName": "de"
              },
              "pascalCase": {
                "unsafeName": "De",
                "safeName": "De"
              },
              "snakeCase": {
                "unsafeName": "de",
                "safeName": "de"
              },
              "screamingSnakeCase": {
                "unsafeName": "DE",
                "safeName": "DE"
              }
            },
            "wireValue": "de"
          },
          {
            "name": {
              "originalName": "it",
              "camelCase": {
                "unsafeName": "it",
                "safeName": "it"
              },
              "pascalCase": {
                "unsafeName": "It",
                "safeName": "It"
              },
              "snakeCase": {
                "unsafeName": "it",
                "safeName": "it"
              },
              "screamingSnakeCase": {
                "unsafeName": "IT",
                "safeName": "IT"
              }
            },
            "wireValue": "it"
          },
          {
            "name": {
              "originalName": "pt",
              "camelCase": {
                "unsafeName": "pt",
                "safeName": "pt"
              },
              "pascalCase": {
                "unsafeName": "Pt",
                "safeName": "Pt"
              },
              "snakeCase": {
                "unsafeName": "pt",
                "safeName": "pt"
              },
              "screamingSnakeCase": {
                "unsafeName": "PT",
                "safeName": "PT"
              }
            },
            "wireValue": "pt"
          },
          {
            "name": {
              "originalName": "nl",
              "camelCase": {
                "unsafeName": "nl",
                "safeName": "nl"
              },
              "pascalCase": {
                "unsafeName": "Nl",
                "safeName": "Nl"
              },
              "snakeCase": {
                "unsafeName": "nl",
                "safeName": "nl"
              },
              "screamingSnakeCase": {
                "unsafeName": "NL",
                "safeName": "NL"
              }
            },
            "wireValue": "nl"
          },
          {
            "name": {
              "originalName": "hi",
              "camelCase": {
                "unsafeName": "hi",
                "safeName": "hi"
              },
              "pascalCase": {
                "unsafeName": "Hi",
                "safeName": "Hi"
              },
              "snakeCase": {
                "unsafeName": "hi",
                "safeName": "hi"
              },
              "screamingSnakeCase": {
                "unsafeName": "HI",
                "safeName": "HI"
              }
            },
            "wireValue": "hi"
          },
          {
            "name": {
              "originalName": "ja",
              "camelCase": {
                "unsafeName": "ja",
                "safeName": "ja"
              },
              "pascalCase": {
                "unsafeName": "Ja",
                "safeName": "Ja"
              },
              "snakeCase": {
                "unsafeName": "ja",
                "safeName": "ja"
              },
              "screamingSnakeCase": {
                "unsafeName": "JA",
                "safeName": "JA"
              }
            },
            "wireValue": "ja"
          },
          {
            "name": {
              "originalName": "zh",
              "camelCase": {
                "unsafeName": "zh",
                "safeName": "zh"
              },
              "pascalCase": {
                "unsafeName": "Zh",
                "safeName": "Zh"
              },
              "snakeCase": {
                "unsafeName": "zh",
                "safeName": "zh"
              },
              "screamingSnakeCase": {
                "unsafeName": "ZH",
                "safeName": "ZH"
              }
            },
            "wireValue": "zh"
          },
          {
            "name": {
              "originalName": "fi",
              "camelCase": {
                "unsafeName": "fi",
                "safeName": "fi"
              },
              "pascalCase": {
                "unsafeName": "Fi",
                "safeName": "Fi"
              },
              "snakeCase": {
                "unsafeName": "fi",
                "safeName": "fi"
              },
              "screamingSnakeCase": {
                "unsafeName": "FI",
                "safeName": "FI"
              }
            },
            "wireValue": "fi"
          },
          {
            "name": {
              "originalName": "ko",
              "camelCase": {
                "unsafeName": "ko",
                "safeName": "ko"
              },
              "pascalCase": {
                "unsafeName": "Ko",
                "safeName": "Ko"
              },
              "snakeCase": {
                "unsafeName": "ko",
                "safeName": "ko"
              },
              "screamingSnakeCase": {
                "unsafeName": "KO",
                "safeName": "KO"
              }
            },
            "wireValue": "ko"
          },
          {
            "name": {
              "originalName": "pl",
              "camelCase": {
                "unsafeName": "pl",
                "safeName": "pl"
              },
              "pascalCase": {
                "unsafeName": "Pl",
                "safeName": "Pl"
              },
              "snakeCase": {
                "unsafeName": "pl",
                "safeName": "pl"
              },
              "screamingSnakeCase": {
                "unsafeName": "PL",
                "safeName": "PL"
              }
            },
            "wireValue": "pl"
          },
          {
            "name": {
              "originalName": "ru",
              "camelCase": {
                "unsafeName": "ru",
                "safeName": "ru"
              },
              "pascalCase": {
                "unsafeName": "Ru",
                "safeName": "Ru"
              },
              "snakeCase": {
                "unsafeName": "ru",
                "safeName": "ru"
              },
              "screamingSnakeCase": {
                "unsafeName": "RU",
                "safeName": "RU"
              }
            },
            "wireValue": "ru"
          },
          {
            "name": {
              "originalName": "tr",
              "camelCase": {
                "unsafeName": "tr",
                "safeName": "tr"
              },
              "pascalCase": {
                "unsafeName": "Tr",
                "safeName": "Tr"
              },
              "snakeCase": {
                "unsafeName": "tr",
                "safeName": "tr"
              },
              "screamingSnakeCase": {
                "unsafeName": "TR",
                "safeName": "TR"
              }
            },
            "wireValue": "tr"
          },
          {
            "name": {
              "originalName": "uk",
              "camelCase": {
                "unsafeName": "uk",
                "safeName": "uk"
              },
              "pascalCase": {
                "unsafeName": "Uk",
                "safeName": "Uk"
              },
              "snakeCase": {
                "unsafeName": "uk",
                "safeName": "uk"
              },
              "screamingSnakeCase": {
                "unsafeName": "UK",
                "safeName": "UK"
              }
            },
            "wireValue": "uk"
          },
          {
            "name": {
              "originalName": "vi",
              "camelCase": {
                "unsafeName": "vi",
                "safeName": "vi"
              },
              "pascalCase": {
                "unsafeName": "Vi",
                "safeName": "Vi"
              },
              "snakeCase": {
                "unsafeName": "vi",
                "safeName": "vi"
              },
              "screamingSnakeCase": {
                "unsafeName": "VI",
                "safeName": "VI"
              }
            },
            "wireValue": "vi"
          }
        ],
        "type": "enum"
      },
      "type_:TranscriptStatus": {
        "declaration": {
          "name": {
            "originalName": "TranscriptStatus",
            "camelCase": {
              "unsafeName": "transcriptStatus",
              "safeName": "transcriptStatus"
            },
            "pascalCase": {
              "unsafeName": "TranscriptStatus",
              "safeName": "TranscriptStatus"
            },
            "snakeCase": {
              "unsafeName": "transcript_status",
              "safeName": "transcript_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_STATUS",
              "safeName": "TRANSCRIPT_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "queued",
              "camelCase": {
                "unsafeName": "queued",
                "safeName": "queued"
              },
              "pascalCase": {
                "unsafeName": "Queued",
                "safeName": "Queued"
              },
              "snakeCase": {
                "unsafeName": "queued",
                "safeName": "queued"
              },
              "screamingSnakeCase": {
                "unsafeName": "QUEUED",
                "safeName": "QUEUED"
              }
            },
            "wireValue": "queued"
          },
          {
            "name": {
              "originalName": "processing",
              "camelCase": {
                "unsafeName": "processing",
                "safeName": "processing"
              },
              "pascalCase": {
                "unsafeName": "Processing",
                "safeName": "Processing"
              },
              "snakeCase": {
                "unsafeName": "processing",
                "safeName": "processing"
              },
              "screamingSnakeCase": {
                "unsafeName": "PROCESSING",
                "safeName": "PROCESSING"
              }
            },
            "wireValue": "processing"
          },
          {
            "name": {
              "originalName": "completed",
              "camelCase": {
                "unsafeName": "completed",
                "safeName": "completed"
              },
              "pascalCase": {
                "unsafeName": "Completed",
                "safeName": "Completed"
              },
              "snakeCase": {
                "unsafeName": "completed",
                "safeName": "completed"
              },
              "screamingSnakeCase": {
                "unsafeName": "COMPLETED",
                "safeName": "COMPLETED"
              }
            },
            "wireValue": "completed"
          },
          {
            "name": {
              "originalName": "error",
              "camelCase": {
                "unsafeName": "error",
                "safeName": "error"
              },
              "pascalCase": {
                "unsafeName": "Error",
                "safeName": "Error"
              },
              "snakeCase": {
                "unsafeName": "error",
                "safeName": "error"
              },
              "screamingSnakeCase": {
                "unsafeName": "ERROR",
                "safeName": "ERROR"
              }
            },
            "wireValue": "error"
          }
        ],
        "type": "enum"
      },
      "type_:TranscriptContentSafetyLabels": {
        "declaration": {
          "name": {
            "originalName": "TranscriptContentSafetyLabels",
            "camelCase": {
              "unsafeName": "transcriptContentSafetyLabels",
              "safeName": "transcriptContentSafetyLabels"
            },
            "pascalCase": {
              "unsafeName": "TranscriptContentSafetyLabels",
              "safeName": "TranscriptContentSafetyLabels"
            },
            "snakeCase": {
              "unsafeName": "transcript_content_safety_labels",
              "safeName": "transcript_content_safety_labels"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_CONTENT_SAFETY_LABELS",
              "safeName": "TRANSCRIPT_CONTENT_SAFETY_LABELS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": "type_:AudioIntelligenceModelStatus",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "results",
                "camelCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "pascalCase": {
                  "unsafeName": "Results",
                  "safeName": "Results"
                },
                "snakeCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESULTS",
                  "safeName": "RESULTS"
                }
              },
              "wireValue": "results"
            },
            "typeReference": {
              "value": {
                "value": "type_:ContentSafetyLabelResult",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptIabCategoriesResult": {
        "declaration": {
          "name": {
            "originalName": "TranscriptIabCategoriesResult",
            "camelCase": {
              "unsafeName": "transcriptIabCategoriesResult",
              "safeName": "transcriptIabCategoriesResult"
            },
            "pascalCase": {
              "unsafeName": "TranscriptIabCategoriesResult",
              "safeName": "TranscriptIabCategoriesResult"
            },
            "snakeCase": {
              "unsafeName": "transcript_iab_categories_result",
              "safeName": "transcript_iab_categories_result"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_IAB_CATEGORIES_RESULT",
              "safeName": "TRANSCRIPT_IAB_CATEGORIES_RESULT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": "type_:AudioIntelligenceModelStatus",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "results",
                "camelCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "pascalCase": {
                  "unsafeName": "Results",
                  "safeName": "Results"
                },
                "snakeCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESULTS",
                  "safeName": "RESULTS"
                }
              },
              "wireValue": "results"
            },
            "typeReference": {
              "value": {
                "value": "type_:TopicDetectionResult",
                "type": "named"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                }
              },
              "wireValue": "summary"
            },
            "typeReference": {
              "key": {
                "value": "STRING",
                "type": "primitive"
              },
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "map"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:Transcript": {
        "declaration": {
          "name": {
            "originalName": "Transcript",
            "camelCase": {
              "unsafeName": "transcript",
              "safeName": "transcript"
            },
            "pascalCase": {
              "unsafeName": "Transcript",
              "safeName": "Transcript"
            },
            "snakeCase": {
              "unsafeName": "transcript",
              "safeName": "transcript"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT",
              "safeName": "TRANSCRIPT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_model",
                "camelCase": {
                  "unsafeName": "languageModel",
                  "safeName": "languageModel"
                },
                "pascalCase": {
                  "unsafeName": "LanguageModel",
                  "safeName": "LanguageModel"
                },
                "snakeCase": {
                  "unsafeName": "language_model",
                  "safeName": "language_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_MODEL",
                  "safeName": "LANGUAGE_MODEL"
                }
              },
              "wireValue": "language_model"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "acoustic_model",
                "camelCase": {
                  "unsafeName": "acousticModel",
                  "safeName": "acousticModel"
                },
                "pascalCase": {
                  "unsafeName": "AcousticModel",
                  "safeName": "AcousticModel"
                },
                "snakeCase": {
                  "unsafeName": "acoustic_model",
                  "safeName": "acoustic_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ACOUSTIC_MODEL",
                  "safeName": "ACOUSTIC_MODEL"
                }
              },
              "wireValue": "acoustic_model"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": "type_:TranscriptStatus",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_code",
                "camelCase": {
                  "unsafeName": "languageCode",
                  "safeName": "languageCode"
                },
                "pascalCase": {
                  "unsafeName": "LanguageCode",
                  "safeName": "LanguageCode"
                },
                "snakeCase": {
                  "unsafeName": "language_code",
                  "safeName": "language_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_CODE",
                  "safeName": "LANGUAGE_CODE"
                }
              },
              "wireValue": "language_code"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptLanguageCode",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioURL",
                  "safeName": "audioURL"
                },
                "pascalCase": {
                  "unsafeName": "AudioURL",
                  "safeName": "AudioURL"
                },
                "snakeCase": {
                  "unsafeName": "audio_url",
                  "safeName": "audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_URL",
                  "safeName": "AUDIO_URL"
                }
              },
              "wireValue": "audio_url"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                }
              },
              "wireValue": "words"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:TranscriptWord",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "utterances",
                "camelCase": {
                  "unsafeName": "utterances",
                  "safeName": "utterances"
                },
                "pascalCase": {
                  "unsafeName": "Utterances",
                  "safeName": "Utterances"
                },
                "snakeCase": {
                  "unsafeName": "utterances",
                  "safeName": "utterances"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UTTERANCES",
                  "safeName": "UTTERANCES"
                }
              },
              "wireValue": "utterances"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:TranscriptUtterance",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_duration",
                "camelCase": {
                  "unsafeName": "audioDuration",
                  "safeName": "audioDuration"
                },
                "pascalCase": {
                  "unsafeName": "AudioDuration",
                  "safeName": "AudioDuration"
                },
                "snakeCase": {
                  "unsafeName": "audio_duration",
                  "safeName": "audio_duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DURATION",
                  "safeName": "AUDIO_DURATION"
                }
              },
              "wireValue": "audio_duration"
            },
            "typeReference": {
              "value": {
                "value": "FLOAT",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "punctuate",
                "camelCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "pascalCase": {
                  "unsafeName": "Punctuate",
                  "safeName": "Punctuate"
                },
                "snakeCase": {
                  "unsafeName": "punctuate",
                  "safeName": "punctuate"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PUNCTUATE",
                  "safeName": "PUNCTUATE"
                }
              },
              "wireValue": "punctuate"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "format_text",
                "camelCase": {
                  "unsafeName": "formatText",
                  "safeName": "formatText"
                },
                "pascalCase": {
                  "unsafeName": "FormatText",
                  "safeName": "FormatText"
                },
                "snakeCase": {
                  "unsafeName": "format_text",
                  "safeName": "format_text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FORMAT_TEXT",
                  "safeName": "FORMAT_TEXT"
                }
              },
              "wireValue": "format_text"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "dual_channel",
                "camelCase": {
                  "unsafeName": "dualChannel",
                  "safeName": "dualChannel"
                },
                "pascalCase": {
                  "unsafeName": "DualChannel",
                  "safeName": "DualChannel"
                },
                "snakeCase": {
                  "unsafeName": "dual_channel",
                  "safeName": "dual_channel"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DUAL_CHANNEL",
                  "safeName": "DUAL_CHANNEL"
                }
              },
              "wireValue": "dual_channel"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_url",
                "camelCase": {
                  "unsafeName": "webhookURL",
                  "safeName": "webhookURL"
                },
                "pascalCase": {
                  "unsafeName": "WebhookURL",
                  "safeName": "WebhookURL"
                },
                "snakeCase": {
                  "unsafeName": "webhook_url",
                  "safeName": "webhook_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_URL",
                  "safeName": "WEBHOOK_URL"
                }
              },
              "wireValue": "webhook_url"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_status_code",
                "camelCase": {
                  "unsafeName": "webhookStatusCode",
                  "safeName": "webhookStatusCode"
                },
                "pascalCase": {
                  "unsafeName": "WebhookStatusCode",
                  "safeName": "WebhookStatusCode"
                },
                "snakeCase": {
                  "unsafeName": "webhook_status_code",
                  "safeName": "webhook_status_code"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_STATUS_CODE",
                  "safeName": "WEBHOOK_STATUS_CODE"
                }
              },
              "wireValue": "webhook_status_code"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth",
                "camelCase": {
                  "unsafeName": "webhookAuth",
                  "safeName": "webhookAuth"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuth",
                  "safeName": "WebhookAuth"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth",
                  "safeName": "webhook_auth"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH",
                  "safeName": "WEBHOOK_AUTH"
                }
              },
              "wireValue": "webhook_auth"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "webhook_auth_header_name",
                "camelCase": {
                  "unsafeName": "webhookAuthHeaderName",
                  "safeName": "webhookAuthHeaderName"
                },
                "pascalCase": {
                  "unsafeName": "WebhookAuthHeaderName",
                  "safeName": "WebhookAuthHeaderName"
                },
                "snakeCase": {
                  "unsafeName": "webhook_auth_header_name",
                  "safeName": "webhook_auth_header_name"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WEBHOOK_AUTH_HEADER_NAME",
                  "safeName": "WEBHOOK_AUTH_HEADER_NAME"
                }
              },
              "wireValue": "webhook_auth_header_name"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speed_boost",
                "camelCase": {
                  "unsafeName": "speedBoost",
                  "safeName": "speedBoost"
                },
                "pascalCase": {
                  "unsafeName": "SpeedBoost",
                  "safeName": "SpeedBoost"
                },
                "snakeCase": {
                  "unsafeName": "speed_boost",
                  "safeName": "speed_boost"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEED_BOOST",
                  "safeName": "SPEED_BOOST"
                }
              },
              "wireValue": "speed_boost"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_highlights",
                "camelCase": {
                  "unsafeName": "autoHighlights",
                  "safeName": "autoHighlights"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlights",
                  "safeName": "AutoHighlights"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights",
                  "safeName": "auto_highlights"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS",
                  "safeName": "AUTO_HIGHLIGHTS"
                }
              },
              "wireValue": "auto_highlights"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_highlights_result",
                "camelCase": {
                  "unsafeName": "autoHighlightsResult",
                  "safeName": "autoHighlightsResult"
                },
                "pascalCase": {
                  "unsafeName": "AutoHighlightsResult",
                  "safeName": "AutoHighlightsResult"
                },
                "snakeCase": {
                  "unsafeName": "auto_highlights_result",
                  "safeName": "auto_highlights_result"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_HIGHLIGHTS_RESULT",
                  "safeName": "AUTO_HIGHLIGHTS_RESULT"
                }
              },
              "wireValue": "auto_highlights_result"
            },
            "typeReference": {
              "value": {
                "value": "type_:AutoHighlightsResult",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_start_from",
                "camelCase": {
                  "unsafeName": "audioStartFrom",
                  "safeName": "audioStartFrom"
                },
                "pascalCase": {
                  "unsafeName": "AudioStartFrom",
                  "safeName": "AudioStartFrom"
                },
                "snakeCase": {
                  "unsafeName": "audio_start_from",
                  "safeName": "audio_start_from"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START_FROM",
                  "safeName": "AUDIO_START_FROM"
                }
              },
              "wireValue": "audio_start_from"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end_at",
                "camelCase": {
                  "unsafeName": "audioEndAt",
                  "safeName": "audioEndAt"
                },
                "pascalCase": {
                  "unsafeName": "AudioEndAt",
                  "safeName": "AudioEndAt"
                },
                "snakeCase": {
                  "unsafeName": "audio_end_at",
                  "safeName": "audio_end_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END_AT",
                  "safeName": "AUDIO_END_AT"
                }
              },
              "wireValue": "audio_end_at"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "word_boost",
                "camelCase": {
                  "unsafeName": "wordBoost",
                  "safeName": "wordBoost"
                },
                "pascalCase": {
                  "unsafeName": "WordBoost",
                  "safeName": "WordBoost"
                },
                "snakeCase": {
                  "unsafeName": "word_boost",
                  "safeName": "word_boost"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORD_BOOST",
                  "safeName": "WORD_BOOST"
                }
              },
              "wireValue": "word_boost"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "boost_param",
                "camelCase": {
                  "unsafeName": "boostParam",
                  "safeName": "boostParam"
                },
                "pascalCase": {
                  "unsafeName": "BoostParam",
                  "safeName": "BoostParam"
                },
                "snakeCase": {
                  "unsafeName": "boost_param",
                  "safeName": "boost_param"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BOOST_PARAM",
                  "safeName": "BOOST_PARAM"
                }
              },
              "wireValue": "boost_param"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "filter_profanity",
                "camelCase": {
                  "unsafeName": "filterProfanity",
                  "safeName": "filterProfanity"
                },
                "pascalCase": {
                  "unsafeName": "FilterProfanity",
                  "safeName": "FilterProfanity"
                },
                "snakeCase": {
                  "unsafeName": "filter_profanity",
                  "safeName": "filter_profanity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILTER_PROFANITY",
                  "safeName": "FILTER_PROFANITY"
                }
              },
              "wireValue": "filter_profanity"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii",
                "camelCase": {
                  "unsafeName": "redactPii",
                  "safeName": "redactPii"
                },
                "pascalCase": {
                  "unsafeName": "RedactPii",
                  "safeName": "RedactPii"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii",
                  "safeName": "redact_pii"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII",
                  "safeName": "REDACT_PII"
                }
              },
              "wireValue": "redact_pii"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio",
                "camelCase": {
                  "unsafeName": "redactPiiAudio",
                  "safeName": "redactPiiAudio"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudio",
                  "safeName": "RedactPiiAudio"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio",
                  "safeName": "redact_pii_audio"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO",
                  "safeName": "REDACT_PII_AUDIO"
                }
              },
              "wireValue": "redact_pii_audio"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_audio_quality",
                "camelCase": {
                  "unsafeName": "redactPiiAudioQuality",
                  "safeName": "redactPiiAudioQuality"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiAudioQuality",
                  "safeName": "RedactPiiAudioQuality"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_audio_quality",
                  "safeName": "redact_pii_audio_quality"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_AUDIO_QUALITY",
                  "safeName": "REDACT_PII_AUDIO_QUALITY"
                }
              },
              "wireValue": "redact_pii_audio_quality"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_policies",
                "camelCase": {
                  "unsafeName": "redactPiiPolicies",
                  "safeName": "redactPiiPolicies"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiPolicies",
                  "safeName": "RedactPiiPolicies"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_policies",
                  "safeName": "redact_pii_policies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_POLICIES",
                  "safeName": "REDACT_PII_POLICIES"
                }
              },
              "wireValue": "redact_pii_policies"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:PiiPolicy",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "redact_pii_sub",
                "camelCase": {
                  "unsafeName": "redactPiiSub",
                  "safeName": "redactPiiSub"
                },
                "pascalCase": {
                  "unsafeName": "RedactPiiSub",
                  "safeName": "RedactPiiSub"
                },
                "snakeCase": {
                  "unsafeName": "redact_pii_sub",
                  "safeName": "redact_pii_sub"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REDACT_PII_SUB",
                  "safeName": "REDACT_PII_SUB"
                }
              },
              "wireValue": "redact_pii_sub"
            },
            "typeReference": {
              "value": {
                "value": "type_:SubstitutionPolicy",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker_labels",
                "camelCase": {
                  "unsafeName": "speakerLabels",
                  "safeName": "speakerLabels"
                },
                "pascalCase": {
                  "unsafeName": "SpeakerLabels",
                  "safeName": "SpeakerLabels"
                },
                "snakeCase": {
                  "unsafeName": "speaker_labels",
                  "safeName": "speaker_labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER_LABELS",
                  "safeName": "SPEAKER_LABELS"
                }
              },
              "wireValue": "speaker_labels"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speakers_expected",
                "camelCase": {
                  "unsafeName": "speakersExpected",
                  "safeName": "speakersExpected"
                },
                "pascalCase": {
                  "unsafeName": "SpeakersExpected",
                  "safeName": "SpeakersExpected"
                },
                "snakeCase": {
                  "unsafeName": "speakers_expected",
                  "safeName": "speakers_expected"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKERS_EXPECTED",
                  "safeName": "SPEAKERS_EXPECTED"
                }
              },
              "wireValue": "speakers_expected"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_safety",
                "camelCase": {
                  "unsafeName": "contentSafety",
                  "safeName": "contentSafety"
                },
                "pascalCase": {
                  "unsafeName": "ContentSafety",
                  "safeName": "ContentSafety"
                },
                "snakeCase": {
                  "unsafeName": "content_safety",
                  "safeName": "content_safety"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_SAFETY",
                  "safeName": "CONTENT_SAFETY"
                }
              },
              "wireValue": "content_safety"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "content_safety_labels",
                "camelCase": {
                  "unsafeName": "contentSafetyLabels",
                  "safeName": "contentSafetyLabels"
                },
                "pascalCase": {
                  "unsafeName": "ContentSafetyLabels",
                  "safeName": "ContentSafetyLabels"
                },
                "snakeCase": {
                  "unsafeName": "content_safety_labels",
                  "safeName": "content_safety_labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTENT_SAFETY_LABELS",
                  "safeName": "CONTENT_SAFETY_LABELS"
                }
              },
              "wireValue": "content_safety_labels"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptContentSafetyLabels",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "iab_categories",
                "camelCase": {
                  "unsafeName": "iabCategories",
                  "safeName": "iabCategories"
                },
                "pascalCase": {
                  "unsafeName": "IabCategories",
                  "safeName": "IabCategories"
                },
                "snakeCase": {
                  "unsafeName": "iab_categories",
                  "safeName": "iab_categories"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IAB_CATEGORIES",
                  "safeName": "IAB_CATEGORIES"
                }
              },
              "wireValue": "iab_categories"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "iab_categories_result",
                "camelCase": {
                  "unsafeName": "iabCategoriesResult",
                  "safeName": "iabCategoriesResult"
                },
                "pascalCase": {
                  "unsafeName": "IabCategoriesResult",
                  "safeName": "IabCategoriesResult"
                },
                "snakeCase": {
                  "unsafeName": "iab_categories_result",
                  "safeName": "iab_categories_result"
                },
                "screamingSnakeCase": {
                  "unsafeName": "IAB_CATEGORIES_RESULT",
                  "safeName": "IAB_CATEGORIES_RESULT"
                }
              },
              "wireValue": "iab_categories_result"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptIabCategoriesResult",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "language_detection",
                "camelCase": {
                  "unsafeName": "languageDetection",
                  "safeName": "languageDetection"
                },
                "pascalCase": {
                  "unsafeName": "LanguageDetection",
                  "safeName": "LanguageDetection"
                },
                "snakeCase": {
                  "unsafeName": "language_detection",
                  "safeName": "language_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LANGUAGE_DETECTION",
                  "safeName": "LANGUAGE_DETECTION"
                }
              },
              "wireValue": "language_detection"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_spelling",
                "camelCase": {
                  "unsafeName": "customSpelling",
                  "safeName": "customSpelling"
                },
                "pascalCase": {
                  "unsafeName": "CustomSpelling",
                  "safeName": "CustomSpelling"
                },
                "snakeCase": {
                  "unsafeName": "custom_spelling",
                  "safeName": "custom_spelling"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_SPELLING",
                  "safeName": "CUSTOM_SPELLING"
                }
              },
              "wireValue": "custom_spelling"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:TranscriptCustomSpelling",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "auto_chapters",
                "camelCase": {
                  "unsafeName": "autoChapters",
                  "safeName": "autoChapters"
                },
                "pascalCase": {
                  "unsafeName": "AutoChapters",
                  "safeName": "AutoChapters"
                },
                "snakeCase": {
                  "unsafeName": "auto_chapters",
                  "safeName": "auto_chapters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUTO_CHAPTERS",
                  "safeName": "AUTO_CHAPTERS"
                }
              },
              "wireValue": "auto_chapters"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "chapters",
                "camelCase": {
                  "unsafeName": "chapters",
                  "safeName": "chapters"
                },
                "pascalCase": {
                  "unsafeName": "Chapters",
                  "safeName": "Chapters"
                },
                "snakeCase": {
                  "unsafeName": "chapters",
                  "safeName": "chapters"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CHAPTERS",
                  "safeName": "CHAPTERS"
                }
              },
              "wireValue": "chapters"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:Chapter",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summarization",
                "camelCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "pascalCase": {
                  "unsafeName": "Summarization",
                  "safeName": "Summarization"
                },
                "snakeCase": {
                  "unsafeName": "summarization",
                  "safeName": "summarization"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARIZATION",
                  "safeName": "SUMMARIZATION"
                }
              },
              "wireValue": "summarization"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_type",
                "camelCase": {
                  "unsafeName": "summaryType",
                  "safeName": "summaryType"
                },
                "pascalCase": {
                  "unsafeName": "SummaryType",
                  "safeName": "SummaryType"
                },
                "snakeCase": {
                  "unsafeName": "summary_type",
                  "safeName": "summary_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_TYPE",
                  "safeName": "SUMMARY_TYPE"
                }
              },
              "wireValue": "summary_type"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary_model",
                "camelCase": {
                  "unsafeName": "summaryModel",
                  "safeName": "summaryModel"
                },
                "pascalCase": {
                  "unsafeName": "SummaryModel",
                  "safeName": "SummaryModel"
                },
                "snakeCase": {
                  "unsafeName": "summary_model",
                  "safeName": "summary_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY_MODEL",
                  "safeName": "SUMMARY_MODEL"
                }
              },
              "wireValue": "summary_model"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                }
              },
              "wireValue": "summary"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "custom_topics",
                "camelCase": {
                  "unsafeName": "customTopics",
                  "safeName": "customTopics"
                },
                "pascalCase": {
                  "unsafeName": "CustomTopics",
                  "safeName": "CustomTopics"
                },
                "snakeCase": {
                  "unsafeName": "custom_topics",
                  "safeName": "custom_topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CUSTOM_TOPICS",
                  "safeName": "CUSTOM_TOPICS"
                }
              },
              "wireValue": "custom_topics"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "topics",
                "camelCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "pascalCase": {
                  "unsafeName": "Topics",
                  "safeName": "Topics"
                },
                "snakeCase": {
                  "unsafeName": "topics",
                  "safeName": "topics"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOPICS",
                  "safeName": "TOPICS"
                }
              },
              "wireValue": "topics"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "disfluencies",
                "camelCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "pascalCase": {
                  "unsafeName": "Disfluencies",
                  "safeName": "Disfluencies"
                },
                "snakeCase": {
                  "unsafeName": "disfluencies",
                  "safeName": "disfluencies"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DISFLUENCIES",
                  "safeName": "DISFLUENCIES"
                }
              },
              "wireValue": "disfluencies"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment_analysis",
                "camelCase": {
                  "unsafeName": "sentimentAnalysis",
                  "safeName": "sentimentAnalysis"
                },
                "pascalCase": {
                  "unsafeName": "SentimentAnalysis",
                  "safeName": "SentimentAnalysis"
                },
                "snakeCase": {
                  "unsafeName": "sentiment_analysis",
                  "safeName": "sentiment_analysis"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT_ANALYSIS",
                  "safeName": "SENTIMENT_ANALYSIS"
                }
              },
              "wireValue": "sentiment_analysis"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment_analysis_results",
                "camelCase": {
                  "unsafeName": "sentimentAnalysisResults",
                  "safeName": "sentimentAnalysisResults"
                },
                "pascalCase": {
                  "unsafeName": "SentimentAnalysisResults",
                  "safeName": "SentimentAnalysisResults"
                },
                "snakeCase": {
                  "unsafeName": "sentiment_analysis_results",
                  "safeName": "sentiment_analysis_results"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT_ANALYSIS_RESULTS",
                  "safeName": "SENTIMENT_ANALYSIS_RESULTS"
                }
              },
              "wireValue": "sentiment_analysis_results"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:SentimentAnalysisResult",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "entity_detection",
                "camelCase": {
                  "unsafeName": "entityDetection",
                  "safeName": "entityDetection"
                },
                "pascalCase": {
                  "unsafeName": "EntityDetection",
                  "safeName": "EntityDetection"
                },
                "snakeCase": {
                  "unsafeName": "entity_detection",
                  "safeName": "entity_detection"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_DETECTION",
                  "safeName": "ENTITY_DETECTION"
                }
              },
              "wireValue": "entity_detection"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "entities",
                "camelCase": {
                  "unsafeName": "entities",
                  "safeName": "entities"
                },
                "pascalCase": {
                  "unsafeName": "Entities",
                  "safeName": "Entities"
                },
                "snakeCase": {
                  "unsafeName": "entities",
                  "safeName": "entities"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITIES",
                  "safeName": "ENTITIES"
                }
              },
              "wireValue": "entities"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:Entity",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speech_threshold",
                "camelCase": {
                  "unsafeName": "speechThreshold",
                  "safeName": "speechThreshold"
                },
                "pascalCase": {
                  "unsafeName": "SpeechThreshold",
                  "safeName": "SpeechThreshold"
                },
                "snakeCase": {
                  "unsafeName": "speech_threshold",
                  "safeName": "speech_threshold"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEECH_THRESHOLD",
                  "safeName": "SPEECH_THRESHOLD"
                }
              },
              "wireValue": "speech_threshold"
            },
            "typeReference": {
              "value": {
                "value": "FLOAT",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "throttled",
                "camelCase": {
                  "unsafeName": "throttled",
                  "safeName": "throttled"
                },
                "pascalCase": {
                  "unsafeName": "Throttled",
                  "safeName": "Throttled"
                },
                "snakeCase": {
                  "unsafeName": "throttled",
                  "safeName": "throttled"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THROTTLED",
                  "safeName": "THROTTLED"
                }
              },
              "wireValue": "throttled"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                }
              },
              "wireValue": "error"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:Chapter": {
        "declaration": {
          "name": {
            "originalName": "Chapter",
            "camelCase": {
              "unsafeName": "chapter",
              "safeName": "chapter"
            },
            "pascalCase": {
              "unsafeName": "Chapter",
              "safeName": "Chapter"
            },
            "snakeCase": {
              "unsafeName": "chapter",
              "safeName": "chapter"
            },
            "screamingSnakeCase": {
              "unsafeName": "CHAPTER",
              "safeName": "CHAPTER"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "gist",
                "camelCase": {
                  "unsafeName": "gist",
                  "safeName": "gist"
                },
                "pascalCase": {
                  "unsafeName": "Gist",
                  "safeName": "Gist"
                },
                "snakeCase": {
                  "unsafeName": "gist",
                  "safeName": "gist"
                },
                "screamingSnakeCase": {
                  "unsafeName": "GIST",
                  "safeName": "GIST"
                }
              },
              "wireValue": "gist"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "headline",
                "camelCase": {
                  "unsafeName": "headline",
                  "safeName": "headline"
                },
                "pascalCase": {
                  "unsafeName": "Headline",
                  "safeName": "Headline"
                },
                "snakeCase": {
                  "unsafeName": "headline",
                  "safeName": "headline"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HEADLINE",
                  "safeName": "HEADLINE"
                }
              },
              "wireValue": "headline"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                }
              },
              "wireValue": "summary"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:Entity": {
        "declaration": {
          "name": {
            "originalName": "Entity",
            "camelCase": {
              "unsafeName": "entity",
              "safeName": "entity"
            },
            "pascalCase": {
              "unsafeName": "Entity",
              "safeName": "Entity"
            },
            "snakeCase": {
              "unsafeName": "entity",
              "safeName": "entity"
            },
            "screamingSnakeCase": {
              "unsafeName": "ENTITY",
              "safeName": "ENTITY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "entity_type",
                "camelCase": {
                  "unsafeName": "entityType",
                  "safeName": "entityType"
                },
                "pascalCase": {
                  "unsafeName": "EntityType",
                  "safeName": "EntityType"
                },
                "snakeCase": {
                  "unsafeName": "entity_type",
                  "safeName": "entity_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ENTITY_TYPE",
                  "safeName": "ENTITY_TYPE"
                }
              },
              "wireValue": "entity_type"
            },
            "typeReference": {
              "value": "type_:EntityType",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:EntityType": {
        "declaration": {
          "name": {
            "originalName": "EntityType",
            "camelCase": {
              "unsafeName": "entityType",
              "safeName": "entityType"
            },
            "pascalCase": {
              "unsafeName": "EntityType",
              "safeName": "EntityType"
            },
            "snakeCase": {
              "unsafeName": "entity_type",
              "safeName": "entity_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "ENTITY_TYPE",
              "safeName": "ENTITY_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "banking_information",
              "camelCase": {
                "unsafeName": "bankingInformation",
                "safeName": "bankingInformation"
              },
              "pascalCase": {
                "unsafeName": "BankingInformation",
                "safeName": "BankingInformation"
              },
              "snakeCase": {
                "unsafeName": "banking_information",
                "safeName": "banking_information"
              },
              "screamingSnakeCase": {
                "unsafeName": "BANKING_INFORMATION",
                "safeName": "BANKING_INFORMATION"
              }
            },
            "wireValue": "banking_information"
          },
          {
            "name": {
              "originalName": "blood_type",
              "camelCase": {
                "unsafeName": "bloodType",
                "safeName": "bloodType"
              },
              "pascalCase": {
                "unsafeName": "BloodType",
                "safeName": "BloodType"
              },
              "snakeCase": {
                "unsafeName": "blood_type",
                "safeName": "blood_type"
              },
              "screamingSnakeCase": {
                "unsafeName": "BLOOD_TYPE",
                "safeName": "BLOOD_TYPE"
              }
            },
            "wireValue": "blood_type"
          },
          {
            "name": {
              "originalName": "credit_card_cvv",
              "camelCase": {
                "unsafeName": "creditCardCvv",
                "safeName": "creditCardCvv"
              },
              "pascalCase": {
                "unsafeName": "CreditCardCvv",
                "safeName": "CreditCardCvv"
              },
              "snakeCase": {
                "unsafeName": "credit_card_cvv",
                "safeName": "credit_card_cvv"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREDIT_CARD_CVV",
                "safeName": "CREDIT_CARD_CVV"
              }
            },
            "wireValue": "credit_card_cvv"
          },
          {
            "name": {
              "originalName": "credit_card_expiration",
              "camelCase": {
                "unsafeName": "creditCardExpiration",
                "safeName": "creditCardExpiration"
              },
              "pascalCase": {
                "unsafeName": "CreditCardExpiration",
                "safeName": "CreditCardExpiration"
              },
              "snakeCase": {
                "unsafeName": "credit_card_expiration",
                "safeName": "credit_card_expiration"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREDIT_CARD_EXPIRATION",
                "safeName": "CREDIT_CARD_EXPIRATION"
              }
            },
            "wireValue": "credit_card_expiration"
          },
          {
            "name": {
              "originalName": "credit_card_number",
              "camelCase": {
                "unsafeName": "creditCardNumber",
                "safeName": "creditCardNumber"
              },
              "pascalCase": {
                "unsafeName": "CreditCardNumber",
                "safeName": "CreditCardNumber"
              },
              "snakeCase": {
                "unsafeName": "credit_card_number",
                "safeName": "credit_card_number"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREDIT_CARD_NUMBER",
                "safeName": "CREDIT_CARD_NUMBER"
              }
            },
            "wireValue": "credit_card_number"
          },
          {
            "name": {
              "originalName": "date",
              "camelCase": {
                "unsafeName": "date",
                "safeName": "date"
              },
              "pascalCase": {
                "unsafeName": "Date",
                "safeName": "Date"
              },
              "snakeCase": {
                "unsafeName": "date",
                "safeName": "date"
              },
              "screamingSnakeCase": {
                "unsafeName": "DATE",
                "safeName": "DATE"
              }
            },
            "wireValue": "date"
          },
          {
            "name": {
              "originalName": "date_of_birth",
              "camelCase": {
                "unsafeName": "dateOfBirth",
                "safeName": "dateOfBirth"
              },
              "pascalCase": {
                "unsafeName": "DateOfBirth",
                "safeName": "DateOfBirth"
              },
              "snakeCase": {
                "unsafeName": "date_of_birth",
                "safeName": "date_of_birth"
              },
              "screamingSnakeCase": {
                "unsafeName": "DATE_OF_BIRTH",
                "safeName": "DATE_OF_BIRTH"
              }
            },
            "wireValue": "date_of_birth"
          },
          {
            "name": {
              "originalName": "drivers_license",
              "camelCase": {
                "unsafeName": "driversLicense",
                "safeName": "driversLicense"
              },
              "pascalCase": {
                "unsafeName": "DriversLicense",
                "safeName": "DriversLicense"
              },
              "snakeCase": {
                "unsafeName": "drivers_license",
                "safeName": "drivers_license"
              },
              "screamingSnakeCase": {
                "unsafeName": "DRIVERS_LICENSE",
                "safeName": "DRIVERS_LICENSE"
              }
            },
            "wireValue": "drivers_license"
          },
          {
            "name": {
              "originalName": "drug",
              "camelCase": {
                "unsafeName": "drug",
                "safeName": "drug"
              },
              "pascalCase": {
                "unsafeName": "Drug",
                "safeName": "Drug"
              },
              "snakeCase": {
                "unsafeName": "drug",
                "safeName": "drug"
              },
              "screamingSnakeCase": {
                "unsafeName": "DRUG",
                "safeName": "DRUG"
              }
            },
            "wireValue": "drug"
          },
          {
            "name": {
              "originalName": "email_address",
              "camelCase": {
                "unsafeName": "emailAddress",
                "safeName": "emailAddress"
              },
              "pascalCase": {
                "unsafeName": "EmailAddress",
                "safeName": "EmailAddress"
              },
              "snakeCase": {
                "unsafeName": "email_address",
                "safeName": "email_address"
              },
              "screamingSnakeCase": {
                "unsafeName": "EMAIL_ADDRESS",
                "safeName": "EMAIL_ADDRESS"
              }
            },
            "wireValue": "email_address"
          },
          {
            "name": {
              "originalName": "event",
              "camelCase": {
                "unsafeName": "event",
                "safeName": "event"
              },
              "pascalCase": {
                "unsafeName": "Event",
                "safeName": "Event"
              },
              "snakeCase": {
                "unsafeName": "event",
                "safeName": "event"
              },
              "screamingSnakeCase": {
                "unsafeName": "EVENT",
                "safeName": "EVENT"
              }
            },
            "wireValue": "event"
          },
          {
            "name": {
              "originalName": "injury",
              "camelCase": {
                "unsafeName": "injury",
                "safeName": "injury"
              },
              "pascalCase": {
                "unsafeName": "Injury",
                "safeName": "Injury"
              },
              "snakeCase": {
                "unsafeName": "injury",
                "safeName": "injury"
              },
              "screamingSnakeCase": {
                "unsafeName": "INJURY",
                "safeName": "INJURY"
              }
            },
            "wireValue": "injury"
          },
          {
            "name": {
              "originalName": "language",
              "camelCase": {
                "unsafeName": "language",
                "safeName": "language"
              },
              "pascalCase": {
                "unsafeName": "Language",
                "safeName": "Language"
              },
              "snakeCase": {
                "unsafeName": "language",
                "safeName": "language"
              },
              "screamingSnakeCase": {
                "unsafeName": "LANGUAGE",
                "safeName": "LANGUAGE"
              }
            },
            "wireValue": "language"
          },
          {
            "name": {
              "originalName": "location",
              "camelCase": {
                "unsafeName": "location",
                "safeName": "location"
              },
              "pascalCase": {
                "unsafeName": "Location",
                "safeName": "Location"
              },
              "snakeCase": {
                "unsafeName": "location",
                "safeName": "location"
              },
              "screamingSnakeCase": {
                "unsafeName": "LOCATION",
                "safeName": "LOCATION"
              }
            },
            "wireValue": "location"
          },
          {
            "name": {
              "originalName": "medical_condition",
              "camelCase": {
                "unsafeName": "medicalCondition",
                "safeName": "medicalCondition"
              },
              "pascalCase": {
                "unsafeName": "MedicalCondition",
                "safeName": "MedicalCondition"
              },
              "snakeCase": {
                "unsafeName": "medical_condition",
                "safeName": "medical_condition"
              },
              "screamingSnakeCase": {
                "unsafeName": "MEDICAL_CONDITION",
                "safeName": "MEDICAL_CONDITION"
              }
            },
            "wireValue": "medical_condition"
          },
          {
            "name": {
              "originalName": "medical_process",
              "camelCase": {
                "unsafeName": "medicalProcess",
                "safeName": "medicalProcess"
              },
              "pascalCase": {
                "unsafeName": "MedicalProcess",
                "safeName": "MedicalProcess"
              },
              "snakeCase": {
                "unsafeName": "medical_process",
                "safeName": "medical_process"
              },
              "screamingSnakeCase": {
                "unsafeName": "MEDICAL_PROCESS",
                "safeName": "MEDICAL_PROCESS"
              }
            },
            "wireValue": "medical_process"
          },
          {
            "name": {
              "originalName": "money_amount",
              "camelCase": {
                "unsafeName": "moneyAmount",
                "safeName": "moneyAmount"
              },
              "pascalCase": {
                "unsafeName": "MoneyAmount",
                "safeName": "MoneyAmount"
              },
              "snakeCase": {
                "unsafeName": "money_amount",
                "safeName": "money_amount"
              },
              "screamingSnakeCase": {
                "unsafeName": "MONEY_AMOUNT",
                "safeName": "MONEY_AMOUNT"
              }
            },
            "wireValue": "money_amount"
          },
          {
            "name": {
              "originalName": "nationality",
              "camelCase": {
                "unsafeName": "nationality",
                "safeName": "nationality"
              },
              "pascalCase": {
                "unsafeName": "Nationality",
                "safeName": "Nationality"
              },
              "snakeCase": {
                "unsafeName": "nationality",
                "safeName": "nationality"
              },
              "screamingSnakeCase": {
                "unsafeName": "NATIONALITY",
                "safeName": "NATIONALITY"
              }
            },
            "wireValue": "nationality"
          },
          {
            "name": {
              "originalName": "occupation",
              "camelCase": {
                "unsafeName": "occupation",
                "safeName": "occupation"
              },
              "pascalCase": {
                "unsafeName": "Occupation",
                "safeName": "Occupation"
              },
              "snakeCase": {
                "unsafeName": "occupation",
                "safeName": "occupation"
              },
              "screamingSnakeCase": {
                "unsafeName": "OCCUPATION",
                "safeName": "OCCUPATION"
              }
            },
            "wireValue": "occupation"
          },
          {
            "name": {
              "originalName": "organization",
              "camelCase": {
                "unsafeName": "organization",
                "safeName": "organization"
              },
              "pascalCase": {
                "unsafeName": "Organization",
                "safeName": "Organization"
              },
              "snakeCase": {
                "unsafeName": "organization",
                "safeName": "organization"
              },
              "screamingSnakeCase": {
                "unsafeName": "ORGANIZATION",
                "safeName": "ORGANIZATION"
              }
            },
            "wireValue": "organization"
          },
          {
            "name": {
              "originalName": "password",
              "camelCase": {
                "unsafeName": "password",
                "safeName": "password"
              },
              "pascalCase": {
                "unsafeName": "Password",
                "safeName": "Password"
              },
              "snakeCase": {
                "unsafeName": "password",
                "safeName": "password"
              },
              "screamingSnakeCase": {
                "unsafeName": "PASSWORD",
                "safeName": "PASSWORD"
              }
            },
            "wireValue": "password"
          },
          {
            "name": {
              "originalName": "person_age",
              "camelCase": {
                "unsafeName": "personAge",
                "safeName": "personAge"
              },
              "pascalCase": {
                "unsafeName": "PersonAge",
                "safeName": "PersonAge"
              },
              "snakeCase": {
                "unsafeName": "person_age",
                "safeName": "person_age"
              },
              "screamingSnakeCase": {
                "unsafeName": "PERSON_AGE",
                "safeName": "PERSON_AGE"
              }
            },
            "wireValue": "person_age"
          },
          {
            "name": {
              "originalName": "person_name",
              "camelCase": {
                "unsafeName": "personName",
                "safeName": "personName"
              },
              "pascalCase": {
                "unsafeName": "PersonName",
                "safeName": "PersonName"
              },
              "snakeCase": {
                "unsafeName": "person_name",
                "safeName": "person_name"
              },
              "screamingSnakeCase": {
                "unsafeName": "PERSON_NAME",
                "safeName": "PERSON_NAME"
              }
            },
            "wireValue": "person_name"
          },
          {
            "name": {
              "originalName": "phone_number",
              "camelCase": {
                "unsafeName": "phoneNumber",
                "safeName": "phoneNumber"
              },
              "pascalCase": {
                "unsafeName": "PhoneNumber",
                "safeName": "PhoneNumber"
              },
              "snakeCase": {
                "unsafeName": "phone_number",
                "safeName": "phone_number"
              },
              "screamingSnakeCase": {
                "unsafeName": "PHONE_NUMBER",
                "safeName": "PHONE_NUMBER"
              }
            },
            "wireValue": "phone_number"
          },
          {
            "name": {
              "originalName": "political_affiliation",
              "camelCase": {
                "unsafeName": "politicalAffiliation",
                "safeName": "politicalAffiliation"
              },
              "pascalCase": {
                "unsafeName": "PoliticalAffiliation",
                "safeName": "PoliticalAffiliation"
              },
              "snakeCase": {
                "unsafeName": "political_affiliation",
                "safeName": "political_affiliation"
              },
              "screamingSnakeCase": {
                "unsafeName": "POLITICAL_AFFILIATION",
                "safeName": "POLITICAL_AFFILIATION"
              }
            },
            "wireValue": "political_affiliation"
          },
          {
            "name": {
              "originalName": "religion",
              "camelCase": {
                "unsafeName": "religion",
                "safeName": "religion"
              },
              "pascalCase": {
                "unsafeName": "Religion",
                "safeName": "Religion"
              },
              "snakeCase": {
                "unsafeName": "religion",
                "safeName": "religion"
              },
              "screamingSnakeCase": {
                "unsafeName": "RELIGION",
                "safeName": "RELIGION"
              }
            },
            "wireValue": "religion"
          },
          {
            "name": {
              "originalName": "time",
              "camelCase": {
                "unsafeName": "time",
                "safeName": "time"
              },
              "pascalCase": {
                "unsafeName": "Time",
                "safeName": "Time"
              },
              "snakeCase": {
                "unsafeName": "time",
                "safeName": "time"
              },
              "screamingSnakeCase": {
                "unsafeName": "TIME",
                "safeName": "TIME"
              }
            },
            "wireValue": "time"
          },
          {
            "name": {
              "originalName": "url",
              "camelCase": {
                "unsafeName": "url",
                "safeName": "url"
              },
              "pascalCase": {
                "unsafeName": "URL",
                "safeName": "URL"
              },
              "snakeCase": {
                "unsafeName": "url",
                "safeName": "url"
              },
              "screamingSnakeCase": {
                "unsafeName": "URL",
                "safeName": "URL"
              }
            },
            "wireValue": "url"
          },
          {
            "name": {
              "originalName": "us_social_security_number",
              "camelCase": {
                "unsafeName": "usSocialSecurityNumber",
                "safeName": "usSocialSecurityNumber"
              },
              "pascalCase": {
                "unsafeName": "UsSocialSecurityNumber",
                "safeName": "UsSocialSecurityNumber"
              },
              "snakeCase": {
                "unsafeName": "us_social_security_number",
                "safeName": "us_social_security_number"
              },
              "screamingSnakeCase": {
                "unsafeName": "US_SOCIAL_SECURITY_NUMBER",
                "safeName": "US_SOCIAL_SECURITY_NUMBER"
              }
            },
            "wireValue": "us_social_security_number"
          }
        ],
        "type": "enum"
      },
      "type_:SentimentAnalysisResult": {
        "declaration": {
          "name": {
            "originalName": "SentimentAnalysisResult",
            "camelCase": {
              "unsafeName": "sentimentAnalysisResult",
              "safeName": "sentimentAnalysisResult"
            },
            "pascalCase": {
              "unsafeName": "SentimentAnalysisResult",
              "safeName": "SentimentAnalysisResult"
            },
            "snakeCase": {
              "unsafeName": "sentiment_analysis_result",
              "safeName": "sentiment_analysis_result"
            },
            "screamingSnakeCase": {
              "unsafeName": "SENTIMENT_ANALYSIS_RESULT",
              "safeName": "SENTIMENT_ANALYSIS_RESULT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentiment",
                "camelCase": {
                  "unsafeName": "sentiment",
                  "safeName": "sentiment"
                },
                "pascalCase": {
                  "unsafeName": "Sentiment",
                  "safeName": "Sentiment"
                },
                "snakeCase": {
                  "unsafeName": "sentiment",
                  "safeName": "sentiment"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTIMENT",
                  "safeName": "SENTIMENT"
                }
              },
              "wireValue": "sentiment"
            },
            "typeReference": {
              "value": "type_:Sentiment",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker",
                "camelCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "pascalCase": {
                  "unsafeName": "Speaker",
                  "safeName": "Speaker"
                },
                "snakeCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER",
                  "safeName": "SPEAKER"
                }
              },
              "wireValue": "speaker"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:Sentiment": {
        "declaration": {
          "name": {
            "originalName": "Sentiment",
            "camelCase": {
              "unsafeName": "sentiment",
              "safeName": "sentiment"
            },
            "pascalCase": {
              "unsafeName": "Sentiment",
              "safeName": "Sentiment"
            },
            "snakeCase": {
              "unsafeName": "sentiment",
              "safeName": "sentiment"
            },
            "screamingSnakeCase": {
              "unsafeName": "SENTIMENT",
              "safeName": "SENTIMENT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "POSITIVE",
              "camelCase": {
                "unsafeName": "positive",
                "safeName": "positive"
              },
              "pascalCase": {
                "unsafeName": "Positive",
                "safeName": "Positive"
              },
              "snakeCase": {
                "unsafeName": "positive",
                "safeName": "positive"
              },
              "screamingSnakeCase": {
                "unsafeName": "POSITIVE",
                "safeName": "POSITIVE"
              }
            },
            "wireValue": "POSITIVE"
          },
          {
            "name": {
              "originalName": "NEUTRAL",
              "camelCase": {
                "unsafeName": "neutral",
                "safeName": "neutral"
              },
              "pascalCase": {
                "unsafeName": "Neutral",
                "safeName": "Neutral"
              },
              "snakeCase": {
                "unsafeName": "neutral",
                "safeName": "neutral"
              },
              "screamingSnakeCase": {
                "unsafeName": "NEUTRAL",
                "safeName": "NEUTRAL"
              }
            },
            "wireValue": "NEUTRAL"
          },
          {
            "name": {
              "originalName": "NEGATIVE",
              "camelCase": {
                "unsafeName": "negative",
                "safeName": "negative"
              },
              "pascalCase": {
                "unsafeName": "Negative",
                "safeName": "Negative"
              },
              "snakeCase": {
                "unsafeName": "negative",
                "safeName": "negative"
              },
              "screamingSnakeCase": {
                "unsafeName": "NEGATIVE",
                "safeName": "NEGATIVE"
              }
            },
            "wireValue": "NEGATIVE"
          }
        ],
        "type": "enum"
      },
      "type_:TopicDetectionResultLabelsItem": {
        "declaration": {
          "name": {
            "originalName": "TopicDetectionResultLabelsItem",
            "camelCase": {
              "unsafeName": "topicDetectionResultLabelsItem",
              "safeName": "topicDetectionResultLabelsItem"
            },
            "pascalCase": {
              "unsafeName": "TopicDetectionResultLabelsItem",
              "safeName": "TopicDetectionResultLabelsItem"
            },
            "snakeCase": {
              "unsafeName": "topic_detection_result_labels_item",
              "safeName": "topic_detection_result_labels_item"
            },
            "screamingSnakeCase": {
              "unsafeName": "TOPIC_DETECTION_RESULT_LABELS_ITEM",
              "safeName": "TOPIC_DETECTION_RESULT_LABELS_ITEM"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "relevance",
                "camelCase": {
                  "unsafeName": "relevance",
                  "safeName": "relevance"
                },
                "pascalCase": {
                  "unsafeName": "Relevance",
                  "safeName": "Relevance"
                },
                "snakeCase": {
                  "unsafeName": "relevance",
                  "safeName": "relevance"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RELEVANCE",
                  "safeName": "RELEVANCE"
                }
              },
              "wireValue": "relevance"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "label",
                "camelCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "pascalCase": {
                  "unsafeName": "Label",
                  "safeName": "Label"
                },
                "snakeCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABEL",
                  "safeName": "LABEL"
                }
              },
              "wireValue": "label"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TopicDetectionResult": {
        "declaration": {
          "name": {
            "originalName": "TopicDetectionResult",
            "camelCase": {
              "unsafeName": "topicDetectionResult",
              "safeName": "topicDetectionResult"
            },
            "pascalCase": {
              "unsafeName": "TopicDetectionResult",
              "safeName": "TopicDetectionResult"
            },
            "snakeCase": {
              "unsafeName": "topic_detection_result",
              "safeName": "topic_detection_result"
            },
            "screamingSnakeCase": {
              "unsafeName": "TOPIC_DETECTION_RESULT",
              "safeName": "TOPIC_DETECTION_RESULT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "labels",
                "camelCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "pascalCase": {
                  "unsafeName": "Labels",
                  "safeName": "Labels"
                },
                "snakeCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABELS",
                  "safeName": "LABELS"
                }
              },
              "wireValue": "labels"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "type_:TopicDetectionResultLabelsItem",
                  "type": "named"
                },
                "type": "list"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamp",
                "camelCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "pascalCase": {
                  "unsafeName": "Timestamp",
                  "safeName": "Timestamp"
                },
                "snakeCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMP",
                  "safeName": "TIMESTAMP"
                }
              },
              "wireValue": "timestamp"
            },
            "typeReference": {
              "value": {
                "value": "type_:Timestamp",
                "type": "named"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:ContentSafetyLabel": {
        "declaration": {
          "name": {
            "originalName": "ContentSafetyLabel",
            "camelCase": {
              "unsafeName": "contentSafetyLabel",
              "safeName": "contentSafetyLabel"
            },
            "pascalCase": {
              "unsafeName": "ContentSafetyLabel",
              "safeName": "ContentSafetyLabel"
            },
            "snakeCase": {
              "unsafeName": "content_safety_label",
              "safeName": "content_safety_label"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONTENT_SAFETY_LABEL",
              "safeName": "CONTENT_SAFETY_LABEL"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "label",
                "camelCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "pascalCase": {
                  "unsafeName": "Label",
                  "safeName": "Label"
                },
                "snakeCase": {
                  "unsafeName": "label",
                  "safeName": "label"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABEL",
                  "safeName": "LABEL"
                }
              },
              "wireValue": "label"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "severity",
                "camelCase": {
                  "unsafeName": "severity",
                  "safeName": "severity"
                },
                "pascalCase": {
                  "unsafeName": "Severity",
                  "safeName": "Severity"
                },
                "snakeCase": {
                  "unsafeName": "severity",
                  "safeName": "severity"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEVERITY",
                  "safeName": "SEVERITY"
                }
              },
              "wireValue": "severity"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:ContentSafetyLabelResult": {
        "declaration": {
          "name": {
            "originalName": "ContentSafetyLabelResult",
            "camelCase": {
              "unsafeName": "contentSafetyLabelResult",
              "safeName": "contentSafetyLabelResult"
            },
            "pascalCase": {
              "unsafeName": "ContentSafetyLabelResult",
              "safeName": "ContentSafetyLabelResult"
            },
            "snakeCase": {
              "unsafeName": "content_safety_label_result",
              "safeName": "content_safety_label_result"
            },
            "screamingSnakeCase": {
              "unsafeName": "CONTENT_SAFETY_LABEL_RESULT",
              "safeName": "CONTENT_SAFETY_LABEL_RESULT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "labels",
                "camelCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "pascalCase": {
                  "unsafeName": "Labels",
                  "safeName": "Labels"
                },
                "snakeCase": {
                  "unsafeName": "labels",
                  "safeName": "labels"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LABELS",
                  "safeName": "LABELS"
                }
              },
              "wireValue": "labels"
            },
            "typeReference": {
              "value": {
                "value": "type_:ContentSafetyLabel",
                "type": "named"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentences_idx_start",
                "camelCase": {
                  "unsafeName": "sentencesIdxStart",
                  "safeName": "sentencesIdxStart"
                },
                "pascalCase": {
                  "unsafeName": "SentencesIdxStart",
                  "safeName": "SentencesIdxStart"
                },
                "snakeCase": {
                  "unsafeName": "sentences_idx_start",
                  "safeName": "sentences_idx_start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTENCES_IDX_START",
                  "safeName": "SENTENCES_IDX_START"
                }
              },
              "wireValue": "sentences_idx_start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentences_idx_end",
                "camelCase": {
                  "unsafeName": "sentencesIdxEnd",
                  "safeName": "sentencesIdxEnd"
                },
                "pascalCase": {
                  "unsafeName": "SentencesIdxEnd",
                  "safeName": "SentencesIdxEnd"
                },
                "snakeCase": {
                  "unsafeName": "sentences_idx_end",
                  "safeName": "sentences_idx_end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTENCES_IDX_END",
                  "safeName": "SENTENCES_IDX_END"
                }
              },
              "wireValue": "sentences_idx_end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamp",
                "camelCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "pascalCase": {
                  "unsafeName": "Timestamp",
                  "safeName": "Timestamp"
                },
                "snakeCase": {
                  "unsafeName": "timestamp",
                  "safeName": "timestamp"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMP",
                  "safeName": "TIMESTAMP"
                }
              },
              "wireValue": "timestamp"
            },
            "typeReference": {
              "value": "type_:Timestamp",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "summary",
                "camelCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "pascalCase": {
                  "unsafeName": "Summary",
                  "safeName": "Summary"
                },
                "snakeCase": {
                  "unsafeName": "summary",
                  "safeName": "summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SUMMARY",
                  "safeName": "SUMMARY"
                }
              },
              "wireValue": "summary"
            },
            "typeReference": {
              "key": {
                "value": "STRING",
                "type": "primitive"
              },
              "value": {
                "value": "DOUBLE",
                "type": "primitive"
              },
              "type": "map"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "severity_score_summary",
                "camelCase": {
                  "unsafeName": "severityScoreSummary",
                  "safeName": "severityScoreSummary"
                },
                "pascalCase": {
                  "unsafeName": "SeverityScoreSummary",
                  "safeName": "SeverityScoreSummary"
                },
                "snakeCase": {
                  "unsafeName": "severity_score_summary",
                  "safeName": "severity_score_summary"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SEVERITY_SCORE_SUMMARY",
                  "safeName": "SEVERITY_SCORE_SUMMARY"
                }
              },
              "wireValue": "severity_score_summary"
            },
            "typeReference": {
              "key": {
                "value": "STRING",
                "type": "primitive"
              },
              "value": {
                "value": "type_:SeverityScoreSummary",
                "type": "named"
              },
              "type": "map"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SeverityScoreSummary": {
        "declaration": {
          "name": {
            "originalName": "SeverityScoreSummary",
            "camelCase": {
              "unsafeName": "severityScoreSummary",
              "safeName": "severityScoreSummary"
            },
            "pascalCase": {
              "unsafeName": "SeverityScoreSummary",
              "safeName": "SeverityScoreSummary"
            },
            "snakeCase": {
              "unsafeName": "severity_score_summary",
              "safeName": "severity_score_summary"
            },
            "screamingSnakeCase": {
              "unsafeName": "SEVERITY_SCORE_SUMMARY",
              "safeName": "SEVERITY_SCORE_SUMMARY"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "low",
                "camelCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "pascalCase": {
                  "unsafeName": "Low",
                  "safeName": "Low"
                },
                "snakeCase": {
                  "unsafeName": "low",
                  "safeName": "low"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LOW",
                  "safeName": "LOW"
                }
              },
              "wireValue": "low"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "medium",
                "camelCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "pascalCase": {
                  "unsafeName": "Medium",
                  "safeName": "Medium"
                },
                "snakeCase": {
                  "unsafeName": "medium",
                  "safeName": "medium"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MEDIUM",
                  "safeName": "MEDIUM"
                }
              },
              "wireValue": "medium"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "high",
                "camelCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "pascalCase": {
                  "unsafeName": "High",
                  "safeName": "High"
                },
                "snakeCase": {
                  "unsafeName": "high",
                  "safeName": "high"
                },
                "screamingSnakeCase": {
                  "unsafeName": "HIGH",
                  "safeName": "HIGH"
                }
              },
              "wireValue": "high"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:AutoHighlightsResult": {
        "declaration": {
          "name": {
            "originalName": "AutoHighlightsResult",
            "camelCase": {
              "unsafeName": "autoHighlightsResult",
              "safeName": "autoHighlightsResult"
            },
            "pascalCase": {
              "unsafeName": "AutoHighlightsResult",
              "safeName": "AutoHighlightsResult"
            },
            "snakeCase": {
              "unsafeName": "auto_highlights_result",
              "safeName": "auto_highlights_result"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUTO_HIGHLIGHTS_RESULT",
              "safeName": "AUTO_HIGHLIGHTS_RESULT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "results",
                "camelCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "pascalCase": {
                  "unsafeName": "Results",
                  "safeName": "Results"
                },
                "snakeCase": {
                  "unsafeName": "results",
                  "safeName": "results"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESULTS",
                  "safeName": "RESULTS"
                }
              },
              "wireValue": "results"
            },
            "typeReference": {
              "value": {
                "value": "type_:AutoHighlightResult",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:AutoHighlightResult": {
        "declaration": {
          "name": {
            "originalName": "AutoHighlightResult",
            "camelCase": {
              "unsafeName": "autoHighlightResult",
              "safeName": "autoHighlightResult"
            },
            "pascalCase": {
              "unsafeName": "AutoHighlightResult",
              "safeName": "AutoHighlightResult"
            },
            "snakeCase": {
              "unsafeName": "auto_highlight_result",
              "safeName": "auto_highlight_result"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUTO_HIGHLIGHT_RESULT",
              "safeName": "AUTO_HIGHLIGHT_RESULT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "count",
                "camelCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "pascalCase": {
                  "unsafeName": "Count",
                  "safeName": "Count"
                },
                "snakeCase": {
                  "unsafeName": "count",
                  "safeName": "count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COUNT",
                  "safeName": "COUNT"
                }
              },
              "wireValue": "count"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "rank",
                "camelCase": {
                  "unsafeName": "rank",
                  "safeName": "rank"
                },
                "pascalCase": {
                  "unsafeName": "Rank",
                  "safeName": "Rank"
                },
                "snakeCase": {
                  "unsafeName": "rank",
                  "safeName": "rank"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RANK",
                  "safeName": "RANK"
                }
              },
              "wireValue": "rank"
            },
            "typeReference": {
              "value": "FLOAT",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "timestamps",
                "camelCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "pascalCase": {
                  "unsafeName": "Timestamps",
                  "safeName": "Timestamps"
                },
                "snakeCase": {
                  "unsafeName": "timestamps",
                  "safeName": "timestamps"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TIMESTAMPS",
                  "safeName": "TIMESTAMPS"
                }
              },
              "wireValue": "timestamps"
            },
            "typeReference": {
              "value": {
                "value": "type_:Timestamp",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptWord": {
        "declaration": {
          "name": {
            "originalName": "TranscriptWord",
            "camelCase": {
              "unsafeName": "transcriptWord",
              "safeName": "transcriptWord"
            },
            "pascalCase": {
              "unsafeName": "TranscriptWord",
              "safeName": "TranscriptWord"
            },
            "snakeCase": {
              "unsafeName": "transcript_word",
              "safeName": "transcript_word"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_WORD",
              "safeName": "TRANSCRIPT_WORD"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "speaker",
                "camelCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "pascalCase": {
                  "unsafeName": "Speaker",
                  "safeName": "Speaker"
                },
                "snakeCase": {
                  "unsafeName": "speaker",
                  "safeName": "speaker"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SPEAKER",
                  "safeName": "SPEAKER"
                }
              },
              "wireValue": "speaker"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptSentence": {
        "declaration": {
          "name": {
            "originalName": "TranscriptSentence",
            "camelCase": {
              "unsafeName": "transcriptSentence",
              "safeName": "transcriptSentence"
            },
            "pascalCase": {
              "unsafeName": "TranscriptSentence",
              "safeName": "TranscriptSentence"
            },
            "snakeCase": {
              "unsafeName": "transcript_sentence",
              "safeName": "transcript_sentence"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_SENTENCE",
              "safeName": "TRANSCRIPT_SENTENCE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                }
              },
              "wireValue": "words"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptWord",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SentencesResponse": {
        "declaration": {
          "name": {
            "originalName": "SentencesResponse",
            "camelCase": {
              "unsafeName": "sentencesResponse",
              "safeName": "sentencesResponse"
            },
            "pascalCase": {
              "unsafeName": "SentencesResponse",
              "safeName": "SentencesResponse"
            },
            "snakeCase": {
              "unsafeName": "sentences_response",
              "safeName": "sentences_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "SENTENCES_RESPONSE",
              "safeName": "SENTENCES_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_duration",
                "camelCase": {
                  "unsafeName": "audioDuration",
                  "safeName": "audioDuration"
                },
                "pascalCase": {
                  "unsafeName": "AudioDuration",
                  "safeName": "AudioDuration"
                },
                "snakeCase": {
                  "unsafeName": "audio_duration",
                  "safeName": "audio_duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DURATION",
                  "safeName": "AUDIO_DURATION"
                }
              },
              "wireValue": "audio_duration"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "sentences",
                "camelCase": {
                  "unsafeName": "sentences",
                  "safeName": "sentences"
                },
                "pascalCase": {
                  "unsafeName": "Sentences",
                  "safeName": "Sentences"
                },
                "snakeCase": {
                  "unsafeName": "sentences",
                  "safeName": "sentences"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SENTENCES",
                  "safeName": "SENTENCES"
                }
              },
              "wireValue": "sentences"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptSentence",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptParagraph": {
        "declaration": {
          "name": {
            "originalName": "TranscriptParagraph",
            "camelCase": {
              "unsafeName": "transcriptParagraph",
              "safeName": "transcriptParagraph"
            },
            "pascalCase": {
              "unsafeName": "TranscriptParagraph",
              "safeName": "TranscriptParagraph"
            },
            "snakeCase": {
              "unsafeName": "transcript_paragraph",
              "safeName": "transcript_paragraph"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_PARAGRAPH",
              "safeName": "TRANSCRIPT_PARAGRAPH"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                }
              },
              "wireValue": "words"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptWord",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:ParagraphsResponse": {
        "declaration": {
          "name": {
            "originalName": "ParagraphsResponse",
            "camelCase": {
              "unsafeName": "paragraphsResponse",
              "safeName": "paragraphsResponse"
            },
            "pascalCase": {
              "unsafeName": "ParagraphsResponse",
              "safeName": "ParagraphsResponse"
            },
            "snakeCase": {
              "unsafeName": "paragraphs_response",
              "safeName": "paragraphs_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "PARAGRAPHS_RESPONSE",
              "safeName": "PARAGRAPHS_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_duration",
                "camelCase": {
                  "unsafeName": "audioDuration",
                  "safeName": "audioDuration"
                },
                "pascalCase": {
                  "unsafeName": "AudioDuration",
                  "safeName": "AudioDuration"
                },
                "snakeCase": {
                  "unsafeName": "audio_duration",
                  "safeName": "audio_duration"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DURATION",
                  "safeName": "AUDIO_DURATION"
                }
              },
              "wireValue": "audio_duration"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "paragraphs",
                "camelCase": {
                  "unsafeName": "paragraphs",
                  "safeName": "paragraphs"
                },
                "pascalCase": {
                  "unsafeName": "Paragraphs",
                  "safeName": "Paragraphs"
                },
                "snakeCase": {
                  "unsafeName": "paragraphs",
                  "safeName": "paragraphs"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PARAGRAPHS",
                  "safeName": "PARAGRAPHS"
                }
              },
              "wireValue": "paragraphs"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptParagraph",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:PageDetails": {
        "declaration": {
          "name": {
            "originalName": "PageDetails",
            "camelCase": {
              "unsafeName": "pageDetails",
              "safeName": "pageDetails"
            },
            "pascalCase": {
              "unsafeName": "PageDetails",
              "safeName": "PageDetails"
            },
            "snakeCase": {
              "unsafeName": "page_details",
              "safeName": "page_details"
            },
            "screamingSnakeCase": {
              "unsafeName": "PAGE_DETAILS",
              "safeName": "PAGE_DETAILS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "limit",
                "camelCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "pascalCase": {
                  "unsafeName": "Limit",
                  "safeName": "Limit"
                },
                "snakeCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LIMIT",
                  "safeName": "LIMIT"
                }
              },
              "wireValue": "limit"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "result_count",
                "camelCase": {
                  "unsafeName": "resultCount",
                  "safeName": "resultCount"
                },
                "pascalCase": {
                  "unsafeName": "ResultCount",
                  "safeName": "ResultCount"
                },
                "snakeCase": {
                  "unsafeName": "result_count",
                  "safeName": "result_count"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESULT_COUNT",
                  "safeName": "RESULT_COUNT"
                }
              },
              "wireValue": "result_count"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "current_url",
                "camelCase": {
                  "unsafeName": "currentURL",
                  "safeName": "currentURL"
                },
                "pascalCase": {
                  "unsafeName": "CurrentURL",
                  "safeName": "CurrentURL"
                },
                "snakeCase": {
                  "unsafeName": "current_url",
                  "safeName": "current_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CURRENT_URL",
                  "safeName": "CURRENT_URL"
                }
              },
              "wireValue": "current_url"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "prev_url",
                "camelCase": {
                  "unsafeName": "prevURL",
                  "safeName": "prevURL"
                },
                "pascalCase": {
                  "unsafeName": "PrevURL",
                  "safeName": "PrevURL"
                },
                "snakeCase": {
                  "unsafeName": "prev_url",
                  "safeName": "prev_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PREV_URL",
                  "safeName": "PREV_URL"
                }
              },
              "wireValue": "prev_url"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "next_url",
                "camelCase": {
                  "unsafeName": "nextURL",
                  "safeName": "nextURL"
                },
                "pascalCase": {
                  "unsafeName": "NextURL",
                  "safeName": "NextURL"
                },
                "snakeCase": {
                  "unsafeName": "next_url",
                  "safeName": "next_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "NEXT_URL",
                  "safeName": "NEXT_URL"
                }
              },
              "wireValue": "next_url"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptListParameters": {
        "declaration": {
          "name": {
            "originalName": "TranscriptListParameters",
            "camelCase": {
              "unsafeName": "transcriptListParameters",
              "safeName": "transcriptListParameters"
            },
            "pascalCase": {
              "unsafeName": "TranscriptListParameters",
              "safeName": "TranscriptListParameters"
            },
            "snakeCase": {
              "unsafeName": "transcript_list_parameters",
              "safeName": "transcript_list_parameters"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_LIST_PARAMETERS",
              "safeName": "TRANSCRIPT_LIST_PARAMETERS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "limit",
                "camelCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "pascalCase": {
                  "unsafeName": "Limit",
                  "safeName": "Limit"
                },
                "snakeCase": {
                  "unsafeName": "limit",
                  "safeName": "limit"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LIMIT",
                  "safeName": "LIMIT"
                }
              },
              "wireValue": "limit"
            },
            "typeReference": {
              "value": {
                "value": "LONG",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptStatus",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created_on",
                "camelCase": {
                  "unsafeName": "createdOn",
                  "safeName": "createdOn"
                },
                "pascalCase": {
                  "unsafeName": "CreatedOn",
                  "safeName": "CreatedOn"
                },
                "snakeCase": {
                  "unsafeName": "created_on",
                  "safeName": "created_on"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED_ON",
                  "safeName": "CREATED_ON"
                }
              },
              "wireValue": "created_on"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "before_id",
                "camelCase": {
                  "unsafeName": "beforeID",
                  "safeName": "beforeID"
                },
                "pascalCase": {
                  "unsafeName": "BeforeID",
                  "safeName": "BeforeID"
                },
                "snakeCase": {
                  "unsafeName": "before_id",
                  "safeName": "before_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "BEFORE_ID",
                  "safeName": "BEFORE_ID"
                }
              },
              "wireValue": "before_id"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "after_id",
                "camelCase": {
                  "unsafeName": "afterID",
                  "safeName": "afterID"
                },
                "pascalCase": {
                  "unsafeName": "AfterID",
                  "safeName": "AfterID"
                },
                "snakeCase": {
                  "unsafeName": "after_id",
                  "safeName": "after_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AFTER_ID",
                  "safeName": "AFTER_ID"
                }
              },
              "wireValue": "after_id"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "throttled_only",
                "camelCase": {
                  "unsafeName": "throttledOnly",
                  "safeName": "throttledOnly"
                },
                "pascalCase": {
                  "unsafeName": "ThrottledOnly",
                  "safeName": "ThrottledOnly"
                },
                "snakeCase": {
                  "unsafeName": "throttled_only",
                  "safeName": "throttled_only"
                },
                "screamingSnakeCase": {
                  "unsafeName": "THROTTLED_ONLY",
                  "safeName": "THROTTLED_ONLY"
                }
              },
              "wireValue": "throttled_only"
            },
            "typeReference": {
              "value": {
                "value": "BOOLEAN",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptListItem": {
        "declaration": {
          "name": {
            "originalName": "TranscriptListItem",
            "camelCase": {
              "unsafeName": "transcriptListItem",
              "safeName": "transcriptListItem"
            },
            "pascalCase": {
              "unsafeName": "TranscriptListItem",
              "safeName": "TranscriptListItem"
            },
            "snakeCase": {
              "unsafeName": "transcript_list_item",
              "safeName": "transcript_list_item"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_LIST_ITEM",
              "safeName": "TRANSCRIPT_LIST_ITEM"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "id",
                "camelCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "pascalCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                },
                "snakeCase": {
                  "unsafeName": "id",
                  "safeName": "id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ID",
                  "safeName": "ID"
                }
              },
              "wireValue": "id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "resource_url",
                "camelCase": {
                  "unsafeName": "resourceURL",
                  "safeName": "resourceURL"
                },
                "pascalCase": {
                  "unsafeName": "ResourceURL",
                  "safeName": "ResourceURL"
                },
                "snakeCase": {
                  "unsafeName": "resource_url",
                  "safeName": "resource_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESOURCE_URL",
                  "safeName": "RESOURCE_URL"
                }
              },
              "wireValue": "resource_url"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": "type_:TranscriptStatus",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created",
                "camelCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "pascalCase": {
                  "unsafeName": "Created",
                  "safeName": "Created"
                },
                "snakeCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED",
                  "safeName": "CREATED"
                }
              },
              "wireValue": "created"
            },
            "typeReference": {
              "value": "DATE_TIME",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "completed",
                "camelCase": {
                  "unsafeName": "completed",
                  "safeName": "completed"
                },
                "pascalCase": {
                  "unsafeName": "Completed",
                  "safeName": "Completed"
                },
                "snakeCase": {
                  "unsafeName": "completed",
                  "safeName": "completed"
                },
                "screamingSnakeCase": {
                  "unsafeName": "COMPLETED",
                  "safeName": "COMPLETED"
                }
              },
              "wireValue": "completed"
            },
            "typeReference": {
              "value": {
                "value": "DATE_TIME",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_url",
                "camelCase": {
                  "unsafeName": "audioURL",
                  "safeName": "audioURL"
                },
                "pascalCase": {
                  "unsafeName": "AudioURL",
                  "safeName": "AudioURL"
                },
                "snakeCase": {
                  "unsafeName": "audio_url",
                  "safeName": "audio_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_URL",
                  "safeName": "AUDIO_URL"
                }
              },
              "wireValue": "audio_url"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TranscriptList": {
        "declaration": {
          "name": {
            "originalName": "TranscriptList",
            "camelCase": {
              "unsafeName": "transcriptList",
              "safeName": "transcriptList"
            },
            "pascalCase": {
              "unsafeName": "TranscriptList",
              "safeName": "TranscriptList"
            },
            "snakeCase": {
              "unsafeName": "transcript_list",
              "safeName": "transcript_list"
            },
            "screamingSnakeCase": {
              "unsafeName": "TRANSCRIPT_LIST",
              "safeName": "TRANSCRIPT_LIST"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "page_details",
                "camelCase": {
                  "unsafeName": "pageDetails",
                  "safeName": "pageDetails"
                },
                "pascalCase": {
                  "unsafeName": "PageDetails",
                  "safeName": "PageDetails"
                },
                "snakeCase": {
                  "unsafeName": "page_details",
                  "safeName": "page_details"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PAGE_DETAILS",
                  "safeName": "PAGE_DETAILS"
                }
              },
              "wireValue": "page_details"
            },
            "typeReference": {
              "value": "type_:PageDetails",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "transcripts",
                "camelCase": {
                  "unsafeName": "transcripts",
                  "safeName": "transcripts"
                },
                "pascalCase": {
                  "unsafeName": "Transcripts",
                  "safeName": "Transcripts"
                },
                "snakeCase": {
                  "unsafeName": "transcripts",
                  "safeName": "transcripts"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPTS",
                  "safeName": "TRANSCRIPTS"
                }
              },
              "wireValue": "transcripts"
            },
            "typeReference": {
              "value": {
                "value": "type_:TranscriptListItem",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:UploadedFile": {
        "declaration": {
          "name": {
            "originalName": "UploadedFile",
            "camelCase": {
              "unsafeName": "uploadedFile",
              "safeName": "uploadedFile"
            },
            "pascalCase": {
              "unsafeName": "UploadedFile",
              "safeName": "UploadedFile"
            },
            "snakeCase": {
              "unsafeName": "uploaded_file",
              "safeName": "uploaded_file"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPLOADED_FILE",
              "safeName": "UPLOADED_FILE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "upload_url",
                "camelCase": {
                  "unsafeName": "uploadURL",
                  "safeName": "uploadURL"
                },
                "pascalCase": {
                  "unsafeName": "UploadURL",
                  "safeName": "UploadURL"
                },
                "snakeCase": {
                  "unsafeName": "upload_url",
                  "safeName": "upload_url"
                },
                "screamingSnakeCase": {
                  "unsafeName": "UPLOAD_URL",
                  "safeName": "UPLOAD_URL"
                }
              },
              "wireValue": "upload_url"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:RealtimeTemporaryTokenResponse": {
        "declaration": {
          "name": {
            "originalName": "RealtimeTemporaryTokenResponse",
            "camelCase": {
              "unsafeName": "realtimeTemporaryTokenResponse",
              "safeName": "realtimeTemporaryTokenResponse"
            },
            "pascalCase": {
              "unsafeName": "RealtimeTemporaryTokenResponse",
              "safeName": "RealtimeTemporaryTokenResponse"
            },
            "snakeCase": {
              "unsafeName": "realtime_temporary_token_response",
              "safeName": "realtime_temporary_token_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME_TEMPORARY_TOKEN_RESPONSE",
              "safeName": "REALTIME_TEMPORARY_TOKEN_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "token",
                "camelCase": {
                  "unsafeName": "token",
                  "safeName": "token"
                },
                "pascalCase": {
                  "unsafeName": "Token",
                  "safeName": "Token"
                },
                "snakeCase": {
                  "unsafeName": "token",
                  "safeName": "token"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TOKEN",
                  "safeName": "TOKEN"
                }
              },
              "wireValue": "token"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:AudioIntelligenceModelStatus": {
        "declaration": {
          "name": {
            "originalName": "AudioIntelligenceModelStatus",
            "camelCase": {
              "unsafeName": "audioIntelligenceModelStatus",
              "safeName": "audioIntelligenceModelStatus"
            },
            "pascalCase": {
              "unsafeName": "AudioIntelligenceModelStatus",
              "safeName": "AudioIntelligenceModelStatus"
            },
            "snakeCase": {
              "unsafeName": "audio_intelligence_model_status",
              "safeName": "audio_intelligence_model_status"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUDIO_INTELLIGENCE_MODEL_STATUS",
              "safeName": "AUDIO_INTELLIGENCE_MODEL_STATUS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "success",
              "camelCase": {
                "unsafeName": "success",
                "safeName": "success"
              },
              "pascalCase": {
                "unsafeName": "Success",
                "safeName": "Success"
              },
              "snakeCase": {
                "unsafeName": "success",
                "safeName": "success"
              },
              "screamingSnakeCase": {
                "unsafeName": "SUCCESS",
                "safeName": "SUCCESS"
              }
            },
            "wireValue": "success"
          },
          {
            "name": {
              "originalName": "unavailable",
              "camelCase": {
                "unsafeName": "unavailable",
                "safeName": "unavailable"
              },
              "pascalCase": {
                "unsafeName": "Unavailable",
                "safeName": "Unavailable"
              },
              "snakeCase": {
                "unsafeName": "unavailable",
                "safeName": "unavailable"
              },
              "screamingSnakeCase": {
                "unsafeName": "UNAVAILABLE",
                "safeName": "UNAVAILABLE"
              }
            },
            "wireValue": "unavailable"
          }
        ],
        "type": "enum"
      },
      "type_:PurgeLemurRequestDataResponse": {
        "declaration": {
          "name": {
            "originalName": "PurgeLemurRequestDataResponse",
            "camelCase": {
              "unsafeName": "purgeLemurRequestDataResponse",
              "safeName": "purgeLemurRequestDataResponse"
            },
            "pascalCase": {
              "unsafeName": "PurgeLemurRequestDataResponse",
              "safeName": "PurgeLemurRequestDataResponse"
            },
            "snakeCase": {
              "unsafeName": "purge_lemur_request_data_response",
              "safeName": "purge_lemur_request_data_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "PURGE_LEMUR_REQUEST_DATA_RESPONSE",
              "safeName": "PURGE_LEMUR_REQUEST_DATA_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                }
              },
              "wireValue": "request_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "request_id_to_purge",
                "camelCase": {
                  "unsafeName": "requestIDToPurge",
                  "safeName": "requestIDToPurge"
                },
                "pascalCase": {
                  "unsafeName": "RequestIDToPurge",
                  "safeName": "RequestIDToPurge"
                },
                "snakeCase": {
                  "unsafeName": "request_id_to_purge",
                  "safeName": "request_id_to_purge"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID_TO_PURGE",
                  "safeName": "REQUEST_ID_TO_PURGE"
                }
              },
              "wireValue": "request_id_to_purge"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "deleted",
                "camelCase": {
                  "unsafeName": "deleted",
                  "safeName": "deleted"
                },
                "pascalCase": {
                  "unsafeName": "Deleted",
                  "safeName": "Deleted"
                },
                "snakeCase": {
                  "unsafeName": "deleted",
                  "safeName": "deleted"
                },
                "screamingSnakeCase": {
                  "unsafeName": "DELETED",
                  "safeName": "DELETED"
                }
              },
              "wireValue": "deleted"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurBaseResponse": {
        "declaration": {
          "name": {
            "originalName": "LemurBaseResponse",
            "camelCase": {
              "unsafeName": "lemurBaseResponse",
              "safeName": "lemurBaseResponse"
            },
            "pascalCase": {
              "unsafeName": "LemurBaseResponse",
              "safeName": "LemurBaseResponse"
            },
            "snakeCase": {
              "unsafeName": "lemur_base_response",
              "safeName": "lemur_base_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_BASE_RESPONSE",
              "safeName": "LEMUR_BASE_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                }
              },
              "wireValue": "request_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurSummaryResponse": {
        "declaration": {
          "name": {
            "originalName": "LemurSummaryResponse",
            "camelCase": {
              "unsafeName": "lemurSummaryResponse",
              "safeName": "lemurSummaryResponse"
            },
            "pascalCase": {
              "unsafeName": "LemurSummaryResponse",
              "safeName": "LemurSummaryResponse"
            },
            "snakeCase": {
              "unsafeName": "lemur_summary_response",
              "safeName": "lemur_summary_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_SUMMARY_RESPONSE",
              "safeName": "LEMUR_SUMMARY_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                }
              },
              "wireValue": "request_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                }
              },
              "wireValue": "response"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurQuestionAnswerResponse": {
        "declaration": {
          "name": {
            "originalName": "LemurQuestionAnswerResponse",
            "camelCase": {
              "unsafeName": "lemurQuestionAnswerResponse",
              "safeName": "lemurQuestionAnswerResponse"
            },
            "pascalCase": {
              "unsafeName": "LemurQuestionAnswerResponse",
              "safeName": "LemurQuestionAnswerResponse"
            },
            "snakeCase": {
              "unsafeName": "lemur_question_answer_response",
              "safeName": "lemur_question_answer_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_QUESTION_ANSWER_RESPONSE",
              "safeName": "LEMUR_QUESTION_ANSWER_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                }
              },
              "wireValue": "request_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                }
              },
              "wireValue": "response"
            },
            "typeReference": {
              "value": {
                "value": "type_:LemurQuestionAnswer",
                "type": "named"
              },
              "type": "list"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurQuestionAnswer": {
        "declaration": {
          "name": {
            "originalName": "LemurQuestionAnswer",
            "camelCase": {
              "unsafeName": "lemurQuestionAnswer",
              "safeName": "lemurQuestionAnswer"
            },
            "pascalCase": {
              "unsafeName": "LemurQuestionAnswer",
              "safeName": "LemurQuestionAnswer"
            },
            "snakeCase": {
              "unsafeName": "lemur_question_answer",
              "safeName": "lemur_question_answer"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_QUESTION_ANSWER",
              "safeName": "LEMUR_QUESTION_ANSWER"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "question",
                "camelCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "pascalCase": {
                  "unsafeName": "Question",
                  "safeName": "Question"
                },
                "snakeCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUESTION",
                  "safeName": "QUESTION"
                }
              },
              "wireValue": "question"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "answer",
                "camelCase": {
                  "unsafeName": "answer",
                  "safeName": "answer"
                },
                "pascalCase": {
                  "unsafeName": "Answer",
                  "safeName": "Answer"
                },
                "snakeCase": {
                  "unsafeName": "answer",
                  "safeName": "answer"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANSWER",
                  "safeName": "ANSWER"
                }
              },
              "wireValue": "answer"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurActionItemsResponse": {
        "declaration": {
          "name": {
            "originalName": "LemurActionItemsResponse",
            "camelCase": {
              "unsafeName": "lemurActionItemsResponse",
              "safeName": "lemurActionItemsResponse"
            },
            "pascalCase": {
              "unsafeName": "LemurActionItemsResponse",
              "safeName": "LemurActionItemsResponse"
            },
            "snakeCase": {
              "unsafeName": "lemur_action_items_response",
              "safeName": "lemur_action_items_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_ACTION_ITEMS_RESPONSE",
              "safeName": "LEMUR_ACTION_ITEMS_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                }
              },
              "wireValue": "request_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                }
              },
              "wireValue": "response"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurTaskResponse": {
        "declaration": {
          "name": {
            "originalName": "LemurTaskResponse",
            "camelCase": {
              "unsafeName": "lemurTaskResponse",
              "safeName": "lemurTaskResponse"
            },
            "pascalCase": {
              "unsafeName": "LemurTaskResponse",
              "safeName": "LemurTaskResponse"
            },
            "snakeCase": {
              "unsafeName": "lemur_task_response",
              "safeName": "lemur_task_response"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_TASK_RESPONSE",
              "safeName": "LEMUR_TASK_RESPONSE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "request_id",
                "camelCase": {
                  "unsafeName": "requestID",
                  "safeName": "requestID"
                },
                "pascalCase": {
                  "unsafeName": "RequestID",
                  "safeName": "RequestID"
                },
                "snakeCase": {
                  "unsafeName": "request_id",
                  "safeName": "request_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REQUEST_ID",
                  "safeName": "REQUEST_ID"
                }
              },
              "wireValue": "request_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "response",
                "camelCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "pascalCase": {
                  "unsafeName": "Response",
                  "safeName": "Response"
                },
                "snakeCase": {
                  "unsafeName": "response",
                  "safeName": "response"
                },
                "screamingSnakeCase": {
                  "unsafeName": "RESPONSE",
                  "safeName": "RESPONSE"
                }
              },
              "wireValue": "response"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurBaseParametersContext": {
        "declaration": {
          "name": {
            "originalName": "LemurBaseParametersContext",
            "camelCase": {
              "unsafeName": "lemurBaseParametersContext",
              "safeName": "lemurBaseParametersContext"
            },
            "pascalCase": {
              "unsafeName": "LemurBaseParametersContext",
              "safeName": "LemurBaseParametersContext"
            },
            "snakeCase": {
              "unsafeName": "lemur_base_parameters_context",
              "safeName": "lemur_base_parameters_context"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_BASE_PARAMETERS_CONTEXT",
              "safeName": "LEMUR_BASE_PARAMETERS_CONTEXT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "STRING",
            "type": "primitive"
          },
          {
            "key": {
              "value": "STRING",
              "type": "primitive"
            },
            "value": {
              "type": "unknown"
            },
            "type": "map"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:LemurBaseParameters": {
        "declaration": {
          "name": {
            "originalName": "LemurBaseParameters",
            "camelCase": {
              "unsafeName": "lemurBaseParameters",
              "safeName": "lemurBaseParameters"
            },
            "pascalCase": {
              "unsafeName": "LemurBaseParameters",
              "safeName": "LemurBaseParameters"
            },
            "snakeCase": {
              "unsafeName": "lemur_base_parameters",
              "safeName": "lemur_base_parameters"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_BASE_PARAMETERS",
              "safeName": "LEMUR_BASE_PARAMETERS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "transcript_ids",
                "camelCase": {
                  "unsafeName": "transcriptIDs",
                  "safeName": "transcriptIDs"
                },
                "pascalCase": {
                  "unsafeName": "TranscriptIDs",
                  "safeName": "TranscriptIDs"
                },
                "snakeCase": {
                  "unsafeName": "transcript_ids",
                  "safeName": "transcript_ids"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT_IDS",
                  "safeName": "TRANSCRIPT_IDS"
                }
              },
              "wireValue": "transcript_ids"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "context",
                "camelCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "pascalCase": {
                  "unsafeName": "Context",
                  "safeName": "Context"
                },
                "snakeCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEXT",
                  "safeName": "CONTEXT"
                }
              },
              "wireValue": "context"
            },
            "typeReference": {
              "value": {
                "value": "type_:LemurBaseParametersContext",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "final_model",
                "camelCase": {
                  "unsafeName": "finalModel",
                  "safeName": "finalModel"
                },
                "pascalCase": {
                  "unsafeName": "FinalModel",
                  "safeName": "FinalModel"
                },
                "snakeCase": {
                  "unsafeName": "final_model",
                  "safeName": "final_model"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FINAL_MODEL",
                  "safeName": "FINAL_MODEL"
                }
              },
              "wireValue": "final_model"
            },
            "typeReference": {
              "value": {
                "value": "type_:LemurModel",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "max_output_size",
                "camelCase": {
                  "unsafeName": "maxOutputSize",
                  "safeName": "maxOutputSize"
                },
                "pascalCase": {
                  "unsafeName": "MaxOutputSize",
                  "safeName": "MaxOutputSize"
                },
                "snakeCase": {
                  "unsafeName": "max_output_size",
                  "safeName": "max_output_size"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MAX_OUTPUT_SIZE",
                  "safeName": "MAX_OUTPUT_SIZE"
                }
              },
              "wireValue": "max_output_size"
            },
            "typeReference": {
              "value": {
                "value": "INTEGER",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "temperature",
                "camelCase": {
                  "unsafeName": "temperature",
                  "safeName": "temperature"
                },
                "pascalCase": {
                  "unsafeName": "Temperature",
                  "safeName": "Temperature"
                },
                "snakeCase": {
                  "unsafeName": "temperature",
                  "safeName": "temperature"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEMPERATURE",
                  "safeName": "TEMPERATURE"
                }
              },
              "wireValue": "temperature"
            },
            "typeReference": {
              "value": {
                "value": "FLOAT",
                "type": "primitive"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurQuestionContext": {
        "declaration": {
          "name": {
            "originalName": "LemurQuestionContext",
            "camelCase": {
              "unsafeName": "lemurQuestionContext",
              "safeName": "lemurQuestionContext"
            },
            "pascalCase": {
              "unsafeName": "LemurQuestionContext",
              "safeName": "LemurQuestionContext"
            },
            "snakeCase": {
              "unsafeName": "lemur_question_context",
              "safeName": "lemur_question_context"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_QUESTION_CONTEXT",
              "safeName": "LEMUR_QUESTION_CONTEXT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "STRING",
            "type": "primitive"
          },
          {
            "key": {
              "value": "STRING",
              "type": "primitive"
            },
            "value": {
              "type": "unknown"
            },
            "type": "map"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:LemurQuestion": {
        "declaration": {
          "name": {
            "originalName": "LemurQuestion",
            "camelCase": {
              "unsafeName": "lemurQuestion",
              "safeName": "lemurQuestion"
            },
            "pascalCase": {
              "unsafeName": "LemurQuestion",
              "safeName": "LemurQuestion"
            },
            "snakeCase": {
              "unsafeName": "lemur_question",
              "safeName": "lemur_question"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_QUESTION",
              "safeName": "LEMUR_QUESTION"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "question",
                "camelCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "pascalCase": {
                  "unsafeName": "Question",
                  "safeName": "Question"
                },
                "snakeCase": {
                  "unsafeName": "question",
                  "safeName": "question"
                },
                "screamingSnakeCase": {
                  "unsafeName": "QUESTION",
                  "safeName": "QUESTION"
                }
              },
              "wireValue": "question"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "context",
                "camelCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "pascalCase": {
                  "unsafeName": "Context",
                  "safeName": "Context"
                },
                "snakeCase": {
                  "unsafeName": "context",
                  "safeName": "context"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONTEXT",
                  "safeName": "CONTEXT"
                }
              },
              "wireValue": "context"
            },
            "typeReference": {
              "value": {
                "value": "type_:LemurQuestionContext",
                "type": "named"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "answer_format",
                "camelCase": {
                  "unsafeName": "answerFormat",
                  "safeName": "answerFormat"
                },
                "pascalCase": {
                  "unsafeName": "AnswerFormat",
                  "safeName": "AnswerFormat"
                },
                "snakeCase": {
                  "unsafeName": "answer_format",
                  "safeName": "answer_format"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANSWER_FORMAT",
                  "safeName": "ANSWER_FORMAT"
                }
              },
              "wireValue": "answer_format"
            },
            "typeReference": {
              "value": {
                "value": "STRING",
                "type": "primitive"
              },
              "type": "optional"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "answer_options",
                "camelCase": {
                  "unsafeName": "answerOptions",
                  "safeName": "answerOptions"
                },
                "pascalCase": {
                  "unsafeName": "AnswerOptions",
                  "safeName": "AnswerOptions"
                },
                "snakeCase": {
                  "unsafeName": "answer_options",
                  "safeName": "answer_options"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ANSWER_OPTIONS",
                  "safeName": "ANSWER_OPTIONS"
                }
              },
              "wireValue": "answer_options"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "list"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:LemurActionItemsParameters": {
        "declaration": {
          "name": {
            "originalName": "LemurActionItemsParameters",
            "camelCase": {
              "unsafeName": "lemurActionItemsParameters",
              "safeName": "lemurActionItemsParameters"
            },
            "pascalCase": {
              "unsafeName": "LemurActionItemsParameters",
              "safeName": "LemurActionItemsParameters"
            },
            "snakeCase": {
              "unsafeName": "lemur_action_items_parameters",
              "safeName": "lemur_action_items_parameters"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_ACTION_ITEMS_PARAMETERS",
              "safeName": "LEMUR_ACTION_ITEMS_PARAMETERS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "typeReference": {
          "value": "type_:LemurBaseParameters",
          "type": "named"
        },
        "type": "alias"
      },
      "type_:LemurModel": {
        "declaration": {
          "name": {
            "originalName": "LemurModel",
            "camelCase": {
              "unsafeName": "lemurModel",
              "safeName": "lemurModel"
            },
            "pascalCase": {
              "unsafeName": "LemurModel",
              "safeName": "LemurModel"
            },
            "snakeCase": {
              "unsafeName": "lemur_model",
              "safeName": "lemur_model"
            },
            "screamingSnakeCase": {
              "unsafeName": "LEMUR_MODEL",
              "safeName": "LEMUR_MODEL"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "default",
              "camelCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "pascalCase": {
                "unsafeName": "Default",
                "safeName": "Default"
              },
              "snakeCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "screamingSnakeCase": {
                "unsafeName": "DEFAULT",
                "safeName": "DEFAULT"
              }
            },
            "wireValue": "default"
          },
          {
            "name": {
              "originalName": "basic",
              "camelCase": {
                "unsafeName": "basic",
                "safeName": "basic"
              },
              "pascalCase": {
                "unsafeName": "Basic",
                "safeName": "Basic"
              },
              "snakeCase": {
                "unsafeName": "basic",
                "safeName": "basic"
              },
              "screamingSnakeCase": {
                "unsafeName": "BASIC",
                "safeName": "BASIC"
              }
            },
            "wireValue": "basic"
          }
        ],
        "type": "enum"
      },
      "type_:Error": {
        "declaration": {
          "name": {
            "originalName": "Error",
            "camelCase": {
              "unsafeName": "error",
              "safeName": "error"
            },
            "pascalCase": {
              "unsafeName": "Error",
              "safeName": "Error"
            },
            "snakeCase": {
              "unsafeName": "error",
              "safeName": "error"
            },
            "screamingSnakeCase": {
              "unsafeName": "ERROR",
              "safeName": "ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                }
              },
              "wireValue": "error"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "status",
                "camelCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "pascalCase": {
                  "unsafeName": "Status",
                  "safeName": "Status"
                },
                "snakeCase": {
                  "unsafeName": "status",
                  "safeName": "status"
                },
                "screamingSnakeCase": {
                  "unsafeName": "STATUS",
                  "safeName": "STATUS"
                }
              },
              "wireValue": "status"
            },
            "typeReference": {
              "value": {
                "value": {
                  "value": "error",
                  "type": "string"
                },
                "type": "literal"
              },
              "type": "optional"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:RealtimeBaseMessage": {
        "declaration": {
          "name": {
            "originalName": "RealtimeBaseMessage",
            "camelCase": {
              "unsafeName": "realtimeBaseMessage",
              "safeName": "realtimeBaseMessage"
            },
            "pascalCase": {
              "unsafeName": "RealtimeBaseMessage",
              "safeName": "RealtimeBaseMessage"
            },
            "snakeCase": {
              "unsafeName": "realtime_base_message",
              "safeName": "realtime_base_message"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME_BASE_MESSAGE",
              "safeName": "REALTIME_BASE_MESSAGE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                }
              },
              "wireValue": "message_type"
            },
            "typeReference": {
              "value": "type_:MessageType",
              "type": "named"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:RealtimeMessage": {
        "declaration": {
          "name": {
            "originalName": "RealtimeMessage",
            "camelCase": {
              "unsafeName": "realtimeMessage",
              "safeName": "realtimeMessage"
            },
            "pascalCase": {
              "unsafeName": "RealtimeMessage",
              "safeName": "RealtimeMessage"
            },
            "snakeCase": {
              "unsafeName": "realtime_message",
              "safeName": "realtime_message"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME_MESSAGE",
              "safeName": "REALTIME_MESSAGE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:SessionBegins",
            "type": "named"
          },
          {
            "value": "type_:PartialTranscript",
            "type": "named"
          },
          {
            "value": "type_:FinalTranscript",
            "type": "named"
          },
          {
            "value": "type_:SessionTerminated",
            "type": "named"
          },
          {
            "value": "type_:RealtimeError",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:RealtimeError": {
        "declaration": {
          "name": {
            "originalName": "RealtimeError",
            "camelCase": {
              "unsafeName": "realtimeError",
              "safeName": "realtimeError"
            },
            "pascalCase": {
              "unsafeName": "RealtimeError",
              "safeName": "RealtimeError"
            },
            "snakeCase": {
              "unsafeName": "realtime_error",
              "safeName": "realtime_error"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME_ERROR",
              "safeName": "REALTIME_ERROR"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "error",
                "camelCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "pascalCase": {
                  "unsafeName": "Error",
                  "safeName": "Error"
                },
                "snakeCase": {
                  "unsafeName": "error",
                  "safeName": "error"
                },
                "screamingSnakeCase": {
                  "unsafeName": "ERROR",
                  "safeName": "ERROR"
                }
              },
              "wireValue": "error"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:MessageType": {
        "declaration": {
          "name": {
            "originalName": "MessageType",
            "camelCase": {
              "unsafeName": "messageType",
              "safeName": "messageType"
            },
            "pascalCase": {
              "unsafeName": "MessageType",
              "safeName": "MessageType"
            },
            "snakeCase": {
              "unsafeName": "message_type",
              "safeName": "message_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "MESSAGE_TYPE",
              "safeName": "MESSAGE_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "SessionBegins",
              "camelCase": {
                "unsafeName": "sessionBegins",
                "safeName": "sessionBegins"
              },
              "pascalCase": {
                "unsafeName": "SessionBegins",
                "safeName": "SessionBegins"
              },
              "snakeCase": {
                "unsafeName": "session_begins",
                "safeName": "session_begins"
              },
              "screamingSnakeCase": {
                "unsafeName": "SESSION_BEGINS",
                "safeName": "SESSION_BEGINS"
              }
            },
            "wireValue": "SessionBegins"
          },
          {
            "name": {
              "originalName": "PartialTranscript",
              "camelCase": {
                "unsafeName": "partialTranscript",
                "safeName": "partialTranscript"
              },
              "pascalCase": {
                "unsafeName": "PartialTranscript",
                "safeName": "PartialTranscript"
              },
              "snakeCase": {
                "unsafeName": "partial_transcript",
                "safeName": "partial_transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "PARTIAL_TRANSCRIPT",
                "safeName": "PARTIAL_TRANSCRIPT"
              }
            },
            "wireValue": "PartialTranscript"
          },
          {
            "name": {
              "originalName": "FinalTranscript",
              "camelCase": {
                "unsafeName": "finalTranscript",
                "safeName": "finalTranscript"
              },
              "pascalCase": {
                "unsafeName": "FinalTranscript",
                "safeName": "FinalTranscript"
              },
              "snakeCase": {
                "unsafeName": "final_transcript",
                "safeName": "final_transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "FINAL_TRANSCRIPT",
                "safeName": "FINAL_TRANSCRIPT"
              }
            },
            "wireValue": "FinalTranscript"
          },
          {
            "name": {
              "originalName": "SessionTerminated",
              "camelCase": {
                "unsafeName": "sessionTerminated",
                "safeName": "sessionTerminated"
              },
              "pascalCase": {
                "unsafeName": "SessionTerminated",
                "safeName": "SessionTerminated"
              },
              "snakeCase": {
                "unsafeName": "session_terminated",
                "safeName": "session_terminated"
              },
              "screamingSnakeCase": {
                "unsafeName": "SESSION_TERMINATED",
                "safeName": "SESSION_TERMINATED"
              }
            },
            "wireValue": "SessionTerminated"
          }
        ],
        "type": "enum"
      },
      "type_:RealtimeTranscriptType": {
        "declaration": {
          "name": {
            "originalName": "RealtimeTranscriptType",
            "camelCase": {
              "unsafeName": "realtimeTranscriptType",
              "safeName": "realtimeTranscriptType"
            },
            "pascalCase": {
              "unsafeName": "RealtimeTranscriptType",
              "safeName": "RealtimeTranscriptType"
            },
            "snakeCase": {
              "unsafeName": "realtime_transcript_type",
              "safeName": "realtime_transcript_type"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME_TRANSCRIPT_TYPE",
              "safeName": "REALTIME_TRANSCRIPT_TYPE"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "values": [
          {
            "name": {
              "originalName": "PartialTranscript",
              "camelCase": {
                "unsafeName": "partialTranscript",
                "safeName": "partialTranscript"
              },
              "pascalCase": {
                "unsafeName": "PartialTranscript",
                "safeName": "PartialTranscript"
              },
              "snakeCase": {
                "unsafeName": "partial_transcript",
                "safeName": "partial_transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "PARTIAL_TRANSCRIPT",
                "safeName": "PARTIAL_TRANSCRIPT"
              }
            },
            "wireValue": "PartialTranscript"
          },
          {
            "name": {
              "originalName": "FinalTranscript",
              "camelCase": {
                "unsafeName": "finalTranscript",
                "safeName": "finalTranscript"
              },
              "pascalCase": {
                "unsafeName": "FinalTranscript",
                "safeName": "FinalTranscript"
              },
              "snakeCase": {
                "unsafeName": "final_transcript",
                "safeName": "final_transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "FINAL_TRANSCRIPT",
                "safeName": "FINAL_TRANSCRIPT"
              }
            },
            "wireValue": "FinalTranscript"
          }
        ],
        "type": "enum"
      },
      "type_:RealtimeTranscript": {
        "declaration": {
          "name": {
            "originalName": "RealtimeTranscript",
            "camelCase": {
              "unsafeName": "realtimeTranscript",
              "safeName": "realtimeTranscript"
            },
            "pascalCase": {
              "unsafeName": "RealtimeTranscript",
              "safeName": "RealtimeTranscript"
            },
            "snakeCase": {
              "unsafeName": "realtime_transcript",
              "safeName": "realtime_transcript"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME_TRANSCRIPT",
              "safeName": "REALTIME_TRANSCRIPT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "types": [
          {
            "value": "type_:PartialTranscript",
            "type": "named"
          },
          {
            "value": "type_:FinalTranscript",
            "type": "named"
          }
        ],
        "type": "undiscriminatedUnion"
      },
      "type_:SessionBegins": {
        "declaration": {
          "name": {
            "originalName": "SessionBegins",
            "camelCase": {
              "unsafeName": "sessionBegins",
              "safeName": "sessionBegins"
            },
            "pascalCase": {
              "unsafeName": "SessionBegins",
              "safeName": "SessionBegins"
            },
            "snakeCase": {
              "unsafeName": "session_begins",
              "safeName": "session_begins"
            },
            "screamingSnakeCase": {
              "unsafeName": "SESSION_BEGINS",
              "safeName": "SESSION_BEGINS"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                }
              },
              "wireValue": "message_type"
            },
            "typeReference": {
              "value": {
                "value": "SessionBegins",
                "type": "string"
              },
              "type": "literal"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "session_id",
                "camelCase": {
                  "unsafeName": "sessionID",
                  "safeName": "sessionID"
                },
                "pascalCase": {
                  "unsafeName": "SessionID",
                  "safeName": "SessionID"
                },
                "snakeCase": {
                  "unsafeName": "session_id",
                  "safeName": "session_id"
                },
                "screamingSnakeCase": {
                  "unsafeName": "SESSION_ID",
                  "safeName": "SESSION_ID"
                }
              },
              "wireValue": "session_id"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "expires_at",
                "camelCase": {
                  "unsafeName": "expiresAt",
                  "safeName": "expiresAt"
                },
                "pascalCase": {
                  "unsafeName": "ExpiresAt",
                  "safeName": "ExpiresAt"
                },
                "snakeCase": {
                  "unsafeName": "expires_at",
                  "safeName": "expires_at"
                },
                "screamingSnakeCase": {
                  "unsafeName": "EXPIRES_AT",
                  "safeName": "EXPIRES_AT"
                }
              },
              "wireValue": "expires_at"
            },
            "typeReference": {
              "value": "DATE_TIME",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:SessionTerminated": {
        "declaration": {
          "name": {
            "originalName": "SessionTerminated",
            "camelCase": {
              "unsafeName": "sessionTerminated",
              "safeName": "sessionTerminated"
            },
            "pascalCase": {
              "unsafeName": "SessionTerminated",
              "safeName": "SessionTerminated"
            },
            "snakeCase": {
              "unsafeName": "session_terminated",
              "safeName": "session_terminated"
            },
            "screamingSnakeCase": {
              "unsafeName": "SESSION_TERMINATED",
              "safeName": "SESSION_TERMINATED"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                }
              },
              "wireValue": "message_type"
            },
            "typeReference": {
              "value": {
                "value": "SessionTerminated",
                "type": "string"
              },
              "type": "literal"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:RealtimeBaseTranscript": {
        "declaration": {
          "name": {
            "originalName": "RealtimeBaseTranscript",
            "camelCase": {
              "unsafeName": "realtimeBaseTranscript",
              "safeName": "realtimeBaseTranscript"
            },
            "pascalCase": {
              "unsafeName": "RealtimeBaseTranscript",
              "safeName": "RealtimeBaseTranscript"
            },
            "snakeCase": {
              "unsafeName": "realtime_base_transcript",
              "safeName": "realtime_base_transcript"
            },
            "screamingSnakeCase": {
              "unsafeName": "REALTIME_BASE_TRANSCRIPT",
              "safeName": "REALTIME_BASE_TRANSCRIPT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_start",
                "camelCase": {
                  "unsafeName": "audioStart",
                  "safeName": "audioStart"
                },
                "pascalCase": {
                  "unsafeName": "AudioStart",
                  "safeName": "AudioStart"
                },
                "snakeCase": {
                  "unsafeName": "audio_start",
                  "safeName": "audio_start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START",
                  "safeName": "AUDIO_START"
                }
              },
              "wireValue": "audio_start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end",
                "camelCase": {
                  "unsafeName": "audioEnd",
                  "safeName": "audioEnd"
                },
                "pascalCase": {
                  "unsafeName": "AudioEnd",
                  "safeName": "AudioEnd"
                },
                "snakeCase": {
                  "unsafeName": "audio_end",
                  "safeName": "audio_end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END",
                  "safeName": "AUDIO_END"
                }
              },
              "wireValue": "audio_end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                }
              },
              "wireValue": "words"
            },
            "typeReference": {
              "value": {
                "value": "type_:Word",
                "type": "named"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created",
                "camelCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "pascalCase": {
                  "unsafeName": "Created",
                  "safeName": "Created"
                },
                "snakeCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED",
                  "safeName": "CREATED"
                }
              },
              "wireValue": "created"
            },
            "typeReference": {
              "value": "DATE_TIME",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:PartialTranscript": {
        "declaration": {
          "name": {
            "originalName": "PartialTranscript",
            "camelCase": {
              "unsafeName": "partialTranscript",
              "safeName": "partialTranscript"
            },
            "pascalCase": {
              "unsafeName": "PartialTranscript",
              "safeName": "PartialTranscript"
            },
            "snakeCase": {
              "unsafeName": "partial_transcript",
              "safeName": "partial_transcript"
            },
            "screamingSnakeCase": {
              "unsafeName": "PARTIAL_TRANSCRIPT",
              "safeName": "PARTIAL_TRANSCRIPT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_start",
                "camelCase": {
                  "unsafeName": "audioStart",
                  "safeName": "audioStart"
                },
                "pascalCase": {
                  "unsafeName": "AudioStart",
                  "safeName": "AudioStart"
                },
                "snakeCase": {
                  "unsafeName": "audio_start",
                  "safeName": "audio_start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START",
                  "safeName": "AUDIO_START"
                }
              },
              "wireValue": "audio_start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end",
                "camelCase": {
                  "unsafeName": "audioEnd",
                  "safeName": "audioEnd"
                },
                "pascalCase": {
                  "unsafeName": "AudioEnd",
                  "safeName": "AudioEnd"
                },
                "snakeCase": {
                  "unsafeName": "audio_end",
                  "safeName": "audio_end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END",
                  "safeName": "AUDIO_END"
                }
              },
              "wireValue": "audio_end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                }
              },
              "wireValue": "words"
            },
            "typeReference": {
              "value": {
                "value": "type_:Word",
                "type": "named"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created",
                "camelCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "pascalCase": {
                  "unsafeName": "Created",
                  "safeName": "Created"
                },
                "snakeCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED",
                  "safeName": "CREATED"
                }
              },
              "wireValue": "created"
            },
            "typeReference": {
              "value": "DATE_TIME",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                }
              },
              "wireValue": "message_type"
            },
            "typeReference": {
              "value": {
                "value": "PartialTranscript",
                "type": "string"
              },
              "type": "literal"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:FinalTranscript": {
        "declaration": {
          "name": {
            "originalName": "FinalTranscript",
            "camelCase": {
              "unsafeName": "finalTranscript",
              "safeName": "finalTranscript"
            },
            "pascalCase": {
              "unsafeName": "FinalTranscript",
              "safeName": "FinalTranscript"
            },
            "snakeCase": {
              "unsafeName": "final_transcript",
              "safeName": "final_transcript"
            },
            "screamingSnakeCase": {
              "unsafeName": "FINAL_TRANSCRIPT",
              "safeName": "FINAL_TRANSCRIPT"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_start",
                "camelCase": {
                  "unsafeName": "audioStart",
                  "safeName": "audioStart"
                },
                "pascalCase": {
                  "unsafeName": "AudioStart",
                  "safeName": "AudioStart"
                },
                "snakeCase": {
                  "unsafeName": "audio_start",
                  "safeName": "audio_start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_START",
                  "safeName": "AUDIO_START"
                }
              },
              "wireValue": "audio_start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "audio_end",
                "camelCase": {
                  "unsafeName": "audioEnd",
                  "safeName": "audioEnd"
                },
                "pascalCase": {
                  "unsafeName": "AudioEnd",
                  "safeName": "AudioEnd"
                },
                "snakeCase": {
                  "unsafeName": "audio_end",
                  "safeName": "audio_end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_END",
                  "safeName": "AUDIO_END"
                }
              },
              "wireValue": "audio_end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "words",
                "camelCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "pascalCase": {
                  "unsafeName": "Words",
                  "safeName": "Words"
                },
                "snakeCase": {
                  "unsafeName": "words",
                  "safeName": "words"
                },
                "screamingSnakeCase": {
                  "unsafeName": "WORDS",
                  "safeName": "WORDS"
                }
              },
              "wireValue": "words"
            },
            "typeReference": {
              "value": {
                "value": "type_:Word",
                "type": "named"
              },
              "type": "list"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "created",
                "camelCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "pascalCase": {
                  "unsafeName": "Created",
                  "safeName": "Created"
                },
                "snakeCase": {
                  "unsafeName": "created",
                  "safeName": "created"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CREATED",
                  "safeName": "CREATED"
                }
              },
              "wireValue": "created"
            },
            "typeReference": {
              "value": "DATE_TIME",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                }
              },
              "wireValue": "message_type"
            },
            "typeReference": {
              "value": {
                "value": "FinalTranscript",
                "type": "string"
              },
              "type": "literal"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "punctuated",
                "camelCase": {
                  "unsafeName": "punctuated",
                  "safeName": "punctuated"
                },
                "pascalCase": {
                  "unsafeName": "Punctuated",
                  "safeName": "Punctuated"
                },
                "snakeCase": {
                  "unsafeName": "punctuated",
                  "safeName": "punctuated"
                },
                "screamingSnakeCase": {
                  "unsafeName": "PUNCTUATED",
                  "safeName": "PUNCTUATED"
                }
              },
              "wireValue": "punctuated"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text_formatted",
                "camelCase": {
                  "unsafeName": "textFormatted",
                  "safeName": "textFormatted"
                },
                "pascalCase": {
                  "unsafeName": "TextFormatted",
                  "safeName": "TextFormatted"
                },
                "snakeCase": {
                  "unsafeName": "text_formatted",
                  "safeName": "text_formatted"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT_FORMATTED",
                  "safeName": "TEXT_FORMATTED"
                }
              },
              "wireValue": "text_formatted"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:Word": {
        "declaration": {
          "name": {
            "originalName": "Word",
            "camelCase": {
              "unsafeName": "word",
              "safeName": "word"
            },
            "pascalCase": {
              "unsafeName": "Word",
              "safeName": "Word"
            },
            "snakeCase": {
              "unsafeName": "word",
              "safeName": "word"
            },
            "screamingSnakeCase": {
              "unsafeName": "WORD",
              "safeName": "WORD"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "start",
                "camelCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "pascalCase": {
                  "unsafeName": "Start",
                  "safeName": "Start"
                },
                "snakeCase": {
                  "unsafeName": "start",
                  "safeName": "start"
                },
                "screamingSnakeCase": {
                  "unsafeName": "START",
                  "safeName": "START"
                }
              },
              "wireValue": "start"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "end",
                "camelCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "pascalCase": {
                  "unsafeName": "End",
                  "safeName": "End"
                },
                "snakeCase": {
                  "unsafeName": "end",
                  "safeName": "end"
                },
                "screamingSnakeCase": {
                  "unsafeName": "END",
                  "safeName": "END"
                }
              },
              "wireValue": "end"
            },
            "typeReference": {
              "value": "INTEGER",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "confidence",
                "camelCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "pascalCase": {
                  "unsafeName": "Confidence",
                  "safeName": "Confidence"
                },
                "snakeCase": {
                  "unsafeName": "confidence",
                  "safeName": "confidence"
                },
                "screamingSnakeCase": {
                  "unsafeName": "CONFIDENCE",
                  "safeName": "CONFIDENCE"
                }
              },
              "wireValue": "confidence"
            },
            "typeReference": {
              "value": "DOUBLE",
              "type": "primitive"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "text",
                "camelCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "pascalCase": {
                  "unsafeName": "Text",
                  "safeName": "Text"
                },
                "snakeCase": {
                  "unsafeName": "text",
                  "safeName": "text"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TEXT",
                  "safeName": "TEXT"
                }
              },
              "wireValue": "text"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:AudioData": {
        "declaration": {
          "name": {
            "originalName": "AudioData",
            "camelCase": {
              "unsafeName": "audioData",
              "safeName": "audioData"
            },
            "pascalCase": {
              "unsafeName": "AudioData",
              "safeName": "AudioData"
            },
            "snakeCase": {
              "unsafeName": "audio_data",
              "safeName": "audio_data"
            },
            "screamingSnakeCase": {
              "unsafeName": "AUDIO_DATA",
              "safeName": "AUDIO_DATA"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "audio_data",
                "camelCase": {
                  "unsafeName": "audioData",
                  "safeName": "audioData"
                },
                "pascalCase": {
                  "unsafeName": "AudioData",
                  "safeName": "AudioData"
                },
                "snakeCase": {
                  "unsafeName": "audio_data",
                  "safeName": "audio_data"
                },
                "screamingSnakeCase": {
                  "unsafeName": "AUDIO_DATA",
                  "safeName": "AUDIO_DATA"
                }
              },
              "wireValue": "audio_data"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      },
      "type_:TerminateSession": {
        "declaration": {
          "name": {
            "originalName": "TerminateSession",
            "camelCase": {
              "unsafeName": "terminateSession",
              "safeName": "terminateSession"
            },
            "pascalCase": {
              "unsafeName": "TerminateSession",
              "safeName": "TerminateSession"
            },
            "snakeCase": {
              "unsafeName": "terminate_session",
              "safeName": "terminate_session"
            },
            "screamingSnakeCase": {
              "unsafeName": "TERMINATE_SESSION",
              "safeName": "TERMINATE_SESSION"
            }
          },
          "fernFilepath": {
            "allParts": [],
            "packagePath": []
          }
        },
        "properties": [
          {
            "name": {
              "name": {
                "originalName": "message_type",
                "camelCase": {
                  "unsafeName": "messageType",
                  "safeName": "messageType"
                },
                "pascalCase": {
                  "unsafeName": "MessageType",
                  "safeName": "MessageType"
                },
                "snakeCase": {
                  "unsafeName": "message_type",
                  "safeName": "message_type"
                },
                "screamingSnakeCase": {
                  "unsafeName": "MESSAGE_TYPE",
                  "safeName": "MESSAGE_TYPE"
                }
              },
              "wireValue": "message_type"
            },
            "typeReference": {
              "value": "type_:MessageType",
              "type": "named"
            }
          },
          {
            "name": {
              "name": {
                "originalName": "terminate_session",
                "camelCase": {
                  "unsafeName": "terminateSession",
                  "safeName": "terminateSession"
                },
                "pascalCase": {
                  "unsafeName": "TerminateSession",
                  "safeName": "TerminateSession"
                },
                "snakeCase": {
                  "unsafeName": "terminate_session",
                  "safeName": "terminate_session"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TERMINATE_SESSION",
                  "safeName": "TERMINATE_SESSION"
                }
              },
              "wireValue": "terminate_session"
            },
            "typeReference": {
              "value": "BOOLEAN",
              "type": "primitive"
            }
          }
        ],
        "additionalProperties": false,
        "type": "object"
      }
    },
    "headers": [],
    "endpoints": {
      "endpoint_files.upload": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "upload",
            "camelCase": {
              "unsafeName": "upload",
              "safeName": "upload"
            },
            "pascalCase": {
              "unsafeName": "Upload",
              "safeName": "Upload"
            },
            "snakeCase": {
              "unsafeName": "upload",
              "safeName": "upload"
            },
            "screamingSnakeCase": {
              "unsafeName": "UPLOAD",
              "safeName": "UPLOAD"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "files",
                "camelCase": {
                  "unsafeName": "files",
                  "safeName": "files"
                },
                "pascalCase": {
                  "unsafeName": "Files",
                  "safeName": "Files"
                },
                "snakeCase": {
                  "unsafeName": "files",
                  "safeName": "files"
                },
                "screamingSnakeCase": {
                  "unsafeName": "FILES",
                  "safeName": "FILES"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "files",
              "camelCase": {
                "unsafeName": "files",
                "safeName": "files"
              },
              "pascalCase": {
                "unsafeName": "Files",
                "safeName": "Files"
              },
              "snakeCase": {
                "unsafeName": "files",
                "safeName": "files"
              },
              "screamingSnakeCase": {
                "unsafeName": "FILES",
                "safeName": "FILES"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v2/upload"
        },
        "request": {
          "pathParameters": [],
          "body": {
            "type": "bytes"
          },
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.list": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "list",
            "camelCase": {
              "unsafeName": "list",
              "safeName": "list"
            },
            "pascalCase": {
              "unsafeName": "List",
              "safeName": "List"
            },
            "snakeCase": {
              "unsafeName": "list",
              "safeName": "list"
            },
            "screamingSnakeCase": {
              "unsafeName": "LIST",
              "safeName": "LIST"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v2/transcript"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "TranscriptListRequest",
              "camelCase": {
                "unsafeName": "transcriptListRequest",
                "safeName": "transcriptListRequest"
              },
              "pascalCase": {
                "unsafeName": "TranscriptListRequest",
                "safeName": "TranscriptListRequest"
              },
              "snakeCase": {
                "unsafeName": "transcript_list_request",
                "safeName": "transcript_list_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT_LIST_REQUEST",
                "safeName": "TRANSCRIPT_LIST_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "transcript",
                  "camelCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "pascalCase": {
                    "unsafeName": "Transcript",
                    "safeName": "Transcript"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT",
                    "safeName": "TRANSCRIPT"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "limit",
                  "camelCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "pascalCase": {
                    "unsafeName": "Limit",
                    "safeName": "Limit"
                  },
                  "snakeCase": {
                    "unsafeName": "limit",
                    "safeName": "limit"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LIMIT",
                    "safeName": "LIMIT"
                  }
                },
                "wireValue": "limit"
              },
              "typeReference": {
                "value": {
                  "value": "LONG",
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "status",
                  "camelCase": {
                    "unsafeName": "status",
                    "safeName": "status"
                  },
                  "pascalCase": {
                    "unsafeName": "Status",
                    "safeName": "Status"
                  },
                  "snakeCase": {
                    "unsafeName": "status",
                    "safeName": "status"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "STATUS",
                    "safeName": "STATUS"
                  }
                },
                "wireValue": "status"
              },
              "typeReference": {
                "value": {
                  "value": "type_transcript:TranscriptListRequestStatus",
                  "type": "named"
                },
                "type": "optional"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "created_on",
                  "camelCase": {
                    "unsafeName": "createdOn",
                    "safeName": "createdOn"
                  },
                  "pascalCase": {
                    "unsafeName": "CreatedOn",
                    "safeName": "CreatedOn"
                  },
                  "snakeCase": {
                    "unsafeName": "created_on",
                    "safeName": "created_on"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CREATED_ON",
                    "safeName": "CREATED_ON"
                  }
                },
                "wireValue": "created_on"
              },
              "typeReference": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "before_id",
                  "camelCase": {
                    "unsafeName": "beforeID",
                    "safeName": "beforeID"
                  },
                  "pascalCase": {
                    "unsafeName": "BeforeID",
                    "safeName": "BeforeID"
                  },
                  "snakeCase": {
                    "unsafeName": "before_id",
                    "safeName": "before_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "BEFORE_ID",
                    "safeName": "BEFORE_ID"
                  }
                },
                "wireValue": "before_id"
              },
              "typeReference": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "after_id",
                  "camelCase": {
                    "unsafeName": "afterID",
                    "safeName": "afterID"
                  },
                  "pascalCase": {
                    "unsafeName": "AfterID",
                    "safeName": "AfterID"
                  },
                  "snakeCase": {
                    "unsafeName": "after_id",
                    "safeName": "after_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "AFTER_ID",
                    "safeName": "AFTER_ID"
                  }
                },
                "wireValue": "after_id"
              },
              "typeReference": {
                "value": {
                  "value": "STRING",
                  "type": "primitive"
                },
                "type": "optional"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "throttled_only",
                  "camelCase": {
                    "unsafeName": "throttledOnly",
                    "safeName": "throttledOnly"
                  },
                  "pascalCase": {
                    "unsafeName": "ThrottledOnly",
                    "safeName": "ThrottledOnly"
                  },
                  "snakeCase": {
                    "unsafeName": "throttled_only",
                    "safeName": "throttled_only"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "THROTTLED_ONLY",
                    "safeName": "THROTTLED_ONLY"
                  }
                },
                "wireValue": "throttled_only"
              },
              "typeReference": {
                "value": {
                  "value": "BOOLEAN",
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.create": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "create",
            "camelCase": {
              "unsafeName": "create",
              "safeName": "create"
            },
            "pascalCase": {
              "unsafeName": "Create",
              "safeName": "Create"
            },
            "snakeCase": {
              "unsafeName": "create",
              "safeName": "create"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE",
              "safeName": "CREATE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v2/transcript"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "CreateTranscriptParameters",
              "camelCase": {
                "unsafeName": "createTranscriptParameters",
                "safeName": "createTranscriptParameters"
              },
              "pascalCase": {
                "unsafeName": "CreateTranscriptParameters",
                "safeName": "CreateTranscriptParameters"
              },
              "snakeCase": {
                "unsafeName": "create_transcript_parameters",
                "safeName": "create_transcript_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREATE_TRANSCRIPT_PARAMETERS",
                "safeName": "CREATE_TRANSCRIPT_PARAMETERS"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "transcript",
                  "camelCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "pascalCase": {
                    "unsafeName": "Transcript",
                    "safeName": "Transcript"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT",
                    "safeName": "TRANSCRIPT"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "language_code",
                    "camelCase": {
                      "unsafeName": "languageCode",
                      "safeName": "languageCode"
                    },
                    "pascalCase": {
                      "unsafeName": "LanguageCode",
                      "safeName": "LanguageCode"
                    },
                    "snakeCase": {
                      "unsafeName": "language_code",
                      "safeName": "language_code"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LANGUAGE_CODE",
                      "safeName": "LANGUAGE_CODE"
                    }
                  },
                  "wireValue": "language_code"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:TranscriptLanguageCode",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "punctuate",
                    "camelCase": {
                      "unsafeName": "punctuate",
                      "safeName": "punctuate"
                    },
                    "pascalCase": {
                      "unsafeName": "Punctuate",
                      "safeName": "Punctuate"
                    },
                    "snakeCase": {
                      "unsafeName": "punctuate",
                      "safeName": "punctuate"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PUNCTUATE",
                      "safeName": "PUNCTUATE"
                    }
                  },
                  "wireValue": "punctuate"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "format_text",
                    "camelCase": {
                      "unsafeName": "formatText",
                      "safeName": "formatText"
                    },
                    "pascalCase": {
                      "unsafeName": "FormatText",
                      "safeName": "FormatText"
                    },
                    "snakeCase": {
                      "unsafeName": "format_text",
                      "safeName": "format_text"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FORMAT_TEXT",
                      "safeName": "FORMAT_TEXT"
                    }
                  },
                  "wireValue": "format_text"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "dual_channel",
                    "camelCase": {
                      "unsafeName": "dualChannel",
                      "safeName": "dualChannel"
                    },
                    "pascalCase": {
                      "unsafeName": "DualChannel",
                      "safeName": "DualChannel"
                    },
                    "snakeCase": {
                      "unsafeName": "dual_channel",
                      "safeName": "dual_channel"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "DUAL_CHANNEL",
                      "safeName": "DUAL_CHANNEL"
                    }
                  },
                  "wireValue": "dual_channel"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "webhook_url",
                    "camelCase": {
                      "unsafeName": "webhookURL",
                      "safeName": "webhookURL"
                    },
                    "pascalCase": {
                      "unsafeName": "WebhookURL",
                      "safeName": "WebhookURL"
                    },
                    "snakeCase": {
                      "unsafeName": "webhook_url",
                      "safeName": "webhook_url"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WEBHOOK_URL",
                      "safeName": "WEBHOOK_URL"
                    }
                  },
                  "wireValue": "webhook_url"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "webhook_auth_header_name",
                    "camelCase": {
                      "unsafeName": "webhookAuthHeaderName",
                      "safeName": "webhookAuthHeaderName"
                    },
                    "pascalCase": {
                      "unsafeName": "WebhookAuthHeaderName",
                      "safeName": "WebhookAuthHeaderName"
                    },
                    "snakeCase": {
                      "unsafeName": "webhook_auth_header_name",
                      "safeName": "webhook_auth_header_name"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WEBHOOK_AUTH_HEADER_NAME",
                      "safeName": "WEBHOOK_AUTH_HEADER_NAME"
                    }
                  },
                  "wireValue": "webhook_auth_header_name"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "webhook_auth_header_value",
                    "camelCase": {
                      "unsafeName": "webhookAuthHeaderValue",
                      "safeName": "webhookAuthHeaderValue"
                    },
                    "pascalCase": {
                      "unsafeName": "WebhookAuthHeaderValue",
                      "safeName": "WebhookAuthHeaderValue"
                    },
                    "snakeCase": {
                      "unsafeName": "webhook_auth_header_value",
                      "safeName": "webhook_auth_header_value"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WEBHOOK_AUTH_HEADER_VALUE",
                      "safeName": "WEBHOOK_AUTH_HEADER_VALUE"
                    }
                  },
                  "wireValue": "webhook_auth_header_value"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "auto_highlights",
                    "camelCase": {
                      "unsafeName": "autoHighlights",
                      "safeName": "autoHighlights"
                    },
                    "pascalCase": {
                      "unsafeName": "AutoHighlights",
                      "safeName": "AutoHighlights"
                    },
                    "snakeCase": {
                      "unsafeName": "auto_highlights",
                      "safeName": "auto_highlights"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AUTO_HIGHLIGHTS",
                      "safeName": "AUTO_HIGHLIGHTS"
                    }
                  },
                  "wireValue": "auto_highlights"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "audio_start_from",
                    "camelCase": {
                      "unsafeName": "audioStartFrom",
                      "safeName": "audioStartFrom"
                    },
                    "pascalCase": {
                      "unsafeName": "AudioStartFrom",
                      "safeName": "AudioStartFrom"
                    },
                    "snakeCase": {
                      "unsafeName": "audio_start_from",
                      "safeName": "audio_start_from"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AUDIO_START_FROM",
                      "safeName": "AUDIO_START_FROM"
                    }
                  },
                  "wireValue": "audio_start_from"
                },
                "typeReference": {
                  "value": {
                    "value": "INTEGER",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "audio_end_at",
                    "camelCase": {
                      "unsafeName": "audioEndAt",
                      "safeName": "audioEndAt"
                    },
                    "pascalCase": {
                      "unsafeName": "AudioEndAt",
                      "safeName": "AudioEndAt"
                    },
                    "snakeCase": {
                      "unsafeName": "audio_end_at",
                      "safeName": "audio_end_at"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AUDIO_END_AT",
                      "safeName": "AUDIO_END_AT"
                    }
                  },
                  "wireValue": "audio_end_at"
                },
                "typeReference": {
                  "value": {
                    "value": "INTEGER",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "word_boost",
                    "camelCase": {
                      "unsafeName": "wordBoost",
                      "safeName": "wordBoost"
                    },
                    "pascalCase": {
                      "unsafeName": "WordBoost",
                      "safeName": "WordBoost"
                    },
                    "snakeCase": {
                      "unsafeName": "word_boost",
                      "safeName": "word_boost"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "WORD_BOOST",
                      "safeName": "WORD_BOOST"
                    }
                  },
                  "wireValue": "word_boost"
                },
                "typeReference": {
                  "value": {
                    "value": {
                      "value": "STRING",
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "boost_param",
                    "camelCase": {
                      "unsafeName": "boostParam",
                      "safeName": "boostParam"
                    },
                    "pascalCase": {
                      "unsafeName": "BoostParam",
                      "safeName": "BoostParam"
                    },
                    "snakeCase": {
                      "unsafeName": "boost_param",
                      "safeName": "boost_param"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "BOOST_PARAM",
                      "safeName": "BOOST_PARAM"
                    }
                  },
                  "wireValue": "boost_param"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:TranscriptBoostParam",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "filter_profanity",
                    "camelCase": {
                      "unsafeName": "filterProfanity",
                      "safeName": "filterProfanity"
                    },
                    "pascalCase": {
                      "unsafeName": "FilterProfanity",
                      "safeName": "FilterProfanity"
                    },
                    "snakeCase": {
                      "unsafeName": "filter_profanity",
                      "safeName": "filter_profanity"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FILTER_PROFANITY",
                      "safeName": "FILTER_PROFANITY"
                    }
                  },
                  "wireValue": "filter_profanity"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "redact_pii",
                    "camelCase": {
                      "unsafeName": "redactPii",
                      "safeName": "redactPii"
                    },
                    "pascalCase": {
                      "unsafeName": "RedactPii",
                      "safeName": "RedactPii"
                    },
                    "snakeCase": {
                      "unsafeName": "redact_pii",
                      "safeName": "redact_pii"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REDACT_PII",
                      "safeName": "REDACT_PII"
                    }
                  },
                  "wireValue": "redact_pii"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "redact_pii_audio",
                    "camelCase": {
                      "unsafeName": "redactPiiAudio",
                      "safeName": "redactPiiAudio"
                    },
                    "pascalCase": {
                      "unsafeName": "RedactPiiAudio",
                      "safeName": "RedactPiiAudio"
                    },
                    "snakeCase": {
                      "unsafeName": "redact_pii_audio",
                      "safeName": "redact_pii_audio"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REDACT_PII_AUDIO",
                      "safeName": "REDACT_PII_AUDIO"
                    }
                  },
                  "wireValue": "redact_pii_audio"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "redact_pii_audio_quality",
                    "camelCase": {
                      "unsafeName": "redactPiiAudioQuality",
                      "safeName": "redactPiiAudioQuality"
                    },
                    "pascalCase": {
                      "unsafeName": "RedactPiiAudioQuality",
                      "safeName": "RedactPiiAudioQuality"
                    },
                    "snakeCase": {
                      "unsafeName": "redact_pii_audio_quality",
                      "safeName": "redact_pii_audio_quality"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REDACT_PII_AUDIO_QUALITY",
                      "safeName": "REDACT_PII_AUDIO_QUALITY"
                    }
                  },
                  "wireValue": "redact_pii_audio_quality"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "redact_pii_policies",
                    "camelCase": {
                      "unsafeName": "redactPiiPolicies",
                      "safeName": "redactPiiPolicies"
                    },
                    "pascalCase": {
                      "unsafeName": "RedactPiiPolicies",
                      "safeName": "RedactPiiPolicies"
                    },
                    "snakeCase": {
                      "unsafeName": "redact_pii_policies",
                      "safeName": "redact_pii_policies"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REDACT_PII_POLICIES",
                      "safeName": "REDACT_PII_POLICIES"
                    }
                  },
                  "wireValue": "redact_pii_policies"
                },
                "typeReference": {
                  "value": {
                    "value": {
                      "value": "type_:PiiPolicy",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "redact_pii_sub",
                    "camelCase": {
                      "unsafeName": "redactPiiSub",
                      "safeName": "redactPiiSub"
                    },
                    "pascalCase": {
                      "unsafeName": "RedactPiiSub",
                      "safeName": "RedactPiiSub"
                    },
                    "snakeCase": {
                      "unsafeName": "redact_pii_sub",
                      "safeName": "redact_pii_sub"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "REDACT_PII_SUB",
                      "safeName": "REDACT_PII_SUB"
                    }
                  },
                  "wireValue": "redact_pii_sub"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:SubstitutionPolicy",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "speaker_labels",
                    "camelCase": {
                      "unsafeName": "speakerLabels",
                      "safeName": "speakerLabels"
                    },
                    "pascalCase": {
                      "unsafeName": "SpeakerLabels",
                      "safeName": "SpeakerLabels"
                    },
                    "snakeCase": {
                      "unsafeName": "speaker_labels",
                      "safeName": "speaker_labels"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SPEAKER_LABELS",
                      "safeName": "SPEAKER_LABELS"
                    }
                  },
                  "wireValue": "speaker_labels"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "speakers_expected",
                    "camelCase": {
                      "unsafeName": "speakersExpected",
                      "safeName": "speakersExpected"
                    },
                    "pascalCase": {
                      "unsafeName": "SpeakersExpected",
                      "safeName": "SpeakersExpected"
                    },
                    "snakeCase": {
                      "unsafeName": "speakers_expected",
                      "safeName": "speakers_expected"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SPEAKERS_EXPECTED",
                      "safeName": "SPEAKERS_EXPECTED"
                    }
                  },
                  "wireValue": "speakers_expected"
                },
                "typeReference": {
                  "value": {
                    "value": "INTEGER",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "content_safety",
                    "camelCase": {
                      "unsafeName": "contentSafety",
                      "safeName": "contentSafety"
                    },
                    "pascalCase": {
                      "unsafeName": "ContentSafety",
                      "safeName": "ContentSafety"
                    },
                    "snakeCase": {
                      "unsafeName": "content_safety",
                      "safeName": "content_safety"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTENT_SAFETY",
                      "safeName": "CONTENT_SAFETY"
                    }
                  },
                  "wireValue": "content_safety"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "iab_categories",
                    "camelCase": {
                      "unsafeName": "iabCategories",
                      "safeName": "iabCategories"
                    },
                    "pascalCase": {
                      "unsafeName": "IabCategories",
                      "safeName": "IabCategories"
                    },
                    "snakeCase": {
                      "unsafeName": "iab_categories",
                      "safeName": "iab_categories"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "IAB_CATEGORIES",
                      "safeName": "IAB_CATEGORIES"
                    }
                  },
                  "wireValue": "iab_categories"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "language_detection",
                    "camelCase": {
                      "unsafeName": "languageDetection",
                      "safeName": "languageDetection"
                    },
                    "pascalCase": {
                      "unsafeName": "LanguageDetection",
                      "safeName": "LanguageDetection"
                    },
                    "snakeCase": {
                      "unsafeName": "language_detection",
                      "safeName": "language_detection"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "LANGUAGE_DETECTION",
                      "safeName": "LANGUAGE_DETECTION"
                    }
                  },
                  "wireValue": "language_detection"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "custom_spelling",
                    "camelCase": {
                      "unsafeName": "customSpelling",
                      "safeName": "customSpelling"
                    },
                    "pascalCase": {
                      "unsafeName": "CustomSpelling",
                      "safeName": "CustomSpelling"
                    },
                    "snakeCase": {
                      "unsafeName": "custom_spelling",
                      "safeName": "custom_spelling"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CUSTOM_SPELLING",
                      "safeName": "CUSTOM_SPELLING"
                    }
                  },
                  "wireValue": "custom_spelling"
                },
                "typeReference": {
                  "value": {
                    "value": {
                      "value": "type_:TranscriptCustomSpelling",
                      "type": "named"
                    },
                    "type": "list"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "disfluencies",
                    "camelCase": {
                      "unsafeName": "disfluencies",
                      "safeName": "disfluencies"
                    },
                    "pascalCase": {
                      "unsafeName": "Disfluencies",
                      "safeName": "Disfluencies"
                    },
                    "snakeCase": {
                      "unsafeName": "disfluencies",
                      "safeName": "disfluencies"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "DISFLUENCIES",
                      "safeName": "DISFLUENCIES"
                    }
                  },
                  "wireValue": "disfluencies"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "sentiment_analysis",
                    "camelCase": {
                      "unsafeName": "sentimentAnalysis",
                      "safeName": "sentimentAnalysis"
                    },
                    "pascalCase": {
                      "unsafeName": "SentimentAnalysis",
                      "safeName": "SentimentAnalysis"
                    },
                    "snakeCase": {
                      "unsafeName": "sentiment_analysis",
                      "safeName": "sentiment_analysis"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SENTIMENT_ANALYSIS",
                      "safeName": "SENTIMENT_ANALYSIS"
                    }
                  },
                  "wireValue": "sentiment_analysis"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "auto_chapters",
                    "camelCase": {
                      "unsafeName": "autoChapters",
                      "safeName": "autoChapters"
                    },
                    "pascalCase": {
                      "unsafeName": "AutoChapters",
                      "safeName": "AutoChapters"
                    },
                    "snakeCase": {
                      "unsafeName": "auto_chapters",
                      "safeName": "auto_chapters"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AUTO_CHAPTERS",
                      "safeName": "AUTO_CHAPTERS"
                    }
                  },
                  "wireValue": "auto_chapters"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "entity_detection",
                    "camelCase": {
                      "unsafeName": "entityDetection",
                      "safeName": "entityDetection"
                    },
                    "pascalCase": {
                      "unsafeName": "EntityDetection",
                      "safeName": "EntityDetection"
                    },
                    "snakeCase": {
                      "unsafeName": "entity_detection",
                      "safeName": "entity_detection"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ENTITY_DETECTION",
                      "safeName": "ENTITY_DETECTION"
                    }
                  },
                  "wireValue": "entity_detection"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "speech_threshold",
                    "camelCase": {
                      "unsafeName": "speechThreshold",
                      "safeName": "speechThreshold"
                    },
                    "pascalCase": {
                      "unsafeName": "SpeechThreshold",
                      "safeName": "SpeechThreshold"
                    },
                    "snakeCase": {
                      "unsafeName": "speech_threshold",
                      "safeName": "speech_threshold"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SPEECH_THRESHOLD",
                      "safeName": "SPEECH_THRESHOLD"
                    }
                  },
                  "wireValue": "speech_threshold"
                },
                "typeReference": {
                  "value": {
                    "value": "FLOAT",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "summarization",
                    "camelCase": {
                      "unsafeName": "summarization",
                      "safeName": "summarization"
                    },
                    "pascalCase": {
                      "unsafeName": "Summarization",
                      "safeName": "Summarization"
                    },
                    "snakeCase": {
                      "unsafeName": "summarization",
                      "safeName": "summarization"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SUMMARIZATION",
                      "safeName": "SUMMARIZATION"
                    }
                  },
                  "wireValue": "summarization"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "summary_model",
                    "camelCase": {
                      "unsafeName": "summaryModel",
                      "safeName": "summaryModel"
                    },
                    "pascalCase": {
                      "unsafeName": "SummaryModel",
                      "safeName": "SummaryModel"
                    },
                    "snakeCase": {
                      "unsafeName": "summary_model",
                      "safeName": "summary_model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SUMMARY_MODEL",
                      "safeName": "SUMMARY_MODEL"
                    }
                  },
                  "wireValue": "summary_model"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:SummaryModel",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "summary_type",
                    "camelCase": {
                      "unsafeName": "summaryType",
                      "safeName": "summaryType"
                    },
                    "pascalCase": {
                      "unsafeName": "SummaryType",
                      "safeName": "SummaryType"
                    },
                    "snakeCase": {
                      "unsafeName": "summary_type",
                      "safeName": "summary_type"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "SUMMARY_TYPE",
                      "safeName": "SUMMARY_TYPE"
                    }
                  },
                  "wireValue": "summary_type"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:SummaryType",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "custom_topics",
                    "camelCase": {
                      "unsafeName": "customTopics",
                      "safeName": "customTopics"
                    },
                    "pascalCase": {
                      "unsafeName": "CustomTopics",
                      "safeName": "CustomTopics"
                    },
                    "snakeCase": {
                      "unsafeName": "custom_topics",
                      "safeName": "custom_topics"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CUSTOM_TOPICS",
                      "safeName": "CUSTOM_TOPICS"
                    }
                  },
                  "wireValue": "custom_topics"
                },
                "typeReference": {
                  "value": {
                    "value": "BOOLEAN",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "topics",
                    "camelCase": {
                      "unsafeName": "topics",
                      "safeName": "topics"
                    },
                    "pascalCase": {
                      "unsafeName": "Topics",
                      "safeName": "Topics"
                    },
                    "snakeCase": {
                      "unsafeName": "topics",
                      "safeName": "topics"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TOPICS",
                      "safeName": "TOPICS"
                    }
                  },
                  "wireValue": "topics"
                },
                "typeReference": {
                  "value": {
                    "value": {
                      "value": "STRING",
                      "type": "primitive"
                    },
                    "type": "list"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "audio_url",
                    "camelCase": {
                      "unsafeName": "audioURL",
                      "safeName": "audioURL"
                    },
                    "pascalCase": {
                      "unsafeName": "AudioURL",
                      "safeName": "AudioURL"
                    },
                    "snakeCase": {
                      "unsafeName": "audio_url",
                      "safeName": "audio_url"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "AUDIO_URL",
                      "safeName": "AUDIO_URL"
                    }
                  },
                  "wireValue": "audio_url"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.get": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "get",
            "camelCase": {
              "unsafeName": "get",
              "safeName": "get"
            },
            "pascalCase": {
              "unsafeName": "Get",
              "safeName": "Get"
            },
            "snakeCase": {
              "unsafeName": "get",
              "safeName": "get"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET",
              "safeName": "GET"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v2/transcript/{transcript_id}"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "transcript_id",
                  "camelCase": {
                    "unsafeName": "transcriptID",
                    "safeName": "transcriptID"
                  },
                  "pascalCase": {
                    "unsafeName": "TranscriptID",
                    "safeName": "TranscriptID"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript_id",
                    "safeName": "transcript_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT_ID",
                    "safeName": "TRANSCRIPT_ID"
                  }
                },
                "wireValue": "transcript_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.delete": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "delete",
            "camelCase": {
              "unsafeName": "delete",
              "safeName": "delete"
            },
            "pascalCase": {
              "unsafeName": "Delete",
              "safeName": "Delete"
            },
            "snakeCase": {
              "unsafeName": "delete",
              "safeName": "delete"
            },
            "screamingSnakeCase": {
              "unsafeName": "DELETE",
              "safeName": "DELETE"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "DELETE",
          "path": "/v2/transcript/{transcript_id}"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "transcript_id",
                  "camelCase": {
                    "unsafeName": "transcriptID",
                    "safeName": "transcriptID"
                  },
                  "pascalCase": {
                    "unsafeName": "TranscriptID",
                    "safeName": "TranscriptID"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript_id",
                    "safeName": "transcript_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT_ID",
                    "safeName": "TRANSCRIPT_ID"
                  }
                },
                "wireValue": "transcript_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.getSubtitles": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "getSubtitles",
            "camelCase": {
              "unsafeName": "getSubtitles",
              "safeName": "getSubtitles"
            },
            "pascalCase": {
              "unsafeName": "GetSubtitles",
              "safeName": "GetSubtitles"
            },
            "snakeCase": {
              "unsafeName": "get_subtitles",
              "safeName": "get_subtitles"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SUBTITLES",
              "safeName": "GET_SUBTITLES"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v2/transcript/{transcript_id}/{subtitle_format}"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "TranscriptGetSubtitlesRequest",
              "camelCase": {
                "unsafeName": "transcriptGetSubtitlesRequest",
                "safeName": "transcriptGetSubtitlesRequest"
              },
              "pascalCase": {
                "unsafeName": "TranscriptGetSubtitlesRequest",
                "safeName": "TranscriptGetSubtitlesRequest"
              },
              "snakeCase": {
                "unsafeName": "transcript_get_subtitles_request",
                "safeName": "transcript_get_subtitles_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT_GET_SUBTITLES_REQUEST",
                "safeName": "TRANSCRIPT_GET_SUBTITLES_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "transcript",
                  "camelCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "pascalCase": {
                    "unsafeName": "Transcript",
                    "safeName": "Transcript"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT",
                    "safeName": "TRANSCRIPT"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            }
          },
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "transcript_id",
                  "camelCase": {
                    "unsafeName": "transcriptID",
                    "safeName": "transcriptID"
                  },
                  "pascalCase": {
                    "unsafeName": "TranscriptID",
                    "safeName": "TranscriptID"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript_id",
                    "safeName": "transcript_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT_ID",
                    "safeName": "TRANSCRIPT_ID"
                  }
                },
                "wireValue": "transcript_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            },
            {
              "name": {
                "name": {
                  "originalName": "subtitle_format",
                  "camelCase": {
                    "unsafeName": "subtitleFormat",
                    "safeName": "subtitleFormat"
                  },
                  "pascalCase": {
                    "unsafeName": "SubtitleFormat",
                    "safeName": "SubtitleFormat"
                  },
                  "snakeCase": {
                    "unsafeName": "subtitle_format",
                    "safeName": "subtitle_format"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "SUBTITLE_FORMAT",
                    "safeName": "SUBTITLE_FORMAT"
                  }
                },
                "wireValue": "subtitle_format"
              },
              "typeReference": {
                "value": "type_:SubtitleFormat",
                "type": "named"
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "chars_per_caption",
                  "camelCase": {
                    "unsafeName": "charsPerCaption",
                    "safeName": "charsPerCaption"
                  },
                  "pascalCase": {
                    "unsafeName": "CharsPerCaption",
                    "safeName": "CharsPerCaption"
                  },
                  "snakeCase": {
                    "unsafeName": "chars_per_caption",
                    "safeName": "chars_per_caption"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "CHARS_PER_CAPTION",
                    "safeName": "CHARS_PER_CAPTION"
                  }
                },
                "wireValue": "chars_per_caption"
              },
              "typeReference": {
                "value": {
                  "value": "INTEGER",
                  "type": "primitive"
                },
                "type": "optional"
              }
            }
          ],
          "headers": [],
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.getSentences": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "getSentences",
            "camelCase": {
              "unsafeName": "getSentences",
              "safeName": "getSentences"
            },
            "pascalCase": {
              "unsafeName": "GetSentences",
              "safeName": "GetSentences"
            },
            "snakeCase": {
              "unsafeName": "get_sentences",
              "safeName": "get_sentences"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_SENTENCES",
              "safeName": "GET_SENTENCES"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v2/transcript/{transcript_id}/sentences"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "transcript_id",
                  "camelCase": {
                    "unsafeName": "transcriptID",
                    "safeName": "transcriptID"
                  },
                  "pascalCase": {
                    "unsafeName": "TranscriptID",
                    "safeName": "TranscriptID"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript_id",
                    "safeName": "transcript_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT_ID",
                    "safeName": "TRANSCRIPT_ID"
                  }
                },
                "wireValue": "transcript_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.getParagraphs": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "getParagraphs",
            "camelCase": {
              "unsafeName": "getParagraphs",
              "safeName": "getParagraphs"
            },
            "pascalCase": {
              "unsafeName": "GetParagraphs",
              "safeName": "GetParagraphs"
            },
            "snakeCase": {
              "unsafeName": "get_paragraphs",
              "safeName": "get_paragraphs"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_PARAGRAPHS",
              "safeName": "GET_PARAGRAPHS"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v2/transcript/{transcript_id}/paragraphs"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "transcript_id",
                  "camelCase": {
                    "unsafeName": "transcriptID",
                    "safeName": "transcriptID"
                  },
                  "pascalCase": {
                    "unsafeName": "TranscriptID",
                    "safeName": "TranscriptID"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript_id",
                    "safeName": "transcript_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT_ID",
                    "safeName": "TRANSCRIPT_ID"
                  }
                },
                "wireValue": "transcript_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.wordSearch": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "wordSearch",
            "camelCase": {
              "unsafeName": "wordSearch",
              "safeName": "wordSearch"
            },
            "pascalCase": {
              "unsafeName": "WordSearch",
              "safeName": "WordSearch"
            },
            "snakeCase": {
              "unsafeName": "word_search",
              "safeName": "word_search"
            },
            "screamingSnakeCase": {
              "unsafeName": "WORD_SEARCH",
              "safeName": "WORD_SEARCH"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v2/transcript/{transcript_id}/word-search"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "TranscriptWordSearchRequest",
              "camelCase": {
                "unsafeName": "transcriptWordSearchRequest",
                "safeName": "transcriptWordSearchRequest"
              },
              "pascalCase": {
                "unsafeName": "TranscriptWordSearchRequest",
                "safeName": "TranscriptWordSearchRequest"
              },
              "snakeCase": {
                "unsafeName": "transcript_word_search_request",
                "safeName": "transcript_word_search_request"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT_WORD_SEARCH_REQUEST",
                "safeName": "TRANSCRIPT_WORD_SEARCH_REQUEST"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "transcript",
                  "camelCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "pascalCase": {
                    "unsafeName": "Transcript",
                    "safeName": "Transcript"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript",
                    "safeName": "transcript"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT",
                    "safeName": "TRANSCRIPT"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            }
          },
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "transcript_id",
                  "camelCase": {
                    "unsafeName": "transcriptID",
                    "safeName": "transcriptID"
                  },
                  "pascalCase": {
                    "unsafeName": "TranscriptID",
                    "safeName": "TranscriptID"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript_id",
                    "safeName": "transcript_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT_ID",
                    "safeName": "TRANSCRIPT_ID"
                  }
                },
                "wireValue": "transcript_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": {
                "name": {
                  "originalName": "words",
                  "camelCase": {
                    "unsafeName": "words",
                    "safeName": "words"
                  },
                  "pascalCase": {
                    "unsafeName": "Words",
                    "safeName": "Words"
                  },
                  "snakeCase": {
                    "unsafeName": "words",
                    "safeName": "words"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "WORDS",
                    "safeName": "WORDS"
                  }
                },
                "wireValue": "words"
              },
              "typeReference": {
                "value": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                },
                "type": "list"
              }
            }
          ],
          "headers": [],
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_transcript.getRedactedAudio": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "getRedactedAudio",
            "camelCase": {
              "unsafeName": "getRedactedAudio",
              "safeName": "getRedactedAudio"
            },
            "pascalCase": {
              "unsafeName": "GetRedactedAudio",
              "safeName": "GetRedactedAudio"
            },
            "snakeCase": {
              "unsafeName": "get_redacted_audio",
              "safeName": "get_redacted_audio"
            },
            "screamingSnakeCase": {
              "unsafeName": "GET_REDACTED_AUDIO",
              "safeName": "GET_REDACTED_AUDIO"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "transcript",
                "camelCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "pascalCase": {
                  "unsafeName": "Transcript",
                  "safeName": "Transcript"
                },
                "snakeCase": {
                  "unsafeName": "transcript",
                  "safeName": "transcript"
                },
                "screamingSnakeCase": {
                  "unsafeName": "TRANSCRIPT",
                  "safeName": "TRANSCRIPT"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "transcript",
              "camelCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "pascalCase": {
                "unsafeName": "Transcript",
                "safeName": "Transcript"
              },
              "snakeCase": {
                "unsafeName": "transcript",
                "safeName": "transcript"
              },
              "screamingSnakeCase": {
                "unsafeName": "TRANSCRIPT",
                "safeName": "TRANSCRIPT"
              }
            }
          }
        },
        "location": {
          "method": "GET",
          "path": "/v2/transcript/{transcript_id}/redacted-audio"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "transcript_id",
                  "camelCase": {
                    "unsafeName": "transcriptID",
                    "safeName": "transcriptID"
                  },
                  "pascalCase": {
                    "unsafeName": "TranscriptID",
                    "safeName": "TranscriptID"
                  },
                  "snakeCase": {
                    "unsafeName": "transcript_id",
                    "safeName": "transcript_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "TRANSCRIPT_ID",
                    "safeName": "TRANSCRIPT_ID"
                  }
                },
                "wireValue": "transcript_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_realtime.createTemporaryToken": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "createTemporaryToken",
            "camelCase": {
              "unsafeName": "createTemporaryToken",
              "safeName": "createTemporaryToken"
            },
            "pascalCase": {
              "unsafeName": "CreateTemporaryToken",
              "safeName": "CreateTemporaryToken"
            },
            "snakeCase": {
              "unsafeName": "create_temporary_token",
              "safeName": "create_temporary_token"
            },
            "screamingSnakeCase": {
              "unsafeName": "CREATE_TEMPORARY_TOKEN",
              "safeName": "CREATE_TEMPORARY_TOKEN"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "realtime",
                "camelCase": {
                  "unsafeName": "realtime",
                  "safeName": "realtime"
                },
                "pascalCase": {
                  "unsafeName": "Realtime",
                  "safeName": "Realtime"
                },
                "snakeCase": {
                  "unsafeName": "realtime",
                  "safeName": "realtime"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REALTIME",
                  "safeName": "REALTIME"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "realtime",
              "camelCase": {
                "unsafeName": "realtime",
                "safeName": "realtime"
              },
              "pascalCase": {
                "unsafeName": "Realtime",
                "safeName": "Realtime"
              },
              "snakeCase": {
                "unsafeName": "realtime",
                "safeName": "realtime"
              },
              "screamingSnakeCase": {
                "unsafeName": "REALTIME",
                "safeName": "REALTIME"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/v2/realtime/token"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "CreateRealtimeTemporaryTokenParameters",
              "camelCase": {
                "unsafeName": "createRealtimeTemporaryTokenParameters",
                "safeName": "createRealtimeTemporaryTokenParameters"
              },
              "pascalCase": {
                "unsafeName": "CreateRealtimeTemporaryTokenParameters",
                "safeName": "CreateRealtimeTemporaryTokenParameters"
              },
              "snakeCase": {
                "unsafeName": "create_realtime_temporary_token_parameters",
                "safeName": "create_realtime_temporary_token_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "CREATE_REALTIME_TEMPORARY_TOKEN_PARAMETERS",
                "safeName": "CREATE_REALTIME_TEMPORARY_TOKEN_PARAMETERS"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "realtime",
                  "camelCase": {
                    "unsafeName": "realtime",
                    "safeName": "realtime"
                  },
                  "pascalCase": {
                    "unsafeName": "Realtime",
                    "safeName": "Realtime"
                  },
                  "snakeCase": {
                    "unsafeName": "realtime",
                    "safeName": "realtime"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REALTIME",
                    "safeName": "REALTIME"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "realtime",
                "camelCase": {
                  "unsafeName": "realtime",
                  "safeName": "realtime"
                },
                "pascalCase": {
                  "unsafeName": "Realtime",
                  "safeName": "Realtime"
                },
                "snakeCase": {
                  "unsafeName": "realtime",
                  "safeName": "realtime"
                },
                "screamingSnakeCase": {
                  "unsafeName": "REALTIME",
                  "safeName": "REALTIME"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "expires_in",
                    "camelCase": {
                      "unsafeName": "expiresIn",
                      "safeName": "expiresIn"
                    },
                    "pascalCase": {
                      "unsafeName": "ExpiresIn",
                      "safeName": "ExpiresIn"
                    },
                    "snakeCase": {
                      "unsafeName": "expires_in",
                      "safeName": "expires_in"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "EXPIRES_IN",
                      "safeName": "EXPIRES_IN"
                    }
                  },
                  "wireValue": "expires_in"
                },
                "typeReference": {
                  "value": "INTEGER",
                  "type": "primitive"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_lemur.summary": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "summary",
            "camelCase": {
              "unsafeName": "summary",
              "safeName": "summary"
            },
            "pascalCase": {
              "unsafeName": "Summary",
              "safeName": "Summary"
            },
            "snakeCase": {
              "unsafeName": "summary",
              "safeName": "summary"
            },
            "screamingSnakeCase": {
              "unsafeName": "SUMMARY",
              "safeName": "SUMMARY"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "lemur",
              "camelCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "pascalCase": {
                "unsafeName": "Lemur",
                "safeName": "Lemur"
              },
              "snakeCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR",
                "safeName": "LEMUR"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/lemur/v3/generate/summary"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "LemurSummaryParameters",
              "camelCase": {
                "unsafeName": "lemurSummaryParameters",
                "safeName": "lemurSummaryParameters"
              },
              "pascalCase": {
                "unsafeName": "LemurSummaryParameters",
                "safeName": "LemurSummaryParameters"
              },
              "snakeCase": {
                "unsafeName": "lemur_summary_parameters",
                "safeName": "lemur_summary_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_SUMMARY_PARAMETERS",
                "safeName": "LEMUR_SUMMARY_PARAMETERS"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "lemur",
                  "camelCase": {
                    "unsafeName": "lemur",
                    "safeName": "lemur"
                  },
                  "pascalCase": {
                    "unsafeName": "Lemur",
                    "safeName": "Lemur"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur",
                    "safeName": "lemur"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR",
                    "safeName": "LEMUR"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "transcript_ids",
                    "camelCase": {
                      "unsafeName": "transcriptIDs",
                      "safeName": "transcriptIDs"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptIDs",
                      "safeName": "TranscriptIDs"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_ids",
                      "safeName": "transcript_ids"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_IDS",
                      "safeName": "TRANSCRIPT_IDS"
                    }
                  },
                  "wireValue": "transcript_ids"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "list"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "context",
                    "camelCase": {
                      "unsafeName": "context",
                      "safeName": "context"
                    },
                    "pascalCase": {
                      "unsafeName": "Context",
                      "safeName": "Context"
                    },
                    "snakeCase": {
                      "unsafeName": "context",
                      "safeName": "context"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTEXT",
                      "safeName": "CONTEXT"
                    }
                  },
                  "wireValue": "context"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:LemurBaseParametersContext",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "final_model",
                    "camelCase": {
                      "unsafeName": "finalModel",
                      "safeName": "finalModel"
                    },
                    "pascalCase": {
                      "unsafeName": "FinalModel",
                      "safeName": "FinalModel"
                    },
                    "snakeCase": {
                      "unsafeName": "final_model",
                      "safeName": "final_model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FINAL_MODEL",
                      "safeName": "FINAL_MODEL"
                    }
                  },
                  "wireValue": "final_model"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:LemurModel",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "max_output_size",
                    "camelCase": {
                      "unsafeName": "maxOutputSize",
                      "safeName": "maxOutputSize"
                    },
                    "pascalCase": {
                      "unsafeName": "MaxOutputSize",
                      "safeName": "MaxOutputSize"
                    },
                    "snakeCase": {
                      "unsafeName": "max_output_size",
                      "safeName": "max_output_size"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "MAX_OUTPUT_SIZE",
                      "safeName": "MAX_OUTPUT_SIZE"
                    }
                  },
                  "wireValue": "max_output_size"
                },
                "typeReference": {
                  "value": {
                    "value": "INTEGER",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "temperature",
                    "camelCase": {
                      "unsafeName": "temperature",
                      "safeName": "temperature"
                    },
                    "pascalCase": {
                      "unsafeName": "Temperature",
                      "safeName": "Temperature"
                    },
                    "snakeCase": {
                      "unsafeName": "temperature",
                      "safeName": "temperature"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TEMPERATURE",
                      "safeName": "TEMPERATURE"
                    }
                  },
                  "wireValue": "temperature"
                },
                "typeReference": {
                  "value": {
                    "value": "FLOAT",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "answer_format",
                    "camelCase": {
                      "unsafeName": "answerFormat",
                      "safeName": "answerFormat"
                    },
                    "pascalCase": {
                      "unsafeName": "AnswerFormat",
                      "safeName": "AnswerFormat"
                    },
                    "snakeCase": {
                      "unsafeName": "answer_format",
                      "safeName": "answer_format"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "ANSWER_FORMAT",
                      "safeName": "ANSWER_FORMAT"
                    }
                  },
                  "wireValue": "answer_format"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_lemur.questionAnswer": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "questionAnswer",
            "camelCase": {
              "unsafeName": "questionAnswer",
              "safeName": "questionAnswer"
            },
            "pascalCase": {
              "unsafeName": "QuestionAnswer",
              "safeName": "QuestionAnswer"
            },
            "snakeCase": {
              "unsafeName": "question_answer",
              "safeName": "question_answer"
            },
            "screamingSnakeCase": {
              "unsafeName": "QUESTION_ANSWER",
              "safeName": "QUESTION_ANSWER"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "lemur",
              "camelCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "pascalCase": {
                "unsafeName": "Lemur",
                "safeName": "Lemur"
              },
              "snakeCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR",
                "safeName": "LEMUR"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/lemur/v3/generate/question-answer"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "LemurQuestionAnswerParameters",
              "camelCase": {
                "unsafeName": "lemurQuestionAnswerParameters",
                "safeName": "lemurQuestionAnswerParameters"
              },
              "pascalCase": {
                "unsafeName": "LemurQuestionAnswerParameters",
                "safeName": "LemurQuestionAnswerParameters"
              },
              "snakeCase": {
                "unsafeName": "lemur_question_answer_parameters",
                "safeName": "lemur_question_answer_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_QUESTION_ANSWER_PARAMETERS",
                "safeName": "LEMUR_QUESTION_ANSWER_PARAMETERS"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "lemur",
                  "camelCase": {
                    "unsafeName": "lemur",
                    "safeName": "lemur"
                  },
                  "pascalCase": {
                    "unsafeName": "Lemur",
                    "safeName": "Lemur"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur",
                    "safeName": "lemur"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR",
                    "safeName": "LEMUR"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "transcript_ids",
                    "camelCase": {
                      "unsafeName": "transcriptIDs",
                      "safeName": "transcriptIDs"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptIDs",
                      "safeName": "TranscriptIDs"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_ids",
                      "safeName": "transcript_ids"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_IDS",
                      "safeName": "TRANSCRIPT_IDS"
                    }
                  },
                  "wireValue": "transcript_ids"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "list"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "context",
                    "camelCase": {
                      "unsafeName": "context",
                      "safeName": "context"
                    },
                    "pascalCase": {
                      "unsafeName": "Context",
                      "safeName": "Context"
                    },
                    "snakeCase": {
                      "unsafeName": "context",
                      "safeName": "context"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTEXT",
                      "safeName": "CONTEXT"
                    }
                  },
                  "wireValue": "context"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:LemurBaseParametersContext",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "final_model",
                    "camelCase": {
                      "unsafeName": "finalModel",
                      "safeName": "finalModel"
                    },
                    "pascalCase": {
                      "unsafeName": "FinalModel",
                      "safeName": "FinalModel"
                    },
                    "snakeCase": {
                      "unsafeName": "final_model",
                      "safeName": "final_model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FINAL_MODEL",
                      "safeName": "FINAL_MODEL"
                    }
                  },
                  "wireValue": "final_model"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:LemurModel",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "max_output_size",
                    "camelCase": {
                      "unsafeName": "maxOutputSize",
                      "safeName": "maxOutputSize"
                    },
                    "pascalCase": {
                      "unsafeName": "MaxOutputSize",
                      "safeName": "MaxOutputSize"
                    },
                    "snakeCase": {
                      "unsafeName": "max_output_size",
                      "safeName": "max_output_size"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "MAX_OUTPUT_SIZE",
                      "safeName": "MAX_OUTPUT_SIZE"
                    }
                  },
                  "wireValue": "max_output_size"
                },
                "typeReference": {
                  "value": {
                    "value": "INTEGER",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "temperature",
                    "camelCase": {
                      "unsafeName": "temperature",
                      "safeName": "temperature"
                    },
                    "pascalCase": {
                      "unsafeName": "Temperature",
                      "safeName": "Temperature"
                    },
                    "snakeCase": {
                      "unsafeName": "temperature",
                      "safeName": "temperature"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TEMPERATURE",
                      "safeName": "TEMPERATURE"
                    }
                  },
                  "wireValue": "temperature"
                },
                "typeReference": {
                  "value": {
                    "value": "FLOAT",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "questions",
                    "camelCase": {
                      "unsafeName": "questions",
                      "safeName": "questions"
                    },
                    "pascalCase": {
                      "unsafeName": "Questions",
                      "safeName": "Questions"
                    },
                    "snakeCase": {
                      "unsafeName": "questions",
                      "safeName": "questions"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "QUESTIONS",
                      "safeName": "QUESTIONS"
                    }
                  },
                  "wireValue": "questions"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:LemurQuestion",
                    "type": "named"
                  },
                  "type": "list"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_lemur.actionItems": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "actionItems",
            "camelCase": {
              "unsafeName": "actionItems",
              "safeName": "actionItems"
            },
            "pascalCase": {
              "unsafeName": "ActionItems",
              "safeName": "ActionItems"
            },
            "snakeCase": {
              "unsafeName": "action_items",
              "safeName": "action_items"
            },
            "screamingSnakeCase": {
              "unsafeName": "ACTION_ITEMS",
              "safeName": "ACTION_ITEMS"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "lemur",
              "camelCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "pascalCase": {
                "unsafeName": "Lemur",
                "safeName": "Lemur"
              },
              "snakeCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR",
                "safeName": "LEMUR"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/lemur/v3/generate/action-items"
        },
        "request": {
          "pathParameters": [],
          "body": {
            "value": {
              "value": "type_:LemurActionItemsParameters",
              "type": "named"
            },
            "type": "typeReference"
          },
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_lemur.task": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "task",
            "camelCase": {
              "unsafeName": "task",
              "safeName": "task"
            },
            "pascalCase": {
              "unsafeName": "Task",
              "safeName": "Task"
            },
            "snakeCase": {
              "unsafeName": "task",
              "safeName": "task"
            },
            "screamingSnakeCase": {
              "unsafeName": "TASK",
              "safeName": "TASK"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "lemur",
              "camelCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "pascalCase": {
                "unsafeName": "Lemur",
                "safeName": "Lemur"
              },
              "snakeCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR",
                "safeName": "LEMUR"
              }
            }
          }
        },
        "location": {
          "method": "POST",
          "path": "/lemur/v3/generate/task"
        },
        "request": {
          "declaration": {
            "name": {
              "originalName": "LemurTaskParameters",
              "camelCase": {
                "unsafeName": "lemurTaskParameters",
                "safeName": "lemurTaskParameters"
              },
              "pascalCase": {
                "unsafeName": "LemurTaskParameters",
                "safeName": "LemurTaskParameters"
              },
              "snakeCase": {
                "unsafeName": "lemur_task_parameters",
                "safeName": "lemur_task_parameters"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR_TASK_PARAMETERS",
                "safeName": "LEMUR_TASK_PARAMETERS"
              }
            },
            "fernFilepath": {
              "allParts": [
                {
                  "originalName": "lemur",
                  "camelCase": {
                    "unsafeName": "lemur",
                    "safeName": "lemur"
                  },
                  "pascalCase": {
                    "unsafeName": "Lemur",
                    "safeName": "Lemur"
                  },
                  "snakeCase": {
                    "unsafeName": "lemur",
                    "safeName": "lemur"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "LEMUR",
                    "safeName": "LEMUR"
                  }
                }
              ],
              "packagePath": [],
              "file": {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            }
          },
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "body": {
            "value": [
              {
                "name": {
                  "name": {
                    "originalName": "transcript_ids",
                    "camelCase": {
                      "unsafeName": "transcriptIDs",
                      "safeName": "transcriptIDs"
                    },
                    "pascalCase": {
                      "unsafeName": "TranscriptIDs",
                      "safeName": "TranscriptIDs"
                    },
                    "snakeCase": {
                      "unsafeName": "transcript_ids",
                      "safeName": "transcript_ids"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TRANSCRIPT_IDS",
                      "safeName": "TRANSCRIPT_IDS"
                    }
                  },
                  "wireValue": "transcript_ids"
                },
                "typeReference": {
                  "value": {
                    "value": "STRING",
                    "type": "primitive"
                  },
                  "type": "list"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "context",
                    "camelCase": {
                      "unsafeName": "context",
                      "safeName": "context"
                    },
                    "pascalCase": {
                      "unsafeName": "Context",
                      "safeName": "Context"
                    },
                    "snakeCase": {
                      "unsafeName": "context",
                      "safeName": "context"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "CONTEXT",
                      "safeName": "CONTEXT"
                    }
                  },
                  "wireValue": "context"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:LemurBaseParametersContext",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "final_model",
                    "camelCase": {
                      "unsafeName": "finalModel",
                      "safeName": "finalModel"
                    },
                    "pascalCase": {
                      "unsafeName": "FinalModel",
                      "safeName": "FinalModel"
                    },
                    "snakeCase": {
                      "unsafeName": "final_model",
                      "safeName": "final_model"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "FINAL_MODEL",
                      "safeName": "FINAL_MODEL"
                    }
                  },
                  "wireValue": "final_model"
                },
                "typeReference": {
                  "value": {
                    "value": "type_:LemurModel",
                    "type": "named"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "max_output_size",
                    "camelCase": {
                      "unsafeName": "maxOutputSize",
                      "safeName": "maxOutputSize"
                    },
                    "pascalCase": {
                      "unsafeName": "MaxOutputSize",
                      "safeName": "MaxOutputSize"
                    },
                    "snakeCase": {
                      "unsafeName": "max_output_size",
                      "safeName": "max_output_size"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "MAX_OUTPUT_SIZE",
                      "safeName": "MAX_OUTPUT_SIZE"
                    }
                  },
                  "wireValue": "max_output_size"
                },
                "typeReference": {
                  "value": {
                    "value": "INTEGER",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "temperature",
                    "camelCase": {
                      "unsafeName": "temperature",
                      "safeName": "temperature"
                    },
                    "pascalCase": {
                      "unsafeName": "Temperature",
                      "safeName": "Temperature"
                    },
                    "snakeCase": {
                      "unsafeName": "temperature",
                      "safeName": "temperature"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "TEMPERATURE",
                      "safeName": "TEMPERATURE"
                    }
                  },
                  "wireValue": "temperature"
                },
                "typeReference": {
                  "value": {
                    "value": "FLOAT",
                    "type": "primitive"
                  },
                  "type": "optional"
                }
              },
              {
                "name": {
                  "name": {
                    "originalName": "prompt",
                    "camelCase": {
                      "unsafeName": "prompt",
                      "safeName": "prompt"
                    },
                    "pascalCase": {
                      "unsafeName": "Prompt",
                      "safeName": "Prompt"
                    },
                    "snakeCase": {
                      "unsafeName": "prompt",
                      "safeName": "prompt"
                    },
                    "screamingSnakeCase": {
                      "unsafeName": "PROMPT",
                      "safeName": "PROMPT"
                    }
                  },
                  "wireValue": "prompt"
                },
                "typeReference": {
                  "value": "STRING",
                  "type": "primitive"
                }
              }
            ],
            "type": "properties"
          },
          "metadata": {
            "includePathParameters": false,
            "onlyPathParameters": false
          },
          "type": "inlined"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      },
      "endpoint_lemur.purgeRequestData": {
        "auth": {
          "header": {
            "name": {
              "name": {
                "originalName": "apiKey",
                "camelCase": {
                  "unsafeName": "apiKey",
                  "safeName": "apiKey"
                },
                "pascalCase": {
                  "unsafeName": "APIKey",
                  "safeName": "APIKey"
                },
                "snakeCase": {
                  "unsafeName": "api_key",
                  "safeName": "api_key"
                },
                "screamingSnakeCase": {
                  "unsafeName": "API_KEY",
                  "safeName": "API_KEY"
                }
              },
              "wireValue": "Authorization"
            },
            "typeReference": {
              "value": "STRING",
              "type": "primitive"
            }
          },
          "type": "header"
        },
        "declaration": {
          "name": {
            "originalName": "purgeRequestData",
            "camelCase": {
              "unsafeName": "purgeRequestData",
              "safeName": "purgeRequestData"
            },
            "pascalCase": {
              "unsafeName": "PurgeRequestData",
              "safeName": "PurgeRequestData"
            },
            "snakeCase": {
              "unsafeName": "purge_request_data",
              "safeName": "purge_request_data"
            },
            "screamingSnakeCase": {
              "unsafeName": "PURGE_REQUEST_DATA",
              "safeName": "PURGE_REQUEST_DATA"
            }
          },
          "fernFilepath": {
            "allParts": [
              {
                "originalName": "lemur",
                "camelCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "pascalCase": {
                  "unsafeName": "Lemur",
                  "safeName": "Lemur"
                },
                "snakeCase": {
                  "unsafeName": "lemur",
                  "safeName": "lemur"
                },
                "screamingSnakeCase": {
                  "unsafeName": "LEMUR",
                  "safeName": "LEMUR"
                }
              }
            ],
            "packagePath": [],
            "file": {
              "originalName": "lemur",
              "camelCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "pascalCase": {
                "unsafeName": "Lemur",
                "safeName": "Lemur"
              },
              "snakeCase": {
                "unsafeName": "lemur",
                "safeName": "lemur"
              },
              "screamingSnakeCase": {
                "unsafeName": "LEMUR",
                "safeName": "LEMUR"
              }
            }
          }
        },
        "location": {
          "method": "DELETE",
          "path": "/lemur/v3/{request_id}"
        },
        "request": {
          "pathParameters": [
            {
              "name": {
                "name": {
                  "originalName": "request_id",
                  "camelCase": {
                    "unsafeName": "requestID",
                    "safeName": "requestID"
                  },
                  "pascalCase": {
                    "unsafeName": "RequestID",
                    "safeName": "RequestID"
                  },
                  "snakeCase": {
                    "unsafeName": "request_id",
                    "safeName": "request_id"
                  },
                  "screamingSnakeCase": {
                    "unsafeName": "REQUEST_ID",
                    "safeName": "REQUEST_ID"
                  }
                },
                "wireValue": "request_id"
              },
              "typeReference": {
                "value": "STRING",
                "type": "primitive"
              }
            }
          ],
          "type": "body"
        },
        "response": {
          "type": "json"
        },
        "examples": []
      }
    },
    "pathParameters": [],
    "environments": {
      "defaultEnvironment": "Default",
      "environments": {
        "baseUrls": [
          {
            "id": "Base",
            "name": {
              "originalName": "Base",
              "camelCase": {
                "unsafeName": "base",
                "safeName": "base"
              },
              "pascalCase": {
                "unsafeName": "Base",
                "safeName": "Base"
              },
              "snakeCase": {
                "unsafeName": "base",
                "safeName": "base"
              },
              "screamingSnakeCase": {
                "unsafeName": "BASE",
                "safeName": "BASE"
              }
            }
          },
          {
            "id": "API",
            "name": {
              "originalName": "API",
              "camelCase": {
                "unsafeName": "api",
                "safeName": "api"
              },
              "pascalCase": {
                "unsafeName": "API",
                "safeName": "API"
              },
              "snakeCase": {
                "unsafeName": "api",
                "safeName": "api"
              },
              "screamingSnakeCase": {
                "unsafeName": "API",
                "safeName": "API"
              }
            }
          }
        ],
        "environments": [
          {
            "id": "Default",
            "name": {
              "originalName": "Default",
              "camelCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "pascalCase": {
                "unsafeName": "Default",
                "safeName": "Default"
              },
              "snakeCase": {
                "unsafeName": "default",
                "safeName": "default"
              },
              "screamingSnakeCase": {
                "unsafeName": "DEFAULT",
                "safeName": "DEFAULT"
              }
            },
            "urls": {
              "Base": "https://api.assemblyai.com",
              "API": "wss://api.assemblyai.com/v2/realtime/ws"
            }
          }
        ],
        "type": "multipleBaseUrls"
      }
    }
  },
  "subpackages": {
    "subpackage_files": {
      "fernFilepath": {
        "allParts": [
          "files"
        ],
        "packagePath": [],
        "file": "files"
      },
      "name": "files",
      "service": "service_files",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_transcript": {
      "docs": "Transcript related operations",
      "fernFilepath": {
        "allParts": [
          "transcript"
        ],
        "packagePath": [],
        "file": "transcript"
      },
      "name": "transcript",
      "service": "service_transcript",
      "types": [
        "type_transcript:TranscriptListRequestStatus"
      ],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_realtime": {
      "docs": "Real-time transcription",
      "fernFilepath": {
        "allParts": [
          "realtime"
        ],
        "packagePath": [],
        "file": "realtime"
      },
      "name": "realtime",
      "service": "service_realtime",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_lemur": {
      "docs": "LeMUR related operations",
      "fernFilepath": {
        "allParts": [
          "lemur"
        ],
        "packagePath": [],
        "file": "lemur"
      },
      "name": "lemur",
      "service": "service_lemur",
      "types": [],
      "errors": [],
      "subpackages": [],
      "hasEndpointsInTree": true
    },
    "subpackage_userId": {
      "fernFilepath": {
        "allParts": [
          {
            "originalName": "userId",
            "camelCase": {
              "unsafeName": "userID",
              "safeName": "userID"
            },
            "pascalCase": {
              "unsafeName": "UserID",
              "safeName": "UserID"
            }
          }
        ],
        "packagePath": [],
        "file": {
          "originalName": "userId",
          "camelCase": {
            "unsafeName": "userID",
            "safeName": "userID"
          },
          "pascalCase": {
            "unsafeName": "UserID",
            "safeName": "UserID"
          }
        }
      },
      "name": {
        "originalName": "userId",
        "camelCase": {
          "unsafeName": "userID",
          "safeName": "userID"
        },
        "pascalCase": {
          "unsafeName": "UserID",
          "safeName": "UserID"
        }
      },
      "types": [
        "type_userId:sendMessage",
        "type_userId:receiveMessage"
      ],
      "errors": [],
      "subpackages": [],
      "websocket": "channel_userId",
      "hasEndpointsInTree": false
    }
  },
  "rootPackage": {
    "fernFilepath": {
      "allParts": [],
      "packagePath": []
    },
    "types": [
      "type_:RedactedAudioResponse",
      "type_:RedactedAudioStatus",
      "type_:SubtitleFormat",
      "type_:WordSearchResponse",
      "type_:WordSearchMatch",
      "type_:WordSearchTimestamp",
      "type_:Timestamp",
      "type_:CreateTranscriptOptionalParameters",
      "type_:SummaryModel",
      "type_:SummaryType",
      "type_:TranscriptBoostParam",
      "type_:TranscriptCustomSpelling",
      "type_:TranscriptUtterance",
      "type_:SubstitutionPolicy",
      "type_:PiiPolicy",
      "type_:TranscriptLanguageCode",
      "type_:TranscriptStatus",
      "type_:TranscriptContentSafetyLabels",
      "type_:TranscriptIabCategoriesResult",
      "type_:Transcript",
      "type_:Chapter",
      "type_:Entity",
      "type_:EntityType",
      "type_:SentimentAnalysisResult",
      "type_:Sentiment",
      "type_:TopicDetectionResultLabelsItem",
      "type_:TopicDetectionResult",
      "type_:ContentSafetyLabel",
      "type_:ContentSafetyLabelResult",
      "type_:SeverityScoreSummary",
      "type_:AutoHighlightsResult",
      "type_:AutoHighlightResult",
      "type_:TranscriptWord",
      "type_:TranscriptSentence",
      "type_:SentencesResponse",
      "type_:TranscriptParagraph",
      "type_:ParagraphsResponse",
      "type_:PageDetails",
      "type_:TranscriptListParameters",
      "type_:TranscriptListItem",
      "type_:TranscriptList",
      "type_:UploadedFile",
      "type_:RealtimeTemporaryTokenResponse",
      "type_:AudioIntelligenceModelStatus",
      "type_:PurgeLemurRequestDataResponse",
      "type_:LemurBaseResponse",
      "type_:LemurSummaryResponse",
      "type_:LemurQuestionAnswerResponse",
      "type_:LemurQuestionAnswer",
      "type_:LemurActionItemsResponse",
      "type_:LemurTaskResponse",
      "type_:LemurBaseParametersContext",
      "type_:LemurBaseParameters",
      "type_:LemurQuestionContext",
      "type_:LemurQuestion",
      "type_:LemurActionItemsParameters",
      "type_:LemurModel",
      "type_:Error",
      "type_:RealtimeBaseMessage",
      "type_:RealtimeMessage",
      "type_:RealtimeError",
      "type_:MessageType",
      "type_:RealtimeTranscriptType",
      "type_:RealtimeTranscript",
      "type_:SessionBegins",
      "type_:SessionTerminated",
      "type_:RealtimeBaseTranscript",
      "type_:PartialTranscript",
      "type_:FinalTranscript",
      "type_:Word",
      "type_:AudioData",
      "type_:TerminateSession"
    ],
    "errors": [
      "error_:BadRequestError",
      "error_:UnauthorizedError",
      "error_:NotFoundError",
      "error_:TooManyRequestsError",
      "error_:InternalServerError",
      "error_:ServiceUnavailableError",
      "error_:GatewayTimeoutError"
    ],
    "subpackages": [
      "subpackage_files",
      "subpackage_transcript",
      "subpackage_realtime",
      "subpackage_lemur",
      "subpackage_userId"
    ],
    "hasEndpointsInTree": true
  },
  "sdkConfig": {
    "isAuthMandatory": false,
    "hasStreamingEndpoints": false,
    "hasPaginatedEndpoints": false,
    "hasFileDownloadEndpoints": false,
    "platformHeaders": {
      "language": "X-Fern-Language",
      "sdkName": "X-Fern-SDK-Name",
      "sdkVersion": "X-Fern-SDK-Version"
    }
  }
}