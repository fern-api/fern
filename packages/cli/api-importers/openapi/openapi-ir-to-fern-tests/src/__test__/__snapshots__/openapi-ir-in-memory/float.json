{
  "type": "openapi",
  "value": {
    "openapi": "3.0.3",
    "info": {
      "title": "Test spec for `float` types specified as number formats.",
      "version": "1.0.0"
    },
    "paths": {
      "/post": {
        "post": {
          "operationId": "Post",
          "requestBody": {
            "required": true,
            "description": "A simple API request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "A simple API response.",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Response"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Request": {
          "description": "A generic request type used throughout the API.\n",
          "properties": {
            "id": {
              "type": "number",
              "format": "float"
            }
          }
        },
        "Response": {
          "description": "A generic response type used throughout the API.\n",
          "properties": {
            "id": {
              "type": "number",
              "format": "float"
            },
            "value": {
              "type": "number",
              "format": "float"
            }
          }
        }
      }
    }
  },
  "settings": {
    "disableExamples": false,
    "discriminatedUnionV2": false,
    "useTitlesAsName": true,
    "optionalAdditionalProperties": true,
    "coerceEnumsToLiterals": true,
    "respectReadonlySchemas": false,
    "respectNullableSchemas": false,
    "onlyIncludeReferencedSchemas": false,
    "inlinePathParameters": false,
    "preserveSchemaIds": false,
    "shouldUseUndiscriminatedUnionsWithLiterals": false,
    "shouldUseIdiomaticRequestNames": false,
    "objectQueryParameters": false,
    "asyncApiNaming": "v1",
    "useBytesForBinaryResponse": false,
    "respectForwardCompatibleEnums": false,
    "additionalPropertiesDefaultsTo": false,
    "typeDatesAsStrings": true,
    "preserveSingleSchemaOneOf": false
  }
}