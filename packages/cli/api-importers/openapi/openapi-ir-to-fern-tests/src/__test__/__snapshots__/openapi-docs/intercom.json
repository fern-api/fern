{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "AttachContactToACompanyRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "Bad Request",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "company not specified",
                    },
                  ],
                  "request_id": "9297dcfc-1896-43a3-a3f9-131238422ed2",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "AttachContactToACompanyRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "32d121d8-fcbf-4c59-9c60-204f7d602f36",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "AttachContactToACompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "99739bbd-2dbe-4ce3-ae91-af23379b5cd7",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "AttachContactToConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "3d1c3371-6ba4-4d5a-9368-ac983292136d",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "AttachContactToConversationRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "1fd64942-5bf0-4a51-a6cb-db4a778bb1f4",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "AttachContactToConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "4f00c4c6-a8f7-436e-bf95-d1adfa315906",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "AttachSubscriptionTypeToContactRequestNotFoundError": {
            "docs": "Resource not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "cf0f6fd6-7c5e-492b-909d-f60b35eea1c4",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Resource not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "3f852f45-1a80-4ade-9bc6-72b377d2bbd8",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "AttachSubscriptionTypeToContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "377d162e-82a5-4148-a26f-29c9c760dadc",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "AttachTagToContactRequestNotFoundError": {
            "docs": "Tag not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "1bbd7e4b-718e-46f4-b682-a429aea78f01",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Tag not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "a1a28017-728a-423b-adc0-2705d375f533",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "AttachTagToContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "63a2828f-107e-4d51-9398-a220b81a7bce",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "AttachTagToConversationRequestNotFoundError": {
            "docs": "Conversation not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Conversation not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Conversation not found",
                    },
                  ],
                  "request_id": "840d35aa-2414-402a-b3c6-763a410e0d16",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "AttachTagToConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "95cacea0-4744-4de8-a2bf-da4419f75732",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "AttachTagToTicketRequestNotFoundError": {
            "docs": "Ticket not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Ticket not found",
                "value": {
                  "errors": [
                    {
                      "code": "ticket_not_found",
                      "message": "Ticket not found",
                    },
                  ],
                  "request_id": "e11d8f55-82fe-4c0d-b4c6-6f22c6a694e9",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "AttachTagToTicketRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "a502f48f-c80d-48fd-bea5-cafe7e24d9f9",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "AutoAssignConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "037980c4-84cb-4d3a-ad64-66e4e563a275",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "AutoAssignConversationRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "9d88a5a7-6df9-42ff-b324-2387db7be984",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "AutoAssignConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "8aeac960-c7fb-41f7-8cc9-cd3d62f6ff92",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ConvertConversationToTicketRequestBadRequestError": {
            "docs": "Bad request",
            "examples": [
              {
                "docs": undefined,
                "name": "Bad request",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Ticket type is not a customer ticket type",
                    },
                  ],
                  "request_id": "74656c1a-0a17-4c80-a7b9-66fa45c6d71b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "ConvertVisitorRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "fe1a587a-e682-4a96-bd30-ea08b726e6fa",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateArticleRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "Bad Request",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "author_id must be in the main body or default locale translated_content object",
                    },
                  ],
                  "request_id": "e0ea220d-8030-4e0c-9fa9-6b40e9ed4fbd",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "CreateArticleRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "f223a1d9-5377-4337-92bb-00fb39157f11",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateCollectionRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "Bad Request",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "Name is a required parameter.",
                    },
                  ],
                  "request_id": "1f4fd741-8681-4c21-911a-47d7bb39d080",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "CreateCollectionRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "8afa14e4-0e7c-4159-8aab-dfa3dcb6a8b4",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "c18ca0d4-ad2c-41e7-9a71-1df806f9c954",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "c7a35217-6720-48bd-a2ae-c2acb5adea30",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "CreateConversationRequestNotFoundError": {
            "docs": "Contact Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "ed0ab0c5-57b8-4413-a7a9-bbc134b40876",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "CreateConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "af9757fc-4e1d-463c-ac9d-788503f04a95",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateDataAttributeRequestBadRequestError": {
            "docs": "Too few options for list",
            "examples": [
              {
                "docs": undefined,
                "name": "Same name already exists",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "You already have 'The One Ring' in your company data. To save this as new people data, use a different name.",
                    },
                  ],
                  "request_id": "bcd93885-3f01-4b92-9918-c96a3f4492e8",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Invalid name",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Your name for this attribute must only contain alphanumeric characters, currency symbols, and hyphens",
                    },
                  ],
                  "request_id": "7420c5e3-22c3-46be-8a23-72fef8f8ec0e",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Attribute already exists",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "You already have 'The One Ring' in your company data. To save this as new company data, use a different name.",
                    },
                  ],
                  "request_id": "c844551a-05d3-4f8c-931a-32e96bf3a508",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Invalid Data Type",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Data Type isn't an option",
                    },
                  ],
                  "request_id": "b8c58b81-8445-473d-8fe3-7880c04f9547",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Too few options for list",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "The Data Attribute model field must be either contact or company",
                    },
                  ],
                  "request_id": "119e3822-3a45-48cf-b5ab-037f27a948c8",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "CreateDataAttributeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "b74d8980-6e99-44db-a3d8-2a65a63fe590",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateDataEventRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "c6b3dcbd-33be-4a80-abb4-c5b3315250d0",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateMessageRequestBadRequestError": {
            "docs": "No body supplied for email message",
            "examples": [
              {
                "docs": undefined,
                "name": "No body supplied for message",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Body is required",
                    },
                  ],
                  "request_id": "4a52a34f-c7e2-4e70-adf2-ea7f41beb2a1",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "No body supplied for email message",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Body is required",
                    },
                  ],
                  "request_id": "7d54191b-c0fc-4860-a01c-9da6b4e45b7f",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "CreateMessageRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "fab7034a-78bd-4413-a652-8f38783e7bf1",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "CreateMessageRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "ee3ea56e-d0ce-47db-871a-57740e165e5c",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateMessageRequestUnprocessableEntityError": {
            "docs": "No subject supplied for email message",
            "examples": [
              {
                "docs": undefined,
                "name": "No subject supplied for email message",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_not_found",
                      "message": "No subject supplied for email message",
                    },
                  ],
                  "request_id": "f54ba906-3255-4fc6-a660-0dab0043ff2b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 422,
            "type": "Error",
          },
          "CreateNewsItemRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "c36202f1-6bf3-4ea6-9442-192123f506b0",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateNoteRequestNotFoundError": {
            "docs": "Contact not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Admin not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "d7c69ce6-3195-46be-b2cb-0dce355d2919",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "2e3bd274-9ac6-43c3-a419-bcc8e6a03a1d",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "CreateOrUpdateCompanyRequestBadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "Bad Request",
                "value": {
                  "errors": [
                    {
                      "code": "bad_request",
                      "message": "bad 'test' parameter",
                    },
                  ],
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "CreateOrUpdateCompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "9b0d6fb9-d2d7-4904-a13c-97557a802323",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreatePhoneSwitchRequestBadRequestError": {
            "docs": "bad request - invalid number",
            "examples": [
              {
                "docs": undefined,
                "name": "bad request - exception sending sms",
                "value": {
                  "error_key": "sms_failed",
                  "message": "SMS was not sent due to an unknown error",
                },
              },
              {
                "docs": undefined,
                "name": "bad request - invalid number",
                "value": {
                  "error_key": "invalid_phone_number",
                  "message": "Invalid phone number",
                },
              },
            ],
            "status-code": 400,
            "type": "unknown",
          },
          "CreatePhoneSwitchRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "5da7a3e7-dcb0-4378-8575-0a0e9bae3862",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreatePhoneSwitchRequestUnprocessableEntityError": {
            "docs": "unprocessable entity",
            "examples": [
              {
                "docs": undefined,
                "name": "unprocessable entity",
                "value": {
                  "error_key": "some_error",
                },
              },
            ],
            "status-code": 422,
            "type": "unknown",
          },
          "CreateTagRequestBadRequestError": {
            "docs": "Invalid parameters",
            "examples": [
              {
                "docs": undefined,
                "name": "Invalid parameters",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "invalid tag parameters",
                    },
                  ],
                  "request_id": "a7afe3c5-be52-4b69-9268-50ef1d917a1b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "CreateTagRequestNotFoundError": {
            "docs": "User  not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company not found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "f0f84d9b-3c51-4904-9c21-34faba76ebf5",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "User  not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "786848c6-5b9f-4e9b-aa78-2bdec45a09f5",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "CreateTagRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "3609e8b1-a6aa-4c57-a994-3d95743f20a2",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateTicketRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "745c921a-7c5a-40d4-ab28-6d28a8d2ed47",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateTicketTypeAttributeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "3bc672fa-e051-4ede-b6e9-79f518231ba9",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "CreateTicketTypeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "7c4784fe-d3e4-4182-b9c4-918bdf253eef",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DataEventSummariesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "110801d1-2f7b-436f-8f03-2245545a1432",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DeleteArticleRequestNotFoundError": {
            "docs": "Article Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Article Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "60da5f23-613c-4f84-84bd-e9dbd3d67187",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DeleteArticleRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "85d43c53-f28f-4295-b937-9a43ea71d0c3",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DeleteCollectionRequestNotFoundError": {
            "docs": "collection Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "collection Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "a35712b4-90b6-47fb-843d-757d9fdd81e6",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DeleteCollectionRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "e00bc89b-b9a9-4bc2-84a0-5c9d4710bfcf",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DeleteCompanyRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "35a9b551-331e-499e-a63f-20396bfd29f5",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DeleteCompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "0a1a5065-69fe-47a4-9804-4cb2347671ef",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DeleteContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "0bce3945-d2ec-4b8e-a790-b16fd52d9f11",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DeleteNewsItemRequestNotFoundError": {
            "docs": "News Item Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "News Item Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "a191b999-6f71-4676-a8db-1a79ccc4f114",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DeleteNewsItemRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "521cb8a5-4d47-43dd-94cb-ef54f6f8ce0a",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DeleteTagRequestBadRequestError": {
            "docs": "Tag has dependent objects",
            "examples": [
              {
                "docs": undefined,
                "name": "Tag has dependent objects",
                "value": {
                  "errors": [
                    {
                      "code": "tag_has_dependent_objects",
                      "message": "Unable to delete Tag with dependent objects. Segments: Seg 1.",
                    },
                  ],
                  "request_id": "41086388-9b3b-4e07-9633-502b9b10c926",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "DeleteTagRequestNotFoundError": {
            "docs": "Resource not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Resource not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "111586bb-ad78-43b9-b0a0-bf864d9a3744",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DeleteTagRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "3dcedf54-ed30-4337-8992-94e36900e695",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DetachContactFromACompanyRequestNotFoundError": {
            "docs": "Contact Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "cd4f1648-724c-45f0-b6e1-72a1bc6479ee",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Contact Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "d316defc-0a2f-49e7-b8ff-4cb6ccf46c90",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DetachContactFromACompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "d8c1ab2d-4044-4c4f-98f0-176860747112",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DetachContactFromConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "d30f18d4-2e0a-4528-a66b-4590b733713c",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "DetachContactFromConversationRequestNotFoundError": {
            "docs": "Contact not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Conversation not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "579f0f7a-d773-41d6-9d36-8cc0b3fbcc41",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "44531412-2973-4b92-b14d-80abac5c1b4d",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DetachContactFromConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "d35f1b37-765c-4afe-8738-81c0560710a6",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DetachContactFromConversationRequestUnprocessableEntityError": {
            "docs": "Last customer",
            "examples": [
              {
                "docs": undefined,
                "name": "Last customer",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Removing the last customer is not allowed",
                    },
                  ],
                  "request_id": "35a0444f-8a1e-40e9-a5fc-dd1ae2df8bc6",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 422,
            "type": "Error",
          },
          "DetachSubscriptionTypeToContactRequestNotFoundError": {
            "docs": "Resource not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "7bc429e4-e887-4f53-b69c-94e6e55d2125",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Resource not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "66ebc1f5-5e02-4584-8028-f2559a41e8df",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DetachSubscriptionTypeToContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "99fba0c6-2252-4658-abd2-1d2ff16a508b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DetachTagFromContactRequestNotFoundError": {
            "docs": "Tag not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "6f735483-c309-4e94-b9ab-143aedc0c691",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Tag not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "9e780671-29b3-4913-b4be-15234ea0bc6a",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DetachTagFromContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "e97d9f1b-8c9e-4caf-b473-3bce411c697e",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DetachTagFromConversationRequestNotFoundError": {
            "docs": "Tag not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Conversation not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Conversation not found",
                    },
                  ],
                  "request_id": "f78f63ba-911d-47b8-a389-b33e3ccbe77e",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Tag not found",
                "value": {
                  "errors": [
                    {
                      "code": "tag_not_found",
                      "message": "Tag not found",
                    },
                  ],
                  "request_id": "0d00d069-2cf1-496f-b887-a4db74ee320d",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DetachTagFromConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "f083d6b1-e9d2-43b3-86df-67539007fc3e",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "DetachTagFromTicketRequestNotFoundError": {
            "docs": "Tag not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Ticket not found",
                "value": {
                  "errors": [
                    {
                      "code": "ticket_not_found",
                      "message": "Ticket not found",
                    },
                  ],
                  "request_id": "ffa08bb4-3994-4132-b9e3-14837e0723e8",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Tag not found",
                "value": {
                  "errors": [
                    {
                      "code": "tag_not_found",
                      "message": "Tag not found",
                    },
                  ],
                  "request_id": "d2385995-502c-4c03-bf4b-93ef3d24037b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "DetachTagFromTicketRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "0d3be117-0a9e-4e88-9a05-4fdd7f93d7bc",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "FindTagRequestNotFoundError": {
            "docs": "Tag not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Tag not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "20b89fb6-f224-4f81-98ca-4cb4b36df959",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "FindTagRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "76a1d79d-3f0d-49bb-8d15-38d1ae6df738",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "GetTicketRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "e7ba89f2-3bc8-4fc3-97bc-56f62f342680",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "GetTicketTypeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "b0100f38-119c-4e30-8560-a25561d97c66",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "LisDataAttributesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "6e76e914-a34d-4125-8310-62fdfc4e651e",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "LisDataEventsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "bfdcc6de-2dcb-4725-acc7-232c10838586",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListActivityLogsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "06d9eefd-2b3a-48f7-938a-5a10383a4ebf",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListAdminsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "4ba8121e-4a4a-4668-adb2-363c561f3c52",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListAllCollectionsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "ccedcb48-7d08-4cc9-bcff-0622f70daf74",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListAllCompaniesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "6f8cb4ca-9a95-43bd-aee1-597b85d1d13f",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListArticlesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "86d69044-5966-428e-9a40-2b39fba3f823",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListAttachedContactsRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "a6381081-a166-4e8e-952d-38bb2cd1c2b4",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ListAttachedContactsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "fe20b681-f988-4154-bec9-a5087fe0842e",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListAttachedSegmentsForCompaniesRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "22add598-fd33-4c34-971f-cf215117aab3",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ListAttachedSegmentsForCompaniesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "66fcc654-48ed-4f53-824e-831b5c96c9dc",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListCompaniesForAContactRequestNotFoundError": {
            "docs": "Contact not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "b9d7374d-1780-4668-bb62-0e1ff9cdab45",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ListCompaniesForAContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "d211ec8c-df9b-420c-86df-23c27ad54bc5",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListContactsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "d5bac7ff-7961-4fe5-8aed-6f1b031b38af",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListConversationsRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "a91eac55-8d70-454d-a01d-c6bb875aaa35",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "ListConversationsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "18db64a8-7a08-4967-9ec6-0416178306f9",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListHelpCentersRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "c96a4779-a06d-45bb-aa39-eb96c587c2c7",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListLiveNewsfeedItemsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "de07bbcf-64ff-4fc8-a7e5-fcbe772b85a5",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListNewsItemsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "7b27151d-7bb0-402e-87fe-5780690d9f32",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListNewsfeedsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "d00f8d67-1e7c-464b-b0b7-b2409d706076",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListNotesRequestNotFoundError": {
            "docs": "Contact not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "e93f90a6-4c85-4dbf-b063-96b649318371",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ListSegmentsForAContactRequestNotFoundError": {
            "docs": "Contact not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "7d4ab1a9-5990-4338-b5d9-0f3f55f1acb7",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ListSegmentsForAContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "d2927c64-9c5a-4593-997b-381f8c2356ea",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListSegmentsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "d70c184d-852a-4f67-8298-3cf9a327adb3",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListSubscriptionTypesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "5fb6b003-d6a6-4641-b71b-c5c468c87448",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListSubscriptionsForAContactRequestNotFoundError": {
            "docs": "Contact not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "3f481052-cf49-4b95-a492-734223865981",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ListSubscriptionsForAContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "82a95655-569d-4e5d-b0d9-f8a6c7a379f3",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListTagsForAContactRequestNotFoundError": {
            "docs": "Contact not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Contact not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "User Not Found",
                    },
                  ],
                  "request_id": "2b513026-b78c-4c67-b073-da0266f62cc7",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ListTagsForAContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "97383559-0fb0-4084-8a9a-8e3407c46108",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListTagsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "c83a3efe-433a-4555-a5e2-e393588be29f",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListTeamsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "006b2c8f-9a29-463e-be69-ad213576aee6",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ListTicketTypesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "50823491-2ab1-4b84-9700-2d92c4f367fd",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ManageConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "a7e069bb-f013-45bc-8e0a-f58c3de4e034",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "ManageConversationRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "1bfc14e1-07ef-4999-9448-f029b112cf1b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ManageConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "ae0581d2-199e-437c-bf51-1eb9fe2e12fc",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "MergeContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "57b64228-0e60-4e35-833d-39c4e4067dde",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RedactConversationRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "conversation_part_or_message_not_found",
                      "message": "Conversation part or message not found",
                    },
                  ],
                  "request_id": "0c016386-49f4-431f-92dc-7e739cbf98e1",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RedactConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "1b830d07-a249-4ff8-a7bf-41bf83fd53b2",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ReplyConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "9fe5809c-cf0b-4a0f-af80-9913d3beb1eb",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "ReplyConversationRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "8193a639-aba8-4b0e-9fdd-ee48807e3ee7",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ReplyConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "7435aa28-13bd-40b1-ba99-66009e92a1ba",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ReplyTicketRequestBadRequestError": {
            "docs": "User reply",
            "examples": [
              {
                "docs": undefined,
                "name": "User reply",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_mismatch",
                      "message": "User replies are not allowed on Backoffice tickets",
                    },
                  ],
                  "request_id": "b8b42c55-347c-4704-b4c1-92220c01f4ac",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "ReplyTicketRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "c23e8dab-6102-483c-bb1b-c62923be35ab",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "ReplyTicketRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "bb012854-cca8-4fa7-972e-6c38204e8294",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveACompanyByIdRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "b49593ed-49a6-4497-8fb7-220ff74527f6",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveACompanyByIdRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "c4e2fcb8-815e-4bee-80c7-9d5b1ab0f6fe",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveAdminRequestNotFoundError": {
            "docs": "Admin not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Admin not found",
                "value": {
                  "errors": [
                    {
                      "code": "admin_not_found",
                      "message": "Admin not found",
                    },
                  ],
                  "request_id": "989bdb0b-1e8c-46cc-8953-9733dad40562",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveAdminRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "83978032-1473-4696-b755-b497d46a23cf",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveArticleRequestNotFoundError": {
            "docs": "Article not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Article not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "99c73902-e8ea-4872-b412-1d55ce4582fb",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveArticleRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "62ab4791-7e4d-4400-a56b-b06a0ce3ba1a",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveCollectionRequestNotFoundError": {
            "docs": "Collection not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Collection not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "2970f0f3-7020-4382-8892-eac24818ca88",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveCollectionRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "bf1acd76-8c6e-45f4-8dbe-54391843270a",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveCompanyRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "c97dd75f-a434-4c83-a8e8-c4d1887d6c48",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveCompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "6ef54f1c-70a4-4779-b3a6-29e4fd65d9dd",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "c7b0a10f-d482-4352-8d7b-1ad26b902473",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "RetrieveConversationRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "978c1e65-1eba-4995-9acb-ff8f33b283e3",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "b1f6adfd-f7da-4880-8d11-d842235126ae",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveHelpCenterRequestNotFoundError": {
            "docs": "Collection not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Collection not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "c6e7d3f6-8a46-460e-8264-e07c2e7302aa",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveHelpCenterRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "794a475b-0155-40b2-a288-ba0d48fdbd3f",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveNewsItemRequestNotFoundError": {
            "docs": "News Item Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "News Item Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "0f4b439e-9b57-4019-886e-15cc08582914",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveNewsItemRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "cc6af01d-81e3-4a74-8a62-807a3239e1ad",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveNewsfeedRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "185ce494-34e2-4cda-85cb-c51ad7281292",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveNoteRequestNotFoundError": {
            "docs": "Note not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Note not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "7e37eb4e-9f1e-47fa-a393-8d9b2c20983a",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveNoteRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "b29ebc05-ba35-4db8-aac6-d74617769643",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveSegmentRequestNotFoundError": {
            "docs": "Segment not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Segment not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "fe79fa5e-c8eb-40a6-be76-d618833c2840",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveSegmentRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "a9c190ff-16eb-43f9-94fc-7c22da2766af",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveTeamRequestNotFoundError": {
            "docs": "Team not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Team not found",
                "value": {
                  "errors": [
                    {
                      "code": "team_not_found",
                      "message": "Team not found",
                    },
                  ],
                  "request_id": "4745dfce-7275-4864-abfd-44e0d84bf52a",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveTeamRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "110ad8e4-99ed-461a-bd93-92a5cdbaa6b2",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "RetrieveVisitorWithUserIdRequestNotFoundError": {
            "docs": "Visitor not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Visitor not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Visitor Not Found",
                    },
                  ],
                  "request_id": "7359afef-98f5-4b22-9de7-902f7a214729",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "RetrieveVisitorWithUserIdRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "25dace4f-4916-492c-823b-f0cca227dff0",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ScrollOverAllCompaniesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "4b3ca8b1-8983-4fb8-abc5-b20a4ece5d32",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "SearchArticlesRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "626c6766-ee1a-489d-b87a-230d9b980c7d",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "SearchContactsRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "2b28c47b-8fa3-4e17-8fc1-6ba80f1cc844",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "SetAwayAdminRequestNotFoundError": {
            "docs": "Admin not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Admin not found",
                "value": {
                  "errors": [
                    {
                      "code": "admin_not_found",
                      "message": "Admin for admin_id not found",
                    },
                  ],
                  "request_id": "9818bd03-9cc6-4ab8-8e7c-20a45ac58e97",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "SetAwayAdminRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "18722269-a019-46c4-87d7-50d0f6f8a990",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "ShowContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "f70085f1-f655-43ee-9585-d2061b260fcd",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateArticleRequestNotFoundError": {
            "docs": "Article Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Article Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "891b6ff4-181f-4b98-861b-d34ef16bfc4b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "UpdateArticleRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "15b4f214-c670-43d7-ad8f-648791fddf9b",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateCollectionRequestNotFoundError": {
            "docs": "Collection Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Collection Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "35e7f185-f547-4ae1-a23d-afc9027fc5a6",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "UpdateCollectionRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "67002700-07f8-4a56-a9bc-464254c3a5bd",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateCompanyRequestNotFoundError": {
            "docs": "Company Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Company Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "company_not_found",
                      "message": "Company Not Found",
                    },
                  ],
                  "request_id": "b1ce72df-630f-4925-b212-fca6e833eb8d",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "UpdateCompanyRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "3f26a216-ddff-4782-9529-514f5bad56ea",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateContactRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "b1b88e2d-938c-4a26-b65d-26ff65a0af36",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateConversationRequestForbiddenError": {
            "docs": "API plan restricted",
            "examples": [
              {
                "docs": undefined,
                "name": "API plan restricted",
                "value": {
                  "errors": [
                    {
                      "code": "api_plan_restricted",
                      "message": "Active subscription needed.",
                    },
                  ],
                  "request_id": "cf6fb162-88c9-45ec-9f97-c3fcad93b7c1",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 403,
            "type": "Error",
          },
          "UpdateConversationRequestNotFoundError": {
            "docs": "Not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Not found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "e4c692dd-cccd-46bf-834a-cda7a3a9029c",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "UpdateConversationRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "58e6b9ee-4a28-4597-9c20-faf34b6894dc",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateDataAttributeRequestBadRequestError": {
            "docs": "Too few options in list",
            "examples": [
              {
                "docs": undefined,
                "name": "Too few options in list",
                "value": {
                  "errors": [
                    {
                      "code": "parameter_invalid",
                      "message": "Options isn't an array",
                    },
                  ],
                  "request_id": "6615f20c-01df-443c-9ea1-c954ba6b09d6",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 400,
            "type": "Error",
          },
          "UpdateDataAttributeRequestNotFoundError": {
            "docs": "Attribute Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "Attribute Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "field_not_found",
                      "message": "We couldn't find that data attribute to update",
                    },
                  ],
                  "request_id": "2680a225-4f79-4098-8438-8db993c639fe",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "UpdateDataAttributeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "0cfc97c0-32be-4e68-aef2-f5744e4e85f7",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateDataAttributeRequestUnprocessableEntityError": {
            "docs": "Has Dependant Object",
            "examples": [
              {
                "docs": undefined,
                "name": "Has Dependant Object",
                "value": {
                  "errors": [
                    {
                      "code": "data_invalid",
                      "message": "The Data Attribute you are trying to archive has a dependant object",
                    },
                  ],
                  "request_id": "fbc508f1-9cbf-4134-90ea-baa1065760d2",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 422,
            "type": "Error",
          },
          "UpdateNewsItemRequestNotFoundError": {
            "docs": "News Item Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "News Item Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Resource Not Found",
                    },
                  ],
                  "request_id": "fe6e217d-70bc-4090-b33a-b32ec0e6a391",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "UpdateNewsItemRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "f780a591-4aa2-4382-80c4-e0f2d655bf2e",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateTicketRequestNotFoundError": {
            "docs": "Assignee not found",
            "examples": [
              {
                "docs": undefined,
                "name": "Admin not found",
                "value": {
                  "errors": [
                    {
                      "code": "assignee_not_found",
                      "message": "Assignee not found",
                    },
                  ],
                  "request_id": "809aceaa-c073-4e2a-96c3-a25e15576946",
                  "type": "error.list",
                },
              },
              {
                "docs": undefined,
                "name": "Assignee not found",
                "value": {
                  "errors": [
                    {
                      "code": "assignee_not_found",
                      "message": "Assignee not found",
                    },
                  ],
                  "request_id": "639b5b51-1eb9-4c06-8de4-d9b0e30fff05",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "unknown",
          },
          "UpdateTicketRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "e5202025-e8f9-400a-9107-192ae8bfd50c",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateTicketTypeAttributeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "6e45414c-e627-4769-bdbd-d51f2c19e1e9",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateTicketTypeRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "2b0554fe-ba10-41d4-ab7b-715c2b7b8e47",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
          "UpdateVisitorRequestNotFoundError": {
            "docs": "visitor Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "visitor Not Found",
                "value": {
                  "errors": [
                    {
                      "code": "not_found",
                      "message": "Visitor Not Found",
                    },
                  ],
                  "request_id": "1f35dc86-17d2-4bfe-8cb1-9afa74adc24c",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 404,
            "type": "Error",
          },
          "UpdateVisitorRequestUnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "Unauthorized",
                "value": {
                  "errors": [
                    {
                      "code": "unauthorized",
                      "message": "Access Token Invalid",
                    },
                  ],
                  "request_id": "82df3971-fb7c-410d-a919-e8bc1b3d991a",
                  "type": "error.list",
                },
              },
            ],
            "status-code": 401,
            "type": "Error",
          },
        },
        "imports": {
          "admins": "admins.yml",
          "aiContentSource": "aiContentSource.yml",
          "articles": "articles.yml",
          "companies": "companies.yml",
          "contacts": "contacts.yml",
          "conversations": "conversations.yml",
          "customObjectInstances": "customObjectInstances.yml",
          "dataAttributes": "dataAttributes.yml",
          "dataEvents": "dataEvents.yml",
          "helpCenter": "helpCenter.yml",
          "news": "news.yml",
          "notes": "notes.yml",
          "segments": "segments.yml",
          "subscriptionTypes": "subscriptionTypes.yml",
          "tags": "tags.yml",
          "teams": "teams.yml",
          "tickets": "tickets.yml",
        },
        "types": {
          "ActivityLog": {
            "docs": "Activities performed by Admins.",
            "inline": undefined,
            "properties": {
              "activity_description": {
                "docs": "A sentence or two describing the activity.",
                "type": "optional<string>",
              },
              "activity_type": {
                "type": "optional<ActivityLogActivityType>",
              },
              "created_at": {
                "docs": "The time the activity was created.",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "The id representing the activity.",
                "type": "optional<string>",
              },
              "metadata": {
                "type": "optional<ActivityLogMetadata>",
              },
              "performed_by": {
                "docs": "Details about the Admin involved in the activity.",
                "type": "optional<ActivityLogPerformedBy>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogActivityType": {
            "enum": [
              "admin_assignment_limit_change",
              "admin_away_mode_change",
              "admin_deletion",
              "admin_deprovisioned",
              "admin_impersonation_end",
              "admin_impersonation_start",
              "admin_invite_change",
              "admin_invite_creation",
              "admin_invite_deletion",
              "admin_login_failure",
              "admin_login_success",
              "admin_logout",
              "admin_password_reset_request",
              "admin_password_reset_success",
              "admin_permission_change",
              "admin_provisioned",
              "admin_two_factor_auth_change",
              "admin_unauthorized_sign_in_method",
              "app_admin_join",
              "app_authentication_method_change",
              "app_data_deletion",
              "app_data_export",
              "app_google_sso_domain_change",
              "app_identity_verification_change",
              "app_name_change",
              "app_outbound_address_change",
              "app_package_installation",
              "app_package_token_regeneration",
              "app_package_uninstallation",
              "app_team_creation",
              "app_team_deletion",
              "app_team_membership_modification",
              "app_timezone_change",
              "app_webhook_creation",
              "app_webhook_deletion",
              "articles_in_messenger_enabled_change",
              "bulk_delete",
              "bulk_export",
              "campaign_deletion",
              "campaign_state_change",
              "conversation_part_deletion",
              "conversation_topic_change",
              "conversation_topic_creation",
              "conversation_topic_deletion",
              "help_center_settings_change",
              "inbound_conversations_change",
              "inbox_access_change",
              "message_deletion",
              "message_state_change",
              "messenger_look_and_feel_change",
              "messenger_search_required_change",
              "messenger_spaces_change",
              "office_hours_change",
              "role_change",
              "role_creation",
              "role_deletion",
              "ruleset_activation_title_preview",
              "ruleset_creation",
              "ruleset_deletion",
              "search_browse_enabled_change",
              "search_browse_required_change",
              "seat_change",
              "seat_revoke",
              "security_settings_change",
              "temporary_expectation_change",
              "upfront_email_collection_change",
              "welcome_message_change",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogList": {
            "docs": "A paginated list of activity logs.",
            "inline": undefined,
            "properties": {
              "activity_logs": {
                "docs": "An array of activity logs",
                "type": "optional<list<optional<ActivityLog>>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `activity_log.list`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogMetadata": {
            "docs": "Additional data provided about Admin activity.",
            "inline": undefined,
            "properties": {
              "auto_changed": {
                "docs": "Indicates if the status was changed automatically or manually.",
                "type": "optional<string>",
              },
              "away_mode": {
                "docs": "The away mode status which is set to true when away and false when returned.",
                "type": "optional<boolean>",
              },
              "away_status_reason": {
                "docs": "The reason the Admin is away.",
                "type": "optional<string>",
              },
              "external_id": {
                "docs": "The unique identifier for the contact which is provided by the Client.",
                "type": "optional<string>",
              },
              "reassign_conversations": {
                "docs": "Indicates if conversations should be reassigned while an Admin is away.",
                "type": "optional<boolean>",
              },
              "sign_in_method": {
                "docs": "The way the admin signed in.",
                "type": "optional<string>",
              },
              "source": {
                "docs": "The action that initiated the status change.",
                "type": "optional<string>",
              },
              "update_by": {
                "docs": "The ID of the Admin who initiated the activity.",
                "type": "optional<integer>",
              },
              "update_by_name": {
                "docs": "The name of the Admin who initiated the activity.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ActivityLogPerformedBy": {
            "docs": "Details about the Admin involved in the activity.",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The email of the admin.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The id representing the admin.",
                "type": "optional<string>",
              },
              "ip": {
                "docs": "The IP address of the admin.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `admin`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AddressableList": {
            "docs": "A list used to access other resources from a parent model.",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The id of the addressable object",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The addressable object type",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "url": {
                "docs": "Url to get more company resources for this contact",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Admin": {
            "docs": "Admins are the teammate accounts that have access to a workspace",
            "inline": undefined,
            "properties": {
              "app": {
                "docs": "App that the admin belongs to.",
                "type": "optional<App>",
              },
              "avatar": {
                "docs": "This object represents the avatar associated with the admin.",
                "type": "optional<AdminWithAppAvatar>",
              },
              "away_mode_enabled": {
                "docs": "Identifies if this admin is currently set in away mode.",
                "type": "optional<boolean>",
              },
              "away_mode_reassign": {
                "docs": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox.",
                "type": "optional<boolean>",
              },
              "email": {
                "docs": "The email of the admin.",
                "type": "optional<string>",
              },
              "email_verified": {
                "docs": "Identifies if this admin's email is verified.",
                "type": "optional<boolean>",
              },
              "has_inbox_seat": {
                "docs": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The id representing the admin.",
                "type": "optional<string>",
              },
              "job_title": {
                "docs": "The job title of the admin.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the admin.",
                "type": "optional<string>",
              },
              "team_ids": {
                "docs": "This is a list of ids of the teams that this admin is part of.",
                "type": "optional<list<integer>>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `admin`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminPriorityLevel": {
            "docs": "Admin priority levels for the team",
            "inline": undefined,
            "properties": {
              "primary_admin_ids": {
                "docs": "The primary admin ids for the team",
                "type": "optional<list<integer>>",
              },
              "secondary_admin_ids": {
                "docs": "The secondary admin ids for the team",
                "type": "optional<list<integer>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminReplyConversationRequest": {
            "docs": "Payload of the request to reply on behalf of an admin",
            "inline": undefined,
            "properties": {
              "admin_id": {
                "docs": "The id of the admin who is authoring the comment.",
                "type": "string",
              },
              "attachment_files": {
                "docs": "A list of files that will be added as attachments. You can include up to 10 files",
                "type": "optional<list<ConversationAttachmentFiles>>",
              },
              "attachment_urls": {
                "docs": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
                "type": "optional<list<string>>",
              },
              "body": {
                "docs": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the reply was created. If not provided, the current time will be used.",
                "type": "optional<integer>",
              },
              "message_type": "AdminReplyConversationRequestMessageType",
              "type": "literal<"admin">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminReplyConversationRequestMessageType": {
            "enum": [
              "comment",
              "note",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminReplyTicketRequest": {
            "docs": "Payload of the request to reply on behalf of an admin",
            "inline": undefined,
            "properties": {
              "admin_id": {
                "docs": "The id of the admin who is authoring the comment.",
                "type": "string",
              },
              "attachment_urls": {
                "docs": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
                "type": "optional<list<string>>",
              },
              "body": {
                "docs": "The text body of the reply. Notes accept some HTML formatting. Must be present for comment and note message types.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the reply was created. If not provided, the current time will be used.",
                "type": "optional<integer>",
              },
              "message_type": "AdminReplyTicketRequestMessageType",
              "reply_options": {
                "docs": "The quick reply options to display. Must be present for quick_reply message types.",
                "type": "optional<list<AdminReplyTicketRequestReplyOptionsItem>>",
              },
              "type": "literal<"admin">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminReplyTicketRequestMessageType": {
            "enum": [
              "comment",
              "note",
              "quick_reply",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminReplyTicketRequestReplyOptionsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "text": {
                "docs": "The text to display in this quick reply option.",
                "type": "string",
              },
              "uuid": {
                "docs": "A unique identifier for this quick reply option. This value will be available within the metadata of the comment ticket part that is created when a user clicks on this reply option.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AdminWithAppAvatar": {
            "docs": "This object represents the avatar associated with the admin.",
            "inline": true,
            "properties": {
              "image_url": {
                "docs": "This object represents the avatar associated with the admin.",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "type": {
                "default": "avatar",
                "docs": "This is a string that identifies the type of the object. It will always have the value `avatar`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Admins": {
            "docs": "A list of admins associated with a given workspace.",
            "inline": undefined,
            "properties": {
              "admins": {
                "docs": "A list of admins associated with a given workspace.",
                "type": "optional<list<optional<admins.Admin>>>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `admin.list`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "App": {
            "docs": "App is a workspace on Intercom",
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "When the app was created.",
                "type": "optional<integer>",
              },
              "id_code": {
                "docs": "The id of the app.",
                "type": "optional<string>",
              },
              "identity_verification": {
                "docs": "Whether or not the app uses identity verification.",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "The name of the app.",
                "type": "optional<string>",
              },
              "region": {
                "docs": "The Intercom region the app is located in.",
                "type": "optional<string>",
              },
              "timezone": {
                "docs": "The timezone of the region where the app is located.",
                "type": "optional<string>",
              },
              "type": {
                "default": "app",
                "docs": "",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleContent": {
            "docs": "The Content of an Article.",
            "inline": undefined,
            "properties": {
              "author_id": {
                "docs": "The ID of the author of the article.",
                "type": "optional<integer>",
              },
              "body": {
                "docs": "The body of the article.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time when the article was created (seconds).",
                "type": "optional<integer>",
              },
              "description": {
                "docs": "The description of the article.",
                "type": "optional<string>",
              },
              "state": {
                "docs": "Whether the article is `published` or is a `draft` .",
                "type": "optional<ArticleContentState>",
              },
              "title": {
                "docs": "The title of the article.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of object - `article_content` .",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "The time when the article was last updated (seconds).",
                "type": "optional<integer>",
              },
              "url": {
                "docs": "The URL of the article.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleContentState": {
            "docs": "Whether the article is `published` or is a `draft` .",
            "enum": [
              "published",
              "draft",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleStatistics": {
            "docs": "The statistics of an article.",
            "inline": undefined,
            "properties": {
              "conversions": {
                "docs": "The number of conversations started from the article.",
                "type": "optional<integer>",
              },
              "happy_reaction_percentage": {
                "docs": "The percentage of happy reactions the article has received against other types of reaction.",
                "type": "optional<float>",
              },
              "neutral_reaction_percentage": {
                "docs": "The percentage of neutral reactions the article has received against other types of reaction.",
                "type": "optional<float>",
              },
              "reactions": {
                "docs": "The number of total reactions the article has received.",
                "type": "optional<integer>",
              },
              "sad_reaction_percentage": {
                "docs": "The percentage of sad reactions the article has received against other types of reaction.",
                "type": "optional<float>",
              },
              "type": {
                "docs": "The type of object - `article_statistics`.",
                "type": "optional<literal<"article_statistics">>",
              },
              "views": {
                "docs": "The number of total views the article has received.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleTranslatedContent": {
            "docs": "The Translated Content of an Article. The keys are the locale codes and the values are the translated content of the article.",
            "inline": undefined,
            "properties": {
              "ar": {
                "docs": "The content of the article in Arabic",
                "type": "optional<ArticleContent>",
              },
              "bg": {
                "docs": "The content of the article in Bulgarian",
                "type": "optional<ArticleContent>",
              },
              "bs": {
                "docs": "The content of the article in Bosnian",
                "type": "optional<ArticleContent>",
              },
              "ca": {
                "docs": "The content of the article in Catalan",
                "type": "optional<ArticleContent>",
              },
              "cs": {
                "docs": "The content of the article in Czech",
                "type": "optional<ArticleContent>",
              },
              "da": {
                "docs": "The content of the article in Danish",
                "type": "optional<ArticleContent>",
              },
              "de": {
                "docs": "The content of the article in German",
                "type": "optional<ArticleContent>",
              },
              "el": {
                "docs": "The content of the article in Greek",
                "type": "optional<ArticleContent>",
              },
              "en": {
                "docs": "The content of the article in English",
                "type": "optional<ArticleContent>",
              },
              "es": {
                "docs": "The content of the article in Spanish",
                "type": "optional<ArticleContent>",
              },
              "et": {
                "docs": "The content of the article in Estonian",
                "type": "optional<ArticleContent>",
              },
              "fi": {
                "docs": "The content of the article in Finnish",
                "type": "optional<ArticleContent>",
              },
              "fr": {
                "docs": "The content of the article in French",
                "type": "optional<ArticleContent>",
              },
              "he": {
                "docs": "The content of the article in Hebrew",
                "type": "optional<ArticleContent>",
              },
              "hr": {
                "docs": "The content of the article in Croatian",
                "type": "optional<ArticleContent>",
              },
              "hu": {
                "docs": "The content of the article in Hungarian",
                "type": "optional<ArticleContent>",
              },
              "id": {
                "docs": "The content of the article in Indonesian",
                "type": "optional<ArticleContent>",
              },
              "it": {
                "docs": "The content of the article in Italian",
                "type": "optional<ArticleContent>",
              },
              "ja": {
                "docs": "The content of the article in Japanese",
                "type": "optional<ArticleContent>",
              },
              "ko": {
                "docs": "The content of the article in Korean",
                "type": "optional<ArticleContent>",
              },
              "lt": {
                "docs": "The content of the article in Lithuanian",
                "type": "optional<ArticleContent>",
              },
              "lv": {
                "docs": "The content of the article in Latvian",
                "type": "optional<ArticleContent>",
              },
              "mn": {
                "docs": "The content of the article in Mongolian",
                "type": "optional<ArticleContent>",
              },
              "nb": {
                "docs": "The content of the article in Norwegian",
                "type": "optional<ArticleContent>",
              },
              "nl": {
                "docs": "The content of the article in Dutch",
                "type": "optional<ArticleContent>",
              },
              "pl": {
                "docs": "The content of the article in Polish",
                "type": "optional<ArticleContent>",
              },
              "pt": {
                "docs": "The content of the article in Portuguese (Portugal)",
                "type": "optional<ArticleContent>",
              },
              "pt-BR": {
                "docs": "The content of the article in Portuguese (Brazil)",
                "type": "optional<ArticleContent>",
              },
              "ro": {
                "docs": "The content of the article in Romanian",
                "type": "optional<ArticleContent>",
              },
              "ru": {
                "docs": "The content of the article in Russian",
                "type": "optional<ArticleContent>",
              },
              "sl": {
                "docs": "The content of the article in Slovenian",
                "type": "optional<ArticleContent>",
              },
              "sr": {
                "docs": "The content of the article in Serbian",
                "type": "optional<ArticleContent>",
              },
              "sv": {
                "docs": "The content of the article in Swedish",
                "type": "optional<ArticleContent>",
              },
              "tr": {
                "docs": "The content of the article in Turkish",
                "type": "optional<ArticleContent>",
              },
              "type": {
                "docs": "The type of object - article_translated_content.",
                "type": "optional<string>",
              },
              "vi": {
                "docs": "The content of the article in Vietnamese",
                "type": "optional<ArticleContent>",
              },
              "zh-CN": {
                "docs": "The content of the article in Chinese (China)",
                "type": "optional<ArticleContent>",
              },
              "zh-TW": {
                "docs": "The content of the article in Chinese (Taiwan)",
                "type": "optional<ArticleContent>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Articles": {
            "docs": "This will return a list of articles for the App.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array of Article objects",
                "type": "optional<list<articles.Articles>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "A count of the total number of articles.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of the object - `list`.",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssignConversationRequest": {
            "docs": "Payload of the request to assign a conversation",
            "inline": undefined,
            "properties": {
              "admin_id": {
                "docs": "The id of the admin who is performing the action.",
                "type": "string",
              },
              "assignee_id": {
                "docs": "The `id` of the `admin` or `team` which will be assigned the conversation. A conversation can be assigned both an admin and a team.\nSet `0` if you want this assign to no admin or team (ie. Unassigned).",
                "type": "string",
              },
              "body": {
                "docs": "Optionally you can send a response in the conversation when it is assigned.",
                "type": "optional<string>",
              },
              "type": "AssignConversationRequestType",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AssignConversationRequestType": {
            "enum": [
              "admin",
              "team",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CloseConversationRequest": {
            "docs": "Payload of the request to close a conversation",
            "inline": undefined,
            "properties": {
              "admin_id": {
                "docs": "The id of the admin who is performing the action.",
                "type": "string",
              },
              "body": {
                "docs": "Optionally you can leave a message in the conversation to provide additional context to the user and other teammates.",
                "type": "optional<string>",
              },
              "type": "literal<"admin">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Collections": {
            "docs": "This will return a list of Collections for the App.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array of collection objects",
                "type": "optional<list<helpCenter.Collection>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "A count of the total number of collections.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of the object - `list`.",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Companies": {
            "docs": "This will return a list of companies for the App.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array containing Company Objects.",
                "type": "optional<list<companies.Company>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "The total number of companies.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of object - `list`.",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanyAttachedContacts": {
            "docs": "A list of Contact Objects",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array containing Contact Objects",
                "type": "optional<list<contacts.Contact>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "The total number of contacts",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of object - `list`",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanyAttachedSegments": {
            "docs": "A list of Segment Objects",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array containing Segment Objects",
                "type": "optional<list<segments.Segment>>",
              },
              "type": {
                "docs": "The type of object - `list`",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanyScroll": {
            "docs": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
            "inline": undefined,
            "properties": {
              "data": {
                "type": "optional<list<companies.Company>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "scroll_param": {
                "docs": "The scroll parameter to use in the next request to fetch the next page of results.",
                "type": "optional<string>",
              },
              "total_count": {
                "docs": "The total number of companies",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of object - `list`",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactArchived": {
            "docs": "archived contact object",
            "inline": undefined,
            "properties": {
              "archived": {
                "docs": "Whether the contact is archived or not.",
                "type": "optional<boolean>",
              },
              "external_id": {
                "docs": "The unique identifier for the contact which is provided by the Client.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the contact which is given by Intercom.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "always contact",
                "type": "optional<literal<"contact">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactAttachedCompanies": {
            "docs": "A list of Company Objects",
            "inline": undefined,
            "properties": {
              "companies": {
                "docs": "An array containing Company Objects",
                "type": "optional<list<companies.Company>>",
              },
              "pages": {
                "type": "optional<PagesLink>",
              },
              "total_count": {
                "docs": "The total number of companies associated to this contact",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of object",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactCompanies": {
            "docs": "An object containing companies meta data about the companies that a contact has. Up to 10 will be displayed here. Use the url to get more.",
            "inline": undefined,
            "properties": {
              "has_more": {
                "docs": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                "type": "optional<boolean>",
              },
              "total_count": {
                "docs": "Int representing the total number of companyies attached to this contact",
                "type": "optional<integer>",
              },
              "url": {
                "docs": "Url to get more company resources for this contact",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactDeleted": {
            "docs": "deleted contact object",
            "inline": undefined,
            "properties": {
              "deleted": {
                "docs": "Whether the contact is deleted or not.",
                "type": "optional<boolean>",
              },
              "external_id": {
                "docs": "The unique identifier for the contact which is provided by the Client.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the contact which is given by Intercom.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "always contact",
                "type": "optional<literal<"contact">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactList": {
            "docs": "Contacts are your users in Intercom.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "The list of contact objects",
                "type": "optional<list<contacts.Contact>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "A count of the total number of objects.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "Always list",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactLocation": {
            "docs": "An object containing location meta data about a Intercom contact.",
            "inline": undefined,
            "properties": {
              "city": {
                "docs": "The city that the contact is located in",
                "type": "optional<string>",
              },
              "country": {
                "docs": "The country that the contact is located in",
                "type": "optional<string>",
              },
              "region": {
                "docs": "The overal region that the contact is located in",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Always location",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactNotes": {
            "docs": "An object containing notes meta data about the notes that a contact has. Up to 10 will be displayed here. Use the url to get more.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "This object represents the notes attached to a contact.",
                "type": "optional<list<AddressableList>>",
              },
              "has_more": {
                "docs": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                "type": "optional<boolean>",
              },
              "total_count": {
                "docs": "Int representing the total number of companyies attached to this contact",
                "type": "optional<integer>",
              },
              "url": {
                "docs": "Url to get more company resources for this contact",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactReference": {
            "docs": "reference to contact object",
            "inline": undefined,
            "properties": {
              "external_id": {
                "docs": "The unique identifier for the contact which is provided by the Client.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the contact which is given by Intercom.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "always contact",
                "type": "optional<literal<"contact">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactReplyBaseRequest": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "attachment_urls": {
                "docs": "A list of image URLs that will be added as attachments. You can include up to 10 URLs.",
                "type": "optional<list<string>>",
              },
              "body": {
                "docs": "The text body of the comment.",
                "type": "string",
              },
              "created_at": {
                "docs": "The time the reply was created. If not provided, the current time will be used.",
                "type": "optional<integer>",
              },
              "message_type": "literal<"comment">",
              "type": "literal<"user">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactReplyConversationRequest": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "ContactReplyIntercomUserIdRequest",
              },
              {
                "type": "Email",
              },
              {
                "type": "ContactReplyUserIdRequest",
              },
            ],
          },
          "ContactReplyIntercomUserIdRequest": {
            "docs": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`",
            "extends": [
              "ContactReplyBaseRequest",
            ],
            "inline": undefined,
            "properties": {
              "attachment_files": {
                "docs": "A list of files that will be added as attachments.",
                "type": "optional<list<ConversationAttachmentFiles>>",
              },
              "intercom_user_id": {
                "docs": "The identifier for the contact as given by Intercom.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactReplyTicketIntercomUserIdRequest": {
            "docs": "Payload of the request to reply on behalf of a contact using their `intercom_user_id`",
            "extends": [
              "ContactReplyBaseRequest",
            ],
            "inline": undefined,
            "properties": {
              "intercom_user_id": {
                "docs": "The identifier for the contact as given by Intercom.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactReplyTicketRequest": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "ContactReplyTicketIntercomUserIdRequest",
              },
              {
                "type": "ContactReplyTicketUserIdRequest",
              },
              {
                "type": "Email",
              },
            ],
          },
          "ContactReplyTicketUserIdRequest": {
            "docs": "Payload of the request to reply on behalf of a contact using their `user_id`",
            "extends": [
              "ContactReplyBaseRequest",
            ],
            "inline": undefined,
            "properties": {
              "user_id": {
                "docs": "The external_id you have defined for the contact.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactReplyUserIdRequest": {
            "docs": "Payload of the request to reply on behalf of a contact using their `user_id`",
            "extends": [
              "ContactReplyBaseRequest",
            ],
            "inline": undefined,
            "properties": {
              "attachment_files": {
                "docs": "A list of files that will be added as attachments. You can include up to 10 files.",
                "type": "optional<list<ConversationAttachmentFiles>>",
              },
              "user_id": {
                "docs": "The external_id you have defined for the contact.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactSocialProfiles": {
            "docs": "An object containing social profiles that a contact has.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "A list of social profiles objects associated with the contact.",
                "type": "optional<list<SocialProfile>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactSubscriptionTypes": {
            "docs": "An object containing Subscription Types meta data about the SubscriptionTypes that a contact has.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "This object represents the subscriptions attached to a contact.",
                "type": "optional<list<AddressableList>>",
              },
              "has_more": {
                "docs": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                "type": "optional<boolean>",
              },
              "total_count": {
                "docs": "Int representing the total number of subscription types attached to this contact",
                "type": "optional<integer>",
              },
              "url": {
                "docs": "Url to get more subscription type resources for this contact",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactTags": {
            "docs": "An object containing tags meta data about the tags that a contact has. Up to 10 will be displayed here. Use the url to get more.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "This object represents the tags attached to a contact.",
                "type": "optional<list<AddressableList>>",
              },
              "has_more": {
                "docs": "Whether there's more Addressable Objects to be viewed. If true, use the url to view all",
                "type": "optional<boolean>",
              },
              "total_count": {
                "docs": "Int representing the total number of tags attached to this contact",
                "type": "optional<integer>",
              },
              "url": {
                "docs": "url to get more tag resources for this contact",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactUnarchived": {
            "docs": "unarchived contact object",
            "inline": undefined,
            "properties": {
              "archived": {
                "docs": "Whether the contact is archived or not.",
                "type": "optional<boolean>",
              },
              "external_id": {
                "docs": "The unique identifier for the contact which is provided by the Client.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the contact which is given by Intercom.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "always contact",
                "type": "optional<literal<"contact">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Contacts": {
            "docs": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.",
            "inline": undefined,
            "properties": {
              "contacts": {
                "docs": "The list of contacts (users or leads) involved in this conversation. This will only contain one customer unless more were added via the group conversation feature.",
                "type": "optional<list<ContactReference>>",
              },
              "type": {
                "docs": "",
                "type": "optional<literal<"contact.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContentSourcesList": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "content_sources": {
                "docs": "The content sources used by AI Agent in the conversation.",
                "type": "optional<list<aiContentSource.ContentSource>>",
              },
              "total_count": {
                "docs": "The total number of content sources used by AI Agent in the conversation.",
                "type": "optional<integer>",
              },
              "type": {
                "type": "optional<literal<"content_source.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationAttachmentFiles": {
            "docs": "Properties of the attachment files in a conversation part",
            "inline": undefined,
            "properties": {
              "content_type": {
                "docs": "The content type of the file",
                "type": "optional<string>",
              },
              "data": {
                "docs": "The base64 encoded file data.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the file.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationFirstContactReply": {
            "docs": "An object containing information on the first users message. For a contact initiated message this will represent the users original message.",
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "",
                "type": "optional<string>",
              },
              "url": {
                "docs": "",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationList": {
            "docs": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
            "inline": undefined,
            "properties": {
              "conversations": {
                "docs": "The list of conversation objects",
                "type": "optional<list<conversations.Conversation>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "A count of the total number of objects.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "Always conversation.list",
                "type": "optional<literal<"conversation.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationPart": {
            "docs": "A Conversation Part represents a message in the conversation.",
            "inline": undefined,
            "properties": {
              "assigned_to": {
                "docs": "The id of the admin that was assigned the conversation by this conversation_part (null if there has been no change in assignment.)",
                "type": "optional<Reference>",
              },
              "attachments": {
                "docs": "A list of attachments for the part.",
                "type": "optional<list<PartAttachment>>",
              },
              "author": {
                "type": "optional<ConversationPartAuthor>",
              },
              "body": {
                "docs": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the conversation part was created.",
                "type": "optional<integer>",
              },
              "external_id": {
                "docs": "The external id of the conversation part",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The id representing the conversation part.",
                "type": "optional<string>",
              },
              "notified_at": {
                "docs": "The time the user was notified with the conversation part.",
                "type": "optional<integer>",
              },
              "part_type": {
                "docs": "The type of conversation part.",
                "type": "optional<string>",
              },
              "redacted": {
                "docs": "Whether or not the conversation part has been redacted.",
                "type": "optional<boolean>",
              },
              "type": {
                "docs": "Always conversation_part",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "The last time the conversation part was updated.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationPartAuthor": {
            "docs": "The object who initiated the conversation, which can be a Contact, Admin or Team. Bots and campaigns send messages on behalf of Admins or Teams. For Twitter, this will be blank.",
            "inline": undefined,
            "properties": {
              "email": {
                "docs": "The email of the author",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "The id of the author",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the author",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the author",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationParts": {
            "docs": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.",
            "inline": undefined,
            "properties": {
              "conversation_parts": {
                "docs": "A list of Conversation Part objects for each part message in the conversation. This is only returned when Retrieving a Conversation, and ignored when Listing all Conversations. There is a limit of 500 parts.",
                "type": "optional<list<ConversationPart>>",
              },
              "total_count": {
                "docs": "",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "",
                "type": "optional<literal<"conversation_part.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationRating": {
            "docs": "The Conversation Rating object which contains information on the rating and/or remark added by a Contact and the Admin assigned to the conversation.",
            "inline": undefined,
            "properties": {
              "contact": {
                "type": "optional<ContactReference>",
              },
              "created_at": {
                "docs": "The time the rating was requested in the conversation being rated.",
                "type": "optional<integer>",
              },
              "rating": {
                "docs": "The rating, between 1 and 5, for the conversation.",
                "type": "optional<integer>",
              },
              "remark": {
                "docs": "An optional field to add a remark to correspond to the number rating",
                "type": "optional<string>",
              },
              "teammate": {
                "type": "optional<Reference>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationSource": {
            "docs": "The Conversation Part that originated this conversation, which can be Contact, Admin, Campaign, Automated or Operator initiated.",
            "inline": undefined,
            "properties": {
              "attachments": {
                "docs": "A list of attachments for the part.",
                "type": "optional<list<PartAttachment>>",
              },
              "author": {
                "type": "optional<ConversationPartAuthor>",
              },
              "body": {
                "docs": "The message body, which may contain HTML. For Twitter, this will show a generic message regarding why the body is obscured.",
                "type": "optional<string>",
              },
              "delivered_as": {
                "docs": "The conversation's initiation type. Possible values are customer_initiated, campaigns_initiated (legacy campaigns), operator_initiated (Custom bot), automated (Series and other outbounds with dynamic audience message) and admin_initiated (fixed audience message, ticket initiated by an admin, group email).",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The id representing the message.",
                "type": "optional<string>",
              },
              "redacted": {
                "docs": "Whether or not the source message has been redacted. Only applicable for contact initiated messages.",
                "type": "optional<boolean>",
              },
              "subject": {
                "docs": "Optional. The message subject. For Twitter, this will show a generic message regarding why the subject is obscured.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "This includes conversation, email, facebook, instagram, phone_call, phone_switch, push, sms, twitter and whatsapp.",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The URL where the conversation was started. For Twitter, Email, and Bots, this will be blank.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationStatistics": {
            "docs": "A Statistics object containing all information required for reporting, with timestamps and calculated metrics.",
            "inline": undefined,
            "properties": {
              "count_assignments": {
                "docs": "Number of assignments after first_contact_reply_at.",
                "type": "optional<integer>",
              },
              "count_conversation_parts": {
                "docs": "Total number of conversation parts.",
                "type": "optional<integer>",
              },
              "count_reopens": {
                "docs": "Number of reopens after first_contact_reply_at.",
                "type": "optional<integer>",
              },
              "first_admin_reply_at": {
                "docs": "Time of first admin reply after first_contact_reply_at.",
                "type": "optional<integer>",
              },
              "first_assignment_at": {
                "docs": "Time of first assignment after first_contact_reply_at.",
                "type": "optional<integer>",
              },
              "first_close_at": {
                "docs": "Time of first close after first_contact_reply_at.",
                "type": "optional<integer>",
              },
              "first_contact_reply_at": {
                "docs": "Time of first text conversation part from a contact.",
                "type": "optional<integer>",
              },
              "last_admin_reply_at": {
                "docs": "Time of the last conversation part from an admin.",
                "type": "optional<integer>",
              },
              "last_assignment_admin_reply_at": {
                "docs": "Time of first admin reply since most recent assignment.",
                "type": "optional<integer>",
              },
              "last_assignment_at": {
                "docs": "Time of last assignment after first_contact_reply_at.",
                "type": "optional<integer>",
              },
              "last_close_at": {
                "docs": "Time of the last conversation close.",
                "type": "optional<integer>",
              },
              "last_closed_by_id": {
                "docs": "The last admin who closed the conversation. Returns a reference to an Admin object.",
                "type": "optional<string>",
              },
              "last_contact_reply_at": {
                "docs": "Time of the last conversation part from a contact.",
                "type": "optional<integer>",
              },
              "median_time_to_reply": {
                "docs": "Median based on all admin replies after a contact reply. Subtracts out of business hours. In seconds.",
                "type": "optional<integer>",
              },
              "time_to_admin_reply": {
                "docs": "Duration until first admin reply. Subtracts out of business hours. In seconds.",
                "type": "optional<integer>",
              },
              "time_to_assignment": {
                "docs": "Duration until last assignment before first admin reply. In seconds.",
                "type": "optional<integer>",
              },
              "time_to_first_close": {
                "docs": "Duration until conversation was closed first time. Subtracts out of business hours. In seconds.",
                "type": "optional<integer>",
              },
              "time_to_last_close": {
                "docs": "Duration until conversation was closed last time. Subtracts out of business hours. In seconds.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationTeammates": {
            "docs": "The list of teammates who participated in the conversation (wrote at least one conversation part).",
            "inline": undefined,
            "properties": {
              "teammates": {
                "docs": "The list of teammates who participated in the conversation (wrote at least one conversation part).",
                "type": "optional<list<Reference>>",
              },
              "type": {
                "docs": "The type of the object - `admin.list`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateArticleRequest": {
            "docs": "You can create an Article",
            "inline": undefined,
            "properties": {
              "author_id": {
                "docs": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
                "type": "integer",
              },
              "body": {
                "docs": "The content of the article. For multilingual articles, this will be the body of the default language's content.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
                "type": "optional<string>",
              },
              "parent_id": {
                "docs": "The id of the article's parent collection or section. An article without this field stands alone.",
                "type": "optional<integer>",
              },
              "parent_type": {
                "docs": "The type of parent, which can either be a `collection` or `section`.",
                "type": "optional<string>",
              },
              "state": {
                "docs": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
                "type": "optional<CreateArticleRequestState>",
              },
              "title": {
                "docs": "The title of the article.For multilingual articles, this will be the title of the default language's content.",
                "type": "string",
              },
              "translated_content": {
                "type": "optional<ArticleTranslatedContent>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateArticleRequestState": {
            "docs": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
            "enum": [
              "published",
              "draft",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateContactRequestTwo": "unknown",
          "CreateDataEventRequestTwo": "unknown",
          "CreateMessageRequestOne": "unknown",
          "CreateOrUpdateCompanyRequest": {
            "docs": "You can create or update a Company",
            "inline": undefined,
            "properties": {
              "company_id": {
                "docs": "The company id you have defined for the company. Can't be updated",
                "type": "optional<string>",
              },
              "custom_attributes": {
                "docs": "A hash of key/value pairs containing any other data about the company you want Intercom to store.",
                "type": "optional<map<string, string>>",
              },
              "industry": {
                "docs": "The industry that this company operates in.",
                "type": "optional<string>",
              },
              "monthly_spend": {
                "docs": "How much revenue the company generates for your business. Note that this will truncate floats. i.e. it only allow for whole integers, 155.98 will be truncated to 155. Note that this has an upper limit of 2**31-1 or 2147483647..",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the Company",
                "type": "optional<string>",
              },
              "plan": {
                "docs": "The name of the plan you have associated with the company.",
                "type": "optional<string>",
              },
              "remote_created_at": {
                "docs": "The time the company was created by you.",
                "type": "optional<integer>",
              },
              "size": {
                "docs": "The number of employees in this company.",
                "type": "optional<integer>",
              },
              "website": {
                "docs": "The URL for this company's website. Please note that the value specified here is not validated. Accepts any string.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateOrUpdateTagRequest": {
            "docs": "You can create or update an existing tag.",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The id of tag to updates.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the tag, which will be created if not found, or the new name for the tag if this is an update request. Names are case insensitive.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreatePhoneSwitchRequest": {
            "docs": "You can create an phone switch",
            "inline": undefined,
            "properties": {
              "custom_attributes": {
                "type": "optional<CustomAttributes>",
              },
              "phone": {
                "docs": "Phone number in E.164 format, that will receive the SMS to continue the conversation in the Messenger.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateTicketReplyWithCommentRequest": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "ContactReplyTicketRequest",
              },
              {
                "type": "AdminReplyTicketRequest",
              },
            ],
          },
          "CreateTicketTypeRequest": {
            "docs": "The request payload for creating a ticket type.
  You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
",
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "Category of the Ticket Type.",
                "type": "optional<CreateTicketTypeRequestCategory>",
              },
              "description": {
                "docs": "The description of the ticket type.",
                "type": "optional<string>",
              },
              "icon": {
                "default": "🎟️",
                "docs": "The icon of the ticket type.",
                "type": "optional<string>",
              },
              "is_internal": {
                "default": false,
                "docs": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute.",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "The name of the ticket type.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateTicketTypeRequestCategory": {
            "docs": "Category of the Ticket Type.",
            "enum": [
              "Customer",
              {
                "name": "BackOffice",
                "value": "Back-office",
              },
              "Tracker",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CursorPages": {
            "docs": "Cursor-based pagination is a technique used in the Intercom API to navigate through large amounts of data.
A "cursor" or pointer is used to keep track of the current position in the result set, allowing the API to return the data in small chunks or "pages" as needed.
",
            "inline": undefined,
            "properties": {
              "next": {
                "type": "optional<StartingAfterPaging>",
              },
              "page": {
                "docs": "The current page",
                "type": "optional<integer>",
              },
              "per_page": {
                "docs": "Number of results per page",
                "type": "optional<integer>",
              },
              "total_pages": {
                "docs": "Total number of pages",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "the type of object `pages`.",
                "type": "optional<literal<"pages">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CustomAttributes": {
            "docs": "An object containing the different custom attributes associated to the conversation as key-value pairs. For relationship attributes the value will be a list of custom object instance models.",
            "type": "map<string, CustomAttributesValue>",
          },
          "CustomAttributesValue": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              {
                "type": "optional<customObjectInstances.CustomObjectInstance>",
              },
            ],
          },
          "CustomerRequest": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "CustomerRequestIntercomUserId",
              },
              {
                "type": "CustomerRequestUserId",
              },
              {
                "type": "Email",
              },
            ],
          },
          "CustomerRequestIntercomUserId": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "intercom_user_id": {
                "docs": "The identifier for the contact as given by Intercom.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CustomerRequestUserId": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "user_id": {
                "docs": "The external_id you have defined for the contact who is being added as a participant.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataAttributeList": {
            "docs": "A list of all data attributes belonging to a workspace for contacts, companies or conversations.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "A list of data attributes",
                "type": "optional<list<dataAttributes.DataAttribute>>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataEventList": {
            "docs": "This will return a list of data events for the App.",
            "inline": undefined,
            "properties": {
              "events": {
                "docs": "A list of data events",
                "type": "optional<list<dataEvents.DataEvent>>",
              },
              "pages": {
                "docs": "Pagination",
                "type": "optional<DataEventListPages>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"event.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataEventListPages": {
            "docs": "Pagination",
            "inline": true,
            "properties": {
              "next": "optional<string>",
              "since": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataEventSummary": {
            "docs": "This will return a summary of data events for the App.",
            "inline": undefined,
            "properties": {
              "email": {
                "docs": "The email address of the user",
                "type": "optional<string>",
              },
              "events": {
                "docs": "A summary of data events",
                "type": "optional<list<optional<DataEventSummaryItem>>>",
              },
              "intercom_user_id": {
                "docs": "The Intercom user ID of the user",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"event.summary">>",
              },
              "user_id": {
                "docs": "The user ID of the user",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataEventSummaryItem": {
            "docs": "This will return a summary of a data event for the App.",
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "The number of times the event was sent",
                "type": "optional<integer>",
              },
              "description": {
                "docs": "The description of the event",
                "type": "optional<string>",
              },
              "first": {
                "docs": "The first time the event was sent",
                "type": "optional<string>",
              },
              "last": {
                "docs": "The last time the event was sent",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the event",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataExportCsv": {
            "docs": "A CSV output file",
            "inline": undefined,
            "properties": {
              "company_id": {
                "docs": "The company ID of the user in relation to the message that was sent. Will return -1 if no company is present.",
                "type": "optional<string>",
              },
              "content_id": {
                "docs": "The specific content that was received. In an A/B test each version has its own Content ID.",
                "type": "optional<string>",
              },
              "content_title": {
                "docs": "The title of the content you see in your Intercom workspace.",
                "type": "optional<string>",
              },
              "content_type": {
                "docs": "Email, Chat, Post etc.",
                "type": "optional<string>",
              },
              "email": {
                "docs": "The users email who was sent the message.",
                "type": "optional<string>",
              },
              "first_click": {
                "docs": "The first time the series the user clicked on a link within this message.",
                "type": "optional<integer>",
              },
              "first_completion": {
                "docs": "The first time a user completed this message if the content was able to be completed e.g. Tours, Surveys.",
                "type": "optional<integer>",
              },
              "first_dismisall": {
                "docs": "The first time the series the user dismissed this message.",
                "type": "optional<integer>",
              },
              "first_goal_success": {
                "docs": "The first time the user met this messages associated goal if one exists.",
                "type": "optional<integer>",
              },
              "first_hard_bounce": {
                "docs": "The first time this message hard bounced for this user",
                "type": "optional<integer>",
              },
              "first_open": {
                "docs": "The first time the user opened this message.",
                "type": "optional<integer>",
              },
              "first_reply": {
                "docs": "The first time a user replied to this message if the content was able to receive replies.",
                "type": "optional<integer>",
              },
              "first_series_completion": {
                "docs": "The first time the series this message was a part of was completed by the user.",
                "type": "optional<integer>",
              },
              "first_series_disengagement": {
                "docs": "The first time the series this message was a part of was disengaged by the user.",
                "type": "optional<integer>",
              },
              "first_series_exit": {
                "docs": "The first time the series this message was a part of was exited by the user.",
                "type": "optional<integer>",
              },
              "first_unsubscribe": {
                "docs": "The first time the user unsubscribed from this message.",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The full name of the user receiving the message",
                "type": "optional<string>",
              },
              "node_id": {
                "docs": "The id of the series node that this ruleset is associated with. Each block in a series has a corresponding node_id.",
                "type": "optional<string>",
              },
              "receipt_id": {
                "docs": "ID for this receipt. Will be included with any related stats in other files to identify this specific delivery of a message.",
                "type": "optional<string>",
              },
              "received_at": {
                "docs": "Timestamp for when the receipt was recorded.",
                "type": "optional<integer>",
              },
              "ruleset_id": {
                "docs": "The id of the message.",
                "type": "optional<string>",
              },
              "ruleset_version_id": {
                "docs": "As you edit content we record new versions. This ID can help you determine which version of a piece of content that was received.",
                "type": "optional<string>",
              },
              "series_id": {
                "docs": "The id of the series that this content is part of. Will return -1 if not part of a series.",
                "type": "optional<string>",
              },
              "series_title": {
                "docs": "The title of the series that this content is part of.",
                "type": "optional<string>",
              },
              "user_external_id": {
                "docs": "The external_user_id of the user who was sent the message",
                "type": "optional<string>",
              },
              "user_id": {
                "docs": "The user_id of the user who was sent the message.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeletedArticleObject": {
            "docs": "Response returned when an object is deleted",
            "inline": undefined,
            "properties": {
              "deleted": {
                "docs": "Whether the article was deleted successfully or not.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the article which you provided in the URL.",
                "type": "optional<string>",
              },
              "object": {
                "docs": "The type of object which was deleted. - article",
                "type": "optional<literal<"article">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeletedCollectionObject": {
            "docs": "Response returned when an object is deleted",
            "inline": undefined,
            "properties": {
              "deleted": {
                "docs": "Whether the collection was deleted successfully or not.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the collection which you provided in the URL.",
                "type": "optional<string>",
              },
              "object": {
                "docs": "The type of object which was deleted. - `collection`",
                "type": "optional<literal<"collection">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeletedCompanyObject": {
            "docs": "Response returned when an object is deleted",
            "inline": undefined,
            "properties": {
              "deleted": {
                "docs": "Whether the company was deleted successfully or not.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the company which is given by Intercom.",
                "type": "optional<string>",
              },
              "object": {
                "docs": "The type of object which was deleted. - `company`",
                "type": "optional<literal<"company">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DeletedObject": {
            "docs": "Response returned when an object is deleted",
            "inline": undefined,
            "properties": {
              "deleted": {
                "docs": "Whether the news item was deleted successfully or not.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the news item which you provided in the URL.",
                "type": "optional<string>",
              },
              "object": {
                "docs": "The type of object which was deleted - news-item.",
                "type": "optional<literal<"news-item">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Email": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": {
                "docs": "The email you have defined for the contact who is being added as a participant.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Error": {
            "docs": "The API will return an Error List for a failed request, which will contain one or more Error objects.",
            "inline": undefined,
            "properties": {
              "errors": {
                "docs": "An array of one or more error objects",
                "type": "list<ErrorErrorsItem>",
              },
              "request_id": {
                "docs": "",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "type": {
                "docs": "The type is error.list",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ErrorErrorsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "code": {
                "docs": "A string indicating the kind of error, used to further qualify the HTTP response code",
                "type": "string",
              },
              "field": {
                "docs": "Optional. Used to identify a particular field or query parameter that was in error.",
                "type": "optional<string>",
              },
              "message": {
                "docs": "Optional. Human readable description of the error.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "File": {
            "docs": "The value describing a file upload set for a custom attribute",
            "inline": undefined,
            "properties": {
              "content_type": {
                "docs": "The type of file",
                "type": "optional<string>",
              },
              "filesize": {
                "docs": "The size of the file in bytes",
                "type": "optional<integer>",
              },
              "height": {
                "docs": "The height of the file in pixels, if applicable",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the file",
                "type": "optional<string>",
              },
              "type": {
                "type": "optional<string>",
              },
              "url": {
                "docs": "The url of the file. This is a temporary URL and will expire after 30 minutes.",
                "type": "optional<string>",
              },
              "width": {
                "docs": "The width of the file in pixels, if applicable",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GroupContent": {
            "docs": "The Content of a Group.",
            "inline": undefined,
            "properties": {
              "description": {
                "docs": "The description of the collection. Only available for collections.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the collection or section.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of object - `group_content` .",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "GroupTranslatedContent": {
            "docs": "The Translated Content of an Group. The keys are the locale codes and the values are the translated content of the Group.",
            "inline": undefined,
            "properties": {
              "ar": {
                "docs": "The content of the group in Arabic",
                "type": "optional<GroupContent>",
              },
              "bg": {
                "docs": "The content of the group in Bulgarian",
                "type": "optional<GroupContent>",
              },
              "bs": {
                "docs": "The content of the group in Bosnian",
                "type": "optional<GroupContent>",
              },
              "ca": {
                "docs": "The content of the group in Catalan",
                "type": "optional<GroupContent>",
              },
              "cs": {
                "docs": "The content of the group in Czech",
                "type": "optional<GroupContent>",
              },
              "da": {
                "docs": "The content of the group in Danish",
                "type": "optional<GroupContent>",
              },
              "de": {
                "docs": "The content of the group in German",
                "type": "optional<GroupContent>",
              },
              "el": {
                "docs": "The content of the group in Greek",
                "type": "optional<GroupContent>",
              },
              "en": {
                "docs": "The content of the group in English",
                "type": "optional<GroupContent>",
              },
              "es": {
                "docs": "The content of the group in Spanish",
                "type": "optional<GroupContent>",
              },
              "et": {
                "docs": "The content of the group in Estonian",
                "type": "optional<GroupContent>",
              },
              "fi": {
                "docs": "The content of the group in Finnish",
                "type": "optional<GroupContent>",
              },
              "fr": {
                "docs": "The content of the group in French",
                "type": "optional<GroupContent>",
              },
              "he": {
                "docs": "The content of the group in Hebrew",
                "type": "optional<GroupContent>",
              },
              "hr": {
                "docs": "The content of the group in Croatian",
                "type": "optional<GroupContent>",
              },
              "hu": {
                "docs": "The content of the group in Hungarian",
                "type": "optional<GroupContent>",
              },
              "id": {
                "docs": "The content of the group in Indonesian",
                "type": "optional<GroupContent>",
              },
              "it": {
                "docs": "The content of the group in Italian",
                "type": "optional<GroupContent>",
              },
              "ja": {
                "docs": "The content of the group in Japanese",
                "type": "optional<GroupContent>",
              },
              "ko": {
                "docs": "The content of the group in Korean",
                "type": "optional<GroupContent>",
              },
              "lt": {
                "docs": "The content of the group in Lithuanian",
                "type": "optional<GroupContent>",
              },
              "lv": {
                "docs": "The content of the group in Latvian",
                "type": "optional<GroupContent>",
              },
              "mn": {
                "docs": "The content of the group in Mongolian",
                "type": "optional<GroupContent>",
              },
              "nb": {
                "docs": "The content of the group in Norwegian",
                "type": "optional<GroupContent>",
              },
              "nl": {
                "docs": "The content of the group in Dutch",
                "type": "optional<GroupContent>",
              },
              "pl": {
                "docs": "The content of the group in Polish",
                "type": "optional<GroupContent>",
              },
              "pt": {
                "docs": "The content of the group in Portuguese (Portugal)",
                "type": "optional<GroupContent>",
              },
              "pt-BR": {
                "docs": "The content of the group in Portuguese (Brazil)",
                "type": "optional<GroupContent>",
              },
              "ro": {
                "docs": "The content of the group in Romanian",
                "type": "optional<GroupContent>",
              },
              "ru": {
                "docs": "The content of the group in Russian",
                "type": "optional<GroupContent>",
              },
              "sl": {
                "docs": "The content of the group in Slovenian",
                "type": "optional<GroupContent>",
              },
              "sr": {
                "docs": "The content of the group in Serbian",
                "type": "optional<GroupContent>",
              },
              "sv": {
                "docs": "The content of the group in Swedish",
                "type": "optional<GroupContent>",
              },
              "tr": {
                "docs": "The content of the group in Turkish",
                "type": "optional<GroupContent>",
              },
              "type": {
                "docs": "The type of object - group_translated_content.",
                "type": "optional<string>",
              },
              "vi": {
                "docs": "The content of the group in Vietnamese",
                "type": "optional<GroupContent>",
              },
              "zh-CN": {
                "docs": "The content of the group in Chinese (China)",
                "type": "optional<GroupContent>",
              },
              "zh-TW": {
                "docs": "The content of the group in Chinese (Taiwan)",
                "type": "optional<GroupContent>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "IntercomVersion": {
            "default": "2.11",
            "docs": "Intercom API version.</br>By default, it's equal to the version set in the app package.",
            "enum": [
              {
                "name": "One0",
                "value": "1.0",
              },
              {
                "name": "One1",
                "value": "1.1",
              },
              {
                "name": "One2",
                "value": "1.2",
              },
              {
                "name": "One3",
                "value": "1.3",
              },
              {
                "name": "One4",
                "value": "1.4",
              },
              {
                "name": "Two0",
                "value": "2.0",
              },
              {
                "name": "Two1",
                "value": "2.1",
              },
              {
                "name": "Two2",
                "value": "2.2",
              },
              {
                "name": "Two3",
                "value": "2.3",
              },
              {
                "name": "Two4",
                "value": "2.4",
              },
              {
                "name": "Two5",
                "value": "2.5",
              },
              {
                "name": "Two6",
                "value": "2.6",
              },
              {
                "name": "Two7",
                "value": "2.7",
              },
              {
                "name": "Two8",
                "value": "2.8",
              },
              {
                "name": "Two9",
                "value": "2.9",
              },
              {
                "name": "Two10",
                "value": "2.10",
              },
              {
                "name": "Two11",
                "value": "2.11",
              },
              "Unstable",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedObject": {
            "docs": "A linked conversation or ticket.",
            "inline": undefined,
            "properties": {
              "category": {
                "docs": "Category of the Linked Ticket Object.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The ID of the linked object",
                "type": "optional<string>",
              },
              "type": {
                "docs": "ticket or conversation",
                "type": "optional<LinkedObjectType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedObjectList": {
            "docs": "An object containing metadata about linked conversations and linked tickets. Up to 1000 can be returned.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array containing the linked conversations and linked tickets.",
                "type": "optional<list<LinkedObject>>",
              },
              "has_more": {
                "docs": "Whether or not there are more linked objects than returned.",
                "type": "optional<boolean>",
              },
              "total_count": {
                "docs": "The total number of linked objects.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "Always list.",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LinkedObjectType": {
            "docs": "ticket or conversation",
            "enum": [
              "ticket",
              "conversation",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MultipleFilterSearchRequest": {
            "docs": "Search using Intercoms Search APIs with more than one filter.",
            "inline": undefined,
            "properties": {
              "operator": {
                "docs": "An operator to allow boolean inspection between multiple fields.",
                "type": "optional<MultipleFilterSearchRequestOperator>",
              },
              "value": {
                "type": "optional<MultipleFilterSearchRequestValue>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MultipleFilterSearchRequestOperator": {
            "docs": "An operator to allow boolean inspection between multiple fields.",
            "enum": [
              "AND",
              "OR",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MultipleFilterSearchRequestValue": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Add mutiple filters.",
                "type": "list<MultipleFilterSearchRequest>",
              },
              {
                "docs": "Add a single filter field.",
                "type": "list<SingleFilterSearchRequest>",
              },
            ],
          },
          "NewsItemRequest": {
            "docs": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers.",
            "inline": undefined,
            "properties": {
              "body": {
                "docs": "The news item body, which may contain HTML.",
                "type": "optional<string>",
              },
              "deliver_silently": {
                "docs": "When set to `true`, the news item will appear in the messenger newsfeed without showing a notification badge.",
                "type": "optional<boolean>",
              },
              "labels": {
                "docs": "Label names displayed to users to categorize the news item.",
                "type": "optional<list<string>>",
              },
              "newsfeed_assignments": {
                "docs": "A list of newsfeed_assignments to assign to the specified newsfeed.",
                "type": "optional<list<news.NewsfeedAssignment>>",
              },
              "reactions": {
                "docs": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled.",
                "type": "optional<list<optional<string>>>",
              },
              "sender_id": {
                "docs": "The id of the sender of the news item. Must be a teammate on the workspace.",
                "type": "integer",
              },
              "state": {
                "docs": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
                "type": "optional<NewsItemRequestState>",
              },
              "title": {
                "docs": "The title of the news item.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NewsItemRequestState": {
            "docs": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
            "enum": [
              "draft",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NoteList": {
            "docs": "A paginated list of notes associated with a contact.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array of notes.",
                "type": "optional<list<notes.Note>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "A count of the total number of notes.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `list`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "OpenConversationRequest": {
            "docs": "Payload of the request to open a conversation",
            "inline": undefined,
            "properties": {
              "admin_id": {
                "docs": "The id of the admin who is performing the action.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PagesLink": {
            "docs": "The majority of list resources in the API are paginated to allow clients to traverse data over multiple requests.

Their responses are likely to contain a pages object that hosts pagination links which a client can use to paginate through the data without having to construct a query. The link relations for the pages field are as follows.
",
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "A link to the next page of results. A response that does not contain a next link does not have further data to fetch.",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "page": {
                "type": "optional<integer>",
              },
              "per_page": {
                "type": "optional<integer>",
              },
              "total_pages": {
                "type": "optional<integer>",
              },
              "type": {
                "type": "optional<literal<"pages">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedResponse": {
            "docs": "Paginated Response",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array of Objects",
                "type": "optional<list<PaginatedResponseDataItem>>",
              },
              "pages": {
                "type": "optional<CursorPages>",
              },
              "total_count": {
                "docs": "A count of the total number of objects.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of object",
                "type": "optional<PaginatedResponseType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginatedResponseDataItem": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "news-item": {
                "type": "news.NewsItem",
              },
              "newsfeed": {
                "type": "news.Newsfeed",
              },
            },
          },
          "PaginatedResponseType": {
            "docs": "The type of object",
            "enum": [
              "list",
              {
                "name": "ConversationList",
                "value": "conversation.list",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PartAttachment": {
            "docs": "The file attached to a part",
            "inline": undefined,
            "properties": {
              "content_type": {
                "docs": "The content type of the attachment",
                "type": "optional<string>",
              },
              "filesize": {
                "docs": "The size of the attachment",
                "type": "optional<integer>",
              },
              "height": {
                "docs": "The height of the attachment",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the attachment",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of attachment",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The URL of the attachment",
                "type": "optional<string>",
              },
              "width": {
                "docs": "The width of the attachment",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PhoneSwitch": {
            "docs": "Phone Switch Response",
            "inline": undefined,
            "properties": {
              "phone": {
                "docs": "Phone number in E.164 format, that has received the SMS to continue the conversation in the Messenger.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "",
                "type": "optional<literal<"phone_call_redirect">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RedactConversationRequest": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "conversation_part": {
                "docs": "Payload of the request to redact a conversation part",
                "type": "RedactConversationRequestConversationPart",
              },
              "source": {
                "docs": "Payload of the request to redact a conversation source",
                "type": "RedactConversationRequestSource",
              },
            },
          },
          "RedactConversationRequestConversationPart": {
            "docs": "Payload of the request to redact a conversation part",
            "inline": true,
            "properties": {
              "conversation_id": {
                "docs": "The id of the conversation.",
                "type": "string",
              },
              "conversation_part_id": {
                "docs": "The id of the conversation_part.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "RedactConversationRequestSource": {
            "docs": "Payload of the request to redact a conversation source",
            "inline": true,
            "properties": {
              "conversation_id": {
                "docs": "The id of the conversation.",
                "type": "string",
              },
              "source_id": {
                "docs": "The id of the source.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Reference": {
            "docs": "reference to another object",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "",
                "type": "optional<string>",
              },
              "type": {
                "docs": "",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ReplyConversationRequest": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "ContactReplyConversationRequest",
              },
              {
                "type": "AdminReplyConversationRequest",
              },
            ],
          },
          "SearchRequest": {
            "docs": "Search using Intercoms Search APIs.",
            "inline": undefined,
            "properties": {
              "pagination": {
                "type": "optional<StartingAfterPaging>",
              },
              "query": "SearchRequestQuery",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SearchRequestQuery": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "SingleFilterSearchRequest",
              },
              {
                "type": "MultipleFilterSearchRequest",
              },
            ],
          },
          "SegmentList": {
            "docs": "This will return a list of Segment Objects. The result may also have a pages object if the response is paginated.",
            "inline": undefined,
            "properties": {
              "pages": {
                "docs": "A pagination object, which may be empty, indicating no further pages to fetch.",
                "type": "optional<map<string, unknown>>",
              },
              "segments": {
                "docs": "A list of Segment objects",
                "type": "optional<list<segments.Segment>>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"segment.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Segments": {
            "docs": "A list of segments objects attached to a specific contact.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "Segment objects associated with the contact.",
                "type": "optional<list<segments.Segment>>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SingleFilterSearchRequest": {
            "docs": "Search using Intercoms Search APIs with a single filter.",
            "inline": undefined,
            "properties": {
              "field": {
                "docs": "The accepted field that you want to search on.",
                "type": "optional<string>",
              },
              "operator": {
                "docs": "The accepted operators you can use to define how you want to search for the value.",
                "type": "optional<SingleFilterSearchRequestOperator>",
              },
              "value": {
                "docs": "The value that you want to search on.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SingleFilterSearchRequestOperator": {
            "docs": "The accepted operators you can use to define how you want to search for the value.",
            "enum": [
              {
                "name": "EQUAL_TO",
                "value": "=",
              },
              {
                "name": "NOT_EQUALS",
                "value": "!=",
              },
              "IN",
              "NIN",
              {
                "name": "LESS_THAN",
                "value": "<",
              },
              {
                "name": "GREATER_THAN",
                "value": ">",
              },
              {
                "name": "",
                "value": "~",
              },
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SlaApplied": {
            "docs": "The SLA Applied object contains the details for which SLA has been applied to this conversation.
Important: if there are any canceled sla_events for the conversation - meaning an SLA has been manually removed from a conversation, the sla_status will always be returned as null.
",
            "inline": undefined,
            "properties": {
              "sla_name": {
                "docs": "The name of the SLA as given by the teammate when it was created.",
                "type": "optional<string>",
              },
              "sla_status": {
                "docs": "SLA statuses:
            - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.
            - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.
            - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.",
                "type": "optional<SlaAppliedSlaStatus>",
              },
              "type": {
                "docs": "object type",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SlaAppliedSlaStatus": {
            "docs": "SLA statuses:
            - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.
            - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.
            - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.",
            "enum": [
              "hit",
              "missed",
              "cancelled",
              "active",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SnoozeConversationRequest": {
            "docs": "Payload of the request to snooze a conversation",
            "inline": undefined,
            "properties": {
              "admin_id": {
                "docs": "The id of the admin who is performing the action.",
                "type": "string",
              },
              "snoozed_until": {
                "docs": "The time you want the conversation to reopen.",
                "type": "integer",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SocialProfile": {
            "docs": "A Social Profile allows you to label your contacts, companies, and conversations and list them using that Social Profile.",
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The name of the Social media profile",
                "type": "optional<string>",
              },
              "type": {
                "docs": "value is "social_profile"",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The name of the Social media profile",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "StartingAfterPaging": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "per_page": {
                "docs": "The number of results to fetch per page.",
                "type": "optional<integer>",
              },
              "starting_after": {
                "docs": "The cursor to use in the next request to get the next page of results.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SubscriptionTypeList": {
            "docs": "A list of subscription type objects.",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "A list of subscription type objects associated with the workspace .",
                "type": "optional<list<subscriptionTypes.SubscriptionType>>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TagCompanyRequest": {
            "docs": "You can tag a single company or a list of companies.",
            "inline": undefined,
            "properties": {
              "companies": {
                "docs": "The id or company_id of the company can be passed as input parameters.",
                "type": "list<TagCompanyRequestCompaniesItem>",
              },
              "name": {
                "docs": "The name of the tag, which will be created if not found.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TagCompanyRequestCompaniesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "company_id": {
                "docs": "The company id you have defined for the company.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The Intercom defined id representing the company.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TagMultipleUsersRequest": {
            "docs": "You can tag a list of users.",
            "inline": undefined,
            "properties": {
              "name": {
                "docs": "The name of the tag, which will be created if not found.",
                "type": "string",
              },
              "users": "list<TagMultipleUsersRequestUsersItem>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TagMultipleUsersRequestUsersItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The Intercom defined id representing the user.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Tags": {
            "docs": "A list of tags objects associated with a conversation",
            "inline": undefined,
            "properties": {
              "tags": {
                "docs": "A list of tags objects associated with the conversation.",
                "type": "optional<list<tags.Tag>>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"tag.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TeamList": {
            "docs": "This will return a list of team objects for the App.",
            "inline": undefined,
            "properties": {
              "teams": {
                "docs": "A list of team objects",
                "type": "optional<list<teams.Team>>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"team.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TeamPriorityLevel": {
            "docs": "Admin priority levels for teams",
            "inline": undefined,
            "properties": {
              "primary_team_ids": {
                "docs": "The primary team ids for the team",
                "type": "optional<list<integer>>",
              },
              "secondary_team_ids": {
                "docs": "The secondary team ids for the team",
                "type": "optional<list<integer>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketCustomAttributes": {
            "docs": "An object containing the different attributes associated to the ticket as key-value pairs. For the default title and description attributes, the keys are `_default_title_` and `_default_description_`.",
            "type": "map<string, TicketCustomAttributesValue>",
          },
          "TicketCustomAttributesValue": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "optional<string>",
              "double",
              "boolean",
              "list<unknown>",
              {
                "type": "File",
              },
            ],
          },
          "TicketList": {
            "docs": "Tickets are how you track requests from your users.",
            "inline": undefined,
            "properties": {
              "pages": {
                "type": "optional<CursorPages>",
              },
              "tickets": {
                "docs": "The list of ticket objects",
                "type": "optional<list<optional<tickets.Ticket>>>",
              },
              "total_count": {
                "docs": "A count of the total number of objects.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "Always ticket.list",
                "type": "optional<literal<"ticket.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketPartAuthor": {
            "docs": "The author that wrote or triggered the part. Can be a bot, admin, team or user.",
            "inline": undefined,
            "properties": {
              "email": {
                "docs": "The email of the author",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "The id of the author",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the author",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the author",
                "type": "optional<TicketPartAuthorType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketPartAuthorType": {
            "docs": "The type of the author",
            "enum": [
              "admin",
              "bot",
              "team",
              "user",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketParts": {
            "docs": "A list of Ticket Part objects for each note and event in the ticket. There is a limit of 500 parts.",
            "inline": undefined,
            "properties": {
              "ticket_parts": {
                "docs": "A list of Ticket Part objects for each ticket. There is a limit of 500 parts.",
                "type": "optional<list<tickets.TicketPart>>",
              },
              "total_count": {
                "docs": "",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "",
                "type": "optional<literal<"ticket_part.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketReply": {
            "docs": "A Ticket Part representing a note, comment, or quick_reply on a ticket",
            "inline": undefined,
            "properties": {
              "attachments": {
                "docs": "A list of attachments for the part.",
                "type": "optional<list<PartAttachment>>",
              },
              "author": {
                "type": "optional<TicketPartAuthor>",
              },
              "body": {
                "docs": "The message body, which may contain HTML.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the note was created.",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "The id representing the part.",
                "type": "optional<string>",
              },
              "part_type": {
                "docs": "Type of the part",
                "type": "optional<TicketReplyPartType>",
              },
              "redacted": {
                "docs": "Whether or not the ticket part has been redacted.",
                "type": "optional<boolean>",
              },
              "type": {
                "docs": "Always ticket_part",
                "type": "optional<literal<"ticket_part">>",
              },
              "updated_at": {
                "docs": "The last time the note was updated.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketReplyPartType": {
            "docs": "Type of the part",
            "enum": [
              "note",
              "comment",
              "quick_reply",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketRequestCustomAttributes": {
            "docs": "The attributes set on the ticket. When setting the default title and description attributes, the attribute keys that should be used are `_default_title_` and `_default_description_`. When setting ticket type attributes of the list attribute type, the key should be the attribute name and the value of the attribute should be the list item id, obtainable by [listing the ticket type](ref:get_ticket-types). For example, if the ticket type has an attribute called `priority` of type `list`, the key should be `priority` and the value of the attribute should be the guid of the list item (e.g. `de1825a0-0164-4070-8ca6-13e22462fa7e`).",
            "type": "map<string, TicketRequestCustomAttributesValue>",
          },
          "TicketRequestCustomAttributesValue": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "optional<string>",
              "double",
              "boolean",
              "list<unknown>",
            ],
          },
          "TicketTypeAttribute": {
            "docs": "Ticket type attribute, used to define each data field to be captured in a ticket.",
            "inline": undefined,
            "properties": {
              "archived": {
                "docs": "Whether the ticket type attribute is archived or not.",
                "type": "optional<boolean>",
              },
              "created_at": {
                "docs": "The date and time the ticket type attribute was created.",
                "type": "optional<integer>",
              },
              "data_type": {
                "docs": "The type of the data attribute (allowed values: "string list integer decimal boolean datetime files")",
                "type": "optional<string>",
              },
              "default": {
                "docs": "Whether the attribute is built in or not.",
                "type": "optional<boolean>",
              },
              "description": {
                "docs": "The description of the ticket type attribute",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The id representing the ticket type attribute.",
                "type": "optional<string>",
              },
              "input_options": {
                "docs": "Input options for the attribute",
                "type": "optional<map<string, unknown>>",
              },
              "name": {
                "docs": "The name of the ticket type attribute",
                "type": "optional<string>",
              },
              "order": {
                "docs": "The order of the attribute against other attributes",
                "type": "optional<integer>",
              },
              "required_to_create": {
                "default": false,
                "docs": "Whether the attribute is required or not for teammates.",
                "type": "optional<boolean>",
              },
              "required_to_create_for_contacts": {
                "default": false,
                "docs": "Whether the attribute is required or not for contacts.",
                "type": "optional<boolean>",
              },
              "ticket_type_id": {
                "docs": "The id of the ticket type that the attribute belongs to.",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `ticket_type_attribute`.",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "The date and time the ticket type attribute was last updated.",
                "type": "optional<integer>",
              },
              "visible_on_create": {
                "default": true,
                "docs": "Whether the attribute is visible or not to teammates.",
                "type": "optional<boolean>",
              },
              "visible_to_contacts": {
                "default": true,
                "docs": "Whether the attribute is visible or not to contacts.",
                "type": "optional<boolean>",
              },
              "workspace_id": {
                "docs": "The id of the workspace that the ticket type attribute belongs to.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketTypeAttributeList": {
            "docs": "A list of attributes associated with a given ticket type.",
            "inline": undefined,
            "properties": {
              "ticket_type_attributes": {
                "docs": "A list of ticket type attributes associated with a given ticket type.",
                "type": "optional<list<optional<TicketTypeAttribute>>>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `ticket_type_attributes.list`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketTypeList": {
            "docs": "A list of ticket types associated with a given workspace.",
            "inline": undefined,
            "properties": {
              "ticket_types": {
                "docs": "A list of ticket_types associated with a given workspace.",
                "type": "optional<list<optional<tickets.TicketType>>>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `ticket_type.list`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Translation": {
            "docs": "A translation object contains the localised details of a subscription type.",
            "inline": undefined,
            "properties": {
              "description": {
                "docs": "The localised description of the subscription type.",
                "type": "optional<string>",
              },
              "locale": {
                "docs": "The two character identifier for the language of the translation object.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The localised name of the subscription type.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UntagCompanyRequest": {
            "docs": "You can tag a single company or a list of companies.",
            "inline": undefined,
            "properties": {
              "companies": {
                "docs": "The id or company_id of the company can be passed as input parameters.",
                "type": "list<UntagCompanyRequestCompaniesItem>",
              },
              "name": {
                "docs": "The name of the tag which will be untagged from the company",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UntagCompanyRequestCompaniesItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "company_id": {
                "docs": "The company id you have defined for the company.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The Intercom defined id representing the company.",
                "type": "optional<string>",
              },
              "untag": {
                "docs": "Always set to true",
                "type": "optional<boolean>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateArticleRequest": {
            "docs": "You can Update an Article",
            "inline": undefined,
            "properties": {
              "author_id": {
                "docs": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
                "type": "optional<integer>",
              },
              "body": {
                "docs": "The content of the article. For multilingual articles, this will be the body of the default language's content.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
                "type": "optional<string>",
              },
              "parent_id": {
                "docs": "The id of the article's parent collection or section. An article without this field stands alone.",
                "type": "optional<string>",
              },
              "parent_type": {
                "docs": "The type of parent, which can either be a `collection` or `section`.",
                "type": "optional<string>",
              },
              "state": {
                "docs": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
                "type": "optional<UpdateArticleRequestState>",
              },
              "title": {
                "docs": "The title of the article.For multilingual articles, this will be the title of the default language's content.",
                "type": "optional<string>",
              },
              "translated_content": {
                "type": "optional<ArticleTranslatedContent>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateArticleRequestState": {
            "docs": "Whether the article will be `published` or will be a `draft`. Defaults to draft. For multilingual articles, this will be the state of the default language's content.",
            "enum": [
              "published",
              "draft",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateTicketTypeRequest": {
            "docs": "The request payload for updating a ticket type.
You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
",
            "inline": undefined,
            "properties": {
              "archived": {
                "docs": "The archived status of the ticket type.",
                "type": "optional<boolean>",
              },
              "category": {
                "docs": "Category of the Ticket Type.",
                "type": "optional<UpdateTicketTypeRequestCategory>",
              },
              "description": {
                "docs": "The description of the ticket type.",
                "type": "optional<string>",
              },
              "icon": {
                "default": "🎟️",
                "docs": "The icon of the ticket type.",
                "type": "optional<string>",
              },
              "is_internal": {
                "default": false,
                "docs": "Whether the tickets associated with this ticket type are intended for internal use only or will be shared with customers. This is currently a limited attribute.",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "The name of the ticket type.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateTicketTypeRequestCategory": {
            "docs": "Category of the Ticket Type.",
            "enum": [
              "Customer",
              {
                "name": "BackOffice",
                "value": "Back-office",
              },
              "Tracker",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateVisitorRequestOne": "unknown",
          "Visitor": {
            "docs": "Visitors are useful for representing anonymous people that have not yet been identified. They usually represent website visitors. Visitors are not visible in Intercom platform. The Visitors resource provides methods to fetch, update, convert and delete.",
            "inline": undefined,
            "properties": {
              "anonymous": {
                "docs": "Identifies if this visitor is anonymous.",
                "type": "optional<boolean>",
              },
              "app_id": {
                "docs": "The id of the app the visitor is associated with.",
                "type": "optional<string>",
              },
              "avatar": {
                "type": "optional<VisitorAvatar>",
              },
              "companies": {
                "type": "optional<VisitorCompanies>",
              },
              "created_at": {
                "docs": "The time the Visitor was added to Intercom.",
                "type": "optional<integer>",
              },
              "custom_attributes": {
                "docs": "The custom attributes you have set on the Visitor.",
                "type": "optional<map<string, string>>",
              },
              "do_not_track": {
                "docs": "Identifies if this visitor has do not track enabled.",
                "type": "optional<boolean>",
              },
              "email": {
                "docs": "The email of the visitor.",
                "type": "optional<string>",
                "validation": {
                  "format": "email",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "has_hard_bounced": {
                "docs": "Identifies if this visitor has had a hard bounce.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The Intercom defined id representing the Visitor.",
                "type": "optional<string>",
              },
              "las_request_at": {
                "docs": "The time the Lead last recorded making a request.",
                "type": "optional<integer>",
              },
              "location_data": {
                "type": "optional<VisitorLocationData>",
              },
              "marked_email_as_spam": {
                "docs": "Identifies if this visitor has marked an email as spam.",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "The name of the visitor.",
                "type": "optional<string>",
              },
              "owner_id": {
                "docs": "The id of the admin that owns the Visitor.",
                "type": "optional<string>",
              },
              "phone": {
                "docs": "The phone number of the visitor.",
                "type": "optional<string>",
              },
              "pseudonym": {
                "docs": "The pseudonym of the visitor.",
                "type": "optional<string>",
              },
              "referrer": {
                "docs": "The referer of the visitor.",
                "type": "optional<string>",
              },
              "remote_created_at": {
                "docs": "The time the Visitor was added to Intercom.",
                "type": "optional<integer>",
              },
              "segments": {
                "type": "optional<VisitorSegments>",
              },
              "session_count": {
                "docs": "The number of sessions the Visitor has had.",
                "type": "optional<integer>",
              },
              "signed_up_at": {
                "docs": "The time the Visitor signed up for your product.",
                "type": "optional<integer>",
              },
              "social_profiles": {
                "type": "optional<VisitorSocialProfiles>",
              },
              "tags": {
                "type": "optional<VisitorTags>",
              },
              "type": {
                "default": "visitor",
                "docs": "Value is 'visitor'",
                "type": "optional<string>",
              },
              "unsubscribed_from_emails": {
                "docs": "Whether the Visitor is unsubscribed from emails.",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "The last time the Visitor was updated.",
                "type": "optional<integer>",
              },
              "user_id": {
                "docs": "Automatically generated identifier for the Visitor.",
                "type": "optional<string>",
              },
              "utm_campaign": {
                "docs": "The utm_campaign of the visitor.",
                "type": "optional<string>",
              },
              "utm_content": {
                "docs": "The utm_content of the visitor.",
                "type": "optional<string>",
              },
              "utm_medium": {
                "docs": "The utm_medium of the visitor.",
                "type": "optional<string>",
              },
              "utm_source": {
                "docs": "The utm_source of the visitor.",
                "type": "optional<string>",
              },
              "utm_term": {
                "docs": "The utm_term of the visitor.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorAvatar": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "image_url": {
                "docs": "This object represents the avatar associated with the visitor.",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "type": {
                "default": "avatar",
                "docs": "",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorCompanies": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "companies": "optional<list<companies.Company>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"company.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorDeletedObject": {
            "docs": "Response returned when an object is deleted",
            "inline": undefined,
            "properties": {
              "id": {
                "docs": "The unique identifier for the visitor which is given by Intercom.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of object which was deleted",
                "type": "optional<literal<"visitor">>",
              },
              "user_id": {
                "docs": "Automatically generated identifier for the Visitor.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorLocationData": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "city_name": {
                "docs": "The city name of the visitor.",
                "type": "optional<string>",
              },
              "continent_code": {
                "docs": "The continent code of the visitor.",
                "type": "optional<string>",
              },
              "country_code": {
                "docs": "The country code of the visitor.",
                "type": "optional<string>",
              },
              "country_name": {
                "docs": "The country name of the visitor.",
                "type": "optional<string>",
              },
              "postal_code": {
                "docs": "The postal code of the visitor.",
                "type": "optional<string>",
              },
              "region_name": {
                "docs": "The region name of the visitor.",
                "type": "optional<string>",
              },
              "timezone": {
                "docs": "The timezone of the visitor.",
                "type": "optional<string>",
              },
              "type": {
                "default": "location_data",
                "docs": "",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorSegments": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "segments": "optional<list<string>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"segment.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorSocialProfiles": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "social_profiles": "optional<list<string>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"social_profile.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorTags": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "tags": "optional<list<VisitorTagsTagsItem>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"tag.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "VisitorTagsTagsItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The id of the tag.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the tag.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"tag">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "errors:
  SetAwayAdminRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 18722269-a019-46c4-87d7-50d0f6f8a990
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  SetAwayAdminRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Admin not found
    examples:
      - value:
          type: error.list
          request_id: 9818bd03-9cc6-4ab8-8e7c-20a45ac58e97
          errors:
            - code: admin_not_found
              message: Admin for admin_id not found
        name: Admin not found
  ListActivityLogsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 06d9eefd-2b3a-48f7-938a-5a10383a4ebf
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListAdminsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 4ba8121e-4a4a-4668-adb2-363c561f3c52
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveAdminRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 83978032-1473-4696-b755-b497d46a23cf
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveAdminRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Admin not found
    examples:
      - value:
          type: error.list
          request_id: 989bdb0b-1e8c-46cc-8953-9733dad40562
          errors:
            - code: admin_not_found
              message: Admin not found
        name: Admin not found
  ListArticlesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 86d69044-5966-428e-9a40-2b39fba3f823
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateArticleRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Bad Request
    examples:
      - value:
          type: error.list
          request_id: e0ea220d-8030-4e0c-9fa9-6b40e9ed4fbd
          errors:
            - code: parameter_not_found
              message: >-
                author_id must be in the main body or default locale
                translated_content object
        name: Bad Request
  CreateArticleRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: f223a1d9-5377-4337-92bb-00fb39157f11
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveArticleRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 62ab4791-7e4d-4400-a56b-b06a0ce3ba1a
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveArticleRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Article not found
    examples:
      - value:
          type: error.list
          request_id: 99c73902-e8ea-4872-b412-1d55ce4582fb
          errors:
            - code: not_found
              message: Resource Not Found
        name: Article not found
  UpdateArticleRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 15b4f214-c670-43d7-ad8f-648791fddf9b
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateArticleRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Article Not Found
    examples:
      - value:
          type: error.list
          request_id: 891b6ff4-181f-4b98-861b-d34ef16bfc4b
          errors:
            - code: not_found
              message: Resource Not Found
        name: Article Not Found
  DeleteArticleRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 85d43c53-f28f-4295-b937-9a43ea71d0c3
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DeleteArticleRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Article Not Found
    examples:
      - value:
          type: error.list
          request_id: 60da5f23-613c-4f84-84bd-e9dbd3d67187
          errors:
            - code: not_found
              message: Resource Not Found
        name: Article Not Found
  SearchArticlesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 626c6766-ee1a-489d-b87a-230d9b980c7d
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListAllCollectionsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: ccedcb48-7d08-4cc9-bcff-0622f70daf74
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateCollectionRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Bad Request
    examples:
      - value:
          type: error.list
          request_id: 1f4fd741-8681-4c21-911a-47d7bb39d080
          errors:
            - code: parameter_not_found
              message: Name is a required parameter.
        name: Bad Request
  CreateCollectionRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 8afa14e4-0e7c-4159-8aab-dfa3dcb6a8b4
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveCollectionRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: bf1acd76-8c6e-45f4-8dbe-54391843270a
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveCollectionRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Collection not found
    examples:
      - value:
          type: error.list
          request_id: 2970f0f3-7020-4382-8892-eac24818ca88
          errors:
            - code: not_found
              message: Resource Not Found
        name: Collection not found
  UpdateCollectionRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 67002700-07f8-4a56-a9bc-464254c3a5bd
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateCollectionRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Collection Not Found
    examples:
      - value:
          type: error.list
          request_id: 35e7f185-f547-4ae1-a23d-afc9027fc5a6
          errors:
            - code: not_found
              message: Resource Not Found
        name: Collection Not Found
  DeleteCollectionRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: e00bc89b-b9a9-4bc2-84a0-5c9d4710bfcf
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DeleteCollectionRequestNotFoundError:
    status-code: 404
    type: Error
    docs: collection Not Found
    examples:
      - value:
          type: error.list
          request_id: a35712b4-90b6-47fb-843d-757d9fdd81e6
          errors:
            - code: not_found
              message: Resource Not Found
        name: collection Not Found
  RetrieveHelpCenterRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 794a475b-0155-40b2-a288-ba0d48fdbd3f
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveHelpCenterRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Collection not found
    examples:
      - value:
          type: error.list
          request_id: c6e7d3f6-8a46-460e-8264-e07c2e7302aa
          errors:
            - code: not_found
              message: Resource Not Found
        name: Collection not found
  ListHelpCentersRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: c96a4779-a06d-45bb-aa39-eb96c587c2c7
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveCompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 6ef54f1c-70a4-4779-b3a6-29e4fd65d9dd
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveCompanyRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: c97dd75f-a434-4c83-a8e8-c4d1887d6c48
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  CreateOrUpdateCompanyRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Bad Request
    examples:
      - value:
          type: error.list
          errors:
            - code: bad_request
              message: bad 'test' parameter
        name: Bad Request
  CreateOrUpdateCompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 9b0d6fb9-d2d7-4904-a13c-97557a802323
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveACompanyByIdRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: c4e2fcb8-815e-4bee-80c7-9d5b1ab0f6fe
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveACompanyByIdRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: b49593ed-49a6-4497-8fb7-220ff74527f6
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  UpdateCompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 3f26a216-ddff-4782-9529-514f5bad56ea
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateCompanyRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: b1ce72df-630f-4925-b212-fca6e833eb8d
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  DeleteCompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 0a1a5065-69fe-47a4-9804-4cb2347671ef
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DeleteCompanyRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: 35a9b551-331e-499e-a63f-20396bfd29f5
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  ListAttachedContactsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: fe20b681-f988-4154-bec9-a5087fe0842e
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListAttachedContactsRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: a6381081-a166-4e8e-952d-38bb2cd1c2b4
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  ListAttachedSegmentsForCompaniesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 66fcc654-48ed-4f53-824e-831b5c96c9dc
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListAttachedSegmentsForCompaniesRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: 22add598-fd33-4c34-971f-cf215117aab3
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  ListAllCompaniesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 6f8cb4ca-9a95-43bd-aee1-597b85d1d13f
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ScrollOverAllCompaniesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 4b3ca8b1-8983-4fb8-abc5-b20a4ece5d32
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListCompaniesForAContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: d211ec8c-df9b-420c-86df-23c27ad54bc5
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListCompaniesForAContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact not found
    examples:
      - value:
          type: error.list
          request_id: b9d7374d-1780-4668-bb62-0e1ff9cdab45
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
  AttachContactToACompanyRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Bad Request
    examples:
      - value:
          type: error.list
          request_id: 9297dcfc-1896-43a3-a3f9-131238422ed2
          errors:
            - code: parameter_not_found
              message: company not specified
        name: Bad Request
  AttachContactToACompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 99739bbd-2dbe-4ce3-ae91-af23379b5cd7
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AttachContactToACompanyRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Company Not Found
    examples:
      - value:
          type: error.list
          request_id: 32d121d8-fcbf-4c59-9c60-204f7d602f36
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
  DetachContactFromACompanyRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: d8c1ab2d-4044-4c4f-98f0-176860747112
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DetachContactFromACompanyRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact Not Found
    examples:
      - value:
          type: error.list
          request_id: cd4f1648-724c-45f0-b6e1-72a1bc6479ee
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company Not Found
      - value:
          type: error.list
          request_id: d316defc-0a2f-49e7-b8ff-4cb6ccf46c90
          errors:
            - code: not_found
              message: User Not Found
        name: Contact Not Found
  ListNotesRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact not found
    examples:
      - value:
          type: error.list
          request_id: e93f90a6-4c85-4dbf-b063-96b649318371
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
  CreateNoteRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact not found
    examples:
      - value:
          type: error.list
          request_id: d7c69ce6-3195-46be-b2cb-0dce355d2919
          errors:
            - code: not_found
              message: Resource Not Found
        name: Admin not found
      - value:
          type: error.list
          request_id: 2e3bd274-9ac6-43c3-a419-bcc8e6a03a1d
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
  ListSegmentsForAContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: d2927c64-9c5a-4593-997b-381f8c2356ea
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListSegmentsForAContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact not found
    examples:
      - value:
          type: error.list
          request_id: 7d4ab1a9-5990-4338-b5d9-0f3f55f1acb7
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
  ListSubscriptionsForAContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 82a95655-569d-4e5d-b0d9-f8a6c7a379f3
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListSubscriptionsForAContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact not found
    examples:
      - value:
          type: error.list
          request_id: 3f481052-cf49-4b95-a492-734223865981
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
  AttachSubscriptionTypeToContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 377d162e-82a5-4148-a26f-29c9c760dadc
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AttachSubscriptionTypeToContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Resource not found
    examples:
      - value:
          type: error.list
          request_id: cf0f6fd6-7c5e-492b-909d-f60b35eea1c4
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
      - value:
          type: error.list
          request_id: 3f852f45-1a80-4ade-9bc6-72b377d2bbd8
          errors:
            - code: not_found
              message: Resource Not Found
        name: Resource not found
  DetachSubscriptionTypeToContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 99fba0c6-2252-4658-abd2-1d2ff16a508b
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DetachSubscriptionTypeToContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Resource not found
    examples:
      - value:
          type: error.list
          request_id: 7bc429e4-e887-4f53-b69c-94e6e55d2125
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
      - value:
          type: error.list
          request_id: 66ebc1f5-5e02-4584-8028-f2559a41e8df
          errors:
            - code: not_found
              message: Resource Not Found
        name: Resource not found
  ListTagsForAContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 97383559-0fb0-4084-8a9a-8e3407c46108
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListTagsForAContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact not found
    examples:
      - value:
          type: error.list
          request_id: 2b513026-b78c-4c67-b073-da0266f62cc7
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
  AttachTagToContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 63a2828f-107e-4d51-9398-a220b81a7bce
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AttachTagToContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Tag not found
    examples:
      - value:
          type: error.list
          request_id: 1bbd7e4b-718e-46f4-b682-a429aea78f01
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
      - value:
          type: error.list
          request_id: a1a28017-728a-423b-adc0-2705d375f533
          errors:
            - code: not_found
              message: Resource Not Found
        name: Tag not found
  DetachTagFromContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: e97d9f1b-8c9e-4caf-b473-3bce411c697e
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DetachTagFromContactRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Tag not found
    examples:
      - value:
          type: error.list
          request_id: 6f735483-c309-4e94-b9ab-143aedc0c691
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
      - value:
          type: error.list
          request_id: 9e780671-29b3-4913-b4be-15234ea0bc6a
          errors:
            - code: not_found
              message: Resource Not Found
        name: Tag not found
  ShowContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: f70085f1-f655-43ee-9585-d2061b260fcd
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: b1b88e2d-938c-4a26-b65d-26ff65a0af36
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DeleteContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 0bce3945-d2ec-4b8e-a790-b16fd52d9f11
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  MergeContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 57b64228-0e60-4e35-833d-39c4e4067dde
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  SearchContactsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 2b28c47b-8fa3-4e17-8fc1-6ba80f1cc844
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListContactsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: d5bac7ff-7961-4fe5-8aed-6f1b031b38af
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateContactRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: c18ca0d4-ad2c-41e7-9a71-1df806f9c954
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AttachTagToConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 95cacea0-4744-4de8-a2bf-da4419f75732
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AttachTagToConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Conversation not found
    examples:
      - value:
          type: error.list
          request_id: 840d35aa-2414-402a-b3c6-763a410e0d16
          errors:
            - code: not_found
              message: Conversation not found
        name: Conversation not found
  DetachTagFromConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: f083d6b1-e9d2-43b3-86df-67539007fc3e
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DetachTagFromConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Tag not found
    examples:
      - value:
          type: error.list
          request_id: f78f63ba-911d-47b8-a389-b33e3ccbe77e
          errors:
            - code: not_found
              message: Conversation not found
        name: Conversation not found
      - value:
          type: error.list
          request_id: 0d00d069-2cf1-496f-b887-a4db74ee320d
          errors:
            - code: tag_not_found
              message: Tag not found
        name: Tag not found
  ListConversationsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 18db64a8-7a08-4967-9ec6-0416178306f9
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListConversationsRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: a91eac55-8d70-454d-a01d-c6bb875aaa35
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  CreateConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: af9757fc-4e1d-463c-ac9d-788503f04a95
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: c7a35217-6720-48bd-a2ae-c2acb5adea30
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  CreateConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact Not Found
    examples:
      - value:
          type: error.list
          request_id: ed0ab0c5-57b8-4413-a7a9-bbc134b40876
          errors:
            - code: not_found
              message: User Not Found
        name: Contact Not Found
  RetrieveConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: b1f6adfd-f7da-4880-8d11-d842235126ae
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: c7b0a10f-d482-4352-8d7b-1ad26b902473
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  RetrieveConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: 978c1e65-1eba-4995-9acb-ff8f33b283e3
          errors:
            - code: not_found
              message: Resource Not Found
        name: Not found
  UpdateConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 58e6b9ee-4a28-4597-9c20-faf34b6894dc
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: cf6fb162-88c9-45ec-9f97-c3fcad93b7c1
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  UpdateConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: e4c692dd-cccd-46bf-834a-cda7a3a9029c
          errors:
            - code: not_found
              message: Resource Not Found
        name: Not found
  ReplyConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 7435aa28-13bd-40b1-ba99-66009e92a1ba
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ReplyConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: 9fe5809c-cf0b-4a0f-af80-9913d3beb1eb
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  ReplyConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: 8193a639-aba8-4b0e-9fdd-ee48807e3ee7
          errors:
            - code: not_found
              message: Resource Not Found
        name: Not found
  ManageConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: ae0581d2-199e-437c-bf51-1eb9fe2e12fc
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ManageConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: a7e069bb-f013-45bc-8e0a-f58c3de4e034
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  ManageConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: 1bfc14e1-07ef-4999-9448-f029b112cf1b
          errors:
            - code: not_found
              message: Resource Not Found
        name: Not found
  AutoAssignConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 8aeac960-c7fb-41f7-8cc9-cd3d62f6ff92
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AutoAssignConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: 037980c4-84cb-4d3a-ad64-66e4e563a275
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  AutoAssignConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: 9d88a5a7-6df9-42ff-b324-2387db7be984
          errors:
            - code: not_found
              message: Resource Not Found
        name: Not found
  AttachContactToConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 4f00c4c6-a8f7-436e-bf95-d1adfa315906
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AttachContactToConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: 3d1c3371-6ba4-4d5a-9368-ac983292136d
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  AttachContactToConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: 1fd64942-5bf0-4a51-a6cb-db4a778bb1f4
          errors:
            - code: not_found
              message: Resource Not Found
        name: Not found
  DetachContactFromConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: d35f1b37-765c-4afe-8738-81c0560710a6
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DetachContactFromConversationRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: d30f18d4-2e0a-4528-a66b-4590b733713c
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  DetachContactFromConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Contact not found
    examples:
      - value:
          type: error.list
          request_id: 579f0f7a-d773-41d6-9d36-8cc0b3fbcc41
          errors:
            - code: not_found
              message: Resource Not Found
        name: Conversation not found
      - value:
          type: error.list
          request_id: 44531412-2973-4b92-b14d-80abac5c1b4d
          errors:
            - code: not_found
              message: User Not Found
        name: Contact not found
  DetachContactFromConversationRequestUnprocessableEntityError:
    status-code: 422
    type: Error
    docs: Last customer
    examples:
      - value:
          type: error.list
          request_id: 35a0444f-8a1e-40e9-a5fc-dd1ae2df8bc6
          errors:
            - code: parameter_invalid
              message: Removing the last customer is not allowed
        name: Last customer
  RedactConversationRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 1b830d07-a249-4ff8-a7bf-41bf83fd53b2
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RedactConversationRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: 0c016386-49f4-431f-92dc-7e739cbf98e1
          errors:
            - code: conversation_part_or_message_not_found
              message: Conversation part or message not found
        name: Not found
  ConvertConversationToTicketRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Bad request
    examples:
      - value:
          type: error.list
          request_id: 74656c1a-0a17-4c80-a7b9-66fa45c6d71b
          errors:
            - code: parameter_invalid
              message: Ticket type is not a customer ticket type
        name: Bad request
  LisDataAttributesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 6e76e914-a34d-4125-8310-62fdfc4e651e
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateDataAttributeRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Too few options for list
    examples:
      - value:
          type: error.list
          request_id: bcd93885-3f01-4b92-9918-c96a3f4492e8
          errors:
            - code: parameter_invalid
              message: >-
                You already have 'The One Ring' in your company data. To save
                this as new people data, use a different name.
        name: Same name already exists
      - value:
          type: error.list
          request_id: 7420c5e3-22c3-46be-8a23-72fef8f8ec0e
          errors:
            - code: parameter_invalid
              message: >-
                Your name for this attribute must only contain alphanumeric
                characters, currency symbols, and hyphens
        name: Invalid name
      - value:
          type: error.list
          request_id: c844551a-05d3-4f8c-931a-32e96bf3a508
          errors:
            - code: parameter_invalid
              message: >-
                You already have 'The One Ring' in your company data. To save
                this as new company data, use a different name.
        name: Attribute already exists
      - value:
          type: error.list
          request_id: b8c58b81-8445-473d-8fe3-7880c04f9547
          errors:
            - code: parameter_invalid
              message: Data Type isn't an option
        name: Invalid Data Type
      - value:
          type: error.list
          request_id: 119e3822-3a45-48cf-b5ab-037f27a948c8
          errors:
            - code: parameter_invalid
              message: The Data Attribute model field must be either contact or company
        name: Too few options for list
  CreateDataAttributeRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: b74d8980-6e99-44db-a3d8-2a65a63fe590
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateDataAttributeRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Too few options in list
    examples:
      - value:
          type: error.list
          request_id: 6615f20c-01df-443c-9ea1-c954ba6b09d6
          errors:
            - code: parameter_invalid
              message: Options isn't an array
        name: Too few options in list
  UpdateDataAttributeRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 0cfc97c0-32be-4e68-aef2-f5744e4e85f7
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateDataAttributeRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Attribute Not Found
    examples:
      - value:
          type: error.list
          request_id: 2680a225-4f79-4098-8438-8db993c639fe
          errors:
            - code: field_not_found
              message: We couldn't find that data attribute to update
        name: Attribute Not Found
  UpdateDataAttributeRequestUnprocessableEntityError:
    status-code: 422
    type: Error
    docs: Has Dependant Object
    examples:
      - value:
          type: error.list
          request_id: fbc508f1-9cbf-4134-90ea-baa1065760d2
          errors:
            - code: data_invalid
              message: >-
                The Data Attribute you are trying to archive has a dependant
                object
        name: Has Dependant Object
  LisDataEventsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: bfdcc6de-2dcb-4725-acc7-232c10838586
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateDataEventRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: c6b3dcbd-33be-4a80-abb4-c5b3315250d0
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DataEventSummariesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 110801d1-2f7b-436f-8f03-2245545a1432
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateMessageRequestBadRequestError:
    status-code: 400
    type: Error
    docs: No body supplied for email message
    examples:
      - value:
          type: error.list
          request_id: 4a52a34f-c7e2-4e70-adf2-ea7f41beb2a1
          errors:
            - code: parameter_invalid
              message: Body is required
        name: No body supplied for message
      - value:
          type: error.list
          request_id: 7d54191b-c0fc-4860-a01c-9da6b4e45b7f
          errors:
            - code: parameter_invalid
              message: Body is required
        name: No body supplied for email message
  CreateMessageRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: ee3ea56e-d0ce-47db-871a-57740e165e5c
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateMessageRequestForbiddenError:
    status-code: 403
    type: Error
    docs: API plan restricted
    examples:
      - value:
          type: error.list
          request_id: fab7034a-78bd-4413-a652-8f38783e7bf1
          errors:
            - code: api_plan_restricted
              message: Active subscription needed.
        name: API plan restricted
  CreateMessageRequestUnprocessableEntityError:
    status-code: 422
    type: Error
    docs: No subject supplied for email message
    examples:
      - value:
          type: error.list
          request_id: f54ba906-3255-4fc6-a660-0dab0043ff2b
          errors:
            - code: parameter_not_found
              message: No subject supplied for email message
        name: No subject supplied for email message
  ListNewsItemsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 7b27151d-7bb0-402e-87fe-5780690d9f32
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateNewsItemRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: c36202f1-6bf3-4ea6-9442-192123f506b0
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveNewsItemRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: cc6af01d-81e3-4a74-8a62-807a3239e1ad
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveNewsItemRequestNotFoundError:
    status-code: 404
    type: Error
    docs: News Item Not Found
    examples:
      - value:
          type: error.list
          request_id: 0f4b439e-9b57-4019-886e-15cc08582914
          errors:
            - code: not_found
              message: Resource Not Found
        name: News Item Not Found
  UpdateNewsItemRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: f780a591-4aa2-4382-80c4-e0f2d655bf2e
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateNewsItemRequestNotFoundError:
    status-code: 404
    type: Error
    docs: News Item Not Found
    examples:
      - value:
          type: error.list
          request_id: fe6e217d-70bc-4090-b33a-b32ec0e6a391
          errors:
            - code: not_found
              message: Resource Not Found
        name: News Item Not Found
  DeleteNewsItemRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 521cb8a5-4d47-43dd-94cb-ef54f6f8ce0a
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DeleteNewsItemRequestNotFoundError:
    status-code: 404
    type: Error
    docs: News Item Not Found
    examples:
      - value:
          type: error.list
          request_id: a191b999-6f71-4676-a8db-1a79ccc4f114
          errors:
            - code: not_found
              message: Resource Not Found
        name: News Item Not Found
  ListLiveNewsfeedItemsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: de07bbcf-64ff-4fc8-a7e5-fcbe772b85a5
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListNewsfeedsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: d00f8d67-1e7c-464b-b0b7-b2409d706076
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveNewsfeedRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 185ce494-34e2-4cda-85cb-c51ad7281292
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveNoteRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: b29ebc05-ba35-4db8-aac6-d74617769643
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveNoteRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Note not found
    examples:
      - value:
          type: error.list
          request_id: 7e37eb4e-9f1e-47fa-a393-8d9b2c20983a
          errors:
            - code: not_found
              message: Resource Not Found
        name: Note not found
  ListSegmentsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: d70c184d-852a-4f67-8298-3cf9a327adb3
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveSegmentRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: a9c190ff-16eb-43f9-94fc-7c22da2766af
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveSegmentRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Segment not found
    examples:
      - value:
          type: error.list
          request_id: fe79fa5e-c8eb-40a6-be76-d618833c2840
          errors:
            - code: not_found
              message: Resource Not Found
        name: Segment not found
  ListSubscriptionTypesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 5fb6b003-d6a6-4641-b71b-c5c468c87448
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreatePhoneSwitchRequestBadRequestError:
    status-code: 400
    type: unknown
    docs: bad request - invalid number
    examples:
      - value:
          error_key: sms_failed
          message: SMS was not sent due to an unknown error
        name: bad request - exception sending sms
      - value:
          error_key: invalid_phone_number
          message: Invalid phone number
        name: bad request - invalid number
  CreatePhoneSwitchRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 5da7a3e7-dcb0-4378-8575-0a0e9bae3862
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreatePhoneSwitchRequestUnprocessableEntityError:
    status-code: 422
    type: unknown
    docs: unprocessable entity
    examples:
      - value:
          error_key: some_error
        name: unprocessable entity
  ListTagsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: c83a3efe-433a-4555-a5e2-e393588be29f
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateTagRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Invalid parameters
    examples:
      - value:
          type: error.list
          request_id: a7afe3c5-be52-4b69-9268-50ef1d917a1b
          errors:
            - code: parameter_invalid
              message: invalid tag parameters
        name: Invalid parameters
  CreateTagRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 3609e8b1-a6aa-4c57-a994-3d95743f20a2
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateTagRequestNotFoundError:
    status-code: 404
    type: Error
    docs: User  not found
    examples:
      - value:
          type: error.list
          request_id: f0f84d9b-3c51-4904-9c21-34faba76ebf5
          errors:
            - code: company_not_found
              message: Company Not Found
        name: Company not found
      - value:
          type: error.list
          request_id: 786848c6-5b9f-4e9b-aa78-2bdec45a09f5
          errors:
            - code: not_found
              message: User Not Found
        name: User  not found
  FindTagRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 76a1d79d-3f0d-49bb-8d15-38d1ae6df738
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  FindTagRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Tag not found
    examples:
      - value:
          type: error.list
          request_id: 20b89fb6-f224-4f81-98ca-4cb4b36df959
          errors:
            - code: not_found
              message: Resource Not Found
        name: Tag not found
  DeleteTagRequestBadRequestError:
    status-code: 400
    type: Error
    docs: Tag has dependent objects
    examples:
      - value:
          type: error.list
          request_id: 41086388-9b3b-4e07-9633-502b9b10c926
          errors:
            - code: tag_has_dependent_objects
              message: 'Unable to delete Tag with dependent objects. Segments: Seg 1.'
        name: Tag has dependent objects
  DeleteTagRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 3dcedf54-ed30-4337-8992-94e36900e695
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DeleteTagRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Resource not found
    examples:
      - value:
          type: error.list
          request_id: 111586bb-ad78-43b9-b0a0-bf864d9a3744
          errors:
            - code: not_found
              message: Resource Not Found
        name: Resource not found
  ListTeamsRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 006b2c8f-9a29-463e-be69-ad213576aee6
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveTeamRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 110ad8e4-99ed-461a-bd93-92a5cdbaa6b2
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveTeamRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Team not found
    examples:
      - value:
          type: error.list
          request_id: 4745dfce-7275-4864-abfd-44e0d84bf52a
          errors:
            - code: team_not_found
              message: Team not found
        name: Team not found
  CreateTicketTypeAttributeRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 3bc672fa-e051-4ede-b6e9-79f518231ba9
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateTicketTypeAttributeRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 6e45414c-e627-4769-bdbd-d51f2c19e1e9
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ListTicketTypesRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 50823491-2ab1-4b84-9700-2d92c4f367fd
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  CreateTicketTypeRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 7c4784fe-d3e4-4182-b9c4-918bdf253eef
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  GetTicketTypeRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: b0100f38-119c-4e30-8560-a25561d97c66
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateTicketTypeRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 2b0554fe-ba10-41d4-ab7b-715c2b7b8e47
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ReplyTicketRequestBadRequestError:
    status-code: 400
    type: Error
    docs: User reply
    examples:
      - value:
          type: error.list
          request_id: b8b42c55-347c-4704-b4c1-92220c01f4ac
          errors:
            - code: parameter_mismatch
              message: User replies are not allowed on Backoffice tickets
        name: User reply
  ReplyTicketRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: bb012854-cca8-4fa7-972e-6c38204e8294
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  ReplyTicketRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Not found
    examples:
      - value:
          type: error.list
          request_id: c23e8dab-6102-483c-bb1b-c62923be35ab
          errors:
            - code: not_found
              message: Resource Not Found
        name: Not found
  AttachTagToTicketRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: a502f48f-c80d-48fd-bea5-cafe7e24d9f9
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  AttachTagToTicketRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Ticket not found
    examples:
      - value:
          type: error.list
          request_id: e11d8f55-82fe-4c0d-b4c6-6f22c6a694e9
          errors:
            - code: ticket_not_found
              message: Ticket not found
        name: Ticket not found
  DetachTagFromTicketRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 0d3be117-0a9e-4e88-9a05-4fdd7f93d7bc
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  DetachTagFromTicketRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Tag not found
    examples:
      - value:
          type: error.list
          request_id: ffa08bb4-3994-4132-b9e3-14837e0723e8
          errors:
            - code: ticket_not_found
              message: Ticket not found
        name: Ticket not found
      - value:
          type: error.list
          request_id: d2385995-502c-4c03-bf4b-93ef3d24037b
          errors:
            - code: tag_not_found
              message: Tag not found
        name: Tag not found
  CreateTicketRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 745c921a-7c5a-40d4-ab28-6d28a8d2ed47
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  GetTicketRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: e7ba89f2-3bc8-4fc3-97bc-56f62f342680
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateTicketRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: e5202025-e8f9-400a-9107-192ae8bfd50c
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateTicketRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: Assignee not found
    examples:
      - value:
          type: error.list
          request_id: 809aceaa-c073-4e2a-96c3-a25e15576946
          errors:
            - code: assignee_not_found
              message: Assignee not found
        name: Admin not found
      - value:
          type: error.list
          request_id: 639b5b51-1eb9-4c06-8de4-d9b0e30fff05
          errors:
            - code: assignee_not_found
              message: Assignee not found
        name: Assignee not found
  RetrieveVisitorWithUserIdRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 25dace4f-4916-492c-823b-f0cca227dff0
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  RetrieveVisitorWithUserIdRequestNotFoundError:
    status-code: 404
    type: Error
    docs: Visitor not found
    examples:
      - value:
          type: error.list
          request_id: 7359afef-98f5-4b22-9de7-902f7a214729
          errors:
            - code: not_found
              message: Visitor Not Found
        name: Visitor not found
  UpdateVisitorRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: 82df3971-fb7c-410d-a919-e8bc1b3d991a
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
  UpdateVisitorRequestNotFoundError:
    status-code: 404
    type: Error
    docs: visitor Not Found
    examples:
      - value:
          type: error.list
          request_id: 1f35dc86-17d2-4bfe-8cb1-9afa74adc24c
          errors:
            - code: not_found
              message: Visitor Not Found
        name: visitor Not Found
  ConvertVisitorRequestUnauthorizedError:
    status-code: 401
    type: Error
    docs: Unauthorized
    examples:
      - value:
          type: error.list
          request_id: fe1a587a-e682-4a96-bd30-ea08b726e6fa
          errors:
            - code: unauthorized
              message: Access Token Invalid
        name: Unauthorized
types:
  ActivityLogPerformedBy:
    docs: Details about the Admin involved in the activity.
    properties:
      type:
        type: optional<string>
        docs: String representing the object's type. Always has the value `admin`.
      id:
        type: optional<string>
        docs: The id representing the admin.
      email:
        type: optional<string>
        docs: The email of the admin.
      ip:
        type: optional<string>
        docs: The IP address of the admin.
    source:
      openapi: ../openapi.yml
    inline: true
  ActivityLogActivityType:
    enum:
      - admin_assignment_limit_change
      - admin_away_mode_change
      - admin_deletion
      - admin_deprovisioned
      - admin_impersonation_end
      - admin_impersonation_start
      - admin_invite_change
      - admin_invite_creation
      - admin_invite_deletion
      - admin_login_failure
      - admin_login_success
      - admin_logout
      - admin_password_reset_request
      - admin_password_reset_success
      - admin_permission_change
      - admin_provisioned
      - admin_two_factor_auth_change
      - admin_unauthorized_sign_in_method
      - app_admin_join
      - app_authentication_method_change
      - app_data_deletion
      - app_data_export
      - app_google_sso_domain_change
      - app_identity_verification_change
      - app_name_change
      - app_outbound_address_change
      - app_package_installation
      - app_package_token_regeneration
      - app_package_uninstallation
      - app_team_creation
      - app_team_deletion
      - app_team_membership_modification
      - app_timezone_change
      - app_webhook_creation
      - app_webhook_deletion
      - articles_in_messenger_enabled_change
      - bulk_delete
      - bulk_export
      - campaign_deletion
      - campaign_state_change
      - conversation_part_deletion
      - conversation_topic_change
      - conversation_topic_creation
      - conversation_topic_deletion
      - help_center_settings_change
      - inbound_conversations_change
      - inbox_access_change
      - message_deletion
      - message_state_change
      - messenger_look_and_feel_change
      - messenger_search_required_change
      - messenger_spaces_change
      - office_hours_change
      - role_change
      - role_creation
      - role_deletion
      - ruleset_activation_title_preview
      - ruleset_creation
      - ruleset_deletion
      - search_browse_enabled_change
      - search_browse_required_change
      - seat_change
      - seat_revoke
      - security_settings_change
      - temporary_expectation_change
      - upfront_email_collection_change
      - welcome_message_change
    inline: true
    source:
      openapi: ../openapi.yml
  ActivityLog:
    docs: Activities performed by Admins.
    properties:
      id:
        type: optional<string>
        docs: The id representing the activity.
      performed_by:
        type: optional<ActivityLogPerformedBy>
        docs: Details about the Admin involved in the activity.
      metadata:
        type: optional<ActivityLogMetadata>
      created_at:
        type: optional<integer>
        docs: The time the activity was created.
      activity_type:
        type: optional<ActivityLogActivityType>
      activity_description:
        type: optional<string>
        docs: A sentence or two describing the activity.
    source:
      openapi: ../openapi.yml
  ActivityLogList:
    docs: A paginated list of activity logs.
    properties:
      type:
        type: optional<string>
        docs: >-
          String representing the object's type. Always has the value
          `activity_log.list`.
      pages:
        type: optional<CursorPages>
      activity_logs:
        type: optional<list<optional<ActivityLog>>>
        docs: An array of activity logs
    source:
      openapi: ../openapi.yml
  ActivityLogMetadata:
    docs: Additional data provided about Admin activity.
    properties:
      sign_in_method:
        type: optional<string>
        docs: The way the admin signed in.
      external_id:
        type: optional<string>
        docs: The unique identifier for the contact which is provided by the Client.
      away_mode:
        type: optional<boolean>
        docs: >-
          The away mode status which is set to true when away and false when
          returned.
      away_status_reason:
        type: optional<string>
        docs: The reason the Admin is away.
      reassign_conversations:
        type: optional<boolean>
        docs: >-
          Indicates if conversations should be reassigned while an Admin is
          away.
      source:
        type: optional<string>
        docs: The action that initiated the status change.
      auto_changed:
        type: optional<string>
        docs: Indicates if the status was changed automatically or manually.
      update_by:
        type: optional<integer>
        docs: The ID of the Admin who initiated the activity.
      update_by_name:
        type: optional<string>
        docs: The name of the Admin who initiated the activity.
    source:
      openapi: ../openapi.yml
  AddressableList:
    docs: A list used to access other resources from a parent model.
    properties:
      type:
        type: optional<string>
        docs: The addressable object type
        validation:
          format: uri
      id:
        type: optional<string>
        docs: The id of the addressable object
      url:
        type: optional<string>
        docs: Url to get more company resources for this contact
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
  Admins:
    docs: A list of admins associated with a given workspace.
    properties:
      type:
        type: optional<string>
        docs: >-
          String representing the object's type. Always has the value
          `admin.list`.
      admins:
        type: optional<list<optional<admins.Admin>>>
        docs: A list of admins associated with a given workspace.
    source:
      openapi: ../openapi.yml
  AdminPriorityLevel:
    docs: Admin priority levels for the team
    properties:
      primary_admin_ids:
        type: optional<list<integer>>
        docs: The primary admin ids for the team
      secondary_admin_ids:
        type: optional<list<integer>>
        docs: The secondary admin ids for the team
    source:
      openapi: ../openapi.yml
  AdminReplyConversationRequestMessageType:
    enum:
      - comment
      - note
    inline: true
    source:
      openapi: ../openapi.yml
  AdminReplyConversationRequest:
    docs: Payload of the request to reply on behalf of an admin
    properties:
      message_type: AdminReplyConversationRequestMessageType
      type: literal<"admin">
      body:
        type: optional<string>
        docs: >-
          The text body of the reply. Notes accept some HTML formatting. Must be
          present for comment and note message types.
      admin_id:
        type: string
        docs: The id of the admin who is authoring the comment.
      created_at:
        type: optional<integer>
        docs: >-
          The time the reply was created. If not provided, the current time will
          be used.
      attachment_urls:
        type: optional<list<string>>
        docs: >-
          A list of image URLs that will be added as attachments. You can
          include up to 10 URLs.
      attachment_files:
        type: optional<list<ConversationAttachmentFiles>>
        docs: >-
          A list of files that will be added as attachments. You can include up
          to 10 files
    source:
      openapi: ../openapi.yml
  AdminReplyTicketRequestMessageType:
    enum:
      - comment
      - note
      - quick_reply
    inline: true
    source:
      openapi: ../openapi.yml
  AdminReplyTicketRequestReplyOptionsItem:
    properties:
      text:
        type: string
        docs: The text to display in this quick reply option.
      uuid:
        type: string
        docs: >-
          A unique identifier for this quick reply option. This value will be
          available within the metadata of the comment ticket part that is
          created when a user clicks on this reply option.
        validation:
          format: uuid
    source:
      openapi: ../openapi.yml
    inline: true
  AdminReplyTicketRequest:
    docs: Payload of the request to reply on behalf of an admin
    properties:
      message_type: AdminReplyTicketRequestMessageType
      type: literal<"admin">
      body:
        type: optional<string>
        docs: >-
          The text body of the reply. Notes accept some HTML formatting. Must be
          present for comment and note message types.
      admin_id:
        type: string
        docs: The id of the admin who is authoring the comment.
      created_at:
        type: optional<integer>
        docs: >-
          The time the reply was created. If not provided, the current time will
          be used.
      reply_options:
        type: optional<list<AdminReplyTicketRequestReplyOptionsItem>>
        docs: >-
          The quick reply options to display. Must be present for quick_reply
          message types.
      attachment_urls:
        type: optional<list<string>>
        docs: >-
          A list of image URLs that will be added as attachments. You can
          include up to 10 URLs.
    source:
      openapi: ../openapi.yml
  AdminWithAppAvatar:
    docs: This object represents the avatar associated with the admin.
    properties:
      type:
        type: optional<string>
        docs: >-
          This is a string that identifies the type of the object. It will
          always have the value `avatar`.
        default: avatar
      image_url:
        type: optional<string>
        docs: This object represents the avatar associated with the admin.
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  Admin:
    docs: Admins are the teammate accounts that have access to a workspace
    properties:
      type:
        type: optional<string>
        docs: String representing the object's type. Always has the value `admin`.
      id:
        type: optional<string>
        docs: The id representing the admin.
      name:
        type: optional<string>
        docs: The name of the admin.
      email:
        type: optional<string>
        docs: The email of the admin.
      job_title:
        type: optional<string>
        docs: The job title of the admin.
      away_mode_enabled:
        type: optional<boolean>
        docs: Identifies if this admin is currently set in away mode.
      away_mode_reassign:
        type: optional<boolean>
        docs: >-
          Identifies if this admin is set to automatically reassign new
          conversations to the apps default inbox.
      has_inbox_seat:
        type: optional<boolean>
        docs: >-
          Identifies if this admin has a paid inbox seat to restrict/allow
          features that require them.
      team_ids:
        type: optional<list<integer>>
        docs: This is a list of ids of the teams that this admin is part of.
      avatar:
        type: optional<AdminWithAppAvatar>
        docs: This object represents the avatar associated with the admin.
      email_verified:
        type: optional<boolean>
        docs: Identifies if this admin's email is verified.
      app:
        type: optional<App>
        docs: App that the admin belongs to.
    source:
      openapi: ../openapi.yml
  App:
    docs: App is a workspace on Intercom
    properties:
      type:
        type: optional<string>
        docs: ''
        default: app
      id_code:
        type: optional<string>
        docs: The id of the app.
      name:
        type: optional<string>
        docs: The name of the app.
      region:
        type: optional<string>
        docs: The Intercom region the app is located in.
      timezone:
        type: optional<string>
        docs: The timezone of the region where the app is located.
      created_at:
        type: optional<integer>
        docs: When the app was created.
      identity_verification:
        type: optional<boolean>
        docs: Whether or not the app uses identity verification.
    source:
      openapi: ../openapi.yml
  ArticleContentState:
    enum:
      - published
      - draft
    docs: Whether the article is `published` or is a `draft` .
    inline: true
    source:
      openapi: ../openapi.yml
  ArticleContent:
    docs: The Content of an Article.
    properties:
      type:
        type: optional<string>
        docs: The type of object - `article_content` .
      title:
        type: optional<string>
        docs: The title of the article.
      description:
        type: optional<string>
        docs: The description of the article.
      body:
        type: optional<string>
        docs: The body of the article.
      author_id:
        type: optional<integer>
        docs: The ID of the author of the article.
      state:
        type: optional<ArticleContentState>
        docs: Whether the article is `published` or is a `draft` .
      created_at:
        type: optional<integer>
        docs: The time when the article was created (seconds).
      updated_at:
        type: optional<integer>
        docs: The time when the article was last updated (seconds).
      url:
        type: optional<string>
        docs: The URL of the article.
    source:
      openapi: ../openapi.yml
  Articles:
    docs: This will return a list of articles for the App.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of the object - `list`.
      pages:
        type: optional<CursorPages>
      total_count:
        type: optional<integer>
        docs: A count of the total number of articles.
      data:
        type: optional<list<articles.Articles>>
        docs: An array of Article objects
    source:
      openapi: ../openapi.yml
  ArticleStatistics:
    docs: The statistics of an article.
    properties:
      type:
        type: optional<literal<"article_statistics">>
        docs: The type of object - `article_statistics`.
      views:
        type: optional<integer>
        docs: The number of total views the article has received.
      conversions:
        type: optional<integer>
        docs: The number of conversations started from the article.
      reactions:
        type: optional<integer>
        docs: The number of total reactions the article has received.
      happy_reaction_percentage:
        type: optional<float>
        docs: >-
          The percentage of happy reactions the article has received against
          other types of reaction.
      neutral_reaction_percentage:
        type: optional<float>
        docs: >-
          The percentage of neutral reactions the article has received against
          other types of reaction.
      sad_reaction_percentage:
        type: optional<float>
        docs: >-
          The percentage of sad reactions the article has received against other
          types of reaction.
    source:
      openapi: ../openapi.yml
  ArticleTranslatedContent:
    docs: >-
      The Translated Content of an Article. The keys are the locale codes and
      the values are the translated content of the article.
    properties:
      type:
        type: optional<string>
        docs: The type of object - article_translated_content.
      ar:
        type: optional<ArticleContent>
        docs: The content of the article in Arabic
      bg:
        type: optional<ArticleContent>
        docs: The content of the article in Bulgarian
      bs:
        type: optional<ArticleContent>
        docs: The content of the article in Bosnian
      ca:
        type: optional<ArticleContent>
        docs: The content of the article in Catalan
      cs:
        type: optional<ArticleContent>
        docs: The content of the article in Czech
      da:
        type: optional<ArticleContent>
        docs: The content of the article in Danish
      de:
        type: optional<ArticleContent>
        docs: The content of the article in German
      el:
        type: optional<ArticleContent>
        docs: The content of the article in Greek
      en:
        type: optional<ArticleContent>
        docs: The content of the article in English
      es:
        type: optional<ArticleContent>
        docs: The content of the article in Spanish
      et:
        type: optional<ArticleContent>
        docs: The content of the article in Estonian
      fi:
        type: optional<ArticleContent>
        docs: The content of the article in Finnish
      fr:
        type: optional<ArticleContent>
        docs: The content of the article in French
      he:
        type: optional<ArticleContent>
        docs: The content of the article in Hebrew
      hr:
        type: optional<ArticleContent>
        docs: The content of the article in Croatian
      hu:
        type: optional<ArticleContent>
        docs: The content of the article in Hungarian
      id:
        type: optional<ArticleContent>
        docs: The content of the article in Indonesian
      it:
        type: optional<ArticleContent>
        docs: The content of the article in Italian
      ja:
        type: optional<ArticleContent>
        docs: The content of the article in Japanese
      ko:
        type: optional<ArticleContent>
        docs: The content of the article in Korean
      lt:
        type: optional<ArticleContent>
        docs: The content of the article in Lithuanian
      lv:
        type: optional<ArticleContent>
        docs: The content of the article in Latvian
      mn:
        type: optional<ArticleContent>
        docs: The content of the article in Mongolian
      nb:
        type: optional<ArticleContent>
        docs: The content of the article in Norwegian
      nl:
        type: optional<ArticleContent>
        docs: The content of the article in Dutch
      pl:
        type: optional<ArticleContent>
        docs: The content of the article in Polish
      pt:
        type: optional<ArticleContent>
        docs: The content of the article in Portuguese (Portugal)
      ro:
        type: optional<ArticleContent>
        docs: The content of the article in Romanian
      ru:
        type: optional<ArticleContent>
        docs: The content of the article in Russian
      sl:
        type: optional<ArticleContent>
        docs: The content of the article in Slovenian
      sr:
        type: optional<ArticleContent>
        docs: The content of the article in Serbian
      sv:
        type: optional<ArticleContent>
        docs: The content of the article in Swedish
      tr:
        type: optional<ArticleContent>
        docs: The content of the article in Turkish
      vi:
        type: optional<ArticleContent>
        docs: The content of the article in Vietnamese
      pt-BR:
        type: optional<ArticleContent>
        docs: The content of the article in Portuguese (Brazil)
      zh-CN:
        type: optional<ArticleContent>
        docs: The content of the article in Chinese (China)
      zh-TW:
        type: optional<ArticleContent>
        docs: The content of the article in Chinese (Taiwan)
    source:
      openapi: ../openapi.yml
  AssignConversationRequestType:
    enum:
      - admin
      - team
    inline: true
    source:
      openapi: ../openapi.yml
  AssignConversationRequest:
    docs: Payload of the request to assign a conversation
    properties:
      type: AssignConversationRequestType
      admin_id:
        type: string
        docs: The id of the admin who is performing the action.
      assignee_id:
        type: string
        docs: >-
          The `id` of the `admin` or `team` which will be assigned the
          conversation. A conversation can be assigned both an admin and a
          team.\nSet `0` if you want this assign to no admin or team (ie.
          Unassigned).
      body:
        type: optional<string>
        docs: >-
          Optionally you can send a response in the conversation when it is
          assigned.
    source:
      openapi: ../openapi.yml
  CloseConversationRequest:
    docs: Payload of the request to close a conversation
    properties:
      type: literal<"admin">
      admin_id:
        type: string
        docs: The id of the admin who is performing the action.
      body:
        type: optional<string>
        docs: >-
          Optionally you can leave a message in the conversation to provide
          additional context to the user and other teammates.
    source:
      openapi: ../openapi.yml
  Collections:
    docs: This will return a list of Collections for the App.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of the object - `list`.
      pages:
        type: optional<CursorPages>
      total_count:
        type: optional<integer>
        docs: A count of the total number of collections.
      data:
        type: optional<list<helpCenter.Collection>>
        docs: An array of collection objects
    source:
      openapi: ../openapi.yml
  CompanyAttachedContacts:
    docs: A list of Contact Objects
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of object - `list`
      data:
        type: optional<list<contacts.Contact>>
        docs: An array containing Contact Objects
      total_count:
        type: optional<integer>
        docs: The total number of contacts
      pages:
        type: optional<CursorPages>
    source:
      openapi: ../openapi.yml
  CompanyAttachedSegments:
    docs: A list of Segment Objects
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of object - `list`
      data:
        type: optional<list<segments.Segment>>
        docs: An array containing Segment Objects
    source:
      openapi: ../openapi.yml
  Companies:
    docs: This will return a list of companies for the App.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of object - `list`.
      pages:
        type: optional<CursorPages>
      total_count:
        type: optional<integer>
        docs: The total number of companies.
      data:
        type: optional<list<companies.Company>>
        docs: An array containing Company Objects.
    source:
      openapi: ../openapi.yml
  CompanyScroll:
    docs: >-
      Companies allow you to represent organizations using your product. Each
      company will have its own description and be associated with contacts. You
      can fetch, create, update and list companies.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of object - `list`
      data:
        type: optional<list<companies.Company>>
      pages:
        type: optional<CursorPages>
      total_count:
        type: optional<integer>
        docs: The total number of companies
      scroll_param:
        type: optional<string>
        docs: >-
          The scroll parameter to use in the next request to fetch the next page
          of results.
    source:
      openapi: ../openapi.yml
  ContactArchived:
    docs: archived contact object
    properties:
      type:
        type: optional<literal<"contact">>
        docs: always contact
      id:
        type: optional<string>
        docs: The unique identifier for the contact which is given by Intercom.
      external_id:
        type: optional<string>
        docs: The unique identifier for the contact which is provided by the Client.
      archived:
        type: optional<boolean>
        docs: Whether the contact is archived or not.
    source:
      openapi: ../openapi.yml
  ContactAttachedCompanies:
    docs: A list of Company Objects
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of object
      companies:
        type: optional<list<companies.Company>>
        docs: An array containing Company Objects
      total_count:
        type: optional<integer>
        docs: The total number of companies associated to this contact
      pages:
        type: optional<PagesLink>
    source:
      openapi: ../openapi.yml
  ContactCompanies:
    docs: >-
      An object containing companies meta data about the companies that a
      contact has. Up to 10 will be displayed here. Use the url to get more.
    properties:
      url:
        type: optional<string>
        docs: Url to get more company resources for this contact
        validation:
          format: uri
      total_count:
        type: optional<integer>
        docs: >-
          Int representing the total number of companyies attached to this
          contact
      has_more:
        type: optional<boolean>
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
    source:
      openapi: ../openapi.yml
  ContactDeleted:
    docs: deleted contact object
    properties:
      type:
        type: optional<literal<"contact">>
        docs: always contact
      id:
        type: optional<string>
        docs: The unique identifier for the contact which is given by Intercom.
      external_id:
        type: optional<string>
        docs: The unique identifier for the contact which is provided by the Client.
      deleted:
        type: optional<boolean>
        docs: Whether the contact is deleted or not.
    source:
      openapi: ../openapi.yml
  ContactList:
    docs: Contacts are your users in Intercom.
    properties:
      type:
        type: optional<literal<"list">>
        docs: Always list
      data:
        type: optional<list<contacts.Contact>>
        docs: The list of contact objects
      total_count:
        type: optional<integer>
        docs: A count of the total number of objects.
      pages:
        type: optional<CursorPages>
    source:
      openapi: ../openapi.yml
  ContactLocation:
    docs: An object containing location meta data about a Intercom contact.
    properties:
      type:
        type: optional<string>
        docs: Always location
      country:
        type: optional<string>
        docs: The country that the contact is located in
      region:
        type: optional<string>
        docs: The overal region that the contact is located in
      city:
        type: optional<string>
        docs: The city that the contact is located in
    source:
      openapi: ../openapi.yml
  ContactNotes:
    docs: >-
      An object containing notes meta data about the notes that a contact has.
      Up to 10 will be displayed here. Use the url to get more.
    properties:
      data:
        type: optional<list<AddressableList>>
        docs: This object represents the notes attached to a contact.
      url:
        type: optional<string>
        docs: Url to get more company resources for this contact
        validation:
          format: uri
      total_count:
        type: optional<integer>
        docs: >-
          Int representing the total number of companyies attached to this
          contact
      has_more:
        type: optional<boolean>
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
    source:
      openapi: ../openapi.yml
  ContactReference:
    docs: reference to contact object
    properties:
      type:
        type: optional<literal<"contact">>
        docs: always contact
      id:
        type: optional<string>
        docs: The unique identifier for the contact which is given by Intercom.
      external_id:
        type: optional<string>
        docs: The unique identifier for the contact which is provided by the Client.
    source:
      openapi: ../openapi.yml
  ContactReplyBaseRequest:
    properties:
      message_type: literal<"comment">
      type: literal<"user">
      body:
        type: string
        docs: The text body of the comment.
      created_at:
        type: optional<integer>
        docs: >-
          The time the reply was created. If not provided, the current time will
          be used.
      attachment_urls:
        type: optional<list<string>>
        docs: >-
          A list of image URLs that will be added as attachments. You can
          include up to 10 URLs.
    source:
      openapi: ../openapi.yml
  ContactReplyConversationRequest:
    discriminated: false
    union:
      - type: ContactReplyIntercomUserIdRequest
      - type: Email
      - type: ContactReplyUserIdRequest
    source:
      openapi: ../openapi.yml
  Email:
    properties:
      email:
        type: string
        docs: >-
          The email you have defined for the contact who is being added as a
          participant.
    source:
      openapi: ../openapi.yml
    inline: true
  ContactReplyIntercomUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `intercom_user_id`
    properties:
      intercom_user_id:
        type: string
        docs: The identifier for the contact as given by Intercom.
      attachment_files:
        type: optional<list<ConversationAttachmentFiles>>
        docs: A list of files that will be added as attachments.
    extends:
      - ContactReplyBaseRequest
    source:
      openapi: ../openapi.yml
  ContactReplyTicketIntercomUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `intercom_user_id`
    properties:
      intercom_user_id:
        type: string
        docs: The identifier for the contact as given by Intercom.
    extends:
      - ContactReplyBaseRequest
    source:
      openapi: ../openapi.yml
  ContactReplyTicketRequest:
    discriminated: false
    union:
      - type: ContactReplyTicketIntercomUserIdRequest
      - type: ContactReplyTicketUserIdRequest
      - type: Email
    source:
      openapi: ../openapi.yml
  ContactReplyTicketUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `user_id`
    properties:
      user_id:
        type: string
        docs: The external_id you have defined for the contact.
    extends:
      - ContactReplyBaseRequest
    source:
      openapi: ../openapi.yml
  ContactReplyUserIdRequest:
    docs: >-
      Payload of the request to reply on behalf of a contact using their
      `user_id`
    properties:
      user_id:
        type: string
        docs: The external_id you have defined for the contact.
      attachment_files:
        type: optional<list<ConversationAttachmentFiles>>
        docs: >-
          A list of files that will be added as attachments. You can include up
          to 10 files.
    extends:
      - ContactReplyBaseRequest
    source:
      openapi: ../openapi.yml
  Segments:
    docs: A list of segments objects attached to a specific contact.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of the object
      data:
        type: optional<list<segments.Segment>>
        docs: Segment objects associated with the contact.
    source:
      openapi: ../openapi.yml
  ContactSocialProfiles:
    docs: An object containing social profiles that a contact has.
    properties:
      data:
        type: optional<list<SocialProfile>>
        docs: A list of social profiles objects associated with the contact.
    source:
      openapi: ../openapi.yml
  ContactSubscriptionTypes:
    docs: >-
      An object containing Subscription Types meta data about the
      SubscriptionTypes that a contact has.
    properties:
      data:
        type: optional<list<AddressableList>>
        docs: This object represents the subscriptions attached to a contact.
      url:
        type: optional<string>
        docs: Url to get more subscription type resources for this contact
        validation:
          format: uri
      total_count:
        type: optional<integer>
        docs: >-
          Int representing the total number of subscription types attached to
          this contact
      has_more:
        type: optional<boolean>
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
    source:
      openapi: ../openapi.yml
  ContactTags:
    docs: >-
      An object containing tags meta data about the tags that a contact has. Up
      to 10 will be displayed here. Use the url to get more.
    properties:
      data:
        type: optional<list<AddressableList>>
        docs: This object represents the tags attached to a contact.
      url:
        type: optional<string>
        docs: url to get more tag resources for this contact
        validation:
          format: uri
      total_count:
        type: optional<integer>
        docs: Int representing the total number of tags attached to this contact
      has_more:
        type: optional<boolean>
        docs: >-
          Whether there's more Addressable Objects to be viewed. If true, use
          the url to view all
    source:
      openapi: ../openapi.yml
  ContactUnarchived:
    docs: unarchived contact object
    properties:
      type:
        type: optional<literal<"contact">>
        docs: always contact
      id:
        type: optional<string>
        docs: The unique identifier for the contact which is given by Intercom.
      external_id:
        type: optional<string>
        docs: The unique identifier for the contact which is provided by the Client.
      archived:
        type: optional<boolean>
        docs: Whether the contact is archived or not.
    source:
      openapi: ../openapi.yml
  ContentSourcesList:
    properties:
      type:
        type: optional<literal<"content_source.list">>
      total_count:
        type: optional<integer>
        docs: >-
          The total number of content sources used by AI Agent in the
          conversation.
      content_sources:
        type: optional<list<aiContentSource.ContentSource>>
        docs: The content sources used by AI Agent in the conversation.
    source:
      openapi: ../openapi.yml
  ConversationAttachmentFiles:
    docs: Properties of the attachment files in a conversation part
    properties:
      content_type:
        type: optional<string>
        docs: The content type of the file
      data:
        type: optional<string>
        docs: The base64 encoded file data.
      name:
        type: optional<string>
        docs: The name of the file.
    source:
      openapi: ../openapi.yml
  Contacts:
    docs: >-
      The list of contacts (users or leads) involved in this conversation. This
      will only contain one customer unless more were added via the group
      conversation feature.
    properties:
      type:
        type: optional<literal<"contact.list">>
        docs: ''
      contacts:
        type: optional<list<ContactReference>>
        docs: >-
          The list of contacts (users or leads) involved in this conversation.
          This will only contain one customer unless more were added via the
          group conversation feature.
    source:
      openapi: ../openapi.yml
  ConversationFirstContactReply:
    docs: >-
      An object containing information on the first users message. For a contact
      initiated message this will represent the users original message.
    properties:
      created_at:
        type: optional<integer>
        docs: ''
      type:
        type: optional<string>
        docs: ''
      url:
        type: optional<string>
        docs: ''
    source:
      openapi: ../openapi.yml
  ConversationList:
    docs: >-
      Conversations are how you can communicate with users in Intercom. They are
      created when a contact replies to an outbound message, or when one admin
      directly sends a message to a single contact.
    properties:
      type:
        type: optional<literal<"conversation.list">>
        docs: Always conversation.list
      conversations:
        type: optional<list<conversations.Conversation>>
        docs: The list of conversation objects
      total_count:
        type: optional<integer>
        docs: A count of the total number of objects.
      pages:
        type: optional<CursorPages>
    source:
      openapi: ../openapi.yml
  ConversationPart:
    docs: A Conversation Part represents a message in the conversation.
    properties:
      type:
        type: optional<string>
        docs: Always conversation_part
      id:
        type: optional<string>
        docs: The id representing the conversation part.
      part_type:
        type: optional<string>
        docs: The type of conversation part.
      body:
        type: optional<string>
        docs: >-
          The message body, which may contain HTML. For Twitter, this will show
          a generic message regarding why the body is obscured.
      created_at:
        type: optional<integer>
        docs: The time the conversation part was created.
      updated_at:
        type: optional<integer>
        docs: The last time the conversation part was updated.
      notified_at:
        type: optional<integer>
        docs: The time the user was notified with the conversation part.
      assigned_to:
        type: optional<Reference>
        docs: >-
          The id of the admin that was assigned the conversation by this
          conversation_part (null if there has been no change in assignment.)
      author:
        type: optional<ConversationPartAuthor>
      attachments:
        type: optional<list<PartAttachment>>
        docs: A list of attachments for the part.
      external_id:
        type: optional<string>
        docs: The external id of the conversation part
      redacted:
        type: optional<boolean>
        docs: Whether or not the conversation part has been redacted.
    source:
      openapi: ../openapi.yml
  ConversationPartAuthor:
    docs: >-
      The object who initiated the conversation, which can be a Contact, Admin
      or Team. Bots and campaigns send messages on behalf of Admins or Teams.
      For Twitter, this will be blank.
    properties:
      type:
        type: optional<string>
        docs: The type of the author
      id:
        type: optional<string>
        docs: The id of the author
      name:
        type: optional<string>
        docs: The name of the author
      email:
        type: optional<string>
        docs: The email of the author
        validation:
          format: email
    source:
      openapi: ../openapi.yml
  ConversationParts:
    docs: >-
      A list of Conversation Part objects for each part message in the
      conversation. This is only returned when Retrieving a Conversation, and
      ignored when Listing all Conversations. There is a limit of 500 parts.
    properties:
      type:
        type: optional<literal<"conversation_part.list">>
        docs: ''
      conversation_parts:
        type: optional<list<ConversationPart>>
        docs: >-
          A list of Conversation Part objects for each part message in the
          conversation. This is only returned when Retrieving a Conversation,
          and ignored when Listing all Conversations. There is a limit of 500
          parts.
      total_count:
        type: optional<integer>
        docs: ''
    source:
      openapi: ../openapi.yml
  ConversationRating:
    docs: >-
      The Conversation Rating object which contains information on the rating
      and/or remark added by a Contact and the Admin assigned to the
      conversation.
    properties:
      rating:
        type: optional<integer>
        docs: The rating, between 1 and 5, for the conversation.
      remark:
        type: optional<string>
        docs: An optional field to add a remark to correspond to the number rating
      created_at:
        type: optional<integer>
        docs: The time the rating was requested in the conversation being rated.
      contact:
        type: optional<ContactReference>
      teammate:
        type: optional<Reference>
    source:
      openapi: ../openapi.yml
  ConversationSource:
    docs: >-
      The Conversation Part that originated this conversation, which can be
      Contact, Admin, Campaign, Automated or Operator initiated.
    properties:
      type:
        type: optional<string>
        docs: >-
          This includes conversation, email, facebook, instagram, phone_call,
          phone_switch, push, sms, twitter and whatsapp.
      id:
        type: optional<string>
        docs: The id representing the message.
      delivered_as:
        type: optional<string>
        docs: >-
          The conversation's initiation type. Possible values are
          customer_initiated, campaigns_initiated (legacy campaigns),
          operator_initiated (Custom bot), automated (Series and other outbounds
          with dynamic audience message) and admin_initiated (fixed audience
          message, ticket initiated by an admin, group email).
      subject:
        type: optional<string>
        docs: >-
          Optional. The message subject. For Twitter, this will show a generic
          message regarding why the subject is obscured.
      body:
        type: optional<string>
        docs: >-
          The message body, which may contain HTML. For Twitter, this will show
          a generic message regarding why the body is obscured.
      author:
        type: optional<ConversationPartAuthor>
      attachments:
        type: optional<list<PartAttachment>>
        docs: A list of attachments for the part.
      url:
        type: optional<string>
        docs: >-
          The URL where the conversation was started. For Twitter, Email, and
          Bots, this will be blank.
      redacted:
        type: optional<boolean>
        docs: >-
          Whether or not the source message has been redacted. Only applicable
          for contact initiated messages.
    source:
      openapi: ../openapi.yml
  ConversationStatistics:
    docs: >-
      A Statistics object containing all information required for reporting,
      with timestamps and calculated metrics.
    properties:
      type:
        type: optional<string>
        docs: ''
      time_to_assignment:
        type: optional<integer>
        docs: Duration until last assignment before first admin reply. In seconds.
      time_to_admin_reply:
        type: optional<integer>
        docs: >-
          Duration until first admin reply. Subtracts out of business hours. In
          seconds.
      time_to_first_close:
        type: optional<integer>
        docs: >-
          Duration until conversation was closed first time. Subtracts out of
          business hours. In seconds.
      time_to_last_close:
        type: optional<integer>
        docs: >-
          Duration until conversation was closed last time. Subtracts out of
          business hours. In seconds.
      median_time_to_reply:
        type: optional<integer>
        docs: >-
          Median based on all admin replies after a contact reply. Subtracts out
          of business hours. In seconds.
      first_contact_reply_at:
        type: optional<integer>
        docs: Time of first text conversation part from a contact.
      first_assignment_at:
        type: optional<integer>
        docs: Time of first assignment after first_contact_reply_at.
      first_admin_reply_at:
        type: optional<integer>
        docs: Time of first admin reply after first_contact_reply_at.
      first_close_at:
        type: optional<integer>
        docs: Time of first close after first_contact_reply_at.
      last_assignment_at:
        type: optional<integer>
        docs: Time of last assignment after first_contact_reply_at.
      last_assignment_admin_reply_at:
        type: optional<integer>
        docs: Time of first admin reply since most recent assignment.
      last_contact_reply_at:
        type: optional<integer>
        docs: Time of the last conversation part from a contact.
      last_admin_reply_at:
        type: optional<integer>
        docs: Time of the last conversation part from an admin.
      last_close_at:
        type: optional<integer>
        docs: Time of the last conversation close.
      last_closed_by_id:
        type: optional<string>
        docs: >-
          The last admin who closed the conversation. Returns a reference to an
          Admin object.
      count_reopens:
        type: optional<integer>
        docs: Number of reopens after first_contact_reply_at.
      count_assignments:
        type: optional<integer>
        docs: Number of assignments after first_contact_reply_at.
      count_conversation_parts:
        type: optional<integer>
        docs: Total number of conversation parts.
    source:
      openapi: ../openapi.yml
  ConversationTeammates:
    docs: >-
      The list of teammates who participated in the conversation (wrote at least
      one conversation part).
    properties:
      type:
        type: optional<string>
        docs: The type of the object - `admin.list`.
      teammates:
        type: optional<list<Reference>>
        docs: >-
          The list of teammates who participated in the conversation (wrote at
          least one conversation part).
    source:
      openapi: ../openapi.yml
  CreateArticleRequestState:
    enum:
      - published
      - draft
    docs: >-
      Whether the article will be `published` or will be a `draft`. Defaults to
      draft. For multilingual articles, this will be the state of the default
      language's content.
    inline: true
    source:
      openapi: ../openapi.yml
  CreateArticleRequest:
    docs: You can create an Article
    properties:
      title:
        type: string
        docs: >-
          The title of the article.For multilingual articles, this will be the
          title of the default language's content.
      description:
        type: optional<string>
        docs: >-
          The description of the article. For multilingual articles, this will
          be the description of the default language's content.
      body:
        type: optional<string>
        docs: >-
          The content of the article. For multilingual articles, this will be
          the body of the default language's content.
      author_id:
        type: integer
        docs: >-
          The id of the author of the article. For multilingual articles, this
          will be the id of the author of the default language's content. Must
          be a teammate on the help center's workspace.
      state:
        type: optional<CreateArticleRequestState>
        docs: >-
          Whether the article will be `published` or will be a `draft`. Defaults
          to draft. For multilingual articles, this will be the state of the
          default language's content.
      parent_id:
        type: optional<integer>
        docs: >-
          The id of the article's parent collection or section. An article
          without this field stands alone.
      parent_type:
        type: optional<string>
        docs: The type of parent, which can either be a `collection` or `section`.
      translated_content:
        type: optional<ArticleTranslatedContent>
    source:
      openapi: ../openapi.yml
  CreateContactRequestTwo: unknown
  CreateDataEventRequestTwo: unknown
  CreateMessageRequestOne: unknown
  CreateOrUpdateCompanyRequest:
    docs: You can create or update a Company
    properties:
      name:
        type: optional<string>
        docs: The name of the Company
      company_id:
        type: optional<string>
        docs: The company id you have defined for the company. Can't be updated
      plan:
        type: optional<string>
        docs: The name of the plan you have associated with the company.
      size:
        type: optional<integer>
        docs: The number of employees in this company.
      website:
        type: optional<string>
        docs: >-
          The URL for this company's website. Please note that the value
          specified here is not validated. Accepts any string.
      industry:
        type: optional<string>
        docs: The industry that this company operates in.
      custom_attributes:
        type: optional<map<string, string>>
        docs: >-
          A hash of key/value pairs containing any other data about the company
          you want Intercom to store.
      remote_created_at:
        type: optional<integer>
        docs: The time the company was created by you.
      monthly_spend:
        type: optional<integer>
        docs: >-
          How much revenue the company generates for your business. Note that
          this will truncate floats. i.e. it only allow for whole integers,
          155.98 will be truncated to 155. Note that this has an upper limit of
          2**31-1 or 2147483647..
    source:
      openapi: ../openapi.yml
  CreateOrUpdateTagRequest:
    docs: You can create or update an existing tag.
    properties:
      name:
        type: string
        docs: >-
          The name of the tag, which will be created if not found, or the new
          name for the tag if this is an update request. Names are case
          insensitive.
      id:
        type: optional<string>
        docs: The id of tag to updates.
    source:
      openapi: ../openapi.yml
  CreatePhoneSwitchRequest:
    docs: You can create an phone switch
    properties:
      phone:
        type: string
        docs: >-
          Phone number in E.164 format, that will receive the SMS to continue
          the conversation in the Messenger.
      custom_attributes:
        type: optional<CustomAttributes>
    source:
      openapi: ../openapi.yml
  CreateTicketReplyWithCommentRequest:
    discriminated: false
    union:
      - type: ContactReplyTicketRequest
      - type: AdminReplyTicketRequest
    source:
      openapi: ../openapi.yml
  CreateTicketTypeRequestCategory:
    enum:
      - Customer
      - value: Back-office
        name: BackOffice
      - Tracker
    docs: Category of the Ticket Type.
    inline: true
    source:
      openapi: ../openapi.yml
  CreateTicketTypeRequest:
    docs: |
      The request payload for creating a ticket type.
        You can copy the `icon` property for your ticket type from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
    properties:
      name:
        type: string
        docs: The name of the ticket type.
      description:
        type: optional<string>
        docs: The description of the ticket type.
      category:
        type: optional<CreateTicketTypeRequestCategory>
        docs: Category of the Ticket Type.
      icon:
        type: optional<string>
        docs: The icon of the ticket type.
        default: 🎟️
      is_internal:
        type: optional<boolean>
        docs: >-
          Whether the tickets associated with this ticket type are intended for
          internal use only or will be shared with customers. This is currently
          a limited attribute.
        default: false
    source:
      openapi: ../openapi.yml
  CursorPages:
    docs: >
      Cursor-based pagination is a technique used in the Intercom API to
      navigate through large amounts of data.

      A "cursor" or pointer is used to keep track of the current position in the
      result set, allowing the API to return the data in small chunks or "pages"
      as needed.
    properties:
      type:
        type: optional<literal<"pages">>
        docs: the type of object `pages`.
      page:
        type: optional<integer>
        docs: The current page
      next:
        type: optional<StartingAfterPaging>
      per_page:
        type: optional<integer>
        docs: Number of results per page
      total_pages:
        type: optional<integer>
        docs: Total number of pages
    source:
      openapi: ../openapi.yml
  CustomAttributesValue:
    discriminated: false
    union:
      - string
      - type: optional<customObjectInstances.CustomObjectInstance>
    source:
      openapi: ../openapi.yml
    inline: true
  CustomAttributes:
    type: map<string, CustomAttributesValue>
    docs: >-
      An object containing the different custom attributes associated to the
      conversation as key-value pairs. For relationship attributes the value
      will be a list of custom object instance models.
  CustomerRequestIntercomUserId:
    properties:
      intercom_user_id:
        type: string
        docs: The identifier for the contact as given by Intercom.
    source:
      openapi: ../openapi.yml
    inline: true
  CustomerRequestUserId:
    properties:
      user_id:
        type: string
        docs: >-
          The external_id you have defined for the contact who is being added as
          a participant.
    source:
      openapi: ../openapi.yml
    inline: true
  CustomerRequest:
    discriminated: false
    union:
      - type: CustomerRequestIntercomUserId
      - type: CustomerRequestUserId
      - type: Email
    source:
      openapi: ../openapi.yml
  DataAttributeList:
    docs: >-
      A list of all data attributes belonging to a workspace for contacts,
      companies or conversations.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of the object
      data:
        type: optional<list<dataAttributes.DataAttribute>>
        docs: A list of data attributes
    source:
      openapi: ../openapi.yml
  DataEventListPages:
    docs: Pagination
    properties:
      next: optional<string>
      since: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  DataEventList:
    docs: This will return a list of data events for the App.
    properties:
      type:
        type: optional<literal<"event.list">>
        docs: The type of the object
      events:
        type: optional<list<dataEvents.DataEvent>>
        docs: A list of data events
      pages:
        type: optional<DataEventListPages>
        docs: Pagination
    source:
      openapi: ../openapi.yml
  DataEventSummary:
    docs: This will return a summary of data events for the App.
    properties:
      type:
        type: optional<literal<"event.summary">>
        docs: The type of the object
      email:
        type: optional<string>
        docs: The email address of the user
      intercom_user_id:
        type: optional<string>
        docs: The Intercom user ID of the user
      user_id:
        type: optional<string>
        docs: The user ID of the user
      events:
        type: optional<list<optional<DataEventSummaryItem>>>
        docs: A summary of data events
    source:
      openapi: ../openapi.yml
  DataEventSummaryItem:
    docs: This will return a summary of a data event for the App.
    properties:
      name:
        type: optional<string>
        docs: The name of the event
      first:
        type: optional<string>
        docs: The first time the event was sent
      last:
        type: optional<string>
        docs: The last time the event was sent
      count:
        type: optional<integer>
        docs: The number of times the event was sent
      description:
        type: optional<string>
        docs: The description of the event
    source:
      openapi: ../openapi.yml
  DataExportCsv:
    docs: A CSV output file
    properties:
      user_id:
        type: optional<string>
        docs: The user_id of the user who was sent the message.
      user_external_id:
        type: optional<string>
        docs: The external_user_id of the user who was sent the message
      company_id:
        type: optional<string>
        docs: >-
          The company ID of the user in relation to the message that was sent.
          Will return -1 if no company is present.
      email:
        type: optional<string>
        docs: The users email who was sent the message.
      name:
        type: optional<string>
        docs: The full name of the user receiving the message
      ruleset_id:
        type: optional<string>
        docs: The id of the message.
      content_id:
        type: optional<string>
        docs: >-
          The specific content that was received. In an A/B test each version
          has its own Content ID.
      content_type:
        type: optional<string>
        docs: Email, Chat, Post etc.
      content_title:
        type: optional<string>
        docs: The title of the content you see in your Intercom workspace.
      ruleset_version_id:
        type: optional<string>
        docs: >-
          As you edit content we record new versions. This ID can help you
          determine which version of a piece of content that was received.
      receipt_id:
        type: optional<string>
        docs: >-
          ID for this receipt. Will be included with any related stats in other
          files to identify this specific delivery of a message.
      received_at:
        type: optional<integer>
        docs: Timestamp for when the receipt was recorded.
      series_id:
        type: optional<string>
        docs: >-
          The id of the series that this content is part of. Will return -1 if
          not part of a series.
      series_title:
        type: optional<string>
        docs: The title of the series that this content is part of.
      node_id:
        type: optional<string>
        docs: >-
          The id of the series node that this ruleset is associated with. Each
          block in a series has a corresponding node_id.
      first_reply:
        type: optional<integer>
        docs: >-
          The first time a user replied to this message if the content was able
          to receive replies.
      first_completion:
        type: optional<integer>
        docs: >-
          The first time a user completed this message if the content was able
          to be completed e.g. Tours, Surveys.
      first_series_completion:
        type: optional<integer>
        docs: >-
          The first time the series this message was a part of was completed by
          the user.
      first_series_disengagement:
        type: optional<integer>
        docs: >-
          The first time the series this message was a part of was disengaged by
          the user.
      first_series_exit:
        type: optional<integer>
        docs: >-
          The first time the series this message was a part of was exited by the
          user.
      first_goal_success:
        type: optional<integer>
        docs: >-
          The first time the user met this messages associated goal if one
          exists.
      first_open:
        type: optional<integer>
        docs: The first time the user opened this message.
      first_click:
        type: optional<integer>
        docs: >-
          The first time the series the user clicked on a link within this
          message.
      first_dismisall:
        type: optional<integer>
        docs: The first time the series the user dismissed this message.
      first_unsubscribe:
        type: optional<integer>
        docs: The first time the user unsubscribed from this message.
      first_hard_bounce:
        type: optional<integer>
        docs: The first time this message hard bounced for this user
    source:
      openapi: ../openapi.yml
  DeletedArticleObject:
    docs: Response returned when an object is deleted
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the article which you provided in the URL.
      object:
        type: optional<literal<"article">>
        docs: The type of object which was deleted. - article
      deleted:
        type: optional<boolean>
        docs: Whether the article was deleted successfully or not.
    source:
      openapi: ../openapi.yml
  DeletedCollectionObject:
    docs: Response returned when an object is deleted
    properties:
      id:
        type: optional<string>
        docs: >-
          The unique identifier for the collection which you provided in the
          URL.
      object:
        type: optional<literal<"collection">>
        docs: The type of object which was deleted. - `collection`
      deleted:
        type: optional<boolean>
        docs: Whether the collection was deleted successfully or not.
    source:
      openapi: ../openapi.yml
  DeletedCompanyObject:
    docs: Response returned when an object is deleted
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the company which is given by Intercom.
      object:
        type: optional<literal<"company">>
        docs: The type of object which was deleted. - `company`
      deleted:
        type: optional<boolean>
        docs: Whether the company was deleted successfully or not.
    source:
      openapi: ../openapi.yml
  DeletedObject:
    docs: Response returned when an object is deleted
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the news item which you provided in the URL.
      object:
        type: optional<literal<"news-item">>
        docs: The type of object which was deleted - news-item.
      deleted:
        type: optional<boolean>
        docs: Whether the news item was deleted successfully or not.
    source:
      openapi: ../openapi.yml
  ErrorErrorsItem:
    properties:
      code:
        type: string
        docs: >-
          A string indicating the kind of error, used to further qualify the
          HTTP response code
      message:
        type: optional<string>
        docs: Optional. Human readable description of the error.
      field:
        type: optional<string>
        docs: >-
          Optional. Used to identify a particular field or query parameter that
          was in error.
    source:
      openapi: ../openapi.yml
    inline: true
  Error:
    docs: >-
      The API will return an Error List for a failed request, which will contain
      one or more Error objects.
    properties:
      type:
        type: string
        docs: The type is error.list
      request_id:
        type: optional<string>
        docs: ''
        validation:
          format: uuid
      errors:
        docs: An array of one or more error objects
        type: list<ErrorErrorsItem>
    source:
      openapi: ../openapi.yml
  File:
    docs: The value describing a file upload set for a custom attribute
    properties:
      type:
        type: optional<string>
      name:
        type: optional<string>
        docs: The name of the file
      url:
        type: optional<string>
        docs: >-
          The url of the file. This is a temporary URL and will expire after 30
          minutes.
      content_type:
        type: optional<string>
        docs: The type of file
      filesize:
        type: optional<integer>
        docs: The size of the file in bytes
      width:
        type: optional<integer>
        docs: The width of the file in pixels, if applicable
      height:
        type: optional<integer>
        docs: The height of the file in pixels, if applicable
    source:
      openapi: ../openapi.yml
  GroupContent:
    docs: The Content of a Group.
    properties:
      type:
        type: optional<string>
        docs: The type of object - `group_content` .
      name:
        type: optional<string>
        docs: The name of the collection or section.
      description:
        type: optional<string>
        docs: The description of the collection. Only available for collections.
    source:
      openapi: ../openapi.yml
  GroupTranslatedContent:
    docs: >-
      The Translated Content of an Group. The keys are the locale codes and the
      values are the translated content of the Group.
    properties:
      type:
        type: optional<string>
        docs: The type of object - group_translated_content.
      ar:
        type: optional<GroupContent>
        docs: The content of the group in Arabic
      bg:
        type: optional<GroupContent>
        docs: The content of the group in Bulgarian
      bs:
        type: optional<GroupContent>
        docs: The content of the group in Bosnian
      ca:
        type: optional<GroupContent>
        docs: The content of the group in Catalan
      cs:
        type: optional<GroupContent>
        docs: The content of the group in Czech
      da:
        type: optional<GroupContent>
        docs: The content of the group in Danish
      de:
        type: optional<GroupContent>
        docs: The content of the group in German
      el:
        type: optional<GroupContent>
        docs: The content of the group in Greek
      en:
        type: optional<GroupContent>
        docs: The content of the group in English
      es:
        type: optional<GroupContent>
        docs: The content of the group in Spanish
      et:
        type: optional<GroupContent>
        docs: The content of the group in Estonian
      fi:
        type: optional<GroupContent>
        docs: The content of the group in Finnish
      fr:
        type: optional<GroupContent>
        docs: The content of the group in French
      he:
        type: optional<GroupContent>
        docs: The content of the group in Hebrew
      hr:
        type: optional<GroupContent>
        docs: The content of the group in Croatian
      hu:
        type: optional<GroupContent>
        docs: The content of the group in Hungarian
      id:
        type: optional<GroupContent>
        docs: The content of the group in Indonesian
      it:
        type: optional<GroupContent>
        docs: The content of the group in Italian
      ja:
        type: optional<GroupContent>
        docs: The content of the group in Japanese
      ko:
        type: optional<GroupContent>
        docs: The content of the group in Korean
      lt:
        type: optional<GroupContent>
        docs: The content of the group in Lithuanian
      lv:
        type: optional<GroupContent>
        docs: The content of the group in Latvian
      mn:
        type: optional<GroupContent>
        docs: The content of the group in Mongolian
      nb:
        type: optional<GroupContent>
        docs: The content of the group in Norwegian
      nl:
        type: optional<GroupContent>
        docs: The content of the group in Dutch
      pl:
        type: optional<GroupContent>
        docs: The content of the group in Polish
      pt:
        type: optional<GroupContent>
        docs: The content of the group in Portuguese (Portugal)
      ro:
        type: optional<GroupContent>
        docs: The content of the group in Romanian
      ru:
        type: optional<GroupContent>
        docs: The content of the group in Russian
      sl:
        type: optional<GroupContent>
        docs: The content of the group in Slovenian
      sr:
        type: optional<GroupContent>
        docs: The content of the group in Serbian
      sv:
        type: optional<GroupContent>
        docs: The content of the group in Swedish
      tr:
        type: optional<GroupContent>
        docs: The content of the group in Turkish
      vi:
        type: optional<GroupContent>
        docs: The content of the group in Vietnamese
      pt-BR:
        type: optional<GroupContent>
        docs: The content of the group in Portuguese (Brazil)
      zh-CN:
        type: optional<GroupContent>
        docs: The content of the group in Chinese (China)
      zh-TW:
        type: optional<GroupContent>
        docs: The content of the group in Chinese (Taiwan)
    source:
      openapi: ../openapi.yml
  IntercomVersion:
    enum:
      - value: '1.0'
        name: One0
      - value: '1.1'
        name: One1
      - value: '1.2'
        name: One2
      - value: '1.3'
        name: One3
      - value: '1.4'
        name: One4
      - value: '2.0'
        name: Two0
      - value: '2.1'
        name: Two1
      - value: '2.2'
        name: Two2
      - value: '2.3'
        name: Two3
      - value: '2.4'
        name: Two4
      - value: '2.5'
        name: Two5
      - value: '2.6'
        name: Two6
      - value: '2.7'
        name: Two7
      - value: '2.8'
        name: Two8
      - value: '2.9'
        name: Two9
      - value: '2.10'
        name: Two10
      - value: '2.11'
        name: Two11
      - Unstable
    docs: >-
      Intercom API version.</br>By default, it's equal to the version set in the
      app package.
    default: '2.11'
    source:
      openapi: ../openapi.yml
  LinkedObjectType:
    enum:
      - ticket
      - conversation
    docs: ticket or conversation
    inline: true
    source:
      openapi: ../openapi.yml
  LinkedObject:
    docs: A linked conversation or ticket.
    properties:
      type:
        type: optional<LinkedObjectType>
        docs: ticket or conversation
      id:
        type: optional<string>
        docs: The ID of the linked object
      category:
        type: optional<string>
        docs: Category of the Linked Ticket Object.
    source:
      openapi: ../openapi.yml
  LinkedObjectList:
    docs: >-
      An object containing metadata about linked conversations and linked
      tickets. Up to 1000 can be returned.
    properties:
      type:
        type: optional<literal<"list">>
        docs: Always list.
      total_count:
        type: optional<integer>
        docs: The total number of linked objects.
      has_more:
        type: optional<boolean>
        docs: Whether or not there are more linked objects than returned.
      data:
        type: optional<list<LinkedObject>>
        docs: An array containing the linked conversations and linked tickets.
    source:
      openapi: ../openapi.yml
  MultipleFilterSearchRequestOperator:
    enum:
      - AND
      - OR
    docs: An operator to allow boolean inspection between multiple fields.
    inline: true
    source:
      openapi: ../openapi.yml
  MultipleFilterSearchRequestValue:
    discriminated: false
    union:
      - docs: Add mutiple filters.
        type: list<MultipleFilterSearchRequest>
      - docs: Add a single filter field.
        type: list<SingleFilterSearchRequest>
    source:
      openapi: ../openapi.yml
    inline: true
  MultipleFilterSearchRequest:
    docs: Search using Intercoms Search APIs with more than one filter.
    properties:
      operator:
        type: optional<MultipleFilterSearchRequestOperator>
        docs: An operator to allow boolean inspection between multiple fields.
      value:
        type: optional<MultipleFilterSearchRequestValue>
    source:
      openapi: ../openapi.yml
  NewsItemRequestState:
    enum:
      - draft
      - live
    docs: >-
      News items will not be visible to your users in the assigned newsfeeds
      until they are set live.
    inline: true
    source:
      openapi: ../openapi.yml
  NewsItemRequest:
    docs: >-
      A News Item is a content type in Intercom enabling you to announce product
      updates, company news, promotions, events and more with your customers.
    properties:
      title:
        type: string
        docs: The title of the news item.
      body:
        type: optional<string>
        docs: The news item body, which may contain HTML.
      sender_id:
        type: integer
        docs: >-
          The id of the sender of the news item. Must be a teammate on the
          workspace.
      state:
        type: optional<NewsItemRequestState>
        docs: >-
          News items will not be visible to your users in the assigned newsfeeds
          until they are set live.
      deliver_silently:
        type: optional<boolean>
        docs: >-
          When set to `true`, the news item will appear in the messenger
          newsfeed without showing a notification badge.
      labels:
        type: optional<list<string>>
        docs: Label names displayed to users to categorize the news item.
      reactions:
        type: optional<list<optional<string>>>
        docs: >-
          Ordered list of emoji reactions to the news item. When empty,
          reactions are disabled.
      newsfeed_assignments:
        type: optional<list<news.NewsfeedAssignment>>
        docs: A list of newsfeed_assignments to assign to the specified newsfeed.
    source:
      openapi: ../openapi.yml
  NoteList:
    docs: A paginated list of notes associated with a contact.
    properties:
      type:
        type: optional<string>
        docs: String representing the object's type. Always has the value `list`.
      data:
        type: optional<list<notes.Note>>
        docs: An array of notes.
      total_count:
        type: optional<integer>
        docs: A count of the total number of notes.
      pages:
        type: optional<CursorPages>
    source:
      openapi: ../openapi.yml
  OpenConversationRequest:
    docs: Payload of the request to open a conversation
    properties:
      admin_id:
        type: string
        docs: The id of the admin who is performing the action.
    source:
      openapi: ../openapi.yml
  PagesLink:
    docs: >
      The majority of list resources in the API are paginated to allow clients
      to traverse data over multiple requests.


      Their responses are likely to contain a pages object that hosts pagination
      links which a client can use to paginate through the data without having
      to construct a query. The link relations for the pages field are as
      follows.
    properties:
      type:
        type: optional<literal<"pages">>
      page:
        type: optional<integer>
      next:
        type: optional<string>
        docs: >-
          A link to the next page of results. A response that does not contain a
          next link does not have further data to fetch.
        validation:
          format: uri
      per_page:
        type: optional<integer>
      total_pages:
        type: optional<integer>
    source:
      openapi: ../openapi.yml
  PaginatedResponseType:
    enum:
      - list
      - value: conversation.list
        name: ConversationList
    docs: The type of object
    inline: true
    source:
      openapi: ../openapi.yml
  PaginatedResponseDataItem:
    discriminant: type
    base-properties: {}
    union:
      news-item:
        type: news.NewsItem
      newsfeed:
        type: news.Newsfeed
    source:
      openapi: ../openapi.yml
  PaginatedResponse:
    docs: Paginated Response
    properties:
      type:
        type: optional<PaginatedResponseType>
        docs: The type of object
      pages:
        type: optional<CursorPages>
      total_count:
        type: optional<integer>
        docs: A count of the total number of objects.
      data:
        type: optional<list<PaginatedResponseDataItem>>
        docs: An array of Objects
    source:
      openapi: ../openapi.yml
  PartAttachment:
    docs: The file attached to a part
    properties:
      type:
        type: optional<string>
        docs: The type of attachment
      name:
        type: optional<string>
        docs: The name of the attachment
      url:
        type: optional<string>
        docs: The URL of the attachment
      content_type:
        type: optional<string>
        docs: The content type of the attachment
      filesize:
        type: optional<integer>
        docs: The size of the attachment
      width:
        type: optional<integer>
        docs: The width of the attachment
      height:
        type: optional<integer>
        docs: The height of the attachment
    source:
      openapi: ../openapi.yml
  PhoneSwitch:
    docs: Phone Switch Response
    properties:
      type:
        type: optional<literal<"phone_call_redirect">>
        docs: ''
      phone:
        type: optional<string>
        docs: >-
          Phone number in E.164 format, that has received the SMS to continue
          the conversation in the Messenger.
    source:
      openapi: ../openapi.yml
  RedactConversationRequestConversationPart:
    docs: Payload of the request to redact a conversation part
    properties:
      conversation_id:
        type: string
        docs: The id of the conversation.
      conversation_part_id:
        type: string
        docs: The id of the conversation_part.
    source:
      openapi: ../openapi.yml
    inline: true
  RedactConversationRequestSource:
    docs: Payload of the request to redact a conversation source
    properties:
      conversation_id:
        type: string
        docs: The id of the conversation.
      source_id:
        type: string
        docs: The id of the source.
    source:
      openapi: ../openapi.yml
    inline: true
  RedactConversationRequest:
    discriminant: type
    base-properties: {}
    union:
      conversation_part:
        type: RedactConversationRequestConversationPart
        docs: Payload of the request to redact a conversation part
      source:
        type: RedactConversationRequestSource
        docs: Payload of the request to redact a conversation source
    source:
      openapi: ../openapi.yml
  Reference:
    docs: reference to another object
    properties:
      type:
        type: optional<string>
        docs: ''
      id:
        type: optional<string>
        docs: ''
    source:
      openapi: ../openapi.yml
  ReplyConversationRequest:
    discriminated: false
    union:
      - type: ContactReplyConversationRequest
      - type: AdminReplyConversationRequest
    source:
      openapi: ../openapi.yml
  SearchRequestQuery:
    discriminated: false
    union:
      - type: SingleFilterSearchRequest
      - type: MultipleFilterSearchRequest
    source:
      openapi: ../openapi.yml
    inline: true
  SearchRequest:
    docs: Search using Intercoms Search APIs.
    properties:
      query: SearchRequestQuery
      pagination:
        type: optional<StartingAfterPaging>
    source:
      openapi: ../openapi.yml
  SegmentList:
    docs: >-
      This will return a list of Segment Objects. The result may also have a
      pages object if the response is paginated.
    properties:
      type:
        type: optional<literal<"segment.list">>
        docs: The type of the object
      segments:
        type: optional<list<segments.Segment>>
        docs: A list of Segment objects
      pages:
        type: optional<map<string, unknown>>
        docs: >-
          A pagination object, which may be empty, indicating no further pages
          to fetch.
    source:
      openapi: ../openapi.yml
  SingleFilterSearchRequestOperator:
    enum:
      - value: '='
        name: EQUAL_TO
      - value: '!='
        name: NOT_EQUALS
      - IN
      - NIN
      - value: <
        name: LESS_THAN
      - value: '>'
        name: GREATER_THAN
      - value: '~'
        name: ''
    docs: >-
      The accepted operators you can use to define how you want to search for
      the value.
    inline: true
    source:
      openapi: ../openapi.yml
  SingleFilterSearchRequest:
    docs: Search using Intercoms Search APIs with a single filter.
    properties:
      field:
        type: optional<string>
        docs: The accepted field that you want to search on.
      operator:
        type: optional<SingleFilterSearchRequestOperator>
        docs: >-
          The accepted operators you can use to define how you want to search
          for the value.
      value:
        type: optional<string>
        docs: The value that you want to search on.
    source:
      openapi: ../openapi.yml
  SlaAppliedSlaStatus:
    enum:
      - hit
      - missed
      - cancelled
      - active
    docs: |-
      SLA statuses:
                  - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.
                  - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.
                  - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.
    inline: true
    source:
      openapi: ../openapi.yml
  SlaApplied:
    docs: >
      The SLA Applied object contains the details for which SLA has been applied
      to this conversation.

      Important: if there are any canceled sla_events for the conversation -
      meaning an SLA has been manually removed from a conversation, the
      sla_status will always be returned as null.
    properties:
      type:
        type: optional<string>
        docs: object type
      sla_name:
        type: optional<string>
        docs: The name of the SLA as given by the teammate when it was created.
      sla_status:
        type: optional<SlaAppliedSlaStatus>
        docs: |-
          SLA statuses:
                      - `hit`: If there’s at least one hit event in the underlying sla_events table, and no “missed” or “canceled” events for the conversation.
                      - `missed`: If there are any missed sla_events for the conversation and no canceled events. If there’s even a single missed sla event, the status will always be missed. A missed status is not applied when the SLA expires, only the next time a teammate replies.
                      - `active`: An SLA has been applied to a conversation, but has not yet been fulfilled. SLA status is active only if there are no “hit, “missed”, or “canceled” events.
    source:
      openapi: ../openapi.yml
  SnoozeConversationRequest:
    docs: Payload of the request to snooze a conversation
    properties:
      admin_id:
        type: string
        docs: The id of the admin who is performing the action.
      snoozed_until:
        type: integer
        docs: The time you want the conversation to reopen.
    source:
      openapi: ../openapi.yml
  SocialProfile:
    docs: >-
      A Social Profile allows you to label your contacts, companies, and
      conversations and list them using that Social Profile.
    properties:
      type:
        type: optional<string>
        docs: value is "social_profile"
      name:
        type: optional<string>
        docs: The name of the Social media profile
      url:
        type: optional<string>
        docs: The name of the Social media profile
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
  StartingAfterPaging:
    properties:
      per_page:
        type: optional<integer>
        docs: The number of results to fetch per page.
      starting_after:
        type: optional<string>
        docs: The cursor to use in the next request to get the next page of results.
    source:
      openapi: ../openapi.yml
  SubscriptionTypeList:
    docs: A list of subscription type objects.
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of the object
      data:
        type: optional<list<subscriptionTypes.SubscriptionType>>
        docs: A list of subscription type objects associated with the workspace .
    source:
      openapi: ../openapi.yml
  TagCompanyRequestCompaniesItem:
    properties:
      id:
        type: optional<string>
        docs: The Intercom defined id representing the company.
      company_id:
        type: optional<string>
        docs: The company id you have defined for the company.
    source:
      openapi: ../openapi.yml
    inline: true
  TagCompanyRequest:
    docs: You can tag a single company or a list of companies.
    properties:
      name:
        type: string
        docs: The name of the tag, which will be created if not found.
      companies:
        docs: The id or company_id of the company can be passed as input parameters.
        type: list<TagCompanyRequestCompaniesItem>
    source:
      openapi: ../openapi.yml
  Tags:
    docs: A list of tags objects associated with a conversation
    properties:
      type:
        type: optional<literal<"tag.list">>
        docs: The type of the object
      tags:
        type: optional<list<tags.Tag>>
        docs: A list of tags objects associated with the conversation.
    source:
      openapi: ../openapi.yml
  TagMultipleUsersRequestUsersItem:
    properties:
      id:
        type: optional<string>
        docs: The Intercom defined id representing the user.
    source:
      openapi: ../openapi.yml
    inline: true
  TagMultipleUsersRequest:
    docs: You can tag a list of users.
    properties:
      name:
        type: string
        docs: The name of the tag, which will be created if not found.
      users: list<TagMultipleUsersRequestUsersItem>
    source:
      openapi: ../openapi.yml
  TeamList:
    docs: This will return a list of team objects for the App.
    properties:
      type:
        type: optional<literal<"team.list">>
        docs: The type of the object
      teams:
        type: optional<list<teams.Team>>
        docs: A list of team objects
    source:
      openapi: ../openapi.yml
  TeamPriorityLevel:
    docs: Admin priority levels for teams
    properties:
      primary_team_ids:
        type: optional<list<integer>>
        docs: The primary team ids for the team
      secondary_team_ids:
        type: optional<list<integer>>
        docs: The secondary team ids for the team
    source:
      openapi: ../openapi.yml
  TicketCustomAttributesValue:
    discriminated: false
    union:
      - optional<string>
      - double
      - boolean
      - list<unknown>
      - type: File
    source:
      openapi: ../openapi.yml
    inline: true
  TicketCustomAttributes:
    type: map<string, TicketCustomAttributesValue>
    docs: >-
      An object containing the different attributes associated to the ticket as
      key-value pairs. For the default title and description attributes, the
      keys are `_default_title_` and `_default_description_`.
  TicketList:
    docs: Tickets are how you track requests from your users.
    properties:
      type:
        type: optional<literal<"ticket.list">>
        docs: Always ticket.list
      tickets:
        type: optional<list<optional<tickets.Ticket>>>
        docs: The list of ticket objects
      total_count:
        type: optional<integer>
        docs: A count of the total number of objects.
      pages:
        type: optional<CursorPages>
    source:
      openapi: ../openapi.yml
  TicketPartAuthorType:
    enum:
      - admin
      - bot
      - team
      - user
    docs: The type of the author
    inline: true
    source:
      openapi: ../openapi.yml
  TicketPartAuthor:
    docs: >-
      The author that wrote or triggered the part. Can be a bot, admin, team or
      user.
    properties:
      type:
        type: optional<TicketPartAuthorType>
        docs: The type of the author
      id:
        type: optional<string>
        docs: The id of the author
      name:
        type: optional<string>
        docs: The name of the author
      email:
        type: optional<string>
        docs: The email of the author
        validation:
          format: email
    source:
      openapi: ../openapi.yml
  TicketParts:
    docs: >-
      A list of Ticket Part objects for each note and event in the ticket. There
      is a limit of 500 parts.
    properties:
      type:
        type: optional<literal<"ticket_part.list">>
        docs: ''
      ticket_parts:
        type: optional<list<tickets.TicketPart>>
        docs: >-
          A list of Ticket Part objects for each ticket. There is a limit of 500
          parts.
      total_count:
        type: optional<integer>
        docs: ''
    source:
      openapi: ../openapi.yml
  TicketReplyPartType:
    enum:
      - note
      - comment
      - quick_reply
    docs: Type of the part
    inline: true
    source:
      openapi: ../openapi.yml
  TicketReply:
    docs: A Ticket Part representing a note, comment, or quick_reply on a ticket
    properties:
      type:
        type: optional<literal<"ticket_part">>
        docs: Always ticket_part
      id:
        type: optional<string>
        docs: The id representing the part.
      part_type:
        type: optional<TicketReplyPartType>
        docs: Type of the part
      body:
        type: optional<string>
        docs: The message body, which may contain HTML.
      created_at:
        type: optional<integer>
        docs: The time the note was created.
      updated_at:
        type: optional<integer>
        docs: The last time the note was updated.
      author:
        type: optional<TicketPartAuthor>
      attachments:
        type: optional<list<PartAttachment>>
        docs: A list of attachments for the part.
      redacted:
        type: optional<boolean>
        docs: Whether or not the ticket part has been redacted.
    source:
      openapi: ../openapi.yml
  TicketRequestCustomAttributesValue:
    discriminated: false
    union:
      - optional<string>
      - double
      - boolean
      - list<unknown>
    source:
      openapi: ../openapi.yml
    inline: true
  TicketRequestCustomAttributes:
    type: map<string, TicketRequestCustomAttributesValue>
    docs: >-
      The attributes set on the ticket. When setting the default title and
      description attributes, the attribute keys that should be used are
      `_default_title_` and `_default_description_`. When setting ticket type
      attributes of the list attribute type, the key should be the attribute
      name and the value of the attribute should be the list item id, obtainable
      by [listing the ticket type](ref:get_ticket-types). For example, if the
      ticket type has an attribute called `priority` of type `list`, the key
      should be `priority` and the value of the attribute should be the guid of
      the list item (e.g. `de1825a0-0164-4070-8ca6-13e22462fa7e`).
  TicketTypeAttribute:
    docs: >-
      Ticket type attribute, used to define each data field to be captured in a
      ticket.
    properties:
      type:
        type: optional<string>
        docs: >-
          String representing the object's type. Always has the value
          `ticket_type_attribute`.
      id:
        type: optional<string>
        docs: The id representing the ticket type attribute.
      workspace_id:
        type: optional<string>
        docs: The id of the workspace that the ticket type attribute belongs to.
      name:
        type: optional<string>
        docs: The name of the ticket type attribute
      description:
        type: optional<string>
        docs: The description of the ticket type attribute
      data_type:
        type: optional<string>
        docs: >-
          The type of the data attribute (allowed values: "string list integer
          decimal boolean datetime files")
      input_options:
        type: optional<map<string, unknown>>
        docs: Input options for the attribute
      order:
        type: optional<integer>
        docs: The order of the attribute against other attributes
      required_to_create:
        type: optional<boolean>
        docs: Whether the attribute is required or not for teammates.
        default: false
      required_to_create_for_contacts:
        type: optional<boolean>
        docs: Whether the attribute is required or not for contacts.
        default: false
      visible_on_create:
        type: optional<boolean>
        docs: Whether the attribute is visible or not to teammates.
        default: true
      visible_to_contacts:
        type: optional<boolean>
        docs: Whether the attribute is visible or not to contacts.
        default: true
      default:
        type: optional<boolean>
        docs: Whether the attribute is built in or not.
      ticket_type_id:
        type: optional<integer>
        docs: The id of the ticket type that the attribute belongs to.
      archived:
        type: optional<boolean>
        docs: Whether the ticket type attribute is archived or not.
      created_at:
        type: optional<integer>
        docs: The date and time the ticket type attribute was created.
      updated_at:
        type: optional<integer>
        docs: The date and time the ticket type attribute was last updated.
    source:
      openapi: ../openapi.yml
  TicketTypeAttributeList:
    docs: A list of attributes associated with a given ticket type.
    properties:
      type:
        type: optional<string>
        docs: >-
          String representing the object's type. Always has the value
          `ticket_type_attributes.list`.
      ticket_type_attributes:
        type: optional<list<optional<TicketTypeAttribute>>>
        docs: A list of ticket type attributes associated with a given ticket type.
    source:
      openapi: ../openapi.yml
  TicketTypeList:
    docs: A list of ticket types associated with a given workspace.
    properties:
      type:
        type: optional<string>
        docs: >-
          String representing the object's type. Always has the value
          `ticket_type.list`.
      ticket_types:
        type: optional<list<optional<tickets.TicketType>>>
        docs: A list of ticket_types associated with a given workspace.
    source:
      openapi: ../openapi.yml
  Translation:
    docs: >-
      A translation object contains the localised details of a subscription
      type.
    properties:
      name:
        type: optional<string>
        docs: The localised name of the subscription type.
      description:
        type: optional<string>
        docs: The localised description of the subscription type.
      locale:
        type: optional<string>
        docs: >-
          The two character identifier for the language of the translation
          object.
    source:
      openapi: ../openapi.yml
  UntagCompanyRequestCompaniesItem:
    properties:
      id:
        type: optional<string>
        docs: The Intercom defined id representing the company.
      company_id:
        type: optional<string>
        docs: The company id you have defined for the company.
      untag:
        type: optional<boolean>
        docs: Always set to true
    source:
      openapi: ../openapi.yml
    inline: true
  UntagCompanyRequest:
    docs: You can tag a single company or a list of companies.
    properties:
      name:
        type: string
        docs: The name of the tag which will be untagged from the company
      companies:
        docs: The id or company_id of the company can be passed as input parameters.
        type: list<UntagCompanyRequestCompaniesItem>
    source:
      openapi: ../openapi.yml
  UpdateArticleRequestState:
    enum:
      - published
      - draft
    docs: >-
      Whether the article will be `published` or will be a `draft`. Defaults to
      draft. For multilingual articles, this will be the state of the default
      language's content.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateArticleRequest:
    docs: You can Update an Article
    properties:
      title:
        type: optional<string>
        docs: >-
          The title of the article.For multilingual articles, this will be the
          title of the default language's content.
      description:
        type: optional<string>
        docs: >-
          The description of the article. For multilingual articles, this will
          be the description of the default language's content.
      body:
        type: optional<string>
        docs: >-
          The content of the article. For multilingual articles, this will be
          the body of the default language's content.
      author_id:
        type: optional<integer>
        docs: >-
          The id of the author of the article. For multilingual articles, this
          will be the id of the author of the default language's content. Must
          be a teammate on the help center's workspace.
      state:
        type: optional<UpdateArticleRequestState>
        docs: >-
          Whether the article will be `published` or will be a `draft`. Defaults
          to draft. For multilingual articles, this will be the state of the
          default language's content.
      parent_id:
        type: optional<string>
        docs: >-
          The id of the article's parent collection or section. An article
          without this field stands alone.
      parent_type:
        type: optional<string>
        docs: The type of parent, which can either be a `collection` or `section`.
      translated_content:
        type: optional<ArticleTranslatedContent>
    source:
      openapi: ../openapi.yml
  UpdateTicketTypeRequestCategory:
    enum:
      - Customer
      - value: Back-office
        name: BackOffice
      - Tracker
    docs: Category of the Ticket Type.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateTicketTypeRequest:
    docs: >
      The request payload for updating a ticket type.

      You can copy the `icon` property for your ticket type from [Twemoji
      Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
    properties:
      name:
        type: optional<string>
        docs: The name of the ticket type.
      description:
        type: optional<string>
        docs: The description of the ticket type.
      category:
        type: optional<UpdateTicketTypeRequestCategory>
        docs: Category of the Ticket Type.
      icon:
        type: optional<string>
        docs: The icon of the ticket type.
        default: 🎟️
      archived:
        type: optional<boolean>
        docs: The archived status of the ticket type.
      is_internal:
        type: optional<boolean>
        docs: >-
          Whether the tickets associated with this ticket type are intended for
          internal use only or will be shared with customers. This is currently
          a limited attribute.
        default: false
    source:
      openapi: ../openapi.yml
  UpdateVisitorRequestOne: unknown
  VisitorAvatar:
    properties:
      type:
        type: optional<string>
        docs: ''
        default: avatar
      image_url:
        type: optional<string>
        docs: This object represents the avatar associated with the visitor.
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  VisitorCompanies:
    properties:
      type:
        type: optional<literal<"company.list">>
        docs: The type of the object
      companies: optional<list<companies.Company>>
    source:
      openapi: ../openapi.yml
    inline: true
  VisitorLocationData:
    properties:
      type:
        type: optional<string>
        docs: ''
        default: location_data
      city_name:
        type: optional<string>
        docs: The city name of the visitor.
      continent_code:
        type: optional<string>
        docs: The continent code of the visitor.
      country_code:
        type: optional<string>
        docs: The country code of the visitor.
      country_name:
        type: optional<string>
        docs: The country name of the visitor.
      postal_code:
        type: optional<string>
        docs: The postal code of the visitor.
      region_name:
        type: optional<string>
        docs: The region name of the visitor.
      timezone:
        type: optional<string>
        docs: The timezone of the visitor.
    source:
      openapi: ../openapi.yml
    inline: true
  VisitorSocialProfiles:
    properties:
      type:
        type: optional<literal<"social_profile.list">>
        docs: The type of the object
      social_profiles: optional<list<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  VisitorTagsTagsItem:
    properties:
      type:
        type: optional<literal<"tag">>
        docs: The type of the object
      id:
        type: optional<string>
        docs: The id of the tag.
      name:
        type: optional<string>
        docs: The name of the tag.
    source:
      openapi: ../openapi.yml
    inline: true
  VisitorTags:
    properties:
      type:
        type: optional<literal<"tag.list">>
        docs: The type of the object
      tags: optional<list<VisitorTagsTagsItem>>
    source:
      openapi: ../openapi.yml
    inline: true
  VisitorSegments:
    properties:
      type:
        type: optional<literal<"segment.list">>
        docs: The type of the object
      segments: optional<list<string>>
    source:
      openapi: ../openapi.yml
    inline: true
  Visitor:
    docs: >-
      Visitors are useful for representing anonymous people that have not yet
      been identified. They usually represent website visitors. Visitors are not
      visible in Intercom platform. The Visitors resource provides methods to
      fetch, update, convert and delete.
    properties:
      type:
        type: optional<string>
        docs: Value is 'visitor'
        default: visitor
      id:
        type: optional<string>
        docs: The Intercom defined id representing the Visitor.
      user_id:
        type: optional<string>
        docs: Automatically generated identifier for the Visitor.
      anonymous:
        type: optional<boolean>
        docs: Identifies if this visitor is anonymous.
      email:
        type: optional<string>
        docs: The email of the visitor.
        validation:
          format: email
      phone:
        type: optional<string>
        docs: The phone number of the visitor.
      name:
        type: optional<string>
        docs: The name of the visitor.
      pseudonym:
        type: optional<string>
        docs: The pseudonym of the visitor.
      avatar:
        type: optional<VisitorAvatar>
      app_id:
        type: optional<string>
        docs: The id of the app the visitor is associated with.
      companies:
        type: optional<VisitorCompanies>
      location_data:
        type: optional<VisitorLocationData>
      las_request_at:
        type: optional<integer>
        docs: The time the Lead last recorded making a request.
      created_at:
        type: optional<integer>
        docs: The time the Visitor was added to Intercom.
      remote_created_at:
        type: optional<integer>
        docs: The time the Visitor was added to Intercom.
      signed_up_at:
        type: optional<integer>
        docs: The time the Visitor signed up for your product.
      updated_at:
        type: optional<integer>
        docs: The last time the Visitor was updated.
      session_count:
        type: optional<integer>
        docs: The number of sessions the Visitor has had.
      social_profiles:
        type: optional<VisitorSocialProfiles>
      owner_id:
        type: optional<string>
        docs: The id of the admin that owns the Visitor.
      unsubscribed_from_emails:
        type: optional<boolean>
        docs: Whether the Visitor is unsubscribed from emails.
      marked_email_as_spam:
        type: optional<boolean>
        docs: Identifies if this visitor has marked an email as spam.
      has_hard_bounced:
        type: optional<boolean>
        docs: Identifies if this visitor has had a hard bounce.
      tags:
        type: optional<VisitorTags>
      segments:
        type: optional<VisitorSegments>
      custom_attributes:
        type: optional<map<string, string>>
        docs: The custom attributes you have set on the Visitor.
      referrer:
        type: optional<string>
        docs: The referer of the visitor.
      utm_campaign:
        type: optional<string>
        docs: The utm_campaign of the visitor.
      utm_content:
        type: optional<string>
        docs: The utm_content of the visitor.
      utm_medium:
        type: optional<string>
        docs: The utm_medium of the visitor.
      utm_source:
        type: optional<string>
        docs: The utm_source of the visitor.
      utm_term:
        type: optional<string>
        docs: The utm_term of the visitor.
      do_not_track:
        type: optional<boolean>
        docs: Identifies if this visitor has do not track enabled.
    source:
      openapi: ../openapi.yml
  VisitorDeletedObject:
    docs: Response returned when an object is deleted
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the visitor which is given by Intercom.
      type:
        type: optional<literal<"visitor">>
        docs: The type of object which was deleted
      user_id:
        type: optional<string>
        docs: Automatically generated identifier for the Visitor.
    source:
      openapi: ../openapi.yml
imports:
  admins: admins.yml
  articles: articles.yml
  helpCenter: helpCenter.yml
  contacts: contacts.yml
  segments: segments.yml
  companies: companies.yml
  aiContentSource: aiContentSource.yml
  conversations: conversations.yml
  customObjectInstances: customObjectInstances.yml
  dataAttributes: dataAttributes.yml
  dataEvents: dataEvents.yml
  news: news.yml
  notes: notes.yml
  subscriptionTypes: subscriptionTypes.yml
  tags: tags.yml
  teams: teams.yml
  tickets: tickets.yml
",
    },
    "admins.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Admins",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Admins",
          "endpoints": {
            "identifyAdmin": {
              "auth": true,
              "display-name": "Identify an admin",
              "docs": "
You can view the currently authorised admin along with the embedded app object (a "workspace" in legacy terminology).

> 🚧 Single Sign On
>
> If you are building a custom "Log in with Intercom" flow for your site, and you call the `/me` endpoint to identify the logged-in user, you should not accept any sign-ins from users with unverified email addresses as it poses a potential impersonation security risk.
",
              "examples": [
                {
                  "name": "Successful response",
                  "response": {
                    "body": {
                      "app": {
                        "created_at": 1719492696,
                        "id_code": "this_is_an_id1_that_should_be_at_least_40",
                        "identity_verification": false,
                        "name": "MyApp 1",
                        "region": "US",
                        "timezone": "America/Los_Angeles",
                        "type": "app",
                      },
                      "avatar": {
                        "image_url": "https://static.intercomassets.com/assets/default-avatars/admins/128.png",
                        "type": "avatar",
                      },
                      "away_mode_enabled": false,
                      "away_mode_reassign": false,
                      "email": "admin1@email.com",
                      "email_verified": true,
                      "has_inbox_seat": true,
                      "id": "991267390",
                      "job_title": "Philosopher",
                      "name": "Ciaran1 Lee",
                      "team_ids": [
                        814865,
                      ],
                      "type": "admin",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/me",
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "optional<root.Admin>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listActivityLogs": {
              "auth": true,
              "display-name": "List all activity logs",
              "docs": "You can get a log of activities by all admins in an app.",
              "errors": [
                "root.ListActivityLogsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "query-parameters": {
                    "created_at_after": "1677253093",
                    "created_at_before": "1677861493",
                  },
                  "response": {
                    "body": {
                      "activity_logs": [
                        {
                          "activity_description": "Ciaran5 Lee changed your Initial message title message from Initial message title to Eventual message title.",
                          "activity_type": "message_state_change",
                          "created_at": 1719492702,
                          "id": "ddee3a18-0032-4061-b9b9-26230c3dd5f7",
                          "performed_by": {
                            "email": "admin5@email.com",
                            "id": "991267395",
                            "ip": "127.0.0.1",
                            "type": "admin",
                          },
                        },
                        {
                          "activity_description": "Ciaran5 Lee changed your app name from before to after.",
                          "activity_type": "app_name_change",
                          "created_at": 1719492702,
                          "id": "5eec951b-db7a-4b5b-add5-95ffc90969b6",
                          "performed_by": {
                            "email": "admin5@email.com",
                            "id": "991267395",
                            "ip": "127.0.0.1",
                            "type": "admin",
                          },
                        },
                      ],
                      "pages": {
                        "page": 1,
                        "per_page": 20,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "type": "activity_log.list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/admins/activity_logs",
              "request": {
                "name": "ListActivityLogsRequest",
                "query-parameters": {
                  "created_at_after": {
                    "docs": "The start date that you request data for. It must be formatted as a UNIX timestamp.",
                    "type": "string",
                  },
                  "created_at_before": {
                    "docs": "The end date that you request data for. It must be formatted as a UNIX timestamp.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "root.ActivityLogList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listAdmins": {
              "auth": true,
              "display-name": "List all admins",
              "docs": "You can fetch a list of admins for a given workspace.",
              "errors": [
                "root.ListAdminsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "response": {
                    "body": {
                      "admins": [
                        {
                          "avatar": "https://picsum.photos/200/300",
                          "away_mode_enabled": false,
                          "away_mode_reassign": false,
                          "email": "admin7@email.com",
                          "has_inbox_seat": true,
                          "id": "991267397",
                          "job_title": "Philosopher",
                          "name": "Ciaran7 Lee",
                          "team_ids": [
                            814865,
                          ],
                          "type": "admin",
                        },
                      ],
                      "type": "admin.list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/admins",
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "root.Admins",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveAdmin": {
              "auth": true,
              "display-name": "Retrieve an admin",
              "docs": "You can retrieve the details of a single admin.",
              "errors": [
                "root.RetrieveAdminRequestUnauthorizedError",
                "root.RetrieveAdminRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Admin found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "avatar": "https://picsum.photos/200/300",
                      "away_mode_enabled": false,
                      "away_mode_reassign": false,
                      "email": "admin9@email.com",
                      "has_inbox_seat": true,
                      "id": "991267399",
                      "job_title": "Philosopher",
                      "name": "Ciaran9 Lee",
                      "team_ids": [
                        814865,
                      ],
                      "team_priority_level": {
                        "primary_team_ids": [
                          814865,
                        ],
                        "secondary_team_ids": [
                          493881,
                        ],
                      },
                      "type": "admin",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/admins/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a given admin",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "Admin found",
                "status-code": 200,
                "type": "optional<Admin>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "setAwayAdmin": {
              "auth": true,
              "display-name": "Set an admin to away",
              "docs": "You can set an Admin as away for the Inbox.",
              "errors": [
                "root.SetAwayAdminRequestUnauthorizedError",
                "root.SetAwayAdminRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "away_mode_enabled": true,
                    "away_mode_reassign": true,
                  },
                  "response": {
                    "body": {
                      "avatar": "https://picsum.photos/200/300",
                      "away_mode_enabled": true,
                      "away_mode_reassign": true,
                      "email": "admin2@email.com",
                      "has_inbox_seat": true,
                      "id": "991267391",
                      "job_title": "Philosopher",
                      "name": "Ciaran2 Lee",
                      "team_ids": [
                        814865,
                      ],
                      "team_priority_level": {
                        "primary_team_ids": [
                          814865,
                        ],
                        "secondary_team_ids": [
                          493881,
                        ],
                      },
                      "type": "admin",
                    },
                  },
                },
                {
                  "name": "Admin not found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "away_mode_enabled": true,
                    "away_mode_reassign": true,
                  },
                  "response": {
                    "body": {
                      "avatar": "https://picsum.photos/200/300",
                      "away_mode_enabled": true,
                      "away_mode_reassign": true,
                      "email": "admin2@email.com",
                      "has_inbox_seat": true,
                      "id": "991267391",
                      "job_title": "Philosopher",
                      "name": "Ciaran2 Lee",
                      "team_ids": [
                        814865,
                      ],
                      "team_priority_level": {
                        "primary_team_ids": [
                          814865,
                        ],
                        "secondary_team_ids": [
                          493881,
                        ],
                      },
                      "type": "admin",
                    },
                  },
                },
                {
                  "name": "Unauthorized",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "away_mode_enabled": true,
                    "away_mode_reassign": true,
                  },
                  "response": {
                    "body": {
                      "avatar": "https://picsum.photos/200/300",
                      "away_mode_enabled": true,
                      "away_mode_reassign": true,
                      "email": "admin2@email.com",
                      "has_inbox_seat": true,
                      "id": "991267391",
                      "job_title": "Philosopher",
                      "name": "Ciaran2 Lee",
                      "team_ids": [
                        814865,
                      ],
                      "team_priority_level": {
                        "primary_team_ids": [
                          814865,
                        ],
                        "secondary_team_ids": [
                          493881,
                        ],
                      },
                      "type": "admin",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/admins/{id}/away",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a given admin",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "away_mode_enabled": {
                      "default": true,
                      "docs": "Set to "true" to change the status of the admin to away.",
                      "type": "boolean",
                    },
                    "away_mode_reassign": {
                      "default": false,
                      "docs": "Set to "true" to assign any new conversation replies to your default inbox.",
                      "type": "boolean",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SetAwayAdminRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "optional<Admin>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Admin": {
            "docs": "Admins are teammate accounts that have access to a workspace.",
            "inline": undefined,
            "properties": {
              "avatar": {
                "docs": "Image for the associated team or teammate",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "away_mode_enabled": {
                "docs": "Identifies if this admin is currently set in away mode.",
                "type": "optional<boolean>",
              },
              "away_mode_reassign": {
                "docs": "Identifies if this admin is set to automatically reassign new conversations to the apps default inbox.",
                "type": "optional<boolean>",
              },
              "email": {
                "docs": "The email of the admin.",
                "type": "optional<string>",
              },
              "has_inbox_seat": {
                "docs": "Identifies if this admin has a paid inbox seat to restrict/allow features that require them.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The id representing the admin.",
                "type": "optional<string>",
              },
              "job_title": {
                "docs": "The job title of the admin.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the admin.",
                "type": "optional<string>",
              },
              "team_ids": {
                "docs": "This object represents the avatar associated with the admin.",
                "type": "optional<list<integer>>",
              },
              "team_priority_level": {
                "type": "optional<root.TeamPriorityLevel>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `admin`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    identifyAdmin:
      path: /me
      method: GET
      auth: true
      docs: >

        You can view the currently authorised admin along with the embedded app
        object (a "workspace" in legacy terminology).


        > 🚧 Single Sign On

        >

        > If you are building a custom "Log in with Intercom" flow for your
        site, and you call the `/me` endpoint to identify the logged-in user,
        you should not accept any sign-ins from users with unverified email
        addresses as it poses a potential impersonation security risk.
      source:
        openapi: ../openapi.yml
      display-name: Identify an admin
      response:
        docs: Successful response
        type: optional<root.Admin>
        status-code: 200
      examples:
        - name: Successful response
          response:
            body:
              type: admin
              id: '991267390'
              name: Ciaran1 Lee
              email: admin1@email.com
              job_title: Philosopher
              away_mode_enabled: false
              away_mode_reassign: false
              has_inbox_seat: true
              team_ids:
                - 814865
              avatar:
                type: avatar
                image_url: >-
                  https://static.intercomassets.com/assets/default-avatars/admins/128.png
              email_verified: true
              app:
                type: app
                id_code: this_is_an_id1_that_should_be_at_least_40
                name: MyApp 1
                region: US
                timezone: America/Los_Angeles
                created_at: 1719492696
                identity_verification: false
    setAwayAdmin:
      path: /admins/{id}/away
      method: PUT
      auth: true
      docs: You can set an Admin as away for the Inbox.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier of a given admin
      display-name: Set an admin to away
      request:
        name: SetAwayAdminRequest
        body:
          properties:
            away_mode_enabled:
              type: boolean
              docs: Set to "true" to change the status of the admin to away.
              default: true
            away_mode_reassign:
              type: boolean
              docs: >-
                Set to "true" to assign any new conversation replies to your
                default inbox.
              default: false
        content-type: application/json
      response:
        docs: Successful response
        type: optional<Admin>
        status-code: 200
      errors:
        - root.SetAwayAdminRequestUnauthorizedError
        - root.SetAwayAdminRequestNotFoundError
      examples:
        - name: Successful response
          path-parameters:
            id: 1
          request:
            away_mode_enabled: true
            away_mode_reassign: true
          response:
            body:
              type: admin
              id: '991267391'
              name: Ciaran2 Lee
              email: admin2@email.com
              job_title: Philosopher
              away_mode_enabled: true
              away_mode_reassign: true
              has_inbox_seat: true
              team_ids:
                - 814865
              avatar: https://picsum.photos/200/300
              team_priority_level:
                primary_team_ids:
                  - 814865
                secondary_team_ids:
                  - 493881
        - name: Admin not found
          path-parameters:
            id: 1
          request:
            away_mode_enabled: true
            away_mode_reassign: true
          response:
            body:
              type: admin
              id: '991267391'
              name: Ciaran2 Lee
              email: admin2@email.com
              job_title: Philosopher
              away_mode_enabled: true
              away_mode_reassign: true
              has_inbox_seat: true
              team_ids:
                - 814865
              avatar: https://picsum.photos/200/300
              team_priority_level:
                primary_team_ids:
                  - 814865
                secondary_team_ids:
                  - 493881
        - name: Unauthorized
          path-parameters:
            id: 1
          request:
            away_mode_enabled: true
            away_mode_reassign: true
          response:
            body:
              type: admin
              id: '991267391'
              name: Ciaran2 Lee
              email: admin2@email.com
              job_title: Philosopher
              away_mode_enabled: true
              away_mode_reassign: true
              has_inbox_seat: true
              team_ids:
                - 814865
              avatar: https://picsum.photos/200/300
              team_priority_level:
                primary_team_ids:
                  - 814865
                secondary_team_ids:
                  - 493881
    listActivityLogs:
      path: /admins/activity_logs
      method: GET
      auth: true
      docs: You can get a log of activities by all admins in an app.
      source:
        openapi: ../openapi.yml
      display-name: List all activity logs
      request:
        name: ListActivityLogsRequest
        query-parameters:
          created_at_after:
            type: string
            docs: >-
              The start date that you request data for. It must be formatted as
              a UNIX timestamp.
          created_at_before:
            type: optional<string>
            docs: >-
              The end date that you request data for. It must be formatted as a
              UNIX timestamp.
      response:
        docs: Successful response
        type: root.ActivityLogList
        status-code: 200
      errors:
        - root.ListActivityLogsRequestUnauthorizedError
      examples:
        - name: Successful response
          query-parameters:
            created_at_after: '1677253093'
            created_at_before: '1677861493'
          response:
            body:
              type: activity_log.list
              pages:
                type: pages
                page: 1
                per_page: 20
                total_pages: 1
              activity_logs:
                - id: ddee3a18-0032-4061-b9b9-26230c3dd5f7
                  performed_by:
                    type: admin
                    id: '991267395'
                    email: admin5@email.com
                    ip: 127.0.0.1
                  created_at: 1719492702
                  activity_type: message_state_change
                  activity_description: >-
                    Ciaran5 Lee changed your Initial message title message from
                    Initial message title to Eventual message title.
                - id: 5eec951b-db7a-4b5b-add5-95ffc90969b6
                  performed_by:
                    type: admin
                    id: '991267395'
                    email: admin5@email.com
                    ip: 127.0.0.1
                  created_at: 1719492702
                  activity_type: app_name_change
                  activity_description: Ciaran5 Lee changed your app name from before to after.
    listAdmins:
      path: /admins
      method: GET
      auth: true
      docs: You can fetch a list of admins for a given workspace.
      source:
        openapi: ../openapi.yml
      display-name: List all admins
      response:
        docs: Successful response
        type: root.Admins
        status-code: 200
      errors:
        - root.ListAdminsRequestUnauthorizedError
      examples:
        - name: Successful response
          response:
            body:
              type: admin.list
              admins:
                - type: admin
                  id: '991267397'
                  name: Ciaran7 Lee
                  email: admin7@email.com
                  job_title: Philosopher
                  away_mode_enabled: false
                  away_mode_reassign: false
                  has_inbox_seat: true
                  team_ids:
                    - 814865
                  avatar: https://picsum.photos/200/300
    retrieveAdmin:
      path: /admins/{id}
      method: GET
      auth: true
      docs: You can retrieve the details of a single admin.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier of a given admin
      display-name: Retrieve an admin
      response:
        docs: Admin found
        type: optional<Admin>
        status-code: 200
      errors:
        - root.RetrieveAdminRequestUnauthorizedError
        - root.RetrieveAdminRequestNotFoundError
      examples:
        - name: Admin found
          path-parameters:
            id: 1
          response:
            body:
              type: admin
              id: '991267399'
              name: Ciaran9 Lee
              email: admin9@email.com
              job_title: Philosopher
              away_mode_enabled: false
              away_mode_reassign: false
              has_inbox_seat: true
              team_ids:
                - 814865
              avatar: https://picsum.photos/200/300
              team_priority_level:
                primary_team_ids:
                  - 814865
                secondary_team_ids:
                  - 493881
  source:
    openapi: ../openapi.yml
  display-name: Admins
docs: Everything about your Admins
types:
  Admin:
    docs: Admins are teammate accounts that have access to a workspace.
    properties:
      type:
        type: optional<string>
        docs: String representing the object's type. Always has the value `admin`.
      id:
        type: optional<string>
        docs: The id representing the admin.
      name:
        type: optional<string>
        docs: The name of the admin.
      email:
        type: optional<string>
        docs: The email of the admin.
      job_title:
        type: optional<string>
        docs: The job title of the admin.
      away_mode_enabled:
        type: optional<boolean>
        docs: Identifies if this admin is currently set in away mode.
      away_mode_reassign:
        type: optional<boolean>
        docs: >-
          Identifies if this admin is set to automatically reassign new
          conversations to the apps default inbox.
      has_inbox_seat:
        type: optional<boolean>
        docs: >-
          Identifies if this admin has a paid inbox seat to restrict/allow
          features that require them.
      team_ids:
        type: optional<list<integer>>
        docs: This object represents the avatar associated with the admin.
      avatar:
        type: optional<string>
        docs: Image for the associated team or teammate
        validation:
          format: uri
      team_priority_level:
        type: optional<root.TeamPriorityLevel>
    source:
      openapi: ../openapi.yml
",
    },
    "aiAgent.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "types": {
          "AiAgent": {
            "docs": "Data related to AI Agent involvement in the conversation.",
            "inline": undefined,
            "properties": {
              "content_sources": {
                "type": "optional<root.ContentSourcesList>",
              },
              "last_answer_type": {
                "docs": "The type of the last answer delivered by AI Agent. If no answer was delivered then this will return `null`",
                "type": "optional<string>",
              },
              "rating": {
                "docs": "The customer satisfaction rating given to AI Agent, from 1-5.",
                "type": "optional<integer>",
              },
              "rating_remark": {
                "docs": "The customer satisfaction rating remark given to AI Agent.",
                "type": "optional<string>",
              },
              "resolution_state": {
                "docs": "The resolution state of AI Agent. If no AI or custom answer has been delivered then this will return `null`.",
                "type": "optional<string>",
              },
              "source_title": {
                "docs": "The title of the source that triggered AI Agent involvement in the conversation. If this is `essentials_plan_setup` then it will return `null`.",
                "type": "optional<string>",
              },
              "source_type": {
                "docs": "The type of the source that triggered AI Agent involvement in the conversation.",
                "type": "optional<AiAgentSourceType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AiAgentSourceType": {
            "docs": "The type of the source that triggered AI Agent involvement in the conversation.",
            "enum": [
              "essentials_plan_setup",
              "profile",
              "workflow",
              "workflow_preview",
              "fin_preview",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  AiAgentSourceType:
    enum:
      - essentials_plan_setup
      - profile
      - workflow
      - workflow_preview
      - fin_preview
    docs: >-
      The type of the source that triggered AI Agent involvement in the
      conversation.
    inline: true
    source:
      openapi: ../openapi.yml
  AiAgent:
    docs: Data related to AI Agent involvement in the conversation.
    properties:
      source_type:
        type: optional<AiAgentSourceType>
        docs: >-
          The type of the source that triggered AI Agent involvement in the
          conversation.
      source_title:
        type: optional<string>
        docs: >-
          The title of the source that triggered AI Agent involvement in the
          conversation. If this is `essentials_plan_setup` then it will return
          `null`.
      last_answer_type:
        type: optional<string>
        docs: >-
          The type of the last answer delivered by AI Agent. If no answer was
          delivered then this will return `null`
      resolution_state:
        type: optional<string>
        docs: >-
          The resolution state of AI Agent. If no AI or custom answer has been
          delivered then this will return `null`.
      rating:
        type: optional<integer>
        docs: The customer satisfaction rating given to AI Agent, from 1-5.
      rating_remark:
        type: optional<string>
        docs: The customer satisfaction rating remark given to AI Agent.
      content_sources:
        type: optional<root.ContentSourcesList>
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
",
    },
    "aiContentSource.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "types": {
          "ContentSource": {
            "docs": "The content source used by AI Agent in the conversation.",
            "inline": undefined,
            "properties": {
              "content_type": {
                "docs": "The type of the content source.",
                "type": "optional<ContentSourceContentType>",
              },
              "locale": {
                "docs": "The ISO 639 language code of the content source.",
                "type": "optional<string>",
              },
              "title": {
                "docs": "The title of the content source.",
                "type": "optional<string>",
              },
              "url": {
                "docs": "The internal URL linking to the content source for teammates.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContentSourceContentType": {
            "docs": "The type of the content source.",
            "enum": [
              "file",
              "article",
              "external_content",
              "content_snippet",
              "workflow_connector_action",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  ContentSourceContentType:
    enum:
      - file
      - article
      - external_content
      - content_snippet
      - workflow_connector_action
    docs: The type of the content source.
    inline: true
    source:
      openapi: ../openapi.yml
  ContentSource:
    docs: The content source used by AI Agent in the conversation.
    properties:
      content_type:
        type: optional<ContentSourceContentType>
        docs: The type of the content source.
      url:
        type: optional<string>
        docs: The internal URL linking to the content source for teammates.
      title:
        type: optional<string>
        docs: The title of the content source.
      locale:
        type: optional<string>
        docs: The ISO 639 language code of the content source.
    source:
      openapi: ../openapi.yml
",
    },
    "articles.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Articles",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Articles",
          "endpoints": {
            "createArticle": {
              "auth": true,
              "display-name": "Create an article",
              "docs": "You can create a new article by making a POST request to `https://api.intercom.io/articles`.",
              "errors": [
                "root.CreateArticleRequestBadRequestError",
                "root.CreateArticleRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "article created",
                  "request": {
                    "author_id": 991267407,
                    "body": "Body of the Article",
                    "description": "Description of the Article",
                    "parent_id": 145,
                    "parent_type": "collection",
                    "state": "published",
                    "title": "Thanks for everything",
                    "translated_content": {
                      "fr": {
                        "author_id": 991267407,
                        "body": "Corps de l'article",
                        "description": "Description de l'article",
                        "state": "published",
                        "title": "Merci pour tout",
                      },
                    },
                  },
                  "response": {
                    "body": {
                      "author_id": 991267407,
                      "body": "<p class="no-margin">Body of the Article</p>",
                      "created_at": 1719492710,
                      "default_locale": "en",
                      "description": "Description of the Article",
                      "id": "42",
                      "parent_id": 145,
                      "parent_ids": [
                        18,
                        19,
                      ],
                      "parent_type": "collection",
                      "state": "published",
                      "statistics": {
                        "conversions": 0,
                        "happy_reaction_percentage": 0,
                        "neutral_reaction_percentage": 0,
                        "reactions": 0,
                        "sad_reaction_percentage": 0,
                        "type": "article_statistics",
                        "views": 0,
                      },
                      "title": "Thanks for everything",
                      "translated_content": {
                        "ar": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bg": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ca": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "cs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "da": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "de": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "el": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "en": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "es": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "et": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "he": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hu": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "id": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "it": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ja": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ko": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "mn": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nb": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt-BR": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ro": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ru": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "tr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "type": "article_translated_content",
                        "vi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-CN": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-TW": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                      },
                      "type": "article",
                      "updated_at": 1719492710,
                      "url": "http://help-center.test/myapp-37/en/articles/42-thanks-for-everything",
                      "workspace_id": "this_is_an_id37_that_should_be_at_least_4",
                    },
                  },
                },
                {
                  "name": "Bad Request",
                  "request": {
                    "author_id": 1295,
                    "body": "Body of the Article",
                    "description": "Description of the Article",
                    "state": "published",
                    "title": "Thanks for everything",
                  },
                  "response": {
                    "body": {
                      "author_id": 991267407,
                      "body": "<p class="no-margin">Body of the Article</p>",
                      "created_at": 1719492710,
                      "default_locale": "en",
                      "description": "Description of the Article",
                      "id": "42",
                      "parent_id": 145,
                      "parent_ids": [
                        18,
                        19,
                      ],
                      "parent_type": "collection",
                      "state": "published",
                      "statistics": {
                        "conversions": 0,
                        "happy_reaction_percentage": 0,
                        "neutral_reaction_percentage": 0,
                        "reactions": 0,
                        "sad_reaction_percentage": 0,
                        "type": "article_statistics",
                        "views": 0,
                      },
                      "title": "Thanks for everything",
                      "translated_content": {
                        "ar": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bg": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ca": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "cs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "da": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "de": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "el": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "en": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "es": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "et": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "he": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hu": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "id": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "it": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ja": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ko": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "mn": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nb": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt-BR": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ro": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ru": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "tr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "type": "article_translated_content",
                        "vi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-CN": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-TW": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                      },
                      "type": "article",
                      "updated_at": 1719492710,
                      "url": "http://help-center.test/myapp-37/en/articles/42-thanks-for-everything",
                      "workspace_id": "this_is_an_id37_that_should_be_at_least_4",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/articles",
              "request": {
                "body": {
                  "type": "optional<root.CreateArticleRequest>",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "article created",
                "status-code": 200,
                "type": "Article",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteArticle": {
              "auth": true,
              "display-name": "Delete an article",
              "docs": "You can delete a single article by making a DELETE request to `https://api.intercom.io/articles/<id>`.",
              "errors": [
                "root.DeleteArticleRequestUnauthorizedError",
                "root.DeleteArticleRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "deleted": true,
                      "id": "51",
                      "object": "article",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/articles/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the article which is given by Intercom.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.DeletedArticleObject",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listArticles": {
              "auth": true,
              "display-name": "List all articles",
              "docs": "You can fetch a list of all articles by making a GET request to `https://api.intercom.io/articles`.

> 📘 How are the articles sorted and ordered?
>
> Articles will be returned in descending order on the `updated_at` attribute. This means if you need to iterate through results then we'll show the most recently updated articles first.
",
              "errors": [
                "root.ListArticlesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "author_id": 991267402,
                          "body": "",
                          "created_at": 1719492707,
                          "default_locale": "en",
                          "description": "",
                          "id": "39",
                          "parent_id": 143,
                          "parent_ids": [
                            18,
                            19,
                          ],
                          "parent_type": "collection",
                          "state": "published",
                          "title": "This is the article title",
                          "type": "article",
                          "updated_at": 1719492707,
                          "url": "http://help-center.test/myapp-33/en/articles/39-this-is-the-article-title",
                          "workspace_id": "this_is_an_id33_that_should_be_at_least_4",
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 25,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/articles",
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.Articles",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveArticle": {
              "auth": true,
              "display-name": "Retrieve an article",
              "docs": "You can fetch the details of a single article by making a GET request to `https://api.intercom.io/articles/<id>`.",
              "errors": [
                "root.RetrieveArticleRequestUnauthorizedError",
                "root.RetrieveArticleRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Article found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "author_id": 991267412,
                      "body": "",
                      "created_at": 1719492712,
                      "default_locale": "en",
                      "description": "",
                      "id": "45",
                      "parent_id": 148,
                      "parent_ids": [
                        18,
                        19,
                      ],
                      "parent_type": "collection",
                      "state": "published",
                      "statistics": {
                        "conversions": 0,
                        "happy_reaction_percentage": 0,
                        "neutral_reaction_percentage": 0,
                        "reactions": 0,
                        "sad_reaction_percentage": 0,
                        "type": "article_statistics",
                        "views": 0,
                      },
                      "title": "This is the article title",
                      "translated_content": {
                        "ar": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bg": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ca": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "cs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "da": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "de": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "el": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "en": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "es": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "et": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "he": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hu": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "id": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "it": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ja": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ko": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "mn": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nb": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt-BR": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ro": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ru": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "tr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "type": "article_translated_content",
                        "vi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-CN": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-TW": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                      },
                      "type": "article",
                      "updated_at": 1719492712,
                      "url": "http://help-center.test/myapp-43/en/articles/45-this-is-the-article-title",
                      "workspace_id": "this_is_an_id43_that_should_be_at_least_4",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/articles/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the article which is given by Intercom.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "Article found",
                "status-code": 200,
                "type": "Article",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "searchArticles": {
              "auth": true,
              "display-name": "Search for articles",
              "docs": "You can search for articles by making a GET request to `https://api.intercom.io/articles/search`.",
              "errors": [
                "root.SearchArticlesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Search successful",
                  "query-parameters": {
                    "phrase": "Getting started",
                    "state": "published",
                  },
                  "response": {
                    "body": {
                      "data": {
                        "articles": [
                          {
                            "author_id": 991267431,
                            "body": "",
                            "created_at": 1719492719,
                            "default_locale": "en",
                            "description": "",
                            "id": "55",
                            "parent_ids": [
                              18,
                              19,
                            ],
                            "state": "draft",
                            "title": "Title 1",
                            "type": "article",
                            "updated_at": 1719492719,
                            "workspace_id": "this_is_an_id61_that_should_be_at_least_4",
                          },
                        ],
                        "highlights": [
                          {
                            "article_id": "123",
                          },
                        ],
                      },
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 10,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/articles/search",
              "request": {
                "name": "SearchArticlesRequest",
                "query-parameters": {
                  "help_center_id": {
                    "docs": "The ID of the Help Center to search in.",
                    "type": "optional<integer>",
                  },
                  "highlight": {
                    "docs": "Return a highlighted version of the matching content within your articles. Refer to the response schema for more details.",
                    "type": "optional<boolean>",
                  },
                  "phrase": {
                    "docs": "The phrase within your articles to search for.",
                    "type": "optional<string>",
                  },
                  "state": {
                    "docs": "The state of the Articles returned. One of `published`, `draft` or `all`.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Search successful",
                "status-code": 200,
                "type": "ArticleSearchResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateArticle": {
              "auth": true,
              "display-name": "Update an article",
              "docs": "You can update the details of a single article by making a PUT request to `https://api.intercom.io/articles/<id>`.",
              "errors": [
                "root.UpdateArticleRequestUnauthorizedError",
                "root.UpdateArticleRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "body": "<p>New gifts in store for the jolly season</p>",
                    "title": "Christmas is here!",
                  },
                  "response": {
                    "body": {
                      "author_id": 991267418,
                      "body": "<p class="no-margin">New gifts in store for the jolly season</p>",
                      "created_at": 1719492714,
                      "default_locale": "en",
                      "description": "",
                      "id": "48",
                      "parent_id": 151,
                      "parent_ids": [
                        18,
                        19,
                      ],
                      "parent_type": "collection",
                      "state": "published",
                      "statistics": {
                        "conversions": 0,
                        "happy_reaction_percentage": 0,
                        "neutral_reaction_percentage": 0,
                        "reactions": 0,
                        "sad_reaction_percentage": 0,
                        "type": "article_statistics",
                        "views": 0,
                      },
                      "title": "Christmas is here!",
                      "translated_content": {
                        "ar": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bg": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ca": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "cs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "da": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "de": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "el": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "en": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "es": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "et": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "he": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hu": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "id": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "it": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ja": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ko": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "mn": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nb": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt-BR": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ro": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ru": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "tr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "type": "article_translated_content",
                        "vi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-CN": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-TW": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                      },
                      "type": "article",
                      "updated_at": 1719492714,
                      "url": "http://help-center.test/myapp-49/en/articles/48-christmas-is-here",
                      "workspace_id": "this_is_an_id49_that_should_be_at_least_4",
                    },
                  },
                },
                {
                  "name": "Article Not Found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "body": "<p>New gifts in store for the jolly season</p>",
                    "title": "Christmas is here!",
                  },
                  "response": {
                    "body": {
                      "author_id": 991267418,
                      "body": "<p class="no-margin">New gifts in store for the jolly season</p>",
                      "created_at": 1719492714,
                      "default_locale": "en",
                      "description": "",
                      "id": "48",
                      "parent_id": 151,
                      "parent_ids": [
                        18,
                        19,
                      ],
                      "parent_type": "collection",
                      "state": "published",
                      "statistics": {
                        "conversions": 0,
                        "happy_reaction_percentage": 0,
                        "neutral_reaction_percentage": 0,
                        "reactions": 0,
                        "sad_reaction_percentage": 0,
                        "type": "article_statistics",
                        "views": 0,
                      },
                      "title": "Christmas is here!",
                      "translated_content": {
                        "ar": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bg": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "bs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ca": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "cs": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "da": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "de": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "el": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "en": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "es": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "et": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "fr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "he": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "hu": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "id": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "it": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ja": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ko": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "lv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "mn": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nb": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "nl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "pt-BR": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ro": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "ru": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sl": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "sv": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "tr": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "type": "article_translated_content",
                        "vi": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-CN": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                        "zh-TW": {
                          "author_id": 1,
                          "body": "This is the body of the article.",
                          "created_at": 1663597223,
                          "description": "This article will show you how to create a new article.",
                          "state": "published",
                          "title": "How to create a new article",
                          "type": "article_content",
                          "updated_at": 1663597260,
                          "url": "http://intercom.test/help/en/articles/3-default-language",
                        },
                      },
                      "type": "article",
                      "updated_at": 1719492714,
                      "url": "http://help-center.test/myapp-49/en/articles/48-christmas-is-here",
                      "workspace_id": "this_is_an_id49_that_should_be_at_least_4",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/articles/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the article which is given by Intercom.",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "type": "optional<root.UpdateArticleRequest>",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Article",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Article": {
            "docs": "The Articles API is a central place to gather all information and take actions on your articles. Articles can live within collections and sections, or alternatively they can stand alone.",
            "extends": [
              "Articles",
            ],
            "inline": undefined,
            "properties": {
              "statistics": {
                "type": "optional<root.ArticleStatistics>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleListItemState": {
            "default": "draft",
            "docs": "Whether the article is `published` or is a `draft`. For multilingual articles, this will be the state of the default language's content.",
            "enum": [
              "published",
              "draft",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleSearchHighlights": {
            "docs": "The highlighted results of an Article search. In the examples provided my search query is always "my query".",
            "inline": undefined,
            "properties": {
              "article_id": {
                "docs": "The ID of the corresponding article.",
                "type": "optional<string>",
              },
              "highlighted_summary": {
                "docs": "An Article description and body text highlighted.",
                "type": "optional<list<list<ArticleSearchHighlightsHighlightedSummaryItemItem>>>",
              },
              "highlighted_title": {
                "docs": "An Article title highlighted.",
                "type": "optional<list<ArticleSearchHighlightsHighlightedTitleItem>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleSearchHighlightsHighlightedSummaryItemItem": {
            "docs": "An instance of highlighted summary text.",
            "inline": true,
            "properties": {
              "text": {
                "docs": "The text of the title.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of text - `highlight` or `plain`.",
                "type": "optional<ArticleSearchHighlightsHighlightedSummaryItemItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleSearchHighlightsHighlightedSummaryItemItemType": {
            "docs": "The type of text - `highlight` or `plain`.",
            "enum": [
              "highlight",
              "plain",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleSearchHighlightsHighlightedTitleItem": {
            "docs": "A highlighted article title.",
            "inline": true,
            "properties": {
              "text": {
                "docs": "The text of the title.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of text - `highlight` or `plain`.",
                "type": "optional<ArticleSearchHighlightsHighlightedTitleItemType>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleSearchHighlightsHighlightedTitleItemType": {
            "docs": "The type of text - `highlight` or `plain`.",
            "enum": [
              "highlight",
              "plain",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleSearchResponse": {
            "docs": "The results of an Article search",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An object containing the results of the search.",
                "type": "optional<ArticleSearchResponseData>",
              },
              "pages": {
                "type": "optional<root.CursorPages>",
              },
              "total_count": {
                "docs": "The total number of Articles matching the search query",
                "type": "optional<integer>",
              },
              "type": {
                "docs": "The type of the object - `list`.",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ArticleSearchResponseData": {
            "docs": "An object containing the results of the search.",
            "inline": true,
            "properties": {
              "articles": {
                "docs": "An array of Article objects",
                "type": "optional<list<Article>>",
              },
              "highlights": {
                "docs": "A corresponding array of highlighted Article content",
                "type": "optional<list<ArticleSearchHighlights>>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Articles": {
            "docs": "The data returned about your articles when you list them.",
            "inline": undefined,
            "properties": {
              "author_id": {
                "docs": "The id of the author of the article. For multilingual articles, this will be the id of the author of the default language's content. Must be a teammate on the help center's workspace.",
                "type": "optional<integer>",
              },
              "body": {
                "docs": "The body of the article in HTML. For multilingual articles, this will be the body of the default language's content.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time when the article was created. For multilingual articles, this will be the timestamp of creation of the default language's content in seconds.",
                "type": "optional<integer>",
              },
              "default_locale": {
                "docs": "The default locale of the help center. This field is only returned for multilingual help centers.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "The description of the article. For multilingual articles, this will be the description of the default language's content.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the article which is given by Intercom.",
                "type": "optional<string>",
              },
              "parent_id": {
                "docs": "The id of the article's parent collection or section. An article without this field stands alone.",
                "type": "optional<integer>",
              },
              "parent_ids": {
                "docs": "The ids of the article's parent collections or sections. An article without this field stands alone.",
                "type": "optional<list<integer>>",
              },
              "parent_type": {
                "docs": "The type of parent, which can either be a `collection` or `section`.",
                "type": "optional<string>",
              },
              "state": {
                "default": "draft",
                "docs": "Whether the article is `published` or is a `draft`. For multilingual articles, this will be the state of the default language's content.",
                "type": "optional<ArticleListItemState>",
              },
              "title": {
                "docs": "The title of the article. For multilingual articles, this will be the title of the default language's content.",
                "type": "optional<string>",
              },
              "translated_content": {
                "type": "optional<root.ArticleTranslatedContent>",
              },
              "type": {
                "docs": "The type of object - `article`.",
                "type": "optional<literal<"article">>",
              },
              "updated_at": {
                "docs": "The time when the article was last updated. For multilingual articles, this will be the timestamp of last update of the default language's content in seconds.",
                "type": "optional<integer>",
              },
              "url": {
                "docs": "The URL of the article. For multilingual articles, this will be the URL of the default language's content.",
                "type": "optional<string>",
              },
              "workspace_id": {
                "docs": "The id of the workspace which the article belongs to.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listArticles:
      path: /articles
      method: GET
      auth: true
      docs: >
        You can fetch a list of all articles by making a GET request to
        `https://api.intercom.io/articles`.


        > 📘 How are the articles sorted and ordered?

        >

        > Articles will be returned in descending order on the `updated_at`
        attribute. This means if you need to iterate through results then we'll
        show the most recently updated articles first.
      source:
        openapi: ../openapi.yml
      display-name: List all articles
      response:
        docs: successful
        type: root.Articles
        status-code: 200
      errors:
        - root.ListArticlesRequestUnauthorizedError
      examples:
        - name: successful
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 25
                total_pages: 1
              total_count: 1
              data:
                - type: article
                  id: '39'
                  workspace_id: this_is_an_id33_that_should_be_at_least_4
                  title: This is the article title
                  description: ''
                  body: ''
                  author_id: 991267402
                  state: published
                  created_at: 1719492707
                  updated_at: 1719492707
                  url: >-
                    http://help-center.test/myapp-33/en/articles/39-this-is-the-article-title
                  parent_id: 143
                  parent_ids:
                    - 18
                    - 19
                  parent_type: collection
                  default_locale: en
    createArticle:
      path: /articles
      method: POST
      auth: true
      docs: >-
        You can create a new article by making a POST request to
        `https://api.intercom.io/articles`.
      source:
        openapi: ../openapi.yml
      display-name: Create an article
      request:
        body:
          type: optional<root.CreateArticleRequest>
        content-type: application/json
      response:
        docs: article created
        type: Article
        status-code: 200
      errors:
        - root.CreateArticleRequestBadRequestError
        - root.CreateArticleRequestUnauthorizedError
      examples:
        - name: article created
          request:
            title: Thanks for everything
            description: Description of the Article
            body: Body of the Article
            author_id: 991267407
            state: published
            parent_id: 145
            parent_type: collection
            translated_content:
              fr:
                title: Merci pour tout
                description: Description de l'article
                body: Corps de l'article
                author_id: 991267407
                state: published
          response:
            body:
              type: article
              id: '42'
              workspace_id: this_is_an_id37_that_should_be_at_least_4
              title: Thanks for everything
              description: Description of the Article
              body: <p class="no-margin">Body of the Article</p>
              author_id: 991267407
              state: published
              created_at: 1719492710
              updated_at: 1719492710
              url: >-
                http://help-center.test/myapp-37/en/articles/42-thanks-for-everything
              parent_id: 145
              parent_ids:
                - 18
                - 19
              parent_type: collection
              default_locale: en
              translated_content:
                type: article_translated_content
                ar:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bg:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ca:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                cs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                da:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                de:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                el:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                en:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                es:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                et:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                he:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hu:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                id:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                it:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ja:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ko:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                mn:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nb:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ro:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ru:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                tr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                vi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt-BR:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-CN:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-TW:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
              statistics:
                type: article_statistics
                views: 0
                conversions: 0
                reactions: 0
                happy_reaction_percentage: 0
                neutral_reaction_percentage: 0
                sad_reaction_percentage: 0
        - name: Bad Request
          request:
            title: Thanks for everything
            description: Description of the Article
            body: Body of the Article
            author_id: 1295
            state: published
          response:
            body:
              type: article
              id: '42'
              workspace_id: this_is_an_id37_that_should_be_at_least_4
              title: Thanks for everything
              description: Description of the Article
              body: <p class="no-margin">Body of the Article</p>
              author_id: 991267407
              state: published
              created_at: 1719492710
              updated_at: 1719492710
              url: >-
                http://help-center.test/myapp-37/en/articles/42-thanks-for-everything
              parent_id: 145
              parent_ids:
                - 18
                - 19
              parent_type: collection
              default_locale: en
              translated_content:
                type: article_translated_content
                ar:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bg:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ca:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                cs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                da:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                de:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                el:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                en:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                es:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                et:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                he:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hu:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                id:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                it:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ja:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ko:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                mn:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nb:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ro:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ru:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                tr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                vi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt-BR:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-CN:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-TW:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
              statistics:
                type: article_statistics
                views: 0
                conversions: 0
                reactions: 0
                happy_reaction_percentage: 0
                neutral_reaction_percentage: 0
                sad_reaction_percentage: 0
    retrieveArticle:
      path: /articles/{id}
      method: GET
      auth: true
      docs: >-
        You can fetch the details of a single article by making a GET request to
        `https://api.intercom.io/articles/<id>`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the article which is given by Intercom.
      display-name: Retrieve an article
      response:
        docs: Article found
        type: Article
        status-code: 200
      errors:
        - root.RetrieveArticleRequestUnauthorizedError
        - root.RetrieveArticleRequestNotFoundError
      examples:
        - name: Article found
          path-parameters:
            id: 1
          response:
            body:
              type: article
              id: '45'
              workspace_id: this_is_an_id43_that_should_be_at_least_4
              title: This is the article title
              description: ''
              body: ''
              author_id: 991267412
              state: published
              created_at: 1719492712
              updated_at: 1719492712
              url: >-
                http://help-center.test/myapp-43/en/articles/45-this-is-the-article-title
              parent_id: 148
              parent_ids:
                - 18
                - 19
              parent_type: collection
              default_locale: en
              translated_content:
                type: article_translated_content
                ar:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bg:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ca:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                cs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                da:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                de:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                el:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                en:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                es:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                et:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                he:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hu:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                id:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                it:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ja:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ko:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                mn:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nb:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ro:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ru:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                tr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                vi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt-BR:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-CN:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-TW:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
              statistics:
                type: article_statistics
                views: 0
                conversions: 0
                reactions: 0
                happy_reaction_percentage: 0
                neutral_reaction_percentage: 0
                sad_reaction_percentage: 0
    updateArticle:
      path: /articles/{id}
      method: PUT
      auth: true
      docs: >-
        You can update the details of a single article by making a PUT request
        to `https://api.intercom.io/articles/<id>`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the article which is given by Intercom.
      display-name: Update an article
      request:
        body:
          type: optional<root.UpdateArticleRequest>
        content-type: application/json
      response:
        docs: successful
        type: Article
        status-code: 200
      errors:
        - root.UpdateArticleRequestUnauthorizedError
        - root.UpdateArticleRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 1
          request:
            title: Christmas is here!
            body: <p>New gifts in store for the jolly season</p>
          response:
            body:
              type: article
              id: '48'
              workspace_id: this_is_an_id49_that_should_be_at_least_4
              title: Christmas is here!
              description: ''
              body: <p class="no-margin">New gifts in store for the jolly season</p>
              author_id: 991267418
              state: published
              created_at: 1719492714
              updated_at: 1719492714
              url: >-
                http://help-center.test/myapp-49/en/articles/48-christmas-is-here
              parent_id: 151
              parent_ids:
                - 18
                - 19
              parent_type: collection
              default_locale: en
              translated_content:
                type: article_translated_content
                ar:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bg:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ca:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                cs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                da:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                de:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                el:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                en:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                es:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                et:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                he:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hu:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                id:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                it:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ja:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ko:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                mn:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nb:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ro:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ru:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                tr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                vi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt-BR:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-CN:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-TW:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
              statistics:
                type: article_statistics
                views: 0
                conversions: 0
                reactions: 0
                happy_reaction_percentage: 0
                neutral_reaction_percentage: 0
                sad_reaction_percentage: 0
        - name: Article Not Found
          path-parameters:
            id: 1
          request:
            title: Christmas is here!
            body: <p>New gifts in store for the jolly season</p>
          response:
            body:
              type: article
              id: '48'
              workspace_id: this_is_an_id49_that_should_be_at_least_4
              title: Christmas is here!
              description: ''
              body: <p class="no-margin">New gifts in store for the jolly season</p>
              author_id: 991267418
              state: published
              created_at: 1719492714
              updated_at: 1719492714
              url: >-
                http://help-center.test/myapp-49/en/articles/48-christmas-is-here
              parent_id: 151
              parent_ids:
                - 18
                - 19
              parent_type: collection
              default_locale: en
              translated_content:
                type: article_translated_content
                ar:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bg:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                bs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ca:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                cs:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                da:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                de:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                el:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                en:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                es:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                et:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                fr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                he:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                hu:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                id:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                it:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ja:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ko:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                lv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                mn:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nb:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                nl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ro:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                ru:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sl:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                sv:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                tr:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                vi:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                pt-BR:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-CN:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
                zh-TW:
                  type: article_content
                  title: How to create a new article
                  description: This article will show you how to create a new article.
                  body: This is the body of the article.
                  author_id: 1
                  state: published
                  created_at: 1663597223
                  updated_at: 1663597260
                  url: http://intercom.test/help/en/articles/3-default-language
              statistics:
                type: article_statistics
                views: 0
                conversions: 0
                reactions: 0
                happy_reaction_percentage: 0
                neutral_reaction_percentage: 0
                sad_reaction_percentage: 0
    deleteArticle:
      path: /articles/{id}
      method: DELETE
      auth: true
      docs: >-
        You can delete a single article by making a DELETE request to
        `https://api.intercom.io/articles/<id>`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the article which is given by Intercom.
      display-name: Delete an article
      response:
        docs: successful
        type: root.DeletedArticleObject
        status-code: 200
      errors:
        - root.DeleteArticleRequestUnauthorizedError
        - root.DeleteArticleRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 1
          response:
            body:
              id: '51'
              object: article
              deleted: true
    searchArticles:
      path: /articles/search
      method: GET
      auth: true
      docs: >-
        You can search for articles by making a GET request to
        `https://api.intercom.io/articles/search`.
      source:
        openapi: ../openapi.yml
      display-name: Search for articles
      request:
        name: SearchArticlesRequest
        query-parameters:
          phrase:
            type: optional<string>
            docs: The phrase within your articles to search for.
          state:
            type: optional<string>
            docs: >-
              The state of the Articles returned. One of `published`, `draft` or
              `all`.
          help_center_id:
            type: optional<integer>
            docs: The ID of the Help Center to search in.
          highlight:
            type: optional<boolean>
            docs: >-
              Return a highlighted version of the matching content within your
              articles. Refer to the response schema for more details.
      response:
        docs: Search successful
        type: ArticleSearchResponse
        status-code: 200
      errors:
        - root.SearchArticlesRequestUnauthorizedError
      examples:
        - name: Search successful
          query-parameters:
            phrase: Getting started
            state: published
          response:
            body:
              type: list
              total_count: 1
              data:
                articles:
                  - type: article
                    id: '55'
                    workspace_id: this_is_an_id61_that_should_be_at_least_4
                    title: Title 1
                    description: ''
                    body: ''
                    author_id: 991267431
                    state: draft
                    created_at: 1719492719
                    updated_at: 1719492719
                    parent_ids:
                      - 18
                      - 19
                    default_locale: en
                highlights:
                  - article_id: '123'
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 10
                total_pages: 1
  source:
    openapi: ../openapi.yml
  display-name: Articles
docs: Everything about your Articles
types:
  Article:
    docs: >-
      The Articles API is a central place to gather all information and take
      actions on your articles. Articles can live within collections and
      sections, or alternatively they can stand alone.
    properties:
      statistics:
        type: optional<root.ArticleStatistics>
    extends:
      - Articles
    source:
      openapi: ../openapi.yml
  ArticleListItemState:
    enum:
      - published
      - draft
    docs: >-
      Whether the article is `published` or is a `draft`. For multilingual
      articles, this will be the state of the default language's content.
    default: draft
    inline: true
    source:
      openapi: ../openapi.yml
  Articles:
    docs: The data returned about your articles when you list them.
    properties:
      type:
        type: optional<literal<"article">>
        docs: The type of object - `article`.
      id:
        type: optional<string>
        docs: The unique identifier for the article which is given by Intercom.
      workspace_id:
        type: optional<string>
        docs: The id of the workspace which the article belongs to.
      title:
        type: optional<string>
        docs: >-
          The title of the article. For multilingual articles, this will be the
          title of the default language's content.
      description:
        type: optional<string>
        docs: >-
          The description of the article. For multilingual articles, this will
          be the description of the default language's content.
      body:
        type: optional<string>
        docs: >-
          The body of the article in HTML. For multilingual articles, this will
          be the body of the default language's content.
      author_id:
        type: optional<integer>
        docs: >-
          The id of the author of the article. For multilingual articles, this
          will be the id of the author of the default language's content. Must
          be a teammate on the help center's workspace.
      state:
        type: optional<ArticleListItemState>
        docs: >-
          Whether the article is `published` or is a `draft`. For multilingual
          articles, this will be the state of the default language's content.
        default: draft
      created_at:
        type: optional<integer>
        docs: >-
          The time when the article was created. For multilingual articles, this
          will be the timestamp of creation of the default language's content in
          seconds.
      updated_at:
        type: optional<integer>
        docs: >-
          The time when the article was last updated. For multilingual articles,
          this will be the timestamp of last update of the default language's
          content in seconds.
      url:
        type: optional<string>
        docs: >-
          The URL of the article. For multilingual articles, this will be the
          URL of the default language's content.
      parent_id:
        type: optional<integer>
        docs: >-
          The id of the article's parent collection or section. An article
          without this field stands alone.
      parent_ids:
        type: optional<list<integer>>
        docs: >-
          The ids of the article's parent collections or sections. An article
          without this field stands alone.
      parent_type:
        type: optional<string>
        docs: The type of parent, which can either be a `collection` or `section`.
      default_locale:
        type: optional<string>
        docs: >-
          The default locale of the help center. This field is only returned for
          multilingual help centers.
      translated_content:
        type: optional<root.ArticleTranslatedContent>
    source:
      openapi: ../openapi.yml
  ArticleSearchHighlightsHighlightedTitleItemType:
    enum:
      - highlight
      - plain
    docs: The type of text - `highlight` or `plain`.
    inline: true
    source:
      openapi: ../openapi.yml
  ArticleSearchHighlightsHighlightedTitleItem:
    docs: A highlighted article title.
    properties:
      type:
        type: optional<ArticleSearchHighlightsHighlightedTitleItemType>
        docs: The type of text - `highlight` or `plain`.
      text:
        type: optional<string>
        docs: The text of the title.
    source:
      openapi: ../openapi.yml
    inline: true
  ArticleSearchHighlightsHighlightedSummaryItemItemType:
    enum:
      - highlight
      - plain
    docs: The type of text - `highlight` or `plain`.
    inline: true
    source:
      openapi: ../openapi.yml
  ArticleSearchHighlightsHighlightedSummaryItemItem:
    docs: An instance of highlighted summary text.
    properties:
      type:
        type: optional<ArticleSearchHighlightsHighlightedSummaryItemItemType>
        docs: The type of text - `highlight` or `plain`.
      text:
        type: optional<string>
        docs: The text of the title.
    source:
      openapi: ../openapi.yml
    inline: true
  ArticleSearchHighlights:
    docs: >-
      The highlighted results of an Article search. In the examples provided my
      search query is always "my query".
    properties:
      article_id:
        type: optional<string>
        docs: The ID of the corresponding article.
      highlighted_title:
        type: optional<list<ArticleSearchHighlightsHighlightedTitleItem>>
        docs: An Article title highlighted.
      highlighted_summary:
        type: >-
          optional<list<list<ArticleSearchHighlightsHighlightedSummaryItemItem>>>
        docs: An Article description and body text highlighted.
    source:
      openapi: ../openapi.yml
  ArticleSearchResponseData:
    docs: An object containing the results of the search.
    properties:
      articles:
        type: optional<list<Article>>
        docs: An array of Article objects
      highlights:
        type: optional<list<ArticleSearchHighlights>>
        docs: A corresponding array of highlighted Article content
    source:
      openapi: ../openapi.yml
    inline: true
  ArticleSearchResponse:
    docs: The results of an Article search
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of the object - `list`.
      total_count:
        type: optional<integer>
        docs: The total number of Articles matching the search query
      data:
        type: optional<ArticleSearchResponseData>
        docs: An object containing the results of the search.
      pages:
        type: optional<root.CursorPages>
    source:
      openapi: ../openapi.yml
",
    },
    "companies.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Companies",
        "imports": {
          "root": "__package__.yml",
          "segments": "segments.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Companies",
          "endpoints": {
            "ListAttachedContacts": {
              "auth": true,
              "display-name": "List attached contacts",
              "docs": "You can fetch a list of all contacts that belong to a company.",
              "errors": [
                "root.ListAttachedContactsRequestUnauthorizedError",
                "root.ListAttachedContactsRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "android_app_name": "Intercom",
                          "android_app_version": "5.0.0",
                          "android_device": "Pixel 3",
                          "android_last_seen_at": 1571672154,
                          "android_os_version": "10",
                          "android_sdk_version": "28",
                          "avatar": {
                            "type": "avatar",
                          },
                          "browser": "Chrome",
                          "browser_language": "en-US",
                          "browser_version": "80.0.3987.132",
                          "companies": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/companies",
                          },
                          "created_at": 1571672154,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "email": "joe@example.com",
                          "email_domain": "example.com",
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "formatted_phone": "+1123456789",
                          "has_hard_bounced": true,
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "ios_app_name": "Intercom",
                          "ios_app_version": "5.0.0",
                          "ios_device": "iPhone 11",
                          "ios_last_seen_at": 1571672154,
                          "ios_os_version": "13.3.1",
                          "ios_sdk_version": "13.3.1",
                          "language_override": "en",
                          "last_contacted_at": 1571672154,
                          "last_email_clicked_at": 1571672154,
                          "last_email_opened_at": 1571672154,
                          "last_replied_at": 1571672154,
                          "last_seen_at": 1571672154,
                          "marked_email_as_spam": true,
                          "name": "John Doe",
                          "notes": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                          "os": "Mac OS X",
                          "owner_id": 123,
                          "phone": "+1123456789",
                          "role": "user",
                          "signed_up_at": 1571672154,
                          "tags": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/tags",
                          },
                          "type": "contact",
                          "unsubscribed_from_emails": true,
                          "updated_at": 1571672154,
                          "workspace_id": "ecahpwf5",
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 50,
                        "total_pages": 0,
                        "type": "pages",
                      },
                      "total_count": 0,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies/{id}/contacts",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the company which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.CompanyAttachedContacts",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "ListAttachedSegmentsForCompanies": {
              "auth": true,
              "display-name": "List attached segments for companies",
              "docs": "You can fetch a list of all segments that belong to a company.",
              "errors": [
                "root.ListAttachedSegmentsForCompaniesRequestUnauthorizedError",
                "root.ListAttachedSegmentsForCompaniesRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "count": 3,
                          "created_at": 1394621988,
                          "id": "56203d253cba154d39010062",
                          "name": "Active",
                          "person_type": "contact",
                          "type": "segment",
                          "updated_at": 1394622004,
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies/{id}/segments",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the company which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.CompanyAttachedSegments",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "RetrieveACompanyById": {
              "auth": true,
              "display-name": "Retrieve a company by ID",
              "docs": "You can fetch a single company.",
              "errors": [
                "root.RetrieveACompanyByIdRequestUnauthorizedError",
                "root.RetrieveACompanyByIdRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id128_that_should_be_at_least_",
                      "company_id": "1",
                      "created_at": 1719492736,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "667d60808a68186f43bafd31",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "company1",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1719492736,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492736,
                      "user_count": 1,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the company which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "Company",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "UpdateCompany": {
              "auth": true,
              "display-name": "Update a company",
              "docs": "You can update a single company using the Intercom provisioned `id`.

{% admonition type="attention" name="Using `company_id`" %}
  When updating a company it is not possible to update `company_id`. This can only be set once upon creation of the company.
{% /admonition %}
",
              "errors": [
                "root.UpdateCompanyRequestUnauthorizedError",
                "root.UpdateCompanyRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id134_that_should_be_at_least_",
                      "company_id": "1",
                      "created_at": 1719492738,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "667d60828a68186f43bafd3b",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "company2",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1719492738,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492738,
                      "user_count": 1,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/companies/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the company which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "Company",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "attachContactToACompany": {
              "auth": true,
              "display-name": "Attach a Contact to a Company",
              "docs": "You can attach a company to a single contact.",
              "errors": [
                "root.AttachContactToACompanyRequestBadRequestError",
                "root.AttachContactToACompanyRequestUnauthorizedError",
                "root.AttachContactToACompanyRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "id": "667d608d8a68186f43bafd70",
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id166_that_should_be_at_least_",
                      "company_id": "1",
                      "created_at": 1719492749,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "667d608d8a68186f43bafd70",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "company6",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1719492749,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492749,
                      "user_count": 1,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
                {
                  "name": "Bad Request",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "id": "58a430d35458202d41b1e65b",
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id166_that_should_be_at_least_",
                      "company_id": "1",
                      "created_at": 1719492749,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "667d608d8a68186f43bafd70",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "company6",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1719492749,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492749,
                      "user_count": 1,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
                {
                  "name": "Company Not Found",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id166_that_should_be_at_least_",
                      "company_id": "1",
                      "created_at": 1719492749,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "667d608d8a68186f43bafd70",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "company6",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1719492749,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492749,
                      "user_count": 1,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/{id}/companies",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "id": {
                      "availability": undefined,
                      "docs": "The unique identifier for the company which is given by Intercom",
                      "name": "companyId",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AttachContactToACompanyRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "Company",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createOrUpdateCompany": {
              "auth": true,
              "display-name": "Create or Update a company",
              "docs": "You can create or update a company.

Companies will be only visible in Intercom when there is at least one associated user.

Companies are looked up via `company_id` in a `POST` request, if not found via `company_id`, the new company will be created, if found, that company will be updated.

{% admonition type="attention" name="Using `company_id`" %}
  You can set a unique `company_id` value when creating a company. However, it is not possible to update `company_id`. Be sure to set a unique value once upon creation of the company.
{% /admonition %}
",
              "errors": [
                "root.CreateOrUpdateCompanyRequestBadRequestError",
                "root.CreateOrUpdateCompanyRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "request": {
                    "company_id": "company_remote_id",
                    "name": "my company",
                    "remote_created_at": 1374138000,
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id116_that_should_be_at_least_",
                      "company_id": "company_remote_id",
                      "created_at": 1719492732,
                      "custom_attributes": {
                        "creation_source": "api",
                      },
                      "id": "667d607c8a68186f43bafd1e",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "my company",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1374138000,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492732,
                      "user_count": 0,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/companies",
              "request": {
                "body": {
                  "type": "optional<root.CreateOrUpdateCompanyRequest>",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "Company",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteCompany": {
              "auth": true,
              "display-name": "Delete a company",
              "docs": "You can delete a single company.",
              "errors": [
                "root.DeleteCompanyRequestUnauthorizedError",
                "root.DeleteCompanyRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "id": "5f4d3c1c-7b1b-4d7d-a97e-6095715c6632",
                  },
                  "response": {
                    "body": {
                      "deleted": true,
                      "id": "667d60848a68186f43bafd45",
                      "object": "company",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/companies/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the company which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.DeletedCompanyObject",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "detachContactFromACompany": {
              "auth": true,
              "display-name": "Detach a contact from a company",
              "docs": "You can detach a company from a single contact.",
              "errors": [
                "root.DetachContactFromACompanyRequestUnauthorizedError",
                "root.DetachContactFromACompanyRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "contact_id": "58a430d35458202d41b1e65b",
                    "id": "58a430d35458202d41b1e65b",
                  },
                  "response": {
                    "body": {
                      "app_id": "this_is_an_id174_that_should_be_at_least_",
                      "company_id": "1",
                      "created_at": 1719492753,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "667d60918a68186f43bafd80",
                      "industry": "Software",
                      "last_request_at": 1663597223,
                      "monthly_spend": 0,
                      "name": "company8",
                      "plan": {
                        "id": "269315",
                        "name": "Pro",
                        "type": "plan",
                      },
                      "remote_created_at": 1719492753,
                      "segments": {
                        "segments": [
                          {
                            "created_at": 1394621988,
                            "id": "56203d253cba154d39010062",
                            "name": "Active",
                            "updated_at": 1394622004,
                          },
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "size": 100,
                      "tags": {
                        "tags": [
                          {
                            "key": "value",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "company",
                      "updated_at": 1719492753,
                      "user_count": 0,
                      "website": "https://www.intercom.com",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/companies/{id}",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
                "id": {
                  "docs": "The unique identifier for the company which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "Company",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listAllCompanies": {
              "auth": true,
              "display-name": "List all companies",
              "docs": "You can list companies. The company list is sorted by the `last_request_at` field and by default is ordered descending, most recently requested first.

Note that the API does not include companies who have no associated users in list responses.

When using the Companies endpoint and the pages object to iterate through the returned companies, there is a limit of 10,000 Companies that can be returned. If you need to list or iterate on more than 10,000 Companies, please use the [Scroll API](https://developers.intercom.com/reference#iterating-over-all-companies).
{% admonition type="warning" name="Pagination" %}
  You can use pagination to limit the number of results returned. The default is `20` results per page.
  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.
{% /admonition %}
",
              "errors": [
                "root.ListAllCompaniesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "query-parameters": {
                    "order": "desc",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "app_id": "this_is_an_id158_that_should_be_at_least_",
                          "company_id": "remote_companies_scroll_2",
                          "created_at": 1719492746,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "id": "667d608a8a68186f43bafd61",
                          "industry": "Software",
                          "last_request_at": 1663597223,
                          "monthly_spend": 0,
                          "name": "IntercomQATest1",
                          "plan": {
                            "id": "269315",
                            "name": "Pro",
                            "type": "plan",
                          },
                          "remote_created_at": 1719492746,
                          "segments": {
                            "segments": [
                              {
                                "created_at": 1394621988,
                                "id": "56203d253cba154d39010062",
                                "name": "Active",
                                "updated_at": 1394622004,
                              },
                            ],
                            "type": "segment.list",
                          },
                          "session_count": 0,
                          "size": 100,
                          "tags": {
                            "type": "tag.list",
                          },
                          "type": "company",
                          "updated_at": 1719492746,
                          "user_count": 4,
                          "website": "https://www.intercom.com",
                        },
                      ],
                      "pages": {
                        "page": 1,
                        "per_page": 15,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/companies/list",
              "request": {
                "name": "ListAllCompaniesRequest",
                "query-parameters": {
                  "order": {
                    "docs": "`asc` or `desc`. Return the companies in ascending or descending order. Defaults to desc",
                    "type": "optional<string>",
                  },
                  "page": {
                    "docs": "The page of results to fetch. Defaults to first page",
                    "type": "optional<integer>",
                  },
                  "per_page": {
                    "docs": "How many results to return per page. Defaults to 15",
                    "type": "optional<integer>",
                  },
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.Companies",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveCompany": {
              "auth": true,
              "display-name": "Retrieve companies",
              "docs": "You can fetch a single company by passing in `company_id` or `name`.

  `https://api.intercom.io/companies?name={name}`

  `https://api.intercom.io/companies?company_id={company_id}`

You can fetch all companies and filter by `segment_id` or `tag_id` as a query parameter.

  `https://api.intercom.io/companies?tag_id={tag_id}`

  `https://api.intercom.io/companies?segment_id={segment_id}`
",
              "errors": [
                "root.RetrieveCompanyRequestUnauthorizedError",
                "root.RetrieveCompanyRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "query-parameters": {
                    "company_id": "12345",
                    "name": "my company",
                    "segment_id": "98765",
                    "tag_id": "678910",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "app_id": "this_is_an_id122_that_should_be_at_least_",
                          "company_id": "remote_companies_scroll_2",
                          "created_at": 1719492734,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "id": "667d607e8a68186f43bafd26",
                          "industry": "Software",
                          "last_request_at": 1663597223,
                          "monthly_spend": 0,
                          "name": "IntercomQATest1",
                          "plan": {
                            "id": "269315",
                            "name": "Pro",
                            "type": "plan",
                          },
                          "remote_created_at": 1719492734,
                          "segments": {
                            "segments": [
                              {
                                "created_at": 1394621988,
                                "id": "56203d253cba154d39010062",
                                "name": "Active",
                                "updated_at": 1394622004,
                              },
                            ],
                            "type": "segment.list",
                          },
                          "session_count": 0,
                          "size": 100,
                          "tags": {
                            "type": "tag.list",
                          },
                          "type": "company",
                          "updated_at": 1719492734,
                          "user_count": 4,
                          "website": "https://www.intercom.com",
                        },
                      ],
                      "pages": {
                        "page": 1,
                        "per_page": 15,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies",
              "request": {
                "name": "RetrieveCompanyRequest",
                "query-parameters": {
                  "company_id": {
                    "docs": "The `company_id` of the company to filter by.",
                    "type": "optional<string>",
                  },
                  "name": {
                    "docs": "The `name` of the company to filter by.",
                    "type": "optional<string>",
                  },
                  "page": {
                    "docs": "The page of results to fetch. Defaults to first page",
                    "type": "optional<integer>",
                  },
                  "per_page": {
                    "docs": "How many results to display per page. Defaults to 15",
                    "type": "optional<integer>",
                  },
                  "segment_id": {
                    "docs": "The `segment_id` of the company to filter by.",
                    "type": "optional<string>",
                  },
                  "tag_id": {
                    "docs": "The `tag_id` of the company to filter by.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.Companies",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "scrollOverAllCompanies": {
              "auth": true,
              "display-name": "Scroll over all companies",
              "docs": "      The `list all companies` functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.

- Each app can only have 1 scroll open at a time. You'll get an error message if you try to have more than one open per app.
- If the scroll isn't used for 1 minute, it expires and calls with that scroll param will fail
- If the end of the scroll is reached, "companies" will be empty and the scroll parameter will expire

{% admonition type="info" name="Scroll Parameter" %}
  You can get the first page of companies by simply sending a GET request to the scroll endpoint.
  For subsequent requests you will need to use the scroll parameter from the response.
{% /admonition %}
{% admonition type="danger" name="Scroll network timeouts" %}
  Since scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will see a HTTP 500 error with the following message:
  "Request failed due to an internal network error. Please restart the scroll operation."
  If this happens, you will need to restart your scroll query: It is not possible to continue from a specific point when using scroll.
{% /admonition %}
",
              "errors": [
                "root.ScrollOverAllCompaniesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "app_id": "this_is_an_id162_that_should_be_at_least_",
                          "company_id": "remote_companies_scroll_2",
                          "created_at": 1719492747,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "id": "667d608b8a68186f43bafd67",
                          "industry": "Software",
                          "last_request_at": 1663597223,
                          "monthly_spend": 0,
                          "name": "IntercomQATest1",
                          "plan": {
                            "id": "269315",
                            "name": "Pro",
                            "type": "plan",
                          },
                          "remote_created_at": 1719492747,
                          "segments": {
                            "segments": [
                              {
                                "created_at": 1394621988,
                                "id": "56203d253cba154d39010062",
                                "name": "Active",
                                "updated_at": 1394622004,
                              },
                            ],
                            "type": "segment.list",
                          },
                          "session_count": 0,
                          "size": 100,
                          "tags": {
                            "type": "tag.list",
                          },
                          "type": "company",
                          "updated_at": 1719492747,
                          "user_count": 4,
                          "website": "https://www.intercom.com",
                        },
                      ],
                      "scroll_param": "12d403b5-dc79-47b5-8ea1-01a5ac8cb6cc",
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/companies/scroll",
              "request": {
                "name": "ScrollOverAllCompaniesRequest",
                "query-parameters": {
                  "scroll_param": {
                    "docs": "",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "optional<root.CompanyScroll>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Company": {
            "docs": "Companies allow you to represent organizations using your product. Each company will have its own description and be associated with contacts. You can fetch, create, update and list companies.",
            "inline": undefined,
            "properties": {
              "app_id": {
                "docs": "The Intercom defined code of the workspace the company is associated to.",
                "type": "optional<string>",
              },
              "company_id": {
                "docs": "The company id you have defined for the company.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the company was added in Intercom.",
                "type": "optional<integer>",
              },
              "custom_attributes": {
                "docs": "The custom attributes you have set on the company.",
                "type": "optional<map<string, string>>",
              },
              "id": {
                "docs": "The Intercom defined id representing the company.",
                "type": "optional<string>",
              },
              "industry": {
                "docs": "The industry that the company operates in.",
                "type": "optional<string>",
              },
              "last_request_at": {
                "docs": "The time the company last recorded making a request.",
                "type": "optional<integer>",
              },
              "monthly_spend": {
                "docs": "How much revenue the company generates for your business.",
                "type": "optional<integer>",
              },
              "name": {
                "docs": "The name of the company.",
                "type": "optional<string>",
              },
              "plan": {
                "type": "optional<CompanyPlan>",
              },
              "remote_created_at": {
                "docs": "The time the company was created by you.",
                "type": "optional<integer>",
              },
              "segments": {
                "docs": "The list of segments associated with the company",
                "type": "optional<CompanySegments>",
              },
              "session_count": {
                "docs": "How many sessions the company has recorded.",
                "type": "optional<integer>",
              },
              "size": {
                "docs": "The number of employees in the company.",
                "type": "optional<integer>",
              },
              "tags": {
                "docs": "The list of tags associated with the company",
                "type": "optional<CompanyTags>",
              },
              "type": {
                "docs": "Value is `company`",
                "type": "optional<literal<"company">>",
              },
              "updated_at": {
                "docs": "The last time the company was updated.",
                "type": "optional<integer>",
              },
              "user_count": {
                "docs": "The number of users in the company.",
                "type": "optional<integer>",
              },
              "website": {
                "docs": "The URL for the company website.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanyPlan": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The id of the plan",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the plan",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Value is always "plan"",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanySegments": {
            "docs": "The list of segments associated with the company",
            "inline": true,
            "properties": {
              "segments": "optional<list<segments.Segment>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"segment.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CompanyTags": {
            "docs": "The list of tags associated with the company",
            "inline": true,
            "properties": {
              "tags": "optional<list<unknown>>",
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"tag.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
  segments: segments.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieveCompany:
      path: /companies
      method: GET
      auth: true
      docs: >
        You can fetch a single company by passing in `company_id` or `name`.

          `https://api.intercom.io/companies?name={name}`

          `https://api.intercom.io/companies?company_id={company_id}`

        You can fetch all companies and filter by `segment_id` or `tag_id` as a
        query parameter.

          `https://api.intercom.io/companies?tag_id={tag_id}`

          `https://api.intercom.io/companies?segment_id={segment_id}`
      source:
        openapi: ../openapi.yml
      display-name: Retrieve companies
      request:
        name: RetrieveCompanyRequest
        query-parameters:
          name:
            type: optional<string>
            docs: The `name` of the company to filter by.
          company_id:
            type: optional<string>
            docs: The `company_id` of the company to filter by.
          tag_id:
            type: optional<string>
            docs: The `tag_id` of the company to filter by.
          segment_id:
            type: optional<string>
            docs: The `segment_id` of the company to filter by.
          page:
            type: optional<integer>
            docs: The page of results to fetch. Defaults to first page
          per_page:
            type: optional<integer>
            docs: How many results to display per page. Defaults to 15
      response:
        docs: Successful
        type: root.Companies
        status-code: 200
      errors:
        - root.RetrieveCompanyRequestUnauthorizedError
        - root.RetrieveCompanyRequestNotFoundError
      examples:
        - name: Successful
          query-parameters:
            name: my company
            company_id: '12345'
            tag_id: '678910'
            segment_id: '98765'
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                per_page: 15
                total_pages: 1
              total_count: 1
              data:
                - type: company
                  id: 667d607e8a68186f43bafd26
                  name: IntercomQATest1
                  app_id: this_is_an_id122_that_should_be_at_least_
                  plan:
                    type: plan
                    id: '269315'
                    name: Pro
                  company_id: remote_companies_scroll_2
                  remote_created_at: 1719492734
                  created_at: 1719492734
                  updated_at: 1719492734
                  last_request_at: 1663597223
                  size: 100
                  website: https://www.intercom.com
                  industry: Software
                  monthly_spend: 0
                  session_count: 0
                  user_count: 4
                  custom_attributes:
                    key: value
                  tags:
                    type: tag.list
                  segments:
                    type: segment.list
                    segments:
                      - id: 56203d253cba154d39010062
                        name: Active
                        created_at: 1394621988
                        updated_at: 1394622004
    createOrUpdateCompany:
      path: /companies
      method: POST
      auth: true
      docs: >
        You can create or update a company.


        Companies will be only visible in Intercom when there is at least one
        associated user.


        Companies are looked up via `company_id` in a `POST` request, if not
        found via `company_id`, the new company will be created, if found, that
        company will be updated.


        {% admonition type="attention" name="Using `company_id`" %}
          You can set a unique `company_id` value when creating a company. However, it is not possible to update `company_id`. Be sure to set a unique value once upon creation of the company.
        {% /admonition %}
      source:
        openapi: ../openapi.yml
      display-name: Create or Update a company
      request:
        body:
          type: optional<root.CreateOrUpdateCompanyRequest>
        content-type: application/json
      response:
        docs: Successful
        type: Company
        status-code: 200
      errors:
        - root.CreateOrUpdateCompanyRequestBadRequestError
        - root.CreateOrUpdateCompanyRequestUnauthorizedError
      examples:
        - name: Successful
          request:
            name: my company
            company_id: company_remote_id
            remote_created_at: 1374138000
          response:
            body:
              type: company
              id: 667d607c8a68186f43bafd1e
              name: my company
              app_id: this_is_an_id116_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: company_remote_id
              remote_created_at: 1374138000
              created_at: 1719492732
              updated_at: 1719492732
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 0
              custom_attributes:
                creation_source: api
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
    RetrieveACompanyById:
      path: /companies/{id}
      method: GET
      auth: true
      docs: You can fetch a single company.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the company which is given by Intercom
      display-name: Retrieve a company by ID
      response:
        docs: Successful
        type: Company
        status-code: 200
      errors:
        - root.RetrieveACompanyByIdRequestUnauthorizedError
        - root.RetrieveACompanyByIdRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            id: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          response:
            body:
              type: company
              id: 667d60808a68186f43bafd31
              name: company1
              app_id: this_is_an_id128_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: '1'
              remote_created_at: 1719492736
              created_at: 1719492736
              updated_at: 1719492736
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 1
              custom_attributes:
                key: value
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
    UpdateCompany:
      path: /companies/{id}
      method: PUT
      auth: true
      docs: |
        You can update a single company using the Intercom provisioned `id`.

        {% admonition type="attention" name="Using `company_id`" %}
          When updating a company it is not possible to update `company_id`. This can only be set once upon creation of the company.
        {% /admonition %}
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the company which is given by Intercom
      display-name: Update a company
      response:
        docs: Successful
        type: Company
        status-code: 200
      errors:
        - root.UpdateCompanyRequestUnauthorizedError
        - root.UpdateCompanyRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            id: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          response:
            body:
              type: company
              id: 667d60828a68186f43bafd3b
              name: company2
              app_id: this_is_an_id134_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: '1'
              remote_created_at: 1719492738
              created_at: 1719492738
              updated_at: 1719492738
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 1
              custom_attributes:
                key: value
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
    deleteCompany:
      path: /companies/{id}
      method: DELETE
      auth: true
      docs: You can delete a single company.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the company which is given by Intercom
      display-name: Delete a company
      response:
        docs: Successful
        type: root.DeletedCompanyObject
        status-code: 200
      errors:
        - root.DeleteCompanyRequestUnauthorizedError
        - root.DeleteCompanyRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            id: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          response:
            body:
              id: 667d60848a68186f43bafd45
              object: company
              deleted: true
    ListAttachedContacts:
      path: /companies/{id}/contacts
      method: GET
      auth: true
      docs: You can fetch a list of all contacts that belong to a company.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the company which is given by Intercom
      display-name: List attached contacts
      response:
        docs: Successful
        type: root.CompanyAttachedContacts
        status-code: 200
      errors:
        - root.ListAttachedContactsRequestUnauthorizedError
        - root.ListAttachedContactsRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            id: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          response:
            body:
              type: list
              data:
                - type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                  workspace_id: ecahpwf5
                  role: user
                  email: joe@example.com
                  email_domain: example.com
                  phone: '+1123456789'
                  formatted_phone: '+1123456789'
                  name: John Doe
                  owner_id: 123
                  has_hard_bounced: true
                  marked_email_as_spam: true
                  unsubscribed_from_emails: true
                  created_at: 1571672154
                  updated_at: 1571672154
                  signed_up_at: 1571672154
                  last_seen_at: 1571672154
                  last_replied_at: 1571672154
                  last_contacted_at: 1571672154
                  last_email_opened_at: 1571672154
                  last_email_clicked_at: 1571672154
                  language_override: en
                  browser: Chrome
                  browser_version: 80.0.3987.132
                  browser_language: en-US
                  os: Mac OS X
                  android_app_name: Intercom
                  android_app_version: 5.0.0
                  android_device: Pixel 3
                  android_os_version: '10'
                  android_sdk_version: '28'
                  android_last_seen_at: 1571672154
                  ios_app_name: Intercom
                  ios_app_version: 5.0.0
                  ios_device: iPhone 11
                  ios_os_version: 13.3.1
                  ios_sdk_version: 13.3.1
                  ios_last_seen_at: 1571672154
                  custom_attributes:
                    key: value
                  avatar:
                    type: avatar
                  tags:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/tags
                    total_count: 100
                    has_more: true
                  notes:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                    total_count: 100
                    has_more: true
                  companies:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/companies
                    total_count: 100
                    has_more: true
              total_count: 0
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 50
                total_pages: 0
    ListAttachedSegmentsForCompanies:
      path: /companies/{id}/segments
      method: GET
      auth: true
      docs: You can fetch a list of all segments that belong to a company.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the company which is given by Intercom
      display-name: List attached segments for companies
      response:
        docs: Successful
        type: root.CompanyAttachedSegments
        status-code: 200
      errors:
        - root.ListAttachedSegmentsForCompaniesRequestUnauthorizedError
        - root.ListAttachedSegmentsForCompaniesRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            id: 5f4d3c1c-7b1b-4d7d-a97e-6095715c6632
          response:
            body:
              type: list
              data:
                - type: segment
                  id: 56203d253cba154d39010062
                  name: Active
                  created_at: 1394621988
                  updated_at: 1394622004
                  person_type: contact
                  count: 3
    listAllCompanies:
      path: /companies/list
      method: POST
      auth: true
      docs: >
        You can list companies. The company list is sorted by the
        `last_request_at` field and by default is ordered descending, most
        recently requested first.


        Note that the API does not include companies who have no associated
        users in list responses.


        When using the Companies endpoint and the pages object to iterate
        through the returned companies, there is a limit of 10,000 Companies
        that can be returned. If you need to list or iterate on more than 10,000
        Companies, please use the [Scroll
        API](https://developers.intercom.com/reference#iterating-over-all-companies).

        {% admonition type="warning" name="Pagination" %}
          You can use pagination to limit the number of results returned. The default is `20` results per page.
          See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.
        {% /admonition %}
      source:
        openapi: ../openapi.yml
      display-name: List all companies
      request:
        name: ListAllCompaniesRequest
        query-parameters:
          page:
            type: optional<integer>
            docs: The page of results to fetch. Defaults to first page
          per_page:
            type: optional<integer>
            docs: How many results to return per page. Defaults to 15
          order:
            type: optional<string>
            docs: >-
              `asc` or `desc`. Return the companies in ascending or descending
              order. Defaults to desc
      response:
        docs: Successful
        type: root.Companies
        status-code: 200
      errors:
        - root.ListAllCompaniesRequestUnauthorizedError
      examples:
        - name: Successful
          query-parameters:
            order: desc
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                per_page: 15
                total_pages: 1
              total_count: 1
              data:
                - type: company
                  id: 667d608a8a68186f43bafd61
                  name: IntercomQATest1
                  app_id: this_is_an_id158_that_should_be_at_least_
                  plan:
                    type: plan
                    id: '269315'
                    name: Pro
                  company_id: remote_companies_scroll_2
                  remote_created_at: 1719492746
                  created_at: 1719492746
                  updated_at: 1719492746
                  last_request_at: 1663597223
                  size: 100
                  website: https://www.intercom.com
                  industry: Software
                  monthly_spend: 0
                  session_count: 0
                  user_count: 4
                  custom_attributes:
                    key: value
                  tags:
                    type: tag.list
                  segments:
                    type: segment.list
                    segments:
                      - id: 56203d253cba154d39010062
                        name: Active
                        created_at: 1394621988
                        updated_at: 1394622004
    scrollOverAllCompanies:
      path: /companies/scroll
      method: GET
      auth: true
      docs: >2
              The `list all companies` functionality does not work well for huge datasets, and can result in errors and performance problems when paging deeply. The Scroll API provides an efficient mechanism for iterating over all companies in a dataset.

        - Each app can only have 1 scroll open at a time. You'll get an error
        message if you try to have more than one open per app.

        - If the scroll isn't used for 1 minute, it expires and calls with that
        scroll param will fail

        - If the end of the scroll is reached, "companies" will be empty and the
        scroll parameter will expire


        {% admonition type="info" name="Scroll Parameter" %}
          You can get the first page of companies by simply sending a GET request to the scroll endpoint.
          For subsequent requests you will need to use the scroll parameter from the response.
        {% /admonition %}

        {% admonition type="danger" name="Scroll network timeouts" %}
          Since scroll is often used on large datasets network errors such as timeouts can be encountered. When this occurs you will see a HTTP 500 error with the following message:
          "Request failed due to an internal network error. Please restart the scroll operation."
          If this happens, you will need to restart your scroll query: It is not possible to continue from a specific point when using scroll.
        {% /admonition %}
      source:
        openapi: ../openapi.yml
      display-name: Scroll over all companies
      request:
        name: ScrollOverAllCompaniesRequest
        query-parameters:
          scroll_param:
            type: optional<string>
            docs: ''
      response:
        docs: Successful
        type: optional<root.CompanyScroll>
        status-code: 200
      errors:
        - root.ScrollOverAllCompaniesRequestUnauthorizedError
      examples:
        - name: Successful
          response:
            body:
              type: list
              data:
                - type: company
                  id: 667d608b8a68186f43bafd67
                  name: IntercomQATest1
                  app_id: this_is_an_id162_that_should_be_at_least_
                  plan:
                    type: plan
                    id: '269315'
                    name: Pro
                  company_id: remote_companies_scroll_2
                  remote_created_at: 1719492747
                  created_at: 1719492747
                  updated_at: 1719492747
                  last_request_at: 1663597223
                  size: 100
                  website: https://www.intercom.com
                  industry: Software
                  monthly_spend: 0
                  session_count: 0
                  user_count: 4
                  custom_attributes:
                    key: value
                  tags:
                    type: tag.list
                  segments:
                    type: segment.list
                    segments:
                      - id: 56203d253cba154d39010062
                        name: Active
                        created_at: 1394621988
                        updated_at: 1394622004
              scroll_param: 12d403b5-dc79-47b5-8ea1-01a5ac8cb6cc
    attachContactToACompany:
      path: /contacts/{id}/companies
      method: POST
      auth: true
      docs: You can attach a company to a single contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
      display-name: Attach a Contact to a Company
      request:
        name: AttachContactToACompanyRequest
        body:
          properties:
            id:
              type: string
              docs: The unique identifier for the company which is given by Intercom
              name: companyId
        content-type: application/json
      response:
        docs: Successful
        type: Company
        status-code: 200
      errors:
        - root.AttachContactToACompanyRequestBadRequestError
        - root.AttachContactToACompanyRequestUnauthorizedError
        - root.AttachContactToACompanyRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            id: id
          request:
            id: 667d608d8a68186f43bafd70
          response:
            body:
              type: company
              id: 667d608d8a68186f43bafd70
              name: company6
              app_id: this_is_an_id166_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: '1'
              remote_created_at: 1719492749
              created_at: 1719492749
              updated_at: 1719492749
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 1
              custom_attributes:
                key: value
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
        - name: Bad Request
          path-parameters:
            id: id
          request:
            id: 58a430d35458202d41b1e65b
          response:
            body:
              type: company
              id: 667d608d8a68186f43bafd70
              name: company6
              app_id: this_is_an_id166_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: '1'
              remote_created_at: 1719492749
              created_at: 1719492749
              updated_at: 1719492749
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 1
              custom_attributes:
                key: value
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
        - name: Company Not Found
          path-parameters:
            id: id
          request:
            id: '123'
          response:
            body:
              type: company
              id: 667d608d8a68186f43bafd70
              name: company6
              app_id: this_is_an_id166_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: '1'
              remote_created_at: 1719492749
              created_at: 1719492749
              updated_at: 1719492749
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 1
              custom_attributes:
                key: value
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
    detachContactFromACompany:
      path: /contacts/{contact_id}/companies/{id}
      method: DELETE
      auth: true
      docs: You can detach a company from a single contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
        id:
          type: string
          docs: The unique identifier for the company which is given by Intercom
      display-name: Detach a contact from a company
      response:
        docs: Successful
        type: Company
        status-code: 200
      errors:
        - root.DetachContactFromACompanyRequestUnauthorizedError
        - root.DetachContactFromACompanyRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            contact_id: 58a430d35458202d41b1e65b
            id: 58a430d35458202d41b1e65b
          response:
            body:
              type: company
              id: 667d60918a68186f43bafd80
              name: company8
              app_id: this_is_an_id174_that_should_be_at_least_
              plan:
                type: plan
                id: '269315'
                name: Pro
              company_id: '1'
              remote_created_at: 1719492753
              created_at: 1719492753
              updated_at: 1719492753
              last_request_at: 1663597223
              size: 100
              website: https://www.intercom.com
              industry: Software
              monthly_spend: 0
              session_count: 0
              user_count: 0
              custom_attributes:
                key: value
              tags:
                type: tag.list
                tags:
                  - key: value
              segments:
                type: segment.list
                segments:
                  - id: 56203d253cba154d39010062
                    name: Active
                    created_at: 1394621988
                    updated_at: 1394622004
  source:
    openapi: ../openapi.yml
  display-name: Companies
docs: Everything about your Companies
types:
  CompanyPlan:
    properties:
      type:
        type: optional<string>
        docs: Value is always "plan"
      id:
        type: optional<string>
        docs: The id of the plan
      name:
        type: optional<string>
        docs: The name of the plan
    source:
      openapi: ../openapi.yml
    inline: true
  CompanyTags:
    docs: The list of tags associated with the company
    properties:
      type:
        type: optional<literal<"tag.list">>
        docs: The type of the object
      tags: optional<list<unknown>>
    source:
      openapi: ../openapi.yml
    inline: true
  CompanySegments:
    docs: The list of segments associated with the company
    properties:
      type:
        type: optional<literal<"segment.list">>
        docs: The type of the object
      segments: optional<list<segments.Segment>>
    source:
      openapi: ../openapi.yml
    inline: true
  Company:
    docs: >-
      Companies allow you to represent organizations using your product. Each
      company will have its own description and be associated with contacts. You
      can fetch, create, update and list companies.
    properties:
      type:
        type: optional<literal<"company">>
        docs: Value is `company`
      id:
        type: optional<string>
        docs: The Intercom defined id representing the company.
      name:
        type: optional<string>
        docs: The name of the company.
      app_id:
        type: optional<string>
        docs: >-
          The Intercom defined code of the workspace the company is associated
          to.
      plan:
        type: optional<CompanyPlan>
      company_id:
        type: optional<string>
        docs: The company id you have defined for the company.
      remote_created_at:
        type: optional<integer>
        docs: The time the company was created by you.
      created_at:
        type: optional<integer>
        docs: The time the company was added in Intercom.
      updated_at:
        type: optional<integer>
        docs: The last time the company was updated.
      last_request_at:
        type: optional<integer>
        docs: The time the company last recorded making a request.
      size:
        type: optional<integer>
        docs: The number of employees in the company.
      website:
        type: optional<string>
        docs: The URL for the company website.
      industry:
        type: optional<string>
        docs: The industry that the company operates in.
      monthly_spend:
        type: optional<integer>
        docs: How much revenue the company generates for your business.
      session_count:
        type: optional<integer>
        docs: How many sessions the company has recorded.
      user_count:
        type: optional<integer>
        docs: The number of users in the company.
      custom_attributes:
        type: optional<map<string, string>>
        docs: The custom attributes you have set on the company.
      tags:
        type: optional<CompanyTags>
        docs: The list of tags associated with the company
      segments:
        type: optional<CompanySegments>
        docs: The list of segments associated with the company
    source:
      openapi: ../openapi.yml
",
    },
    "contacts.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your contacts",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Contacts",
          "endpoints": {
            "ArchiveContact": {
              "auth": true,
              "display-name": "Archive contact",
              "docs": "You can archive a single contact.",
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "63a07ddf05a32042dffac965",
                  },
                  "response": {
                    "body": {
                      "archived": true,
                      "external_id": "70",
                      "id": "667d60b18a68186f43bafdc0",
                      "type": "contact",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/{id}/archive",
              "path-parameters": {
                "id": {
                  "docs": "id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.ContactArchived",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "CreateContact": {
              "auth": true,
              "display-name": "Create contact",
              "docs": "You can create a new contact (ie. user or lead).",
              "errors": [
                "root.CreateContactRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "email": "joebloggs@intercom.io",
                  },
                  "response": {
                    "body": {
                      "companies": {
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60b08a68186f43bafdbf/companies",
                      },
                      "created_at": 1719492784,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "joebloggs@intercom.io",
                      "email_domain": "example.com",
                      "formatted_phone": "+1123456789",
                      "has_hard_bounced": false,
                      "id": "667d60b08a68186f43bafdbf",
                      "location": {
                        "type": "location",
                      },
                      "marked_email_as_spam": false,
                      "notes": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60b08a68186f43bafdbf/notes",
                      },
                      "role": "user",
                      "social_profiles": {
                        "data": [
                          {
                            "name": "Facebook",
                            "type": "social_profile",
                            "url": "http://twitter.com/th1sland",
                          },
                        ],
                      },
                      "tags": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60b08a68186f43bafdbf/tags",
                      },
                      "type": "contact",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719492784,
                      "workspace_id": "this_is_an_id272_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts",
              "request": {
                "body": "root.CreateContactRequestTwo",
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Contact",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "DeleteContact": {
              "auth": true,
              "display-name": "Delete a contact",
              "docs": "You can delete a single contact.",
              "errors": [
                "root.DeleteContactRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "deleted": true,
                      "external_id": "70",
                      "id": "667d60aa8a68186f43bafdba",
                      "type": "contact",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contacts/{id}",
              "path-parameters": {
                "id": {
                  "docs": "id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.ContactDeleted",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "ListContacts": {
              "auth": true,
              "display-name": "List all contacts",
              "docs": "You can fetch a list of all contacts (ie. users or leads) in your workspace.
{% admonition type="warning" name="Pagination" %}
  You can use pagination to limit the number of results returned. The default is `50` results per page.
  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.
{% /admonition %}
",
              "errors": [
                "root.ListContactsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "android_app_name": "Intercom",
                          "android_app_version": "5.0.0",
                          "android_device": "Pixel 3",
                          "android_last_seen_at": 1571672154,
                          "android_os_version": "10",
                          "android_sdk_version": "28",
                          "avatar": {
                            "type": "avatar",
                          },
                          "browser": "Chrome",
                          "browser_language": "en-US",
                          "browser_version": "80.0.3987.132",
                          "companies": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/companies",
                          },
                          "created_at": 1571672154,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "email": "joe@example.com",
                          "email_domain": "example.com",
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "formatted_phone": "+1123456789",
                          "has_hard_bounced": true,
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "ios_app_name": "Intercom",
                          "ios_app_version": "5.0.0",
                          "ios_device": "iPhone 11",
                          "ios_last_seen_at": 1571672154,
                          "ios_os_version": "13.3.1",
                          "ios_sdk_version": "13.3.1",
                          "language_override": "en",
                          "last_contacted_at": 1571672154,
                          "last_email_clicked_at": 1571672154,
                          "last_email_opened_at": 1571672154,
                          "last_replied_at": 1571672154,
                          "last_seen_at": 1571672154,
                          "marked_email_as_spam": true,
                          "name": "John Doe",
                          "notes": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                          "os": "Mac OS X",
                          "owner_id": 123,
                          "phone": "+1123456789",
                          "role": "user",
                          "signed_up_at": 1571672154,
                          "tags": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/tags",
                          },
                          "type": "contact",
                          "unsubscribed_from_emails": true,
                          "updated_at": 1571672154,
                          "workspace_id": "ecahpwf5",
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 10,
                        "total_pages": 0,
                        "type": "pages",
                      },
                      "total_count": 0,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contacts",
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.ContactList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "MergeContact": {
              "auth": true,
              "display-name": "Merge a lead and a user",
              "docs": "You can merge a contact with a `role` of `lead` into a contact with a `role` of `user`.",
              "errors": [
                "root.MergeContactRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "from": "667d60ac8a68186f43bafdbb",
                    "into": "667d60ac8a68186f43bafdbc",
                  },
                  "response": {
                    "body": {
                      "companies": {
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60ac8a68186f43bafdbc/companies",
                      },
                      "created_at": 1719492780,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "joe@bloggs.com",
                      "email_domain": "example.com",
                      "external_id": "70",
                      "formatted_phone": "+1123456789",
                      "has_hard_bounced": false,
                      "id": "667d60ac8a68186f43bafdbc",
                      "location": {
                        "type": "location",
                      },
                      "marked_email_as_spam": false,
                      "name": "Joe Bloggs",
                      "notes": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60ac8a68186f43bafdbc/notes",
                      },
                      "role": "user",
                      "signed_up_at": 1719492780,
                      "social_profiles": {
                        "data": [
                          {
                            "name": "Facebook",
                            "type": "social_profile",
                            "url": "http://twitter.com/th1sland",
                          },
                        ],
                      },
                      "tags": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60ac8a68186f43bafdbc/tags",
                      },
                      "type": "contact",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719492780,
                      "workspace_id": "this_is_an_id260_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/merge",
              "request": {
                "body": {
                  "properties": {
                    "from": {
                      "docs": "The unique identifier for the contact to merge away from. Must be a lead.",
                      "type": "optional<string>",
                    },
                    "into": {
                      "docs": "The unique identifier for the contact to merge into. Must be a user.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "MergeContactsRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Contact",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "SearchContacts": {
              "auth": true,
              "display-name": "Search contacts",
              "docs": "You can search for multiple contacts by the value of their attributes in order to fetch exactly who you want.

To search for contacts, you need to send a `POST` request to `https://api.intercom.io/contacts/search`.

This will accept a query object in the body which will define your filters in order to search for contacts.

{% admonition type="warning" name="Optimizing search queries" %}
  Search queries can be complex, so optimizing them can help the performance of your search.
  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize
  pagination to limit the number of results returned. The default is `50` results per page.
  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.
{% /admonition %}
### Contact Creation Delay

If a contact has recently been created, there is a possibility that it will not yet be available when searching. This means that it may not appear in the response. This delay can take a few minutes. If you need to be instantly notified it is recommended to use webhooks and iterate to see if they match your search filters.

### Nesting & Limitations

You can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).
There are some limitations to the amount of multiple's there can be:
* There's a limit of max 2 nested filters
* There's a limit of max 15 filters for each AND or OR group

### Searching for Timestamp Fields

All timestamp fields (created_at, updated_at etc.) are indexed as Dates for Contact Search queries; Datetime queries are not currently supported. This means you can only query for timestamp fields by day - not hour, minute or second.
For example, if you search for all Contacts with a created_at value greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020 9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020 12:00 AM). The search results will then include Contacts created from January 2nd, 2020 12:00 AM onwards.
If you'd like to get contacts created on January 1st, 2020 you should search with a created_at value equal (=) to 1577836800 (January 1st, 2020 12:00 AM).
This behaviour applies only to timestamps used in search queries. The search results will still contain the full UNIX timestamp and be sorted accordingly.

### Accepted Fields

Most key listed as part of the Contacts Model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `"foorbar"`).

| Field                              | Type                           |
| ---------------------------------- | ------------------------------ |
| id                                 | String                         |
| role                               | String<br>Accepts user or lead |
| name                               | String                         |
| avatar                             | String                         |
| owner_id                           | Integer                        |
| email                              | String                         |
| email_domain                       | String                         |
| phone                              | String                         |
| formatted_phone                    | String                         |
| external_id                        | String                         |
| created_at                         | Date (UNIX Timestamp)          |
| signed_up_at                       | Date (UNIX Timestamp)          |
| updated_at                         | Date (UNIX Timestamp)          |
| last_seen_at                       | Date (UNIX Timestamp)          |
| last_contacted_at                  | Date (UNIX Timestamp)          |
| last_replied_at                    | Date (UNIX Timestamp)          |
| last_email_opened_at               | Date (UNIX Timestamp)          |
| last_email_clicked_at              | Date (UNIX Timestamp)          |
| language_override                  | String                         |
| browser                            | String                         |
| browser_language                   | String                         |
| os                                 | String                         |
| location.country                   | String                         |
| location.region                    | String                         |
| location.city                      | String                         |
| unsubscribed_from_emails           | Boolean                        |
| marked_email_as_spam               | Boolean                        |
| has_hard_bounced                   | Boolean                        |
| ios_last_seen_at                   | Date (UNIX Timestamp)          |
| ios_app_version                    | String                         |
| ios_device                         | String                         |
| ios_app_device                     | String                         |
| ios_os_version                     | String                         |
| ios_app_name                       | String                         |
| ios_sdk_version                    | String                         |
| android_last_seen_at               | Date (UNIX Timestamp)          |
| android_app_version                | String                         |
| android_device                     | String                         |
| android_app_name                   | String                         |
| andoid_sdk_version                 | String                         |
| segment_id                         | String                         |
| tag_id                             | String                         |
| custom_attributes.{attribute_name} | String                         |

### Accepted Operators

{% admonition type="attention" name="Searching based on `created_at`" %}
  You cannot use the `<=` or `>=` operators to search by `created_at`.
{% /admonition %}

The table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`"="`). The operator has to be compatible with the field's type (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).

| Operator | Valid Types                      | Description                                                      |
| :------- | :------------------------------- | :--------------------------------------------------------------- |
| =        | All                              | Equals                                                           |
| !=       | All                              | Doesn't Equal                                                    |
| IN       | All                              | In<br>Shortcut for `OR` queries<br>Values must be in Array       |
| NIN      | All                              | Not In<br>Shortcut for `OR !` queries<br>Values must be in Array |
| >        | Integer<br>Date (UNIX Timestamp) | Greater than                                                     |
| <       | Integer<br>Date (UNIX Timestamp) | Lower than                                                       |
| ~        | String                           | Contains                                                         |
| !~       | String                           | Doesn't Contain                                                  |
| ^        | String                           | Starts With                                                      |
| $        | String                           | Ends With                                                        |
",
              "errors": [
                "root.SearchContactsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "pagination": {
                      "per_page": 5,
                    },
                    "query": {
                      "operator": "AND",
                      "value": [
                        {
                          "field": "created_at",
                          "operator": ">",
                          "value": "1306054154",
                        },
                      ],
                    },
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "android_app_name": "Intercom",
                          "android_app_version": "5.0.0",
                          "android_device": "Pixel 3",
                          "android_last_seen_at": 1571672154,
                          "android_os_version": "10",
                          "android_sdk_version": "28",
                          "avatar": {
                            "type": "avatar",
                          },
                          "browser": "Chrome",
                          "browser_language": "en-US",
                          "browser_version": "80.0.3987.132",
                          "companies": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/companies",
                          },
                          "created_at": 1571672154,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "email": "joe@example.com",
                          "email_domain": "example.com",
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "formatted_phone": "+1123456789",
                          "has_hard_bounced": true,
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "ios_app_name": "Intercom",
                          "ios_app_version": "5.0.0",
                          "ios_device": "iPhone 11",
                          "ios_last_seen_at": 1571672154,
                          "ios_os_version": "13.3.1",
                          "ios_sdk_version": "13.3.1",
                          "language_override": "en",
                          "last_contacted_at": 1571672154,
                          "last_email_clicked_at": 1571672154,
                          "last_email_opened_at": 1571672154,
                          "last_replied_at": 1571672154,
                          "last_seen_at": 1571672154,
                          "marked_email_as_spam": true,
                          "name": "John Doe",
                          "notes": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                          "os": "Mac OS X",
                          "owner_id": 123,
                          "phone": "+1123456789",
                          "role": "user",
                          "signed_up_at": 1571672154,
                          "tags": {
                            "has_more": true,
                            "total_count": 100,
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/tags",
                          },
                          "type": "contact",
                          "unsubscribed_from_emails": true,
                          "updated_at": 1571672154,
                          "workspace_id": "ecahpwf5",
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 5,
                        "total_pages": 0,
                        "type": "pages",
                      },
                      "total_count": 0,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/search",
              "request": {
                "body": {
                  "type": "root.SearchRequest",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.ContactList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "ShowContact": {
              "auth": true,
              "display-name": "Get a contact",
              "docs": "You can fetch the details of a single contact.",
              "errors": [
                "root.ShowContactRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "63a07ddf05a32042dffac965",
                  },
                  "response": {
                    "body": {
                      "companies": {
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60a98a68186f43bafdb9/companies",
                      },
                      "created_at": 1719492777,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "joe@bloggs.com",
                      "email_domain": "example.com",
                      "external_id": "70",
                      "formatted_phone": "+1123456789",
                      "has_hard_bounced": false,
                      "id": "667d60a98a68186f43bafdb9",
                      "location": {
                        "type": "location",
                      },
                      "marked_email_as_spam": false,
                      "name": "Joe Bloggs",
                      "notes": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60a98a68186f43bafdb9/notes",
                      },
                      "role": "user",
                      "signed_up_at": 1719492777,
                      "social_profiles": {
                        "data": [
                          {
                            "name": "Facebook",
                            "type": "social_profile",
                            "url": "http://twitter.com/th1sland",
                          },
                        ],
                      },
                      "tags": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60a98a68186f43bafdb9/tags",
                      },
                      "type": "contact",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719492777,
                      "workspace_id": "this_is_an_id252_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contacts/{id}",
              "path-parameters": {
                "id": {
                  "docs": "id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Contact",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "UnarchiveContact": {
              "auth": true,
              "display-name": "Unarchive contact",
              "docs": "You can unarchive a single contact.",
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "63a07ddf05a32042dffac965",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "external_id": "70",
                      "id": "667d60b28a68186f43bafdc1",
                      "type": "contact",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/{id}/unarchive",
              "path-parameters": {
                "id": {
                  "docs": "id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.ContactUnarchived",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "UpdateContact": {
              "auth": true,
              "display-name": "Update a contact",
              "docs": "You can update an existing contact (ie. user or lead).",
              "errors": [
                "root.UpdateContactRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "63a07ddf05a32042dffac965",
                  },
                  "request": {
                    "email": "joebloggs@intercom.io",
                    "name": "joe bloggs",
                  },
                  "response": {
                    "body": {
                      "companies": {
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60a88a68186f43bafdb8/companies",
                      },
                      "created_at": 1719492776,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "joebloggs@intercom.io",
                      "email_domain": "example.com",
                      "external_id": "70",
                      "formatted_phone": "+1123456789",
                      "has_hard_bounced": false,
                      "id": "667d60a88a68186f43bafdb8",
                      "location": {
                        "type": "location",
                      },
                      "marked_email_as_spam": false,
                      "name": "joe bloggs",
                      "notes": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60a88a68186f43bafdb8/notes",
                      },
                      "role": "user",
                      "signed_up_at": 1719492776,
                      "social_profiles": {
                        "data": [
                          {
                            "name": "Facebook",
                            "type": "social_profile",
                            "url": "http://twitter.com/th1sland",
                          },
                        ],
                      },
                      "tags": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d60a88a68186f43bafdb8/tags",
                      },
                      "type": "contact",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719492776,
                      "workspace_id": "this_is_an_id248_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/contacts/{id}",
              "path-parameters": {
                "id": {
                  "docs": "id",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "avatar": {
                      "docs": "An image URL containing the avatar of a contact",
                      "type": "optional<string>",
                    },
                    "custom_attributes": {
                      "docs": "The custom attributes which are set for the contact",
                      "type": "optional<map<string, unknown>>",
                    },
                    "email": {
                      "docs": "The contacts email",
                      "type": "optional<string>",
                    },
                    "external_id": {
                      "docs": "A unique identifier for the contact which is given to Intercom",
                      "type": "optional<string>",
                    },
                    "last_seen_at": {
                      "docs": "The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually)",
                      "type": "optional<integer>",
                    },
                    "name": {
                      "docs": "The contacts name",
                      "type": "optional<string>",
                    },
                    "owner_id": {
                      "docs": "The id of an admin that has been assigned account ownership of the contact",
                      "type": "optional<integer>",
                    },
                    "phone": {
                      "docs": "The contacts phone",
                      "type": "optional<string>",
                    },
                    "role": {
                      "docs": "The role of the contact.",
                      "type": "optional<string>",
                    },
                    "signed_up_at": {
                      "docs": "The time specified for when a contact signed up",
                      "type": "optional<integer>",
                    },
                    "unsubscribed_from_emails": {
                      "docs": "Whether the contact is unsubscribed from emails",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateContactRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Contact",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listCompaniesForAContact": {
              "auth": true,
              "display-name": "List attached companies for contact",
              "docs": "You can fetch a list of companies that are associated to a contact.",
              "errors": [
                "root.ListCompaniesForAContactRequestUnauthorizedError",
                "root.ListCompaniesForAContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "63a07ddf05a32042dffac965",
                  },
                  "response": {
                    "body": {
                      "companies": [
                        {
                          "app_id": "ecahpwf5",
                          "company_id": "6",
                          "created_at": 1663597223,
                          "custom_attributes": {
                            "monthly_spend": "custom_attributes",
                            "paid_subscriber": "custom_attributes",
                            "team_mates": "custom_attributes",
                          },
                          "id": "531ee472cce572a6ec000006",
                          "industry": "Software",
                          "last_request_at": 1663597223,
                          "monthly_spend": 100,
                          "name": "Blue Sun",
                          "plan": {
                            "id": "269315",
                            "name": "Pro",
                            "type": "plan",
                          },
                          "remote_created_at": 1663597223,
                          "session_count": 100,
                          "size": 100,
                          "type": "company",
                          "updated_at": 1663597223,
                          "user_count": 100,
                          "website": "https://www.intercom.com",
                        },
                      ],
                      "pages": {
                        "page": 1,
                        "per_page": 50,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contacts/{id}/companies",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.ContactAttachedCompanies",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listSegmentsForAContact": {
              "auth": true,
              "display-name": "List attached segments for contact",
              "docs": "You can fetch a list of segments that are associated to a contact.",
              "errors": [
                "root.ListSegmentsForAContactRequestUnauthorizedError",
                "root.ListSegmentsForAContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "count": 3,
                          "created_at": 1719492761,
                          "id": "667d60998a68186f43bafda1",
                          "name": "segment",
                          "person_type": "user",
                          "type": "segment",
                          "updated_at": 1719492761,
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/segments",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.Segments",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listSubscriptionsForAContact": {
              "auth": true,
              "display-name": "List subscriptions for a contact",
              "docs": "You can fetch a list of subscription types that are attached to a contact. These can be subscriptions that a user has 'opted-in' to or has 'opted-out' from, depending on the subscription type.
This will return a list of Subscription Type objects that the contact is associated with.

The data property will show a combined list of:

  1.Opt-out subscription types that the user has opted-out from.
  2.Opt-in subscription types that the user has opted-in to receiving.
",
              "errors": [
                "root.ListSubscriptionsForAContactRequestUnauthorizedError",
                "root.ListSubscriptionsForAContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "consent_type": "opt_out",
                          "content_types": [
                            "email",
                          ],
                          "default_translation": {
                            "description": "Lorem ipsum dolor sit amet",
                            "locale": "en",
                            "name": "Newsletters",
                          },
                          "id": "93",
                          "state": "live",
                          "translations": [
                            {
                              "description": "Lorem ipsum dolor sit amet",
                              "locale": "en",
                              "name": "Newsletters",
                            },
                          ],
                          "type": "subscription",
                        },
                        {
                          "consent_type": "opt_in",
                          "content_types": [
                            "sms_message",
                          ],
                          "default_translation": {
                            "description": "Lorem ipsum dolor sit amet",
                            "locale": "en",
                            "name": "Newsletters",
                          },
                          "id": "95",
                          "state": "live",
                          "translations": [
                            {
                              "description": "Lorem ipsum dolor sit amet",
                              "locale": "en",
                              "name": "Newsletters",
                            },
                          ],
                          "type": "subscription",
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/subscriptions",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.SubscriptionTypeList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listTagsForAContact": {
              "auth": true,
              "display-name": "List tags attached to a contact",
              "docs": "You can fetch a list of all tags that are attached to a specific contact.",
              "errors": [
                "root.ListTagsForAContactRequestUnauthorizedError",
                "root.ListTagsForAContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "applied_at": 1663597223,
                          "applied_by": {
                            "type": "contact",
                          },
                          "id": "93",
                          "name": "Manual tag",
                          "type": "tag",
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/tags",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.Tags",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Contact": {
            "docs": "Contact are the objects that represent your leads and users in Intercom.",
            "inline": undefined,
            "properties": {
              "android_app_name": {
                "docs": "The name of the Android app which the contact is using.",
                "type": "optional<string>",
              },
              "android_app_version": {
                "docs": "The version of the Android app which the contact is using.",
                "type": "optional<string>",
              },
              "android_device": {
                "docs": "The Android device which the contact is using.",
                "type": "optional<string>",
              },
              "android_last_seen_at": {
                "docs": "(UNIX timestamp) The time when the contact was last seen on an Android device.",
                "type": "optional<integer>",
              },
              "android_os_version": {
                "docs": "The version of the Android OS which the contact is using.",
                "type": "optional<string>",
              },
              "android_sdk_version": {
                "docs": "The version of the Android SDK which the contact is using.",
                "type": "optional<string>",
              },
              "avatar": {
                "type": "optional<ContactAvatar>",
              },
              "browser": {
                "docs": "The name of the browser which the contact is using.",
                "type": "optional<string>",
              },
              "browser_language": {
                "docs": "The language set by the browser which the contact is using.",
                "type": "optional<string>",
              },
              "browser_version": {
                "docs": "The version of the browser which the contact is using.",
                "type": "optional<string>",
              },
              "companies": {
                "type": "optional<root.ContactCompanies>",
              },
              "created_at": {
                "docs": "(UNIX timestamp) The time when the contact was created.",
                "type": "optional<integer>",
              },
              "custom_attributes": {
                "docs": "The custom attributes which are set for the contact.",
                "type": "optional<map<string, unknown>>",
              },
              "email": {
                "docs": "The contact's email.",
                "type": "optional<string>",
              },
              "email_domain": {
                "docs": "The contact's email domain.",
                "type": "optional<string>",
              },
              "external_id": {
                "docs": "The unique identifier for the contact which is provided by the Client.",
                "type": "optional<string>",
              },
              "formatted_phone": {
                "docs": "The contacts phone number normalized to the E164 format",
                "type": "optional<string>",
              },
              "has_hard_bounced": {
                "docs": "Whether the contact has had an email sent to them hard bounce.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the contact which is given by Intercom.",
                "type": "optional<string>",
              },
              "ios_app_name": {
                "docs": "The name of the iOS app which the contact is using.",
                "type": "optional<string>",
              },
              "ios_app_version": {
                "docs": "The version of the iOS app which the contact is using.",
                "type": "optional<string>",
              },
              "ios_device": {
                "docs": "The iOS device which the contact is using.",
                "type": "optional<string>",
              },
              "ios_last_seen_at": {
                "docs": "(UNIX timestamp) The last time the contact used the iOS app.",
                "type": "optional<integer>",
              },
              "ios_os_version": {
                "docs": "The version of iOS which the contact is using.",
                "type": "optional<string>",
              },
              "ios_sdk_version": {
                "docs": "The version of the iOS SDK which the contact is using.",
                "type": "optional<string>",
              },
              "language_override": {
                "docs": "A preferred language setting for the contact, used by the Intercom Messenger even if their browser settings change.",
                "type": "optional<string>",
              },
              "last_contacted_at": {
                "docs": "(UNIX timestamp) The time when the contact was last messaged.",
                "type": "optional<integer>",
              },
              "last_email_clicked_at": {
                "docs": "(UNIX timestamp) The time when the contact last clicked a link in an email.",
                "type": "optional<integer>",
              },
              "last_email_opened_at": {
                "docs": "(UNIX timestamp) The time when the contact last opened an email.",
                "type": "optional<integer>",
              },
              "last_replied_at": {
                "docs": "(UNIX timestamp) The time when the contact last messaged in.",
                "type": "optional<integer>",
              },
              "last_seen_at": {
                "docs": "(UNIX timestamp) The time when the contact was last seen (either where the Intercom Messenger was installed or when specified manually).",
                "type": "optional<integer>",
              },
              "location": {
                "type": "optional<root.ContactLocation>",
              },
              "marked_email_as_spam": {
                "docs": "Whether the contact has marked an email sent to them as spam.",
                "type": "optional<boolean>",
              },
              "name": {
                "docs": "The contacts name.",
                "type": "optional<string>",
              },
              "notes": {
                "type": "optional<root.ContactNotes>",
              },
              "os": {
                "docs": "The operating system which the contact is using.",
                "type": "optional<string>",
              },
              "owner_id": {
                "docs": "The id of an admin that has been assigned account ownership of the contact.",
                "type": "optional<integer>",
              },
              "phone": {
                "docs": "The contacts phone.",
                "type": "optional<string>",
              },
              "role": {
                "docs": "The role of the contact.",
                "type": "optional<string>",
              },
              "signed_up_at": {
                "docs": "(UNIX timestamp) The time specified for when a contact signed up.",
                "type": "optional<integer>",
              },
              "social_profiles": {
                "type": "optional<root.ContactSocialProfiles>",
              },
              "tags": {
                "type": "optional<root.ContactTags>",
              },
              "type": {
                "docs": "The type of object.",
                "type": "optional<string>",
              },
              "unsubscribed_from_emails": {
                "docs": "Whether the contact is unsubscribed from emails.",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "(UNIX timestamp) The time when the contact was last updated.",
                "type": "optional<integer>",
              },
              "workspace_id": {
                "docs": "The id of the workspace which the contact belongs to.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ContactAvatar": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "image_url": {
                "docs": "An image URL containing the avatar of a contact.",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "type": {
                "docs": "The type of object",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listCompaniesForAContact:
      path: /contacts/{id}/companies
      method: GET
      auth: true
      docs: You can fetch a list of companies that are associated to a contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
      display-name: List attached companies for contact
      response:
        docs: successful
        type: root.ContactAttachedCompanies
        status-code: 200
      errors:
        - root.ListCompaniesForAContactRequestUnauthorizedError
        - root.ListCompaniesForAContactRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 63a07ddf05a32042dffac965
          response:
            body:
              type: list
              companies:
                - type: company
                  id: 531ee472cce572a6ec000006
                  name: Blue Sun
                  app_id: ecahpwf5
                  plan:
                    type: plan
                    id: '269315'
                    name: Pro
                  company_id: '6'
                  remote_created_at: 1663597223
                  created_at: 1663597223
                  updated_at: 1663597223
                  last_request_at: 1663597223
                  size: 100
                  website: https://www.intercom.com
                  industry: Software
                  monthly_spend: 100
                  session_count: 100
                  user_count: 100
                  custom_attributes:
                    paid_subscriber: custom_attributes
                    monthly_spend: custom_attributes
                    team_mates: custom_attributes
              total_count: 1
              pages:
                type: pages
                page: 1
                per_page: 50
                total_pages: 1
    listSegmentsForAContact:
      path: /contacts/{contact_id}/segments
      method: GET
      auth: true
      docs: You can fetch a list of segments that are associated to a contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
      display-name: List attached segments for contact
      response:
        docs: successful
        type: root.Segments
        status-code: 200
      errors:
        - root.ListSegmentsForAContactRequestUnauthorizedError
        - root.ListSegmentsForAContactRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          response:
            body:
              type: list
              data:
                - type: segment
                  id: 667d60998a68186f43bafda1
                  name: segment
                  created_at: 1719492761
                  updated_at: 1719492761
                  person_type: user
                  count: 3
    listSubscriptionsForAContact:
      path: /contacts/{contact_id}/subscriptions
      method: GET
      auth: true
      docs: >
        You can fetch a list of subscription types that are attached to a
        contact. These can be subscriptions that a user has 'opted-in' to or has
        'opted-out' from, depending on the subscription type.

        This will return a list of Subscription Type objects that the contact is
        associated with.


        The data property will show a combined list of:

          1.Opt-out subscription types that the user has opted-out from.
          2.Opt-in subscription types that the user has opted-in to receiving.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
      display-name: List subscriptions for a contact
      response:
        docs: Successful
        type: root.SubscriptionTypeList
        status-code: 200
      errors:
        - root.ListSubscriptionsForAContactRequestUnauthorizedError
        - root.ListSubscriptionsForAContactRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          response:
            body:
              type: list
              data:
                - type: subscription
                  id: '93'
                  state: live
                  default_translation:
                    name: Newsletters
                    description: Lorem ipsum dolor sit amet
                    locale: en
                  translations:
                    - name: Newsletters
                      description: Lorem ipsum dolor sit amet
                      locale: en
                  consent_type: opt_out
                  content_types:
                    - email
                - type: subscription
                  id: '95'
                  state: live
                  default_translation:
                    name: Newsletters
                    description: Lorem ipsum dolor sit amet
                    locale: en
                  translations:
                    - name: Newsletters
                      description: Lorem ipsum dolor sit amet
                      locale: en
                  consent_type: opt_in
                  content_types:
                    - sms_message
    listTagsForAContact:
      path: /contacts/{contact_id}/tags
      method: GET
      auth: true
      docs: >-
        You can fetch a list of all tags that are attached to a specific
        contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
      display-name: List tags attached to a contact
      response:
        docs: successful
        type: root.Tags
        status-code: 200
      errors:
        - root.ListTagsForAContactRequestUnauthorizedError
        - root.ListTagsForAContactRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          response:
            body:
              type: list
              data:
                - type: tag
                  id: '93'
                  name: Manual tag
                  applied_at: 1663597223
                  applied_by:
                    type: contact
    ShowContact:
      path: /contacts/{id}
      method: GET
      auth: true
      docs: You can fetch the details of a single contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: id
      display-name: Get a contact
      response:
        docs: successful
        type: Contact
        status-code: 200
      errors:
        - root.ShowContactRequestUnauthorizedError
      examples:
        - name: successful
          path-parameters:
            id: 63a07ddf05a32042dffac965
          response:
            body:
              type: contact
              id: 667d60a98a68186f43bafdb9
              external_id: '70'
              workspace_id: this_is_an_id252_that_should_be_at_least_
              role: user
              email: joe@bloggs.com
              email_domain: example.com
              formatted_phone: '+1123456789'
              name: Joe Bloggs
              has_hard_bounced: false
              marked_email_as_spam: false
              unsubscribed_from_emails: false
              created_at: 1719492777
              updated_at: 1719492777
              signed_up_at: 1719492777
              custom_attributes:
                key: value
              tags:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60a98a68186f43bafdb9/tags
                total_count: 0
                has_more: false
              notes:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60a98a68186f43bafdb9/notes
                total_count: 0
                has_more: false
              companies:
                url: /contacts/667d60a98a68186f43bafdb9/companies
                total_count: 0
                has_more: false
              location:
                type: location
              social_profiles:
                data:
                  - type: social_profile
                    name: Facebook
                    url: http://twitter.com/th1sland
    UpdateContact:
      path: /contacts/{id}
      method: PUT
      auth: true
      docs: You can update an existing contact (ie. user or lead).
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: id
      display-name: Update a contact
      request:
        name: UpdateContactRequest
        body:
          properties:
            role:
              type: optional<string>
              docs: The role of the contact.
            external_id:
              type: optional<string>
              docs: A unique identifier for the contact which is given to Intercom
            email:
              type: optional<string>
              docs: The contacts email
            phone:
              type: optional<string>
              docs: The contacts phone
            name:
              type: optional<string>
              docs: The contacts name
            avatar:
              type: optional<string>
              docs: An image URL containing the avatar of a contact
            signed_up_at:
              type: optional<integer>
              docs: The time specified for when a contact signed up
            last_seen_at:
              type: optional<integer>
              docs: >-
                The time when the contact was last seen (either where the
                Intercom Messenger was installed or when specified manually)
            owner_id:
              type: optional<integer>
              docs: >-
                The id of an admin that has been assigned account ownership of
                the contact
            unsubscribed_from_emails:
              type: optional<boolean>
              docs: Whether the contact is unsubscribed from emails
            custom_attributes:
              type: optional<map<string, unknown>>
              docs: The custom attributes which are set for the contact
        content-type: application/json
      response:
        docs: successful
        type: Contact
        status-code: 200
      errors:
        - root.UpdateContactRequestUnauthorizedError
      examples:
        - name: successful
          path-parameters:
            id: 63a07ddf05a32042dffac965
          request:
            email: joebloggs@intercom.io
            name: joe bloggs
          response:
            body:
              type: contact
              id: 667d60a88a68186f43bafdb8
              external_id: '70'
              workspace_id: this_is_an_id248_that_should_be_at_least_
              role: user
              email: joebloggs@intercom.io
              email_domain: example.com
              formatted_phone: '+1123456789'
              name: joe bloggs
              has_hard_bounced: false
              marked_email_as_spam: false
              unsubscribed_from_emails: false
              created_at: 1719492776
              updated_at: 1719492776
              signed_up_at: 1719492776
              custom_attributes:
                key: value
              tags:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60a88a68186f43bafdb8/tags
                total_count: 0
                has_more: false
              notes:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60a88a68186f43bafdb8/notes
                total_count: 0
                has_more: false
              companies:
                url: /contacts/667d60a88a68186f43bafdb8/companies
                total_count: 0
                has_more: false
              location:
                type: location
              social_profiles:
                data:
                  - type: social_profile
                    name: Facebook
                    url: http://twitter.com/th1sland
    DeleteContact:
      path: /contacts/{id}
      method: DELETE
      auth: true
      docs: You can delete a single contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: id
      display-name: Delete a contact
      response:
        docs: successful
        type: root.ContactDeleted
        status-code: 200
      errors:
        - root.DeleteContactRequestUnauthorizedError
      examples:
        - name: successful
          path-parameters:
            id: id
          response:
            body:
              type: contact
              id: 667d60aa8a68186f43bafdba
              external_id: '70'
              deleted: true
    MergeContact:
      path: /contacts/merge
      method: POST
      auth: true
      docs: >-
        You can merge a contact with a `role` of `lead` into a contact with a
        `role` of `user`.
      source:
        openapi: ../openapi.yml
      display-name: Merge a lead and a user
      request:
        name: MergeContactsRequest
        body:
          properties:
            from:
              type: optional<string>
              docs: >-
                The unique identifier for the contact to merge away from. Must
                be a lead.
            into:
              type: optional<string>
              docs: >-
                The unique identifier for the contact to merge into. Must be a
                user.
        content-type: application/json
      response:
        docs: successful
        type: Contact
        status-code: 200
      errors:
        - root.MergeContactRequestUnauthorizedError
      examples:
        - name: successful
          request:
            from: 667d60ac8a68186f43bafdbb
            into: 667d60ac8a68186f43bafdbc
          response:
            body:
              type: contact
              id: 667d60ac8a68186f43bafdbc
              external_id: '70'
              workspace_id: this_is_an_id260_that_should_be_at_least_
              role: user
              email: joe@bloggs.com
              email_domain: example.com
              formatted_phone: '+1123456789'
              name: Joe Bloggs
              has_hard_bounced: false
              marked_email_as_spam: false
              unsubscribed_from_emails: false
              created_at: 1719492780
              updated_at: 1719492780
              signed_up_at: 1719492780
              custom_attributes:
                key: value
              tags:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60ac8a68186f43bafdbc/tags
                total_count: 0
                has_more: false
              notes:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60ac8a68186f43bafdbc/notes
                total_count: 0
                has_more: false
              companies:
                url: /contacts/667d60ac8a68186f43bafdbc/companies
                total_count: 0
                has_more: false
              location:
                type: location
              social_profiles:
                data:
                  - type: social_profile
                    name: Facebook
                    url: http://twitter.com/th1sland
    SearchContacts:
      path: /contacts/search
      method: POST
      auth: true
      docs: >
        You can search for multiple contacts by the value of their attributes in
        order to fetch exactly who you want.


        To search for contacts, you need to send a `POST` request to
        `https://api.intercom.io/contacts/search`.


        This will accept a query object in the body which will define your
        filters in order to search for contacts.


        {% admonition type="warning" name="Optimizing search queries" %}
          Search queries can be complex, so optimizing them can help the performance of your search.
          Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize
          pagination to limit the number of results returned. The default is `50` results per page.
          See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.
        {% /admonition %}

        ### Contact Creation Delay


        If a contact has recently been created, there is a possibility that it
        will not yet be available when searching. This means that it may not
        appear in the response. This delay can take a few minutes. If you need
        to be instantly notified it is recommended to use webhooks and iterate
        to see if they match your search filters.


        ### Nesting & Limitations


        You can nest these filters in order to get even more granular insights
        that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).

        There are some limitations to the amount of multiple's there can be:

        * There's a limit of max 2 nested filters

        * There's a limit of max 15 filters for each AND or OR group


        ### Searching for Timestamp Fields


        All timestamp fields (created_at, updated_at etc.) are indexed as Dates
        for Contact Search queries; Datetime queries are not currently
        supported. This means you can only query for timestamp fields by day -
        not hour, minute or second.

        For example, if you search for all Contacts with a created_at value
        greater (>) than 1577869200 (the UNIX timestamp for January 1st, 2020
        9:00 AM), that will be interpreted as 1577836800 (January 1st, 2020
        12:00 AM). The search results will then include Contacts created from
        January 2nd, 2020 12:00 AM onwards.

        If you'd like to get contacts created on January 1st, 2020 you should
        search with a created_at value equal (=) to 1577836800 (January 1st,
        2020 12:00 AM).

        This behaviour applies only to timestamps used in search queries. The
        search results will still contain the full UNIX timestamp and be sorted
        accordingly.


        ### Accepted Fields


        Most key listed as part of the Contacts Model are searchable, whether
        writeable or not. The value you search for has to match the accepted
        type, otherwise the query will fail (ie. as `created_at` accepts a date,
        the `value` cannot be a string such as `"foorbar"`).


        | Field                              | Type                           |

        | ---------------------------------- | ------------------------------ |

        | id                                 | String                         |

        | role                               | String<br>Accepts user or lead |

        | name                               | String                         |

        | avatar                             | String                         |

        | owner_id                           | Integer                        |

        | email                              | String                         |

        | email_domain                       | String                         |

        | phone                              | String                         |

        | formatted_phone                    | String                         |

        | external_id                        | String                         |

        | created_at                         | Date (UNIX Timestamp)          |

        | signed_up_at                       | Date (UNIX Timestamp)          |

        | updated_at                         | Date (UNIX Timestamp)          |

        | last_seen_at                       | Date (UNIX Timestamp)          |

        | last_contacted_at                  | Date (UNIX Timestamp)          |

        | last_replied_at                    | Date (UNIX Timestamp)          |

        | last_email_opened_at               | Date (UNIX Timestamp)          |

        | last_email_clicked_at              | Date (UNIX Timestamp)          |

        | language_override                  | String                         |

        | browser                            | String                         |

        | browser_language                   | String                         |

        | os                                 | String                         |

        | location.country                   | String                         |

        | location.region                    | String                         |

        | location.city                      | String                         |

        | unsubscribed_from_emails           | Boolean                        |

        | marked_email_as_spam               | Boolean                        |

        | has_hard_bounced                   | Boolean                        |

        | ios_last_seen_at                   | Date (UNIX Timestamp)          |

        | ios_app_version                    | String                         |

        | ios_device                         | String                         |

        | ios_app_device                     | String                         |

        | ios_os_version                     | String                         |

        | ios_app_name                       | String                         |

        | ios_sdk_version                    | String                         |

        | android_last_seen_at               | Date (UNIX Timestamp)          |

        | android_app_version                | String                         |

        | android_device                     | String                         |

        | android_app_name                   | String                         |

        | andoid_sdk_version                 | String                         |

        | segment_id                         | String                         |

        | tag_id                             | String                         |

        | custom_attributes.{attribute_name} | String                         |


        ### Accepted Operators


        {% admonition type="attention" name="Searching based on `created_at`" %}
          You cannot use the `<=` or `>=` operators to search by `created_at`.
        {% /admonition %}


        The table below shows the operators you can use to define how you want
        to search for the value.  The operator should be put in as a string
        (`"="`). The operator has to be compatible with the field's type (eg.
        you cannot search with `>` for a given string value as it's only
        compatible for integer's and dates).


        | Operator | Valid Types                      |
        Description                                                      |

        | :------- | :------------------------------- |
        :--------------------------------------------------------------- |

        | =        | All                              |
        Equals                                                           |

        | !=       | All                              | Doesn't
        Equal                                                    |

        | IN       | All                              | In<br>Shortcut for `OR`
        queries<br>Values must be in Array       |

        | NIN      | All                              | Not In<br>Shortcut for
        `OR !` queries<br>Values must be in Array |

        | >        | Integer<br>Date (UNIX Timestamp) | Greater
        than                                                     |

        | <       | Integer<br>Date (UNIX Timestamp) | Lower
        than                                                       |

        | ~        | String                           |
        Contains                                                         |

        | !~       | String                           | Doesn't
        Contain                                                  |

        | ^        | String                           | Starts
        With                                                      |

        | $        | String                           | Ends
        With                                                        |
      source:
        openapi: ../openapi.yml
      display-name: Search contacts
      request:
        body:
          type: root.SearchRequest
        content-type: application/json
      response:
        docs: successful
        type: root.ContactList
        status-code: 200
      errors:
        - root.SearchContactsRequestUnauthorizedError
      examples:
        - name: successful
          request:
            query:
              operator: AND
              value:
                - field: created_at
                  operator: '>'
                  value: '1306054154'
            pagination:
              per_page: 5
          response:
            body:
              type: list
              data:
                - type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                  workspace_id: ecahpwf5
                  role: user
                  email: joe@example.com
                  email_domain: example.com
                  phone: '+1123456789'
                  formatted_phone: '+1123456789'
                  name: John Doe
                  owner_id: 123
                  has_hard_bounced: true
                  marked_email_as_spam: true
                  unsubscribed_from_emails: true
                  created_at: 1571672154
                  updated_at: 1571672154
                  signed_up_at: 1571672154
                  last_seen_at: 1571672154
                  last_replied_at: 1571672154
                  last_contacted_at: 1571672154
                  last_email_opened_at: 1571672154
                  last_email_clicked_at: 1571672154
                  language_override: en
                  browser: Chrome
                  browser_version: 80.0.3987.132
                  browser_language: en-US
                  os: Mac OS X
                  android_app_name: Intercom
                  android_app_version: 5.0.0
                  android_device: Pixel 3
                  android_os_version: '10'
                  android_sdk_version: '28'
                  android_last_seen_at: 1571672154
                  ios_app_name: Intercom
                  ios_app_version: 5.0.0
                  ios_device: iPhone 11
                  ios_os_version: 13.3.1
                  ios_sdk_version: 13.3.1
                  ios_last_seen_at: 1571672154
                  custom_attributes:
                    key: value
                  avatar:
                    type: avatar
                  tags:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/tags
                    total_count: 100
                    has_more: true
                  notes:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                    total_count: 100
                    has_more: true
                  companies:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/companies
                    total_count: 100
                    has_more: true
              total_count: 0
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 5
                total_pages: 0
    ListContacts:
      path: /contacts
      method: GET
      auth: true
      docs: >
        You can fetch a list of all contacts (ie. users or leads) in your
        workspace.

        {% admonition type="warning" name="Pagination" %}
          You can use pagination to limit the number of results returned. The default is `50` results per page.
          See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.
        {% /admonition %}
      source:
        openapi: ../openapi.yml
      display-name: List all contacts
      response:
        docs: successful
        type: root.ContactList
        status-code: 200
      errors:
        - root.ListContactsRequestUnauthorizedError
      examples:
        - name: successful
          response:
            body:
              type: list
              data:
                - type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                  workspace_id: ecahpwf5
                  role: user
                  email: joe@example.com
                  email_domain: example.com
                  phone: '+1123456789'
                  formatted_phone: '+1123456789'
                  name: John Doe
                  owner_id: 123
                  has_hard_bounced: true
                  marked_email_as_spam: true
                  unsubscribed_from_emails: true
                  created_at: 1571672154
                  updated_at: 1571672154
                  signed_up_at: 1571672154
                  last_seen_at: 1571672154
                  last_replied_at: 1571672154
                  last_contacted_at: 1571672154
                  last_email_opened_at: 1571672154
                  last_email_clicked_at: 1571672154
                  language_override: en
                  browser: Chrome
                  browser_version: 80.0.3987.132
                  browser_language: en-US
                  os: Mac OS X
                  android_app_name: Intercom
                  android_app_version: 5.0.0
                  android_device: Pixel 3
                  android_os_version: '10'
                  android_sdk_version: '28'
                  android_last_seen_at: 1571672154
                  ios_app_name: Intercom
                  ios_app_version: 5.0.0
                  ios_device: iPhone 11
                  ios_os_version: 13.3.1
                  ios_sdk_version: 13.3.1
                  ios_last_seen_at: 1571672154
                  custom_attributes:
                    key: value
                  avatar:
                    type: avatar
                  tags:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/tags
                    total_count: 100
                    has_more: true
                  notes:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                    total_count: 100
                    has_more: true
                  companies:
                    url: /contacts/5ba682d23d7cf92bef87bfd4/companies
                    total_count: 100
                    has_more: true
              total_count: 0
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 10
                total_pages: 0
    CreateContact:
      path: /contacts
      method: POST
      auth: true
      docs: You can create a new contact (ie. user or lead).
      source:
        openapi: ../openapi.yml
      display-name: Create contact
      request:
        body: root.CreateContactRequestTwo
        content-type: application/json
      response:
        docs: successful
        type: Contact
        status-code: 200
      errors:
        - root.CreateContactRequestUnauthorizedError
      examples:
        - name: successful
          request:
            email: joebloggs@intercom.io
          response:
            body:
              type: contact
              id: 667d60b08a68186f43bafdbf
              workspace_id: this_is_an_id272_that_should_be_at_least_
              role: user
              email: joebloggs@intercom.io
              email_domain: example.com
              formatted_phone: '+1123456789'
              has_hard_bounced: false
              marked_email_as_spam: false
              unsubscribed_from_emails: false
              created_at: 1719492784
              updated_at: 1719492784
              custom_attributes:
                key: value
              tags:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60b08a68186f43bafdbf/tags
                total_count: 0
                has_more: false
              notes:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d60b08a68186f43bafdbf/notes
                total_count: 0
                has_more: false
              companies:
                url: /contacts/667d60b08a68186f43bafdbf/companies
                total_count: 0
                has_more: false
              location:
                type: location
              social_profiles:
                data:
                  - type: social_profile
                    name: Facebook
                    url: http://twitter.com/th1sland
    ArchiveContact:
      path: /contacts/{id}/archive
      method: POST
      auth: true
      docs: You can archive a single contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: id
      display-name: Archive contact
      response:
        docs: successful
        type: root.ContactArchived
        status-code: 200
      examples:
        - name: successful
          path-parameters:
            id: 63a07ddf05a32042dffac965
          response:
            body:
              type: contact
              id: 667d60b18a68186f43bafdc0
              external_id: '70'
              archived: true
    UnarchiveContact:
      path: /contacts/{id}/unarchive
      method: POST
      auth: true
      docs: You can unarchive a single contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: id
      display-name: Unarchive contact
      response:
        docs: successful
        type: root.ContactUnarchived
        status-code: 200
      examples:
        - name: successful
          path-parameters:
            id: 63a07ddf05a32042dffac965
          response:
            body:
              type: contact
              id: 667d60b28a68186f43bafdc1
              external_id: '70'
              archived: false
  source:
    openapi: ../openapi.yml
  display-name: Contacts
docs: Everything about your contacts
types:
  ContactAvatar:
    properties:
      type:
        type: optional<string>
        docs: The type of object
      image_url:
        type: optional<string>
        docs: An image URL containing the avatar of a contact.
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  Contact:
    docs: Contact are the objects that represent your leads and users in Intercom.
    properties:
      type:
        type: optional<string>
        docs: The type of object.
      id:
        type: optional<string>
        docs: The unique identifier for the contact which is given by Intercom.
      external_id:
        type: optional<string>
        docs: The unique identifier for the contact which is provided by the Client.
      workspace_id:
        type: optional<string>
        docs: The id of the workspace which the contact belongs to.
      role:
        type: optional<string>
        docs: The role of the contact.
      email:
        type: optional<string>
        docs: The contact's email.
      email_domain:
        type: optional<string>
        docs: The contact's email domain.
      phone:
        type: optional<string>
        docs: The contacts phone.
      formatted_phone:
        type: optional<string>
        docs: The contacts phone number normalized to the E164 format
      name:
        type: optional<string>
        docs: The contacts name.
      owner_id:
        type: optional<integer>
        docs: >-
          The id of an admin that has been assigned account ownership of the
          contact.
      has_hard_bounced:
        type: optional<boolean>
        docs: Whether the contact has had an email sent to them hard bounce.
      marked_email_as_spam:
        type: optional<boolean>
        docs: Whether the contact has marked an email sent to them as spam.
      unsubscribed_from_emails:
        type: optional<boolean>
        docs: Whether the contact is unsubscribed from emails.
      created_at:
        type: optional<integer>
        docs: (UNIX timestamp) The time when the contact was created.
      updated_at:
        type: optional<integer>
        docs: (UNIX timestamp) The time when the contact was last updated.
      signed_up_at:
        type: optional<integer>
        docs: (UNIX timestamp) The time specified for when a contact signed up.
      last_seen_at:
        type: optional<integer>
        docs: >-
          (UNIX timestamp) The time when the contact was last seen (either where
          the Intercom Messenger was installed or when specified manually).
      last_replied_at:
        type: optional<integer>
        docs: (UNIX timestamp) The time when the contact last messaged in.
      last_contacted_at:
        type: optional<integer>
        docs: (UNIX timestamp) The time when the contact was last messaged.
      last_email_opened_at:
        type: optional<integer>
        docs: (UNIX timestamp) The time when the contact last opened an email.
      last_email_clicked_at:
        type: optional<integer>
        docs: >-
          (UNIX timestamp) The time when the contact last clicked a link in an
          email.
      language_override:
        type: optional<string>
        docs: >-
          A preferred language setting for the contact, used by the Intercom
          Messenger even if their browser settings change.
      browser:
        type: optional<string>
        docs: The name of the browser which the contact is using.
      browser_version:
        type: optional<string>
        docs: The version of the browser which the contact is using.
      browser_language:
        type: optional<string>
        docs: The language set by the browser which the contact is using.
      os:
        type: optional<string>
        docs: The operating system which the contact is using.
      android_app_name:
        type: optional<string>
        docs: The name of the Android app which the contact is using.
      android_app_version:
        type: optional<string>
        docs: The version of the Android app which the contact is using.
      android_device:
        type: optional<string>
        docs: The Android device which the contact is using.
      android_os_version:
        type: optional<string>
        docs: The version of the Android OS which the contact is using.
      android_sdk_version:
        type: optional<string>
        docs: The version of the Android SDK which the contact is using.
      android_last_seen_at:
        type: optional<integer>
        docs: >-
          (UNIX timestamp) The time when the contact was last seen on an Android
          device.
      ios_app_name:
        type: optional<string>
        docs: The name of the iOS app which the contact is using.
      ios_app_version:
        type: optional<string>
        docs: The version of the iOS app which the contact is using.
      ios_device:
        type: optional<string>
        docs: The iOS device which the contact is using.
      ios_os_version:
        type: optional<string>
        docs: The version of iOS which the contact is using.
      ios_sdk_version:
        type: optional<string>
        docs: The version of the iOS SDK which the contact is using.
      ios_last_seen_at:
        type: optional<integer>
        docs: (UNIX timestamp) The last time the contact used the iOS app.
      custom_attributes:
        type: optional<map<string, unknown>>
        docs: The custom attributes which are set for the contact.
      avatar:
        type: optional<ContactAvatar>
      tags:
        type: optional<root.ContactTags>
      notes:
        type: optional<root.ContactNotes>
      companies:
        type: optional<root.ContactCompanies>
      location:
        type: optional<root.ContactLocation>
      social_profiles:
        type: optional<root.ContactSocialProfiles>
    source:
      openapi: ../openapi.yml
",
    },
    "conversations.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Conversations",
        "imports": {
          "aiAgent": "aiAgent.yml",
          "messages": "messages.yml",
          "root": "__package__.yml",
          "tickets": "tickets.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Conversations",
          "endpoints": {
            "attachContactToConversation": {
              "auth": true,
              "display-name": "Attach a contact to a conversation",
              "docs": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.

{% admonition type="attention" name="Contacts without an email" %}
If you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with `role` set to `lead`.
{% /admonition %}

",
              "errors": [
                "root.AttachContactToConversationRequestUnauthorizedError",
                "root.AttachContactToConversationRequestForbiddenError",
                "root.AttachContactToConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Attach a contact to a conversation",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "12345",
                    "customer": {
                      "intercom_user_id": "667d61168a68186f43bafe0d",
                    },
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": 0,
                      "ai_agent": {
                        "content_sources": {
                          "content_sources": [
                            {
                              "locale": "en",
                              "title": "My internal content snippet",
                              "url": "/fin-ai-agent/content?content=content_snippet&id=3234924",
                            },
                          ],
                          "total_count": 1,
                          "type": "content_source.list",
                        },
                        "last_answer_type": "ai_answer",
                        "rating": 4,
                        "rating_remark": "Very helpful!",
                        "resolution_state": "assumed_resolution",
                        "source_title": "My AI Workflow",
                        "source_type": "essentials_plan_setup",
                      },
                      "ai_agent_participated": true,
                      "contacts": {
                        "contacts": [
                          {
                            "id": "5ba682d23d7cf92bef87bfd4",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "created_at": 1663597223,
                            "id": "3",
                            "notified_at": 1663597260,
                            "part_type": "comment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1663597260,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "conversation_rating": {
                        "contact": {
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "type": "contact",
                        },
                        "created_at": 1671028894,
                        "rating": 5,
                        "remark": "",
                        "teammate": {
                          "id": "1a2b3c",
                          "type": "contact",
                        },
                      },
                      "created_at": 1663597223,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1663597223,
                        "type": "conversation",
                        "url": "https://developers.intercom.com/",
                      },
                      "id": "1295",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 100,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "priority",
                      "read": true,
                      "sla_applied": {
                        "sla_name": "",
                        "sla_status": "hit",
                        "type": "conversation_sla_summary",
                      },
                      "snoozed_until": 1663597260,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "operator+abcd1234@intercom.io",
                          "id": "274",
                          "name": "Operator",
                          "type": "admin",
                        },
                        "body": "<p>Hey there!</p>",
                        "delivered_as": "operator_initiated",
                        "id": "3",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                        "url": "url",
                      },
                      "state": "open",
                      "statistics": {
                        "count_assignments": 1,
                        "count_conversation_parts": 1,
                        "count_reopens": 1,
                        "first_admin_reply_at": 1663597233,
                        "first_assignment_at": 1663597233,
                        "first_close_at": 1663597233,
                        "first_contact_reply_at": 1663597233,
                        "last_admin_reply_at": 1663597233,
                        "last_assignment_admin_reply_at": 1663597233,
                        "last_assignment_at": 1663597233,
                        "last_close_at": 1663597233,
                        "last_closed_by_id": "c3po",
                        "last_contact_reply_at": 1663597233,
                        "median_time_to_reply": 2310,
                        "time_to_admin_reply": 2310,
                        "time_to_assignment": 2310,
                        "time_to_first_close": 2310,
                        "time_to_last_close": 2310,
                        "type": "conversation_statistics",
                      },
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "team_assignee_id": "5017691",
                      "teammates": {
                        "teammates": [
                          {
                            "type": "contact",
                          },
                        ],
                        "type": "admin.list",
                      },
                      "title": "Conversation Title",
                      "type": "conversation",
                      "updated_at": 1663597260,
                      "waiting_since": 1663597260,
                    },
                  },
                },
                {
                  "name": "Not found",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "12345",
                    "customer": {
                      "intercom_user_id": "667d61188a68186f43bafe0e",
                    },
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": 0,
                      "ai_agent": {
                        "content_sources": {
                          "content_sources": [
                            {
                              "locale": "en",
                              "title": "My internal content snippet",
                              "url": "/fin-ai-agent/content?content=content_snippet&id=3234924",
                            },
                          ],
                          "total_count": 1,
                          "type": "content_source.list",
                        },
                        "last_answer_type": "ai_answer",
                        "rating": 4,
                        "rating_remark": "Very helpful!",
                        "resolution_state": "assumed_resolution",
                        "source_title": "My AI Workflow",
                        "source_type": "essentials_plan_setup",
                      },
                      "ai_agent_participated": true,
                      "contacts": {
                        "contacts": [
                          {
                            "id": "5ba682d23d7cf92bef87bfd4",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "created_at": 1663597223,
                            "id": "3",
                            "notified_at": 1663597260,
                            "part_type": "comment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1663597260,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "conversation_rating": {
                        "contact": {
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "type": "contact",
                        },
                        "created_at": 1671028894,
                        "rating": 5,
                        "remark": "",
                        "teammate": {
                          "id": "1a2b3c",
                          "type": "contact",
                        },
                      },
                      "created_at": 1663597223,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1663597223,
                        "type": "conversation",
                        "url": "https://developers.intercom.com/",
                      },
                      "id": "1295",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 100,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "priority",
                      "read": true,
                      "sla_applied": {
                        "sla_name": "",
                        "sla_status": "hit",
                        "type": "conversation_sla_summary",
                      },
                      "snoozed_until": 1663597260,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "operator+abcd1234@intercom.io",
                          "id": "274",
                          "name": "Operator",
                          "type": "admin",
                        },
                        "body": "<p>Hey there!</p>",
                        "delivered_as": "operator_initiated",
                        "id": "3",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                        "url": "url",
                      },
                      "state": "open",
                      "statistics": {
                        "count_assignments": 1,
                        "count_conversation_parts": 1,
                        "count_reopens": 1,
                        "first_admin_reply_at": 1663597233,
                        "first_assignment_at": 1663597233,
                        "first_close_at": 1663597233,
                        "first_contact_reply_at": 1663597233,
                        "last_admin_reply_at": 1663597233,
                        "last_assignment_admin_reply_at": 1663597233,
                        "last_assignment_at": 1663597233,
                        "last_close_at": 1663597233,
                        "last_closed_by_id": "c3po",
                        "last_contact_reply_at": 1663597233,
                        "median_time_to_reply": 2310,
                        "time_to_admin_reply": 2310,
                        "time_to_assignment": 2310,
                        "time_to_first_close": 2310,
                        "time_to_last_close": 2310,
                        "type": "conversation_statistics",
                      },
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "team_assignee_id": "5017691",
                      "teammates": {
                        "teammates": [
                          {
                            "type": "contact",
                          },
                        ],
                        "type": "admin.list",
                      },
                      "title": "Conversation Title",
                      "type": "conversation",
                      "updated_at": 1663597260,
                      "waiting_since": 1663597260,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/{id}/customers",
              "path-parameters": {
                "id": {
                  "docs": "The identifier for the conversation as given by Intercom.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "admin_id": {
                      "docs": "The `id` of the admin who is adding the new participant.",
                      "type": "optional<string>",
                    },
                    "customer": {
                      "type": "optional<AttachContactToConversationRequestCustomer>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AttachContactToConversationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Attach a contact to a conversation",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "autoAssignConversation": {
              "auth": true,
              "display-name": "Run Assignment Rules on a conversation",
              "docs": "You can let a conversation be automatically assigned following assignment rules.
{% admonition type="attention" name="When using workflows" %}
It is not possible to use this endpoint with Workflows.
{% /admonition %}
",
              "errors": [
                "root.AutoAssignConversationRequestUnauthorizedError",
                "root.AutoAssignConversationRequestForbiddenError",
                "root.AutoAssignConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Assign a conversation using assignment rules",
                  "path-parameters": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d61108a68186f43bafe09",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "assigned_to": {
                              "type": "nobody_admin",
                            },
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id364_that_should_be_at_least_@intercom.io",
                              "id": "991267624",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719492881,
                            "id": "107",
                            "notified_at": 1719492881,
                            "part_type": "default_assignment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492881,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492880,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "409",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": false,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin197@email.com",
                          "id": "991267623",
                          "name": "Ciaran197 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918285",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "closed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492881,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/{id}/run_assignment_rules",
              "path-parameters": {
                "id": {
                  "docs": "The identifier for the conversation as given by Intercom.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Assign a conversation using assignment rules",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "convertConversationToTicket": {
              "auth": true,
              "display-name": "Convert a conversation to a ticket",
              "docs": "You can convert a conversation to a ticket.",
              "errors": [
                "root.ConvertConversationToTicketRequestBadRequestError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "ticket_type_id": "79",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": "0",
                      "category": "Customer",
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d61518a68186f43bafe45",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "created_at": 1719492945,
                      "id": "474",
                      "is_shared": true,
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "snoozed_until": 1663597260,
                      "team_assignee_id": "0",
                      "ticket_attributes": {
                        "key": "value",
                      },
                      "ticket_id": "37",
                      "ticket_parts": {
                        "ticket_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "joe@bloggs.com",
                              "id": "667d61518a68186f43bafe45",
                              "name": "Joe Bloggs",
                              "type": "user",
                            },
                            "body": "<p>Comment for message</p>",
                            "created_at": 1719492945,
                            "id": "117",
                            "part_type": "comment",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719492945,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id404_that_should_be_at_least_@intercom.io",
                              "id": "991267667",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719492947,
                            "id": "118",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "submitted",
                            "type": "ticket_part",
                            "updated_at": 1719492947,
                          },
                        ],
                        "total_count": 2,
                        "type": "ticket_part.list",
                      },
                      "ticket_state": "submitted",
                      "ticket_state_external_label": "Submitted",
                      "ticket_state_internal_label": "Submitted",
                      "ticket_type": {
                        "archived": false,
                        "category": "Customer",
                        "created_at": 1719492947,
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "id": "79",
                        "name": "my-ticket-type-1",
                        "ticket_type_attributes": {
                          "type": "list",
                        },
                        "type": "ticket_type",
                        "updated_at": 1719492947,
                        "workspace_id": "this_is_an_id404_that_should_be_at_least_",
                      },
                      "type": "ticket",
                      "updated_at": 1719492947,
                    },
                  },
                },
                {
                  "name": "Bad request",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "ticket_type_id": "80",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": "0",
                      "category": "Customer",
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d61518a68186f43bafe45",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "created_at": 1719492945,
                      "id": "474",
                      "is_shared": true,
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "snoozed_until": 1663597260,
                      "team_assignee_id": "0",
                      "ticket_attributes": {
                        "key": "value",
                      },
                      "ticket_id": "37",
                      "ticket_parts": {
                        "ticket_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "joe@bloggs.com",
                              "id": "667d61518a68186f43bafe45",
                              "name": "Joe Bloggs",
                              "type": "user",
                            },
                            "body": "<p>Comment for message</p>",
                            "created_at": 1719492945,
                            "id": "117",
                            "part_type": "comment",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719492945,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id404_that_should_be_at_least_@intercom.io",
                              "id": "991267667",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719492947,
                            "id": "118",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "submitted",
                            "type": "ticket_part",
                            "updated_at": 1719492947,
                          },
                        ],
                        "total_count": 2,
                        "type": "ticket_part.list",
                      },
                      "ticket_state": "submitted",
                      "ticket_state_external_label": "Submitted",
                      "ticket_state_internal_label": "Submitted",
                      "ticket_type": {
                        "archived": false,
                        "category": "Customer",
                        "created_at": 1719492947,
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "id": "79",
                        "name": "my-ticket-type-1",
                        "ticket_type_attributes": {
                          "type": "list",
                        },
                        "type": "ticket_type",
                        "updated_at": 1719492947,
                        "workspace_id": "this_is_an_id404_that_should_be_at_least_",
                      },
                      "type": "ticket",
                      "updated_at": 1719492947,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/{id}/convert",
              "path-parameters": {
                "id": {
                  "docs": "The id of the conversation to target",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "attributes": {
                      "type": "optional<root.TicketRequestCustomAttributes>",
                    },
                    "ticket_type_id": {
                      "docs": "The ID of the type of ticket you want to convert the conversation to",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ConvertConversationToTicketRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "optional<tickets.Ticket>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createConversation": {
              "auth": true,
              "display-name": "Creates a conversation",
              "docs": "You can create a conversation that has been initiated by a contact (ie. user or lead).
The conversation can be an in-app message only.

{% admonition type="info" name="Sending for visitors" %}
You can also send a message from a visitor by specifying their `user_id` or `id` value in the `from` field, along with a `type` field value of `contact`.
This visitor will be automatically converted to a contact with a lead role once the conversation is created.
{% /admonition %}

This will return the Message model that has been created.

",
              "errors": [
                "root.CreateConversationRequestUnauthorizedError",
                "root.CreateConversationRequestForbiddenError",
                "root.CreateConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "conversation created",
                  "request": {
                    "body": "Hello there",
                    "from": {
                      "id": "667d60d18a68186f43bafddd",
                      "type": "user",
                    },
                  },
                  "response": {
                    "body": {
                      "body": "Hello there",
                      "conversation_id": "363",
                      "created_at": 1719492819,
                      "id": "403918251",
                      "message_type": "inapp",
                      "subject": "Greetings",
                      "type": "user_message",
                    },
                  },
                },
                {
                  "name": "Contact Not Found",
                  "request": {
                    "body": "Hello there",
                    "from": {
                      "id": "123_doesnt_exist",
                      "type": "user",
                    },
                  },
                  "response": {
                    "body": {
                      "body": "Hello there",
                      "conversation_id": "363",
                      "created_at": 1719492819,
                      "id": "403918251",
                      "message_type": "inapp",
                      "subject": "Greetings",
                      "type": "user_message",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations",
              "request": {
                "body": {
                  "properties": {
                    "body": {
                      "docs": "The content of the message. HTML is not supported.",
                      "type": "string",
                    },
                    "from": "CreateConversationRequestFrom",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateConversationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "conversation created",
                "status-code": 200,
                "type": "messages.Message",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "detachContactFromConversation": {
              "auth": true,
              "display-name": "Detach a contact from a group conversation",
              "docs": "You can add participants who are contacts to a conversation, on behalf of either another contact or an admin.

{% admonition type="attention" name="Contacts without an email" %}
If you add a contact via the email parameter and there is no user/lead found on that workspace with he given email, then we will create a new contact with `role` set to `lead`.
{% /admonition %}

",
              "errors": [
                "root.DetachContactFromConversationRequestUnauthorizedError",
                "root.DetachContactFromConversationRequestForbiddenError",
                "root.DetachContactFromConversationRequestNotFoundError",
                "root.DetachContactFromConversationRequestUnprocessableEntityError",
              ],
              "examples": [
                {
                  "name": "Detach a contact from a group conversation",
                  "path-parameters": {
                    "contact_id": "123",
                    "conversation_id": "123",
                  },
                  "request": {
                    "admin_id": "5017690",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": 0,
                      "ai_agent": {
                        "content_sources": {
                          "content_sources": [
                            {
                              "locale": "en",
                              "title": "My internal content snippet",
                              "url": "/fin-ai-agent/content?content=content_snippet&id=3234924",
                            },
                          ],
                          "total_count": 1,
                          "type": "content_source.list",
                        },
                        "last_answer_type": "ai_answer",
                        "rating": 4,
                        "rating_remark": "Very helpful!",
                        "resolution_state": "assumed_resolution",
                        "source_title": "My AI Workflow",
                        "source_type": "essentials_plan_setup",
                      },
                      "ai_agent_participated": true,
                      "contacts": {
                        "contacts": [
                          {
                            "id": "5ba682d23d7cf92bef87bfd4",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "created_at": 1663597223,
                            "id": "3",
                            "notified_at": 1663597260,
                            "part_type": "comment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1663597260,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "conversation_rating": {
                        "contact": {
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "type": "contact",
                        },
                        "created_at": 1671028894,
                        "rating": 5,
                        "remark": "",
                        "teammate": {
                          "id": "1a2b3c",
                          "type": "contact",
                        },
                      },
                      "created_at": 1663597223,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1663597223,
                        "type": "conversation",
                        "url": "https://developers.intercom.com/",
                      },
                      "id": "1295",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 100,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "priority",
                      "read": true,
                      "sla_applied": {
                        "sla_name": "",
                        "sla_status": "hit",
                        "type": "conversation_sla_summary",
                      },
                      "snoozed_until": 1663597260,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "operator+abcd1234@intercom.io",
                          "id": "274",
                          "name": "Operator",
                          "type": "admin",
                        },
                        "body": "<p>Hey there!</p>",
                        "delivered_as": "operator_initiated",
                        "id": "3",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                        "url": "url",
                      },
                      "state": "open",
                      "statistics": {
                        "count_assignments": 1,
                        "count_conversation_parts": 1,
                        "count_reopens": 1,
                        "first_admin_reply_at": 1663597233,
                        "first_assignment_at": 1663597233,
                        "first_close_at": 1663597233,
                        "first_contact_reply_at": 1663597233,
                        "last_admin_reply_at": 1663597233,
                        "last_assignment_admin_reply_at": 1663597233,
                        "last_assignment_at": 1663597233,
                        "last_close_at": 1663597233,
                        "last_closed_by_id": "c3po",
                        "last_contact_reply_at": 1663597233,
                        "median_time_to_reply": 2310,
                        "time_to_admin_reply": 2310,
                        "time_to_assignment": 2310,
                        "time_to_first_close": 2310,
                        "time_to_last_close": 2310,
                        "type": "conversation_statistics",
                      },
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "team_assignee_id": "5017691",
                      "teammates": {
                        "teammates": [
                          {
                            "type": "contact",
                          },
                        ],
                        "type": "admin.list",
                      },
                      "title": "Conversation Title",
                      "type": "conversation",
                      "updated_at": 1663597260,
                      "waiting_since": 1663597260,
                    },
                  },
                },
                {
                  "name": "Conversation not found",
                  "path-parameters": {
                    "contact_id": "123",
                    "conversation_id": "123",
                  },
                  "request": {
                    "admin_id": "5017690",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": 0,
                      "ai_agent": {
                        "content_sources": {
                          "content_sources": [
                            {
                              "locale": "en",
                              "title": "My internal content snippet",
                              "url": "/fin-ai-agent/content?content=content_snippet&id=3234924",
                            },
                          ],
                          "total_count": 1,
                          "type": "content_source.list",
                        },
                        "last_answer_type": "ai_answer",
                        "rating": 4,
                        "rating_remark": "Very helpful!",
                        "resolution_state": "assumed_resolution",
                        "source_title": "My AI Workflow",
                        "source_type": "essentials_plan_setup",
                      },
                      "ai_agent_participated": true,
                      "contacts": {
                        "contacts": [
                          {
                            "id": "5ba682d23d7cf92bef87bfd4",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "created_at": 1663597223,
                            "id": "3",
                            "notified_at": 1663597260,
                            "part_type": "comment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1663597260,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "conversation_rating": {
                        "contact": {
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "type": "contact",
                        },
                        "created_at": 1671028894,
                        "rating": 5,
                        "remark": "",
                        "teammate": {
                          "id": "1a2b3c",
                          "type": "contact",
                        },
                      },
                      "created_at": 1663597223,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1663597223,
                        "type": "conversation",
                        "url": "https://developers.intercom.com/",
                      },
                      "id": "1295",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 100,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "priority",
                      "read": true,
                      "sla_applied": {
                        "sla_name": "",
                        "sla_status": "hit",
                        "type": "conversation_sla_summary",
                      },
                      "snoozed_until": 1663597260,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "operator+abcd1234@intercom.io",
                          "id": "274",
                          "name": "Operator",
                          "type": "admin",
                        },
                        "body": "<p>Hey there!</p>",
                        "delivered_as": "operator_initiated",
                        "id": "3",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                        "url": "url",
                      },
                      "state": "open",
                      "statistics": {
                        "count_assignments": 1,
                        "count_conversation_parts": 1,
                        "count_reopens": 1,
                        "first_admin_reply_at": 1663597233,
                        "first_assignment_at": 1663597233,
                        "first_close_at": 1663597233,
                        "first_contact_reply_at": 1663597233,
                        "last_admin_reply_at": 1663597233,
                        "last_assignment_admin_reply_at": 1663597233,
                        "last_assignment_at": 1663597233,
                        "last_close_at": 1663597233,
                        "last_closed_by_id": "c3po",
                        "last_contact_reply_at": 1663597233,
                        "median_time_to_reply": 2310,
                        "time_to_admin_reply": 2310,
                        "time_to_assignment": 2310,
                        "time_to_first_close": 2310,
                        "time_to_last_close": 2310,
                        "type": "conversation_statistics",
                      },
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "team_assignee_id": "5017691",
                      "teammates": {
                        "teammates": [
                          {
                            "type": "contact",
                          },
                        ],
                        "type": "admin.list",
                      },
                      "title": "Conversation Title",
                      "type": "conversation",
                      "updated_at": 1663597260,
                      "waiting_since": 1663597260,
                    },
                  },
                },
                {
                  "name": "Contact not found",
                  "path-parameters": {
                    "contact_id": "123",
                    "conversation_id": "123",
                  },
                  "request": {
                    "admin_id": "5017690",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": 0,
                      "ai_agent": {
                        "content_sources": {
                          "content_sources": [
                            {
                              "locale": "en",
                              "title": "My internal content snippet",
                              "url": "/fin-ai-agent/content?content=content_snippet&id=3234924",
                            },
                          ],
                          "total_count": 1,
                          "type": "content_source.list",
                        },
                        "last_answer_type": "ai_answer",
                        "rating": 4,
                        "rating_remark": "Very helpful!",
                        "resolution_state": "assumed_resolution",
                        "source_title": "My AI Workflow",
                        "source_type": "essentials_plan_setup",
                      },
                      "ai_agent_participated": true,
                      "contacts": {
                        "contacts": [
                          {
                            "id": "5ba682d23d7cf92bef87bfd4",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "created_at": 1663597223,
                            "id": "3",
                            "notified_at": 1663597260,
                            "part_type": "comment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1663597260,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "conversation_rating": {
                        "contact": {
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "type": "contact",
                        },
                        "created_at": 1671028894,
                        "rating": 5,
                        "remark": "",
                        "teammate": {
                          "id": "1a2b3c",
                          "type": "contact",
                        },
                      },
                      "created_at": 1663597223,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1663597223,
                        "type": "conversation",
                        "url": "https://developers.intercom.com/",
                      },
                      "id": "1295",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 100,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "priority",
                      "read": true,
                      "sla_applied": {
                        "sla_name": "",
                        "sla_status": "hit",
                        "type": "conversation_sla_summary",
                      },
                      "snoozed_until": 1663597260,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "operator+abcd1234@intercom.io",
                          "id": "274",
                          "name": "Operator",
                          "type": "admin",
                        },
                        "body": "<p>Hey there!</p>",
                        "delivered_as": "operator_initiated",
                        "id": "3",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                        "url": "url",
                      },
                      "state": "open",
                      "statistics": {
                        "count_assignments": 1,
                        "count_conversation_parts": 1,
                        "count_reopens": 1,
                        "first_admin_reply_at": 1663597233,
                        "first_assignment_at": 1663597233,
                        "first_close_at": 1663597233,
                        "first_contact_reply_at": 1663597233,
                        "last_admin_reply_at": 1663597233,
                        "last_assignment_admin_reply_at": 1663597233,
                        "last_assignment_at": 1663597233,
                        "last_close_at": 1663597233,
                        "last_closed_by_id": "c3po",
                        "last_contact_reply_at": 1663597233,
                        "median_time_to_reply": 2310,
                        "time_to_admin_reply": 2310,
                        "time_to_assignment": 2310,
                        "time_to_first_close": 2310,
                        "time_to_last_close": 2310,
                        "type": "conversation_statistics",
                      },
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "team_assignee_id": "5017691",
                      "teammates": {
                        "teammates": [
                          {
                            "type": "contact",
                          },
                        ],
                        "type": "admin.list",
                      },
                      "title": "Conversation Title",
                      "type": "conversation",
                      "updated_at": 1663597260,
                      "waiting_since": 1663597260,
                    },
                  },
                },
                {
                  "name": "Last customer",
                  "path-parameters": {
                    "contact_id": "123",
                    "conversation_id": "123",
                  },
                  "request": {
                    "admin_id": "5017690",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": 0,
                      "ai_agent": {
                        "content_sources": {
                          "content_sources": [
                            {
                              "locale": "en",
                              "title": "My internal content snippet",
                              "url": "/fin-ai-agent/content?content=content_snippet&id=3234924",
                            },
                          ],
                          "total_count": 1,
                          "type": "content_source.list",
                        },
                        "last_answer_type": "ai_answer",
                        "rating": 4,
                        "rating_remark": "Very helpful!",
                        "resolution_state": "assumed_resolution",
                        "source_title": "My AI Workflow",
                        "source_type": "essentials_plan_setup",
                      },
                      "ai_agent_participated": true,
                      "contacts": {
                        "contacts": [
                          {
                            "id": "5ba682d23d7cf92bef87bfd4",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "created_at": 1663597223,
                            "id": "3",
                            "notified_at": 1663597260,
                            "part_type": "comment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1663597260,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "conversation_rating": {
                        "contact": {
                          "external_id": "f3b87a2e09d514c6c2e79b9a",
                          "id": "5ba682d23d7cf92bef87bfd4",
                          "type": "contact",
                        },
                        "created_at": 1671028894,
                        "rating": 5,
                        "remark": "",
                        "teammate": {
                          "id": "1a2b3c",
                          "type": "contact",
                        },
                      },
                      "created_at": 1663597223,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1663597223,
                        "type": "conversation",
                        "url": "https://developers.intercom.com/",
                      },
                      "id": "1295",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 100,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "priority",
                      "read": true,
                      "sla_applied": {
                        "sla_name": "",
                        "sla_status": "hit",
                        "type": "conversation_sla_summary",
                      },
                      "snoozed_until": 1663597260,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "operator+abcd1234@intercom.io",
                          "id": "274",
                          "name": "Operator",
                          "type": "admin",
                        },
                        "body": "<p>Hey there!</p>",
                        "delivered_as": "operator_initiated",
                        "id": "3",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                        "url": "url",
                      },
                      "state": "open",
                      "statistics": {
                        "count_assignments": 1,
                        "count_conversation_parts": 1,
                        "count_reopens": 1,
                        "first_admin_reply_at": 1663597233,
                        "first_assignment_at": 1663597233,
                        "first_close_at": 1663597233,
                        "first_contact_reply_at": 1663597233,
                        "last_admin_reply_at": 1663597233,
                        "last_assignment_admin_reply_at": 1663597233,
                        "last_assignment_at": 1663597233,
                        "last_close_at": 1663597233,
                        "last_closed_by_id": "c3po",
                        "last_contact_reply_at": 1663597233,
                        "median_time_to_reply": 2310,
                        "time_to_admin_reply": 2310,
                        "time_to_assignment": 2310,
                        "time_to_first_close": 2310,
                        "time_to_last_close": 2310,
                        "type": "conversation_statistics",
                      },
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "team_assignee_id": "5017691",
                      "teammates": {
                        "teammates": [
                          {
                            "type": "contact",
                          },
                        ],
                        "type": "admin.list",
                      },
                      "title": "Conversation Title",
                      "type": "conversation",
                      "updated_at": 1663597260,
                      "waiting_since": 1663597260,
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/conversations/{conversation_id}/customers/{contact_id}",
              "path-parameters": {
                "contact_id": {
                  "docs": "The identifier for the contact as given by Intercom.",
                  "type": "string",
                },
                "conversation_id": {
                  "docs": "The identifier for the conversation as given by Intercom.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "admin_id": {
                      "docs": "The `id` of the admin who is performing the action.",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "DetachContactFromConversationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Detach a contact from a group conversation",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listConversations": {
              "auth": true,
              "display-name": "List all conversations",
              "docs": "You can fetch a list of all conversations.

You can optionally request the result page size and the cursor to start after to fetch the result.
{% admonition type="warning" name="Pagination" %}
  You can use pagination to limit the number of results returned. The default is `20` results per page.
  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.
{% /admonition %}
",
              "errors": [
                "root.ListConversationsRequestUnauthorizedError",
                "root.ListConversationsRequestForbiddenError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "created_at": 1674917488,
                          "id": "12312",
                          "name": "My Newsfeed",
                          "type": "newsfeed",
                          "updated_at": 1674917488,
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 20,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "conversation.list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/conversations",
              "request": {
                "name": "ListConversationsRequest",
                "query-parameters": {
                  "per_page": {
                    "default": 20,
                    "docs": "How many results per page",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 150,
                      "min": undefined,
                      "multipleOf": undefined,
                    },
                  },
                  "starting_after": {
                    "docs": "String used to get the next page of conversations.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.PaginatedResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "manageConversation": {
              "auth": true,
              "display-name": "Manage a conversation",
              "docs": "For managing conversations you can:
- Close a conversation
- Snooze a conversation to reopen on a future date
- Open a conversation which is `snoozed` or `closed`
- Assign a conversation to an admin and/or team.
",
              "errors": [
                "root.ManageConversationRequestUnauthorizedError",
                "root.ManageConversationRequestForbiddenError",
                "root.ManageConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Close a conversation",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "12345",
                    "assignee_id": "4324241",
                    "body": "Goodbye :)",
                    "message_type": "assignment",
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60fd8a68186f43bafdfb",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin189@email.com",
                              "id": "991267608",
                              "name": "Ciaran189 Lee",
                              "type": "admin",
                            },
                            "body": "<p>Goodbye :)</p>",
                            "created_at": 1719492862,
                            "id": "102",
                            "notified_at": 1719492862,
                            "part_type": "close",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492862,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492862,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "394",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": false,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin189@email.com",
                          "id": "991267608",
                          "name": "Ciaran189 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918276",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "closed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492862,
                    },
                  },
                },
                {
                  "name": "Snooze a conversation",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "12345",
                    "assignee_id": "4324241",
                    "body": "Let me pass you over to one of my colleagues.",
                    "message_type": "assignment",
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60ff8a68186f43bafdfc",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin190@email.com",
                              "id": "991267610",
                              "name": "Ciaran190 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719492864,
                            "id": "103",
                            "notified_at": 1719492864,
                            "part_type": "snoozed",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492864,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492864,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "395",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": false,
                      "snoozed_until": 1719496464,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin190@email.com",
                          "id": "991267610",
                          "name": "Ciaran190 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918277",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "snoozed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492864,
                    },
                  },
                },
                {
                  "name": "Open a conversation",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "12345",
                    "assignee_id": "4324241",
                    "body": "Let me pass you over to one of my colleagues.",
                    "message_type": "assignment",
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "74",
                            "id": "667d61038a68186f43bafe01",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin191@email.com",
                              "id": "991267612",
                              "name": "Ciaran191 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719492873,
                            "id": "105",
                            "notified_at": 1719492873,
                            "part_type": "open",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492873,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492863,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "400",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": true,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin191@email.com",
                          "id": "991267612",
                          "name": "Ciaran191 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918278",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "open",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "title": "",
                      "type": "conversation",
                      "updated_at": 1719492873,
                    },
                  },
                },
                {
                  "name": "Assign a conversation",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "12345",
                    "assignee_id": "4324241",
                    "body": "Let me pass you over to one of my colleagues.",
                    "message_type": "assignment",
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": 991267615,
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d610a8a68186f43bafe05",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "assigned_to": {
                              "id": "991267615",
                              "type": "admin",
                            },
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin193@email.com",
                              "id": "991267615",
                              "name": "Ciaran193 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719492875,
                            "id": "106",
                            "notified_at": 1719492875,
                            "part_type": "assign_and_reopen",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492875,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492874,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "405",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin193@email.com",
                          "id": "991267615",
                          "name": "Ciaran193 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918281",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "open",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492875,
                    },
                  },
                },
                {
                  "name": "Not found",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "12345",
                    "assignee_id": "4324241",
                    "body": "Goodbye :)",
                    "message_type": "assignment",
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60fd8a68186f43bafdfb",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin189@email.com",
                              "id": "991267608",
                              "name": "Ciaran189 Lee",
                              "type": "admin",
                            },
                            "body": "<p>Goodbye :)</p>",
                            "created_at": 1719492862,
                            "id": "102",
                            "notified_at": 1719492862,
                            "part_type": "close",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492862,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492862,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "394",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": false,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin189@email.com",
                          "id": "991267608",
                          "name": "Ciaran189 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918276",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "closed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492862,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/{id}/parts",
              "path-parameters": {
                "id": {
                  "docs": "The identifier for the conversation as given by Intercom.",
                  "type": "string",
                },
              },
              "request": {
                "body": "ManageConversationRequestBody",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Assign a conversation",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "redactConversation": {
              "auth": true,
              "display-name": "Redact a conversation part",
              "docs": "You can redact a conversation part or the source message of a conversation (as seen in the source object).

{% admonition type="info" name="Redacting parts and messages" %}
If you are redacting a conversation part, it must have a `body`. If you are redacting a source message, it must have been created by a contact. We will return a `conversation_part_not_redactable` error if these criteria are not met.
{% /admonition %}

",
              "errors": [
                "root.RedactConversationRequestUnauthorizedError",
                "root.RedactConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Redact a conversation part",
                  "request": {
                    "conversation_id": "19894788788",
                    "conversation_part_id": "19381789428",
                    "type": "conversation_part",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d614a8a68186f43bafe42",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "joe@bloggs.com",
                              "id": "667d614a8a68186f43bafe42",
                              "name": "Joe Bloggs",
                              "type": "user",
                            },
                            "body": "<p><i>This message was deleted</i></p>",
                            "created_at": 1719492939,
                            "id": "115",
                            "notified_at": 1719492939,
                            "part_type": "open",
                            "redacted": true,
                            "type": "conversation_part",
                            "updated_at": 1719492940,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492938,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1719492939,
                        "type": "conversation",
                      },
                      "id": "471",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": true,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin217@email.com",
                          "id": "991267657",
                          "name": "Ciaran217 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918311",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "open",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492940,
                      "waiting_since": 1719492939,
                    },
                  },
                },
                {
                  "name": "Not found",
                  "request": {
                    "conversation_id": "really_123_doesnt_exist",
                    "conversation_part_id": "really_123_doesnt_exist",
                    "type": "conversation_part",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d614a8a68186f43bafe42",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "joe@bloggs.com",
                              "id": "667d614a8a68186f43bafe42",
                              "name": "Joe Bloggs",
                              "type": "user",
                            },
                            "body": "<p><i>This message was deleted</i></p>",
                            "created_at": 1719492939,
                            "id": "115",
                            "notified_at": 1719492939,
                            "part_type": "open",
                            "redacted": true,
                            "type": "conversation_part",
                            "updated_at": 1719492940,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492938,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1719492939,
                        "type": "conversation",
                      },
                      "id": "471",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": true,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin217@email.com",
                          "id": "991267657",
                          "name": "Ciaran217 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918311",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "open",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492940,
                      "waiting_since": 1719492939,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/redact",
              "request": {
                "body": "root.RedactConversationRequest",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Redact a conversation part",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "replyConversation": {
              "auth": true,
              "display-name": "Reply to a conversation",
              "docs": "You can reply to a conversation with a message from an admin or on behalf of a contact, or with a note for admins.",
              "errors": [
                "root.ReplyConversationRequestUnauthorizedError",
                "root.ReplyConversationRequestForbiddenError",
                "root.ReplyConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "User reply",
                  "path-parameters": {
                    "id": "123 or "last"",
                  },
                  "request": {
                    "body": "Thanks again :)",
                    "intercom_user_id": "667d60f18a68186f43bafdf4",
                    "message_type": "comment",
                    "type": "user",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60f18a68186f43bafdf4",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "joe@bloggs.com",
                              "id": "667d60f18a68186f43bafdf4",
                              "name": "Joe Bloggs",
                              "type": "user",
                            },
                            "body": "<p>Thanks again :)</p>",
                            "created_at": 1719492850,
                            "id": "99",
                            "notified_at": 1719492850,
                            "part_type": "open",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492850,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492849,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1719492850,
                        "type": "conversation",
                      },
                      "id": "387",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin182@email.com",
                          "id": "991267594",
                          "name": "Ciaran182 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918269",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "open",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492850,
                      "waiting_since": 1719492850,
                    },
                  },
                },
                {
                  "name": "Admin note reply",
                  "path-parameters": {
                    "id": "123 or "last"",
                  },
                  "request": {
                    "admin_id": "3156780",
                    "body": "<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>",
                    "message_type": "note",
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60f38a68186f43bafdf5",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin183@email.com",
                              "id": "991267596",
                              "name": "Ciaran183 Lee",
                              "type": "admin",
                            },
                            "body": "<h2>An Unordered HTML List</h2>
<ul>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ul>
<h2>An Ordered HTML List</h2>
<ol>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ol>",
                            "created_at": 1719492853,
                            "id": "100",
                            "notified_at": 1719492853,
                            "part_type": "note",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492853,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492852,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "388",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": false,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin183@email.com",
                          "id": "991267596",
                          "name": "Ciaran183 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918270",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "closed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492853,
                    },
                  },
                },
                {
                  "name": "User last conversation reply",
                  "path-parameters": {
                    "id": "123 or "last"",
                  },
                  "request": {
                    "body": "Thanks again :)",
                    "intercom_user_id": "667d60f78a68186f43bafdf7",
                    "message_type": "comment",
                    "type": "user",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60f78a68186f43bafdf7",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "joe@bloggs.com",
                              "id": "667d60f78a68186f43bafdf7",
                              "name": "Joe Bloggs",
                              "type": "user",
                            },
                            "body": "<p>Thanks again :)</p>",
                            "created_at": 1719492856,
                            "id": "101",
                            "notified_at": 1719492856,
                            "part_type": "open",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492856,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492855,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1719492856,
                        "type": "conversation",
                      },
                      "id": "390",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin185@email.com",
                          "id": "991267600",
                          "name": "Ciaran185 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918272",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "open",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492856,
                      "waiting_since": 1719492856,
                    },
                  },
                },
                {
                  "name": "Not found",
                  "path-parameters": {
                    "id": "123 or "last"",
                  },
                  "request": {
                    "body": "Thanks again :)",
                    "intercom_user_id": "667d60f98a68186f43bafdf8",
                    "message_type": "comment",
                    "type": "user",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60f18a68186f43bafdf4",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "joe@bloggs.com",
                              "id": "667d60f18a68186f43bafdf4",
                              "name": "Joe Bloggs",
                              "type": "user",
                            },
                            "body": "<p>Thanks again :)</p>",
                            "created_at": 1719492850,
                            "id": "99",
                            "notified_at": 1719492850,
                            "part_type": "open",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492850,
                          },
                        ],
                        "total_count": 1,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492849,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "first_contact_reply": {
                        "created_at": 1719492850,
                        "type": "conversation",
                      },
                      "id": "387",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin182@email.com",
                          "id": "991267594",
                          "name": "Ciaran182 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918269",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "open",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492850,
                      "waiting_since": 1719492850,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/{id}/reply",
              "path-parameters": {
                "id": {
                  "docs": "The Intercom provisioned identifier for the conversation or the string "last" to reply to the last part of the conversation",
                  "type": "string",
                },
              },
              "request": {
                "body": "root.ReplyConversationRequest",
                "content-type": "application/json",
              },
              "response": {
                "docs": "User last conversation reply",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveConversation": {
              "auth": true,
              "display-name": "Retrieve a conversation",
              "docs": "
You can fetch the details of a single conversation.

This will return a single Conversation model with all its conversation parts.

{% admonition type="warning" name="Hard limit of 500 parts" %}
The maximum number of conversation parts that can be returned via the API is 500. If you have more than that we will return the 500 most recent conversation parts.
{% /admonition %}

For AI agent conversation metadata, please note that you need to have the agent enabled in your workspace, which is a [paid feature](https://www.intercom.com/help/en/articles/8205718-fin-resolutions#h_97f8c2e671).
",
              "errors": [
                "root.RetrieveConversationRequestUnauthorizedError",
                "root.RetrieveConversationRequestForbiddenError",
                "root.RetrieveConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "conversation found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "query-parameters": {
                    "display_as": "plaintext",
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60d88a68186f43bafde1",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "created_at": 1663597223,
                            "id": "3",
                            "notified_at": 1663597260,
                            "part_type": "comment",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1663597260,
                          },
                        ],
                        "total_count": 0,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492825,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "id": "367",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": false,
                      "priority": "not_priority",
                      "read": false,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin153@email.com",
                          "id": "991267553",
                          "name": "Ciaran153 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918255",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "closed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492825,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/conversations/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The id of the conversation to target",
                  "type": "integer",
                },
              },
              "request": {
                "name": "RetrieveConversationRequest",
                "query-parameters": {
                  "display_as": {
                    "docs": "Set to plaintext to retrieve conversation messages in plain text.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "conversation found",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "searchConversations": {
              "auth": true,
              "display-name": "Search conversations",
              "docs": "You can search for multiple conversations by the value of their attributes in order to fetch exactly which ones you want.

To search for conversations, you need to send a `POST` request to `https://api.intercom.io/conversations/search`.

This will accept a query object in the body which will define your filters in order to search for conversations.
{% admonition type="warning" name="Optimizing search queries" %}
  Search queries can be complex, so optimizing them can help the performance of your search.
  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize
  pagination to limit the number of results returned. The default is `20` results per page and maximum is `150`.
  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.
{% /admonition %}

### Nesting & Limitations

You can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).
There are some limitations to the amount of multiple's there can be:
- There's a limit of max 2 nested filters
- There's a limit of max 15 filters for each AND or OR group

### Accepted Fields

Most keys listed as part of the The conversation model is searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `"foorbar"`).

| Field                                     | Type                                                                                                                                                   |
| :---------------------------------------- | :----------------------------------------------------------------------------------------------------------------------------------------------------- |
| id                                        | String                                                                                                                                                 |
| created_at                                | Date (UNIX timestamp)                                                                                                                                  |
| updated_at                                | Date (UNIX timestamp)                                                                                                                                  |
| source.type                               | String<br>Accepted fields are `conversation`, `email`, `facebook`, `instagram`, `phone_call`, `phone_switch`, `push`, `sms`, `twitter` and `whatsapp`. |
| source.id                                 | String                                                                                                                                                 |
| source.delivered_as                       | String                                                                                                                                                 |
| source.subject                            | String                                                                                                                                                 |
| source.body                               | String                                                                                                                                                 |
| source.author.id                          | String                                                                                                                                                 |
| source.author.type                        | String                                                                                                                                                 |
| source.author.name                        | String                                                                                                                                                 |
| source.author.email                       | String                                                                                                                                                 |
| source.url                                | String                                                                                                                                                 |
| contact_ids                               | String                                                                                                                                                 |
| teammate_ids                              | String                                                                                                                                                 |
| admin_assignee_id                         | String                                                                                                                                                 |
| team_assignee_id                          | String                                                                                                                                                 |
| channel_initiated                         | String                                                                                                                                                 |
| open                                      | Boolean                                                                                                                                                |
| read                                      | Boolean                                                                                                                                                |
| state                                     | String                                                                                                                                                 |
| waiting_since                             | Date (UNIX timestamp)                                                                                                                                  |
| snoozed_until                             | Date (UNIX timestamp)                                                                                                                                  |
| tag_ids                                   | String                                                                                                                                                 |
| priority                                  | String                                                                                                                                                 |
| statistics.time_to_assignment             | Integer                                                                                                                                                |
| statistics.time_to_admin_reply            | Integer                                                                                                                                                |
| statistics.time_to_first_close            | Integer                                                                                                                                                |
| statistics.time_to_last_close             | Integer                                                                                                                                                |
| statistics.median_time_to_reply           | Integer                                                                                                                                                |
| statistics.first_contact_reply_at         | Date (UNIX timestamp)                                                                                                                                  |
| statistics.first_assignment_at            | Date (UNIX timestamp)                                                                                                                                  |
| statistics.first_admin_reply_at           | Date (UNIX timestamp)                                                                                                                                  |
| statistics.first_close_at                 | Date (UNIX timestamp)                                                                                                                                  |
| statistics.last_assignment_at             | Date (UNIX timestamp)                                                                                                                                  |
| statistics.last_assignment_admin_reply_at | Date (UNIX timestamp)                                                                                                                                  |
| statistics.last_contact_reply_at          | Date (UNIX timestamp)                                                                                                                                  |
| statistics.last_admin_reply_at            | Date (UNIX timestamp)                                                                                                                                  |
| statistics.last_close_at                  | Date (UNIX timestamp)                                                                                                                                  |
| statistics.last_closed_by_id              | String                                                                                                                                                 |
| statistics.count_reopens                  | Integer                                                                                                                                                |
| statistics.count_assignments              | Integer                                                                                                                                                |
| statistics.count_conversation_parts       | Integer                                                                                                                                                |
| conversation_rating.requested_at          | Date (UNIX timestamp)                                                                                                                                  |
| conversation_rating.replied_at            | Date (UNIX timestamp)                                                                                                                                  |
| conversation_rating.score                 | Integer                                                                                                                                                |
| conversation_rating.remark                | String                                                                                                                                                 |
| conversation_rating.contact_id            | String                                                                                                                                                 |
| conversation_rating.admin_d               | String                                                                                                                                                 |
| ai_agent_participated                     | Boolean                                                                                                                                                |
| ai_agent.resolution_state                 | String                                                                                                                                                 |
| ai_agent.last_answer_type                 | String                                                                                                                                                 |
| ai_agent.rating                           | Integer                                                                                                                                                |
| ai_agent.rating_remark                    | String                                                                                                                                                 |
| ai_agent.source_type                      | String                                                                                                                                                 |
| ai_agent.source_title                     | String                                                                                                                                                 |

### Accepted Operators

The table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`"="`). The operator has to be compatible with the field's type  (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).

| Operator | Valid Types                    | Description                                                  |
| :------- | :----------------------------- | :----------------------------------------------------------- |
| =        | All                            | Equals                                                       |
| !=       | All                            | Doesn't Equal                                                |
| IN       | All                            | In  Shortcut for `OR` queries  Values most be in Array       |
| NIN      | All                            | Not In  Shortcut for `OR !` queries  Values must be in Array |
| >        | Integer  Date (UNIX Timestamp) | Greater (or equal) than                                      |
| <       | Integer  Date (UNIX Timestamp) | Lower (or equal) than                                        |
| ~        | String                         | Contains                                                     |
| !~       | String                         | Doesn't Contain                                              |
| ^        | String                         | Starts With                                                  |
| $        | String                         | Ends With                                                    |
",
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "pagination": {
                      "per_page": 5,
                    },
                    "query": {
                      "operator": "AND",
                      "value": [
                        {
                          "field": "created_at",
                          "operator": ">",
                          "value": "1306054154",
                        },
                      ],
                    },
                  },
                  "response": {
                    "body": {
                      "conversations": [
                        {
                          "ai_agent_participated": false,
                          "contacts": {
                            "contacts": [
                              {
                                "external_id": "70",
                                "id": "667d60ea8a68186f43bafdec",
                                "type": "contact",
                              },
                            ],
                            "type": "contact.list",
                          },
                          "conversation_parts": {
                            "total_count": 2,
                          },
                          "created_at": 1719492843,
                          "custom_attributes": {
                            "key": "value",
                          },
                          "id": "378",
                          "linked_objects": {
                            "data": [
                              {
                                "id": "7583",
                              },
                            ],
                            "has_more": false,
                            "total_count": 0,
                            "type": "list",
                          },
                          "open": false,
                          "priority": "not_priority",
                          "read": false,
                          "source": {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin180@email.com",
                              "id": "991267591",
                              "name": "Ciaran180 Lee",
                              "type": "admin",
                            },
                            "body": "<p>this is the message body</p>",
                            "delivered_as": "admin_initiated",
                            "id": "403918266",
                            "redacted": false,
                            "subject": "",
                            "type": "conversation",
                          },
                          "state": "closed",
                          "tags": {
                            "tags": [
                              {
                                "applied_at": 1663597223,
                                "id": "123456",
                                "name": "Test tag",
                                "type": "tag",
                              },
                            ],
                            "type": "tag.list",
                          },
                          "type": "conversation",
                          "updated_at": 1719492843,
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 5,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 1,
                      "type": "conversation.list",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/search",
              "request": {
                "body": {
                  "type": "root.SearchRequest",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.ConversationList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateConversation": {
              "auth": true,
              "display-name": "Update a conversation",
              "docs": "
You can update an existing conversation.

{% admonition type="info" name="Replying and other actions" %}
If you want to reply to a coveration or take an action such as assign, unassign, open, close or snooze, take a look at the reply and manage endpoints.
{% /admonition %}

",
              "errors": [
                "root.UpdateConversationRequestUnauthorizedError",
                "root.UpdateConversationRequestForbiddenError",
                "root.UpdateConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "conversation found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "query-parameters": {
                    "display_as": "plaintext",
                  },
                  "request": {
                    "custom_attributes": {
                      "issue_type": "Billing",
                      "priority": "High",
                    },
                    "read": true,
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60e08a68186f43bafde5",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io",
                              "id": "991267562",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719492834,
                            "id": "96",
                            "notified_at": 1719492834,
                            "part_type": "conversation_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492834,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io",
                              "id": "991267562",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719492834,
                            "id": "97",
                            "notified_at": 1719492834,
                            "part_type": "conversation_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492834,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492832,
                      "custom_attributes": {
                        "issue_type": "Billing",
                        "priority": "High",
                      },
                      "id": "371",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": false,
                      "priority": "not_priority",
                      "read": true,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin157@email.com",
                          "id": "991267561",
                          "name": "Ciaran157 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918259",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "closed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492834,
                    },
                  },
                },
                {
                  "name": "Not found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "query-parameters": {
                    "display_as": "plaintext",
                  },
                  "request": {
                    "custom_attributes": {
                      "issue_type": "Billing",
                      "priority": "High",
                    },
                    "read": true,
                  },
                  "response": {
                    "body": {
                      "ai_agent_participated": false,
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d60e08a68186f43bafde5",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "conversation_parts": {
                        "conversation_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io",
                              "id": "991267562",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719492834,
                            "id": "96",
                            "notified_at": 1719492834,
                            "part_type": "conversation_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492834,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id321_that_should_be_at_least_@intercom.io",
                              "id": "991267562",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719492834,
                            "id": "97",
                            "notified_at": 1719492834,
                            "part_type": "conversation_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "conversation_part",
                            "updated_at": 1719492834,
                          },
                        ],
                        "total_count": 2,
                        "type": "conversation_part.list",
                      },
                      "created_at": 1719492832,
                      "custom_attributes": {
                        "issue_type": "Billing",
                        "priority": "High",
                      },
                      "id": "371",
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": false,
                      "priority": "not_priority",
                      "read": true,
                      "source": {
                        "attachments": [
                          {
                            "content_type": "image/png",
                            "filesize": 100,
                            "height": 100,
                            "name": "example.png",
                            "type": "upload",
                            "url": "https://picsum.photos/200/300",
                            "width": 100,
                          },
                        ],
                        "author": {
                          "email": "admin157@email.com",
                          "id": "991267561",
                          "name": "Ciaran157 Lee",
                          "type": "admin",
                        },
                        "body": "<p>this is the message body</p>",
                        "delivered_as": "admin_initiated",
                        "id": "403918259",
                        "redacted": false,
                        "subject": "",
                        "type": "conversation",
                      },
                      "state": "closed",
                      "tags": {
                        "tags": [
                          {
                            "applied_at": 1663597223,
                            "id": "123456",
                            "name": "Test tag",
                            "type": "tag",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "conversation",
                      "updated_at": 1719492834,
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/conversations/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The id of the conversation to target",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "custom_attributes": {
                      "type": "optional<root.CustomAttributes>",
                    },
                    "read": {
                      "docs": "Mark a conversation as read within Intercom.",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateConversationRequest",
                "path-parameters": undefined,
                "query-parameters": {
                  "display_as": {
                    "docs": "Set to plaintext to retrieve conversation messages in plain text.",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "conversation found",
                "status-code": 200,
                "type": "Conversation",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AttachContactToConversationRequestCustomer": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "AttachContactToConversationRequestCustomerIntercomUserId",
              },
              {
                "type": "AttachContactToConversationRequestCustomerUserId",
              },
              {
                "type": "Email",
              },
            ],
          },
          "AttachContactToConversationRequestCustomerIntercomUserId": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "customer": {
                "type": "optional<root.CustomerRequest>",
              },
              "intercom_user_id": {
                "docs": "The identifier for the contact as given by Intercom.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AttachContactToConversationRequestCustomerUserId": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "customer": {
                "type": "optional<root.CustomerRequest>",
              },
              "user_id": {
                "docs": "The external_id you have defined for the contact who is being added as a participant.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Conversation": {
            "docs": "Conversations are how you can communicate with users in Intercom. They are created when a contact replies to an outbound message, or when one admin directly sends a message to a single contact.",
            "inline": undefined,
            "properties": {
              "admin_assignee_id": {
                "docs": "The id of the admin assigned to the conversation. If it's not assigned to an admin it will return null.",
                "type": "optional<integer>",
              },
              "ai_agent": {
                "type": "optional<aiAgent.AiAgent>",
              },
              "ai_agent_participated": {
                "docs": "Indicates whether the AI Agent participated in the conversation.",
                "type": "optional<boolean>",
              },
              "contacts": {
                "type": "optional<root.Contacts>",
              },
              "conversation_parts": {
                "type": "optional<root.ConversationParts>",
              },
              "conversation_rating": {
                "type": "optional<root.ConversationRating>",
              },
              "created_at": {
                "docs": "The time the conversation was created.",
                "type": "optional<integer>",
              },
              "custom_attributes": {
                "type": "optional<root.CustomAttributes>",
              },
              "first_contact_reply": {
                "type": "optional<root.ConversationFirstContactReply>",
              },
              "id": {
                "docs": "The id representing the conversation.",
                "type": "optional<string>",
              },
              "linked_objects": {
                "type": "optional<root.LinkedObjectList>",
              },
              "open": {
                "docs": "Indicates whether a conversation is open (true) or closed (false).",
                "type": "optional<boolean>",
              },
              "priority": {
                "docs": "If marked as priority, it will return priority or else not_priority.",
                "type": "optional<ConversationPriority>",
              },
              "read": {
                "docs": "Indicates whether a conversation has been read.",
                "type": "optional<boolean>",
              },
              "sla_applied": {
                "type": "optional<root.SlaApplied>",
              },
              "snoozed_until": {
                "docs": "If set this is the time in the future when this conversation will be marked as open. i.e. it will be in a snoozed state until this time. i.e. it will be in a snoozed state until this time.",
                "type": "optional<integer>",
              },
              "source": {
                "type": "optional<root.ConversationSource>",
              },
              "state": {
                "docs": "Can be set to "open", "closed" or "snoozed".",
                "type": "optional<ConversationState>",
              },
              "statistics": {
                "type": "optional<root.ConversationStatistics>",
              },
              "tags": {
                "type": "optional<root.Tags>",
              },
              "team_assignee_id": {
                "docs": "The id of the team assigned to the conversation. If it's not assigned to a team it will return null.",
                "type": "optional<string>",
              },
              "teammates": {
                "type": "optional<root.ConversationTeammates>",
              },
              "title": {
                "docs": "The title given to the conversation.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Always conversation.",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "The last time the conversation was updated.",
                "type": "optional<integer>",
              },
              "waiting_since": {
                "docs": "The last time a Contact responded to an Admin. In other words, the time a customer started waiting for a response. Set to null if last reply is from an Admin.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationPriority": {
            "docs": "If marked as priority, it will return priority or else not_priority.",
            "enum": [
              "priority",
              "not_priority",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ConversationState": {
            "docs": "Can be set to "open", "closed" or "snoozed".",
            "enum": [
              "open",
              "closed",
              "snoozed",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateConversationRequestFrom": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The identifier for the contact which is given by Intercom.",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": 24,
                  "minLength": 24,
                  "pattern": undefined,
                },
              },
              "type": {
                "docs": "The role associated to the contact - user or lead.",
                "type": "CreateConversationRequestFromType",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateConversationRequestFromType": {
            "docs": "The role associated to the contact - user or lead.",
            "enum": [
              "lead",
              "user",
              "contact",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Email": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "customer": {
                "type": "optional<root.CustomerRequest>",
              },
              "email": {
                "docs": "The email you have defined for the contact who is being added as a participant.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ManageConversationRequestBody": {
            "availability": undefined,
            "base-properties": {},
            "discriminant": "message_type",
            "docs": undefined,
            "encoding": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": {
              "assignment": {
                "type": "root.AssignConversationRequest",
              },
              "close": {
                "type": "root.CloseConversationRequest",
              },
              "open": {
                "type": "root.OpenConversationRequest",
              },
              "snoozed": {
                "type": "root.SnoozeConversationRequest",
              },
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
  messages: messages.yml
  tickets: tickets.yml
  aiAgent: aiAgent.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listConversations:
      path: /conversations
      method: GET
      auth: true
      docs: >
        You can fetch a list of all conversations.


        You can optionally request the result page size and the cursor to start
        after to fetch the result.

        {% admonition type="warning" name="Pagination" %}
          You can use pagination to limit the number of results returned. The default is `20` results per page.
          See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#pagination-for-list-apis) for more details on how to use the `starting_after` param.
        {% /admonition %}
      source:
        openapi: ../openapi.yml
      display-name: List all conversations
      request:
        name: ListConversationsRequest
        query-parameters:
          per_page:
            type: optional<integer>
            default: 20
            docs: How many results per page
            validation:
              max: 150
          starting_after:
            type: optional<string>
            docs: String used to get the next page of conversations.
      response:
        docs: successful
        type: root.PaginatedResponse
        status-code: 200
      errors:
        - root.ListConversationsRequestUnauthorizedError
        - root.ListConversationsRequestForbiddenError
      examples:
        - name: successful
          response:
            body:
              type: conversation.list
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 20
                total_pages: 1
              total_count: 1
              data:
                - type: newsfeed
                  id: '12312'
                  name: My Newsfeed
                  created_at: 1674917488
                  updated_at: 1674917488
    createConversation:
      path: /conversations
      method: POST
      auth: true
      docs: >+
        You can create a conversation that has been initiated by a contact (ie.
        user or lead).

        The conversation can be an in-app message only.


        {% admonition type="info" name="Sending for visitors" %}

        You can also send a message from a visitor by specifying their `user_id`
        or `id` value in the `from` field, along with a `type` field value of
        `contact`.

        This visitor will be automatically converted to a contact with a lead
        role once the conversation is created.

        {% /admonition %}


        This will return the Message model that has been created.

      source:
        openapi: ../openapi.yml
      display-name: Creates a conversation
      request:
        name: CreateConversationRequest
        body:
          properties:
            from: CreateConversationRequestFrom
            body:
              type: string
              docs: The content of the message. HTML is not supported.
        content-type: application/json
      response:
        docs: conversation created
        type: messages.Message
        status-code: 200
      errors:
        - root.CreateConversationRequestUnauthorizedError
        - root.CreateConversationRequestForbiddenError
        - root.CreateConversationRequestNotFoundError
      examples:
        - name: conversation created
          request:
            from:
              type: user
              id: 667d60d18a68186f43bafddd
            body: Hello there
          response:
            body:
              type: user_message
              id: '403918251'
              created_at: 1719492819
              subject: Greetings
              body: Hello there
              message_type: inapp
              conversation_id: '363'
        - name: Contact Not Found
          request:
            from:
              type: user
              id: 123_doesnt_exist
            body: Hello there
          response:
            body:
              type: user_message
              id: '403918251'
              created_at: 1719492819
              subject: Greetings
              body: Hello there
              message_type: inapp
              conversation_id: '363'
    retrieveConversation:
      path: /conversations/{id}
      method: GET
      auth: true
      docs: >

        You can fetch the details of a single conversation.


        This will return a single Conversation model with all its conversation
        parts.


        {% admonition type="warning" name="Hard limit of 500 parts" %}

        The maximum number of conversation parts that can be returned via the
        API is 500. If you have more than that we will return the 500 most
        recent conversation parts.

        {% /admonition %}


        For AI agent conversation metadata, please note that you need to have
        the agent enabled in your workspace, which is a [paid
        feature](https://www.intercom.com/help/en/articles/8205718-fin-resolutions#h_97f8c2e671).
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The id of the conversation to target
      display-name: Retrieve a conversation
      request:
        name: RetrieveConversationRequest
        query-parameters:
          display_as:
            type: optional<string>
            docs: Set to plaintext to retrieve conversation messages in plain text.
      response:
        docs: conversation found
        type: Conversation
        status-code: 200
      errors:
        - root.RetrieveConversationRequestUnauthorizedError
        - root.RetrieveConversationRequestForbiddenError
        - root.RetrieveConversationRequestNotFoundError
      examples:
        - name: conversation found
          path-parameters:
            id: 1
          query-parameters:
            display_as: plaintext
          response:
            body:
              type: conversation
              id: '367'
              created_at: 1719492825
              updated_at: 1719492825
              open: false
              state: closed
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918255'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267553'
                  name: Ciaran153 Lee
                  email: admin153@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60d88a68186f43bafde1
                    external_id: '70'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '3'
                    part_type: comment
                    created_at: 1663597223
                    updated_at: 1663597260
                    notified_at: 1663597260
                    redacted: false
                total_count: 0
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
    updateConversation:
      path: /conversations/{id}
      method: PUT
      auth: true
      docs: >+

        You can update an existing conversation.


        {% admonition type="info" name="Replying and other actions" %}

        If you want to reply to a coveration or take an action such as assign,
        unassign, open, close or snooze, take a look at the reply and manage
        endpoints.

        {% /admonition %}

      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The id of the conversation to target
      display-name: Update a conversation
      request:
        name: UpdateConversationRequest
        query-parameters:
          display_as:
            type: optional<string>
            docs: Set to plaintext to retrieve conversation messages in plain text.
        body:
          properties:
            read:
              type: optional<boolean>
              docs: Mark a conversation as read within Intercom.
            custom_attributes:
              type: optional<root.CustomAttributes>
        content-type: application/json
      response:
        docs: conversation found
        type: Conversation
        status-code: 200
      errors:
        - root.UpdateConversationRequestUnauthorizedError
        - root.UpdateConversationRequestForbiddenError
        - root.UpdateConversationRequestNotFoundError
      examples:
        - name: conversation found
          path-parameters:
            id: 1
          query-parameters:
            display_as: plaintext
          request:
            read: true
            custom_attributes:
              issue_type: Billing
              priority: High
          response:
            body:
              type: conversation
              id: '371'
              created_at: 1719492832
              updated_at: 1719492834
              open: false
              state: closed
              read: true
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918259'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267561'
                  name: Ciaran157 Lee
                  email: admin157@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60e08a68186f43bafde5
                    external_id: '70'
              custom_attributes:
                issue_type: Billing
                priority: High
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '96'
                    part_type: conversation_attribute_updated_by_admin
                    created_at: 1719492834
                    updated_at: 1719492834
                    notified_at: 1719492834
                    author:
                      type: bot
                      id: '991267562'
                      name: Operator
                      email: >-
                        operator+this_is_an_id321_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: conversation_part
                    id: '97'
                    part_type: conversation_attribute_updated_by_admin
                    created_at: 1719492834
                    updated_at: 1719492834
                    notified_at: 1719492834
                    author:
                      type: bot
                      id: '991267562'
                      name: Operator
                      email: >-
                        operator+this_is_an_id321_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Not found
          path-parameters:
            id: 1
          query-parameters:
            display_as: plaintext
          request:
            read: true
            custom_attributes:
              issue_type: Billing
              priority: High
          response:
            body:
              type: conversation
              id: '371'
              created_at: 1719492832
              updated_at: 1719492834
              open: false
              state: closed
              read: true
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918259'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267561'
                  name: Ciaran157 Lee
                  email: admin157@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60e08a68186f43bafde5
                    external_id: '70'
              custom_attributes:
                issue_type: Billing
                priority: High
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '96'
                    part_type: conversation_attribute_updated_by_admin
                    created_at: 1719492834
                    updated_at: 1719492834
                    notified_at: 1719492834
                    author:
                      type: bot
                      id: '991267562'
                      name: Operator
                      email: >-
                        operator+this_is_an_id321_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: conversation_part
                    id: '97'
                    part_type: conversation_attribute_updated_by_admin
                    created_at: 1719492834
                    updated_at: 1719492834
                    notified_at: 1719492834
                    author:
                      type: bot
                      id: '991267562'
                      name: Operator
                      email: >-
                        operator+this_is_an_id321_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
    searchConversations:
      path: /conversations/search
      method: POST
      auth: true
      docs: >
        You can search for multiple conversations by the value of their
        attributes in order to fetch exactly which ones you want.


        To search for conversations, you need to send a `POST` request to
        `https://api.intercom.io/conversations/search`.


        This will accept a query object in the body which will define your
        filters in order to search for conversations.

        {% admonition type="warning" name="Optimizing search queries" %}
          Search queries can be complex, so optimizing them can help the performance of your search.
          Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize
          pagination to limit the number of results returned. The default is `20` results per page and maximum is `150`.
          See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.
        {% /admonition %}


        ### Nesting & Limitations


        You can nest these filters in order to get even more granular insights
        that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).

        There are some limitations to the amount of multiple's there can be:

        - There's a limit of max 2 nested filters

        - There's a limit of max 15 filters for each AND or OR group


        ### Accepted Fields


        Most keys listed as part of the The conversation model is searchable,
        whether writeable or not. The value you search for has to match the
        accepted type, otherwise the query will fail (ie. as `created_at`
        accepts a date, the `value` cannot be a string such as `"foorbar"`).


        | Field                                     |
        Type                                                                                                                                                  
        |

        | :---------------------------------------- |
        :-----------------------------------------------------------------------------------------------------------------------------------------------------
        |

        | id                                        |
        String                                                                                                                                                
        |

        | created_at                                | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | updated_at                                | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | source.type                               | String<br>Accepted fields
        are `conversation`, `email`, `facebook`, `instagram`, `phone_call`,
        `phone_switch`, `push`, `sms`, `twitter` and `whatsapp`. |

        | source.id                                 |
        String                                                                                                                                                
        |

        | source.delivered_as                       |
        String                                                                                                                                                
        |

        | source.subject                            |
        String                                                                                                                                                
        |

        | source.body                               |
        String                                                                                                                                                
        |

        | source.author.id                          |
        String                                                                                                                                                
        |

        | source.author.type                        |
        String                                                                                                                                                
        |

        | source.author.name                        |
        String                                                                                                                                                
        |

        | source.author.email                       |
        String                                                                                                                                                
        |

        | source.url                                |
        String                                                                                                                                                
        |

        | contact_ids                               |
        String                                                                                                                                                
        |

        | teammate_ids                              |
        String                                                                                                                                                
        |

        | admin_assignee_id                         |
        String                                                                                                                                                
        |

        | team_assignee_id                          |
        String                                                                                                                                                
        |

        | channel_initiated                         |
        String                                                                                                                                                
        |

        | open                                      |
        Boolean                                                                                                                                               
        |

        | read                                      |
        Boolean                                                                                                                                               
        |

        | state                                     |
        String                                                                                                                                                
        |

        | waiting_since                             | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | snoozed_until                             | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | tag_ids                                   |
        String                                                                                                                                                
        |

        | priority                                  |
        String                                                                                                                                                
        |

        | statistics.time_to_assignment             |
        Integer                                                                                                                                               
        |

        | statistics.time_to_admin_reply            |
        Integer                                                                                                                                               
        |

        | statistics.time_to_first_close            |
        Integer                                                                                                                                               
        |

        | statistics.time_to_last_close             |
        Integer                                                                                                                                               
        |

        | statistics.median_time_to_reply           |
        Integer                                                                                                                                               
        |

        | statistics.first_contact_reply_at         | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.first_assignment_at            | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.first_admin_reply_at           | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.first_close_at                 | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_assignment_at             | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_assignment_admin_reply_at | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_contact_reply_at          | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_admin_reply_at            | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_close_at                  | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | statistics.last_closed_by_id              |
        String                                                                                                                                                
        |

        | statistics.count_reopens                  |
        Integer                                                                                                                                               
        |

        | statistics.count_assignments              |
        Integer                                                                                                                                               
        |

        | statistics.count_conversation_parts       |
        Integer                                                                                                                                               
        |

        | conversation_rating.requested_at          | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | conversation_rating.replied_at            | Date (UNIX
        timestamp)                                                                                                                                 
        |

        | conversation_rating.score                 |
        Integer                                                                                                                                               
        |

        | conversation_rating.remark                |
        String                                                                                                                                                
        |

        | conversation_rating.contact_id            |
        String                                                                                                                                                
        |

        | conversation_rating.admin_d               |
        String                                                                                                                                                
        |

        | ai_agent_participated                     |
        Boolean                                                                                                                                               
        |

        | ai_agent.resolution_state                 |
        String                                                                                                                                                
        |

        | ai_agent.last_answer_type                 |
        String                                                                                                                                                
        |

        | ai_agent.rating                           |
        Integer                                                                                                                                               
        |

        | ai_agent.rating_remark                    |
        String                                                                                                                                                
        |

        | ai_agent.source_type                      |
        String                                                                                                                                                
        |

        | ai_agent.source_title                     |
        String                                                                                                                                                
        |


        ### Accepted Operators


        The table below shows the operators you can use to define how you want
        to search for the value.  The operator should be put in as a string
        (`"="`). The operator has to be compatible with the field's type  (eg.
        you cannot search with `>` for a given string value as it's only
        compatible for integer's and dates).


        | Operator | Valid Types                    |
        Description                                                  |

        | :------- | :----------------------------- |
        :----------------------------------------------------------- |

        | =        | All                            |
        Equals                                                       |

        | !=       | All                            | Doesn't
        Equal                                                |

        | IN       | All                            | In  Shortcut for `OR`
        queries  Values most be in Array       |

        | NIN      | All                            | Not In  Shortcut for `OR
        !` queries  Values must be in Array |

        | >        | Integer  Date (UNIX Timestamp) | Greater (or equal)
        than                                      |

        | <       | Integer  Date (UNIX Timestamp) | Lower (or equal)
        than                                        |

        | ~        | String                         |
        Contains                                                     |

        | !~       | String                         | Doesn't
        Contain                                              |

        | ^        | String                         | Starts
        With                                                  |

        | $        | String                         | Ends
        With                                                    |
      source:
        openapi: ../openapi.yml
      display-name: Search conversations
      request:
        body:
          type: root.SearchRequest
        content-type: application/json
      response:
        docs: successful
        type: root.ConversationList
        status-code: 200
      examples:
        - name: successful
          request:
            query:
              operator: AND
              value:
                - field: created_at
                  operator: '>'
                  value: '1306054154'
            pagination:
              per_page: 5
          response:
            body:
              type: conversation.list
              conversations:
                - type: conversation
                  id: '378'
                  created_at: 1719492843
                  updated_at: 1719492843
                  open: false
                  state: closed
                  read: false
                  priority: not_priority
                  tags:
                    type: tag.list
                    tags:
                      - type: tag
                        id: '123456'
                        name: Test tag
                        applied_at: 1663597223
                  source:
                    type: conversation
                    id: '403918266'
                    delivered_as: admin_initiated
                    subject: ''
                    body: <p>this is the message body</p>
                    author:
                      type: admin
                      id: '991267591'
                      name: Ciaran180 Lee
                      email: admin180@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  contacts:
                    type: contact.list
                    contacts:
                      - type: contact
                        id: 667d60ea8a68186f43bafdec
                        external_id: '70'
                  custom_attributes:
                    key: value
                  conversation_parts:
                    total_count: 2
                  linked_objects:
                    type: list
                    total_count: 0
                    has_more: false
                    data:
                      - id: '7583'
                  ai_agent_participated: false
              total_count: 1
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 5
                total_pages: 1
    replyConversation:
      path: /conversations/{id}/reply
      method: POST
      auth: true
      docs: >-
        You can reply to a conversation with a message from an admin or on
        behalf of a contact, or with a note for admins.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The Intercom provisioned identifier for the conversation or the
            string "last" to reply to the last part of the conversation
      display-name: Reply to a conversation
      request:
        body: root.ReplyConversationRequest
        content-type: application/json
      response:
        docs: User last conversation reply
        type: Conversation
        status-code: 200
      errors:
        - root.ReplyConversationRequestUnauthorizedError
        - root.ReplyConversationRequestForbiddenError
        - root.ReplyConversationRequestNotFoundError
      examples:
        - name: User reply
          path-parameters:
            id: 123 or "last"
          request:
            message_type: comment
            type: user
            body: Thanks again :)
            intercom_user_id: 667d60f18a68186f43bafdf4
          response:
            body:
              type: conversation
              id: '387'
              created_at: 1719492849
              updated_at: 1719492850
              waiting_since: 1719492850
              open: true
              state: open
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918269'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267594'
                  name: Ciaran182 Lee
                  email: admin182@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60f18a68186f43bafdf4
                    external_id: '70'
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1719492850
                type: conversation
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '99'
                    part_type: open
                    body: <p>Thanks again :)</p>
                    created_at: 1719492850
                    updated_at: 1719492850
                    notified_at: 1719492850
                    author:
                      type: user
                      id: 667d60f18a68186f43bafdf4
                      name: Joe Bloggs
                      email: joe@bloggs.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Admin note reply
          path-parameters:
            id: 123 or "last"
          request:
            message_type: note
            type: admin
            body: >-
              <html> <body>  <h2>An Unordered HTML List</h2>  <ul>  
              <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An
              Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>  
              <li>Milk</li> </ol>   </body> </html>
            admin_id: '3156780'
          response:
            body:
              type: conversation
              id: '388'
              created_at: 1719492852
              updated_at: 1719492853
              open: false
              state: closed
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918270'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267596'
                  name: Ciaran183 Lee
                  email: admin183@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60f38a68186f43bafdf5
                    external_id: '70'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '100'
                    part_type: note
                    body: |-
                      <h2>An Unordered HTML List</h2>
                      <ul>
                      <li>Coffee</li>
                      <li>Tea</li>
                      <li>Milk</li>
                      </ul>
                      <h2>An Ordered HTML List</h2>
                      <ol>
                      <li>Coffee</li>
                      <li>Tea</li>
                      <li>Milk</li>
                      </ol>
                    created_at: 1719492853
                    updated_at: 1719492853
                    notified_at: 1719492853
                    author:
                      type: admin
                      id: '991267596'
                      name: Ciaran183 Lee
                      email: admin183@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: User last conversation reply
          path-parameters:
            id: 123 or "last"
          request:
            message_type: comment
            type: user
            body: Thanks again :)
            intercom_user_id: 667d60f78a68186f43bafdf7
          response:
            body:
              type: conversation
              id: '390'
              created_at: 1719492855
              updated_at: 1719492856
              waiting_since: 1719492856
              open: true
              state: open
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918272'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267600'
                  name: Ciaran185 Lee
                  email: admin185@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60f78a68186f43bafdf7
                    external_id: '70'
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1719492856
                type: conversation
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '101'
                    part_type: open
                    body: <p>Thanks again :)</p>
                    created_at: 1719492856
                    updated_at: 1719492856
                    notified_at: 1719492856
                    author:
                      type: user
                      id: 667d60f78a68186f43bafdf7
                      name: Joe Bloggs
                      email: joe@bloggs.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Not found
          path-parameters:
            id: 123 or "last"
          request:
            message_type: comment
            type: user
            body: Thanks again :)
            intercom_user_id: 667d60f98a68186f43bafdf8
          response:
            body:
              type: conversation
              id: '387'
              created_at: 1719492849
              updated_at: 1719492850
              waiting_since: 1719492850
              open: true
              state: open
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918269'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267594'
                  name: Ciaran182 Lee
                  email: admin182@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60f18a68186f43bafdf4
                    external_id: '70'
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1719492850
                type: conversation
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '99'
                    part_type: open
                    body: <p>Thanks again :)</p>
                    created_at: 1719492850
                    updated_at: 1719492850
                    notified_at: 1719492850
                    author:
                      type: user
                      id: 667d60f18a68186f43bafdf4
                      name: Joe Bloggs
                      email: joe@bloggs.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
    manageConversation:
      path: /conversations/{id}/parts
      method: POST
      auth: true
      docs: |
        For managing conversations you can:
        - Close a conversation
        - Snooze a conversation to reopen on a future date
        - Open a conversation which is `snoozed` or `closed`
        - Assign a conversation to an admin and/or team.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The identifier for the conversation as given by Intercom.
      display-name: Manage a conversation
      request:
        body: ManageConversationRequestBody
        content-type: application/json
      response:
        docs: Assign a conversation
        type: Conversation
        status-code: 200
      errors:
        - root.ManageConversationRequestUnauthorizedError
        - root.ManageConversationRequestForbiddenError
        - root.ManageConversationRequestNotFoundError
      examples:
        - name: Close a conversation
          path-parameters:
            id: '123'
          request:
            message_type: assignment
            type: admin
            admin_id: '12345'
            assignee_id: '4324241'
            body: Goodbye :)
          response:
            body:
              type: conversation
              id: '394'
              created_at: 1719492862
              updated_at: 1719492862
              open: false
              state: closed
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918276'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267608'
                  name: Ciaran189 Lee
                  email: admin189@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60fd8a68186f43bafdfb
                    external_id: '70'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '102'
                    part_type: close
                    body: <p>Goodbye :)</p>
                    created_at: 1719492862
                    updated_at: 1719492862
                    notified_at: 1719492862
                    author:
                      type: admin
                      id: '991267608'
                      name: Ciaran189 Lee
                      email: admin189@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Snooze a conversation
          path-parameters:
            id: '123'
          request:
            message_type: assignment
            type: admin
            admin_id: '12345'
            assignee_id: '4324241'
            body: Let me pass you over to one of my colleagues.
          response:
            body:
              type: conversation
              id: '395'
              created_at: 1719492864
              updated_at: 1719492864
              snoozed_until: 1719496464
              open: true
              state: snoozed
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918277'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267610'
                  name: Ciaran190 Lee
                  email: admin190@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60ff8a68186f43bafdfc
                    external_id: '70'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '103'
                    part_type: snoozed
                    created_at: 1719492864
                    updated_at: 1719492864
                    notified_at: 1719492864
                    author:
                      type: admin
                      id: '991267610'
                      name: Ciaran190 Lee
                      email: admin190@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Open a conversation
          path-parameters:
            id: '123'
          request:
            message_type: assignment
            type: admin
            admin_id: '12345'
            assignee_id: '4324241'
            body: Let me pass you over to one of my colleagues.
          response:
            body:
              type: conversation
              id: '400'
              title: ''
              created_at: 1719492863
              updated_at: 1719492873
              open: true
              state: open
              read: true
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918278'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267612'
                  name: Ciaran191 Lee
                  email: admin191@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61038a68186f43bafe01
                    external_id: '74'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '105'
                    part_type: open
                    created_at: 1719492873
                    updated_at: 1719492873
                    notified_at: 1719492873
                    author:
                      type: admin
                      id: '991267612'
                      name: Ciaran191 Lee
                      email: admin191@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Assign a conversation
          path-parameters:
            id: '123'
          request:
            message_type: assignment
            type: admin
            admin_id: '12345'
            assignee_id: '4324241'
            body: Let me pass you over to one of my colleagues.
          response:
            body:
              type: conversation
              id: '405'
              created_at: 1719492874
              updated_at: 1719492875
              open: true
              state: open
              read: false
              priority: not_priority
              admin_assignee_id: 991267615
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918281'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267615'
                  name: Ciaran193 Lee
                  email: admin193@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d610a8a68186f43bafe05
                    external_id: '70'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '106'
                    part_type: assign_and_reopen
                    created_at: 1719492875
                    updated_at: 1719492875
                    notified_at: 1719492875
                    assigned_to:
                      type: admin
                      id: '991267615'
                    author:
                      type: admin
                      id: '991267615'
                      name: Ciaran193 Lee
                      email: admin193@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Not found
          path-parameters:
            id: '123'
          request:
            message_type: assignment
            type: admin
            admin_id: '12345'
            assignee_id: '4324241'
            body: Goodbye :)
          response:
            body:
              type: conversation
              id: '394'
              created_at: 1719492862
              updated_at: 1719492862
              open: false
              state: closed
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918276'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267608'
                  name: Ciaran189 Lee
                  email: admin189@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d60fd8a68186f43bafdfb
                    external_id: '70'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '102'
                    part_type: close
                    body: <p>Goodbye :)</p>
                    created_at: 1719492862
                    updated_at: 1719492862
                    notified_at: 1719492862
                    author:
                      type: admin
                      id: '991267608'
                      name: Ciaran189 Lee
                      email: admin189@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
    autoAssignConversation:
      path: /conversations/{id}/run_assignment_rules
      method: POST
      auth: true
      docs: >
        You can let a conversation be automatically assigned following
        assignment rules.

        {% admonition type="attention" name="When using workflows" %}

        It is not possible to use this endpoint with Workflows.

        {% /admonition %}
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The identifier for the conversation as given by Intercom.
      display-name: Run Assignment Rules on a conversation
      response:
        docs: Assign a conversation using assignment rules
        type: Conversation
        status-code: 200
      errors:
        - root.AutoAssignConversationRequestUnauthorizedError
        - root.AutoAssignConversationRequestForbiddenError
        - root.AutoAssignConversationRequestNotFoundError
      examples:
        - name: Assign a conversation using assignment rules
          path-parameters:
            id: '123'
          response:
            body:
              type: conversation
              id: '409'
              created_at: 1719492880
              updated_at: 1719492881
              open: false
              state: closed
              read: false
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918285'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267623'
                  name: Ciaran197 Lee
                  email: admin197@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61108a68186f43bafe09
                    external_id: '70'
              custom_attributes:
                key: value
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '107'
                    part_type: default_assignment
                    created_at: 1719492881
                    updated_at: 1719492881
                    notified_at: 1719492881
                    assigned_to:
                      type: nobody_admin
                    author:
                      type: bot
                      id: '991267624'
                      name: Operator
                      email: >-
                        operator+this_is_an_id364_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
    attachContactToConversation:
      path: /conversations/{id}/customers
      method: POST
      auth: true
      docs: >+
        You can add participants who are contacts to a conversation, on behalf
        of either another contact or an admin.


        {% admonition type="attention" name="Contacts without an email" %}

        If you add a contact via the email parameter and there is no user/lead
        found on that workspace with he given email, then we will create a new
        contact with `role` set to `lead`.

        {% /admonition %}

      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The identifier for the conversation as given by Intercom.
      display-name: Attach a contact to a conversation
      request:
        name: AttachContactToConversationRequest
        body:
          properties:
            admin_id:
              type: optional<string>
              docs: The `id` of the admin who is adding the new participant.
            customer:
              type: optional<AttachContactToConversationRequestCustomer>
        content-type: application/json
      response:
        docs: Attach a contact to a conversation
        type: Conversation
        status-code: 200
      errors:
        - root.AttachContactToConversationRequestUnauthorizedError
        - root.AttachContactToConversationRequestForbiddenError
        - root.AttachContactToConversationRequestNotFoundError
      examples:
        - name: Attach a contact to a conversation
          path-parameters:
            id: '123'
          request:
            admin_id: '12345'
            customer:
              intercom_user_id: 667d61168a68186f43bafe0d
          response:
            body:
              type: conversation
              id: '1295'
              title: Conversation Title
              created_at: 1663597223
              updated_at: 1663597260
              waiting_since: 1663597260
              snoozed_until: 1663597260
              open: true
              state: open
              read: true
              priority: priority
              admin_assignee_id: 0
              team_assignee_id: '5017691'
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              conversation_rating:
                rating: 5
                remark: ''
                created_at: 1671028894
                contact:
                  type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                teammate:
                  type: contact
                  id: 1a2b3c
              source:
                type: conversation
                id: '3'
                delivered_as: operator_initiated
                subject: ''
                body: <p>Hey there!</p>
                author:
                  type: admin
                  id: '274'
                  name: Operator
                  email: operator+abcd1234@intercom.io
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                url: url
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - id: 5ba682d23d7cf92bef87bfd4
              teammates:
                type: admin.list
                teammates:
                  - type: contact
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1663597223
                type: conversation
                url: https://developers.intercom.com/
              sla_applied:
                type: conversation_sla_summary
                sla_name: ''
                sla_status: hit
              statistics:
                type: conversation_statistics
                time_to_assignment: 2310
                time_to_admin_reply: 2310
                time_to_first_close: 2310
                time_to_last_close: 2310
                median_time_to_reply: 2310
                first_contact_reply_at: 1663597233
                first_assignment_at: 1663597233
                first_admin_reply_at: 1663597233
                first_close_at: 1663597233
                last_assignment_at: 1663597233
                last_assignment_admin_reply_at: 1663597233
                last_contact_reply_at: 1663597233
                last_admin_reply_at: 1663597233
                last_close_at: 1663597233
                last_closed_by_id: c3po
                count_reopens: 1
                count_assignments: 1
                count_conversation_parts: 1
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '3'
                    part_type: comment
                    created_at: 1663597223
                    updated_at: 1663597260
                    notified_at: 1663597260
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 100
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: true
              ai_agent:
                source_type: essentials_plan_setup
                source_title: My AI Workflow
                last_answer_type: ai_answer
                resolution_state: assumed_resolution
                rating: 4
                rating_remark: Very helpful!
                content_sources:
                  type: content_source.list
                  total_count: 1
                  content_sources:
                    - url: /fin-ai-agent/content?content=content_snippet&id=3234924
                      title: My internal content snippet
                      locale: en
        - name: Not found
          path-parameters:
            id: '123'
          request:
            admin_id: '12345'
            customer:
              intercom_user_id: 667d61188a68186f43bafe0e
          response:
            body:
              type: conversation
              id: '1295'
              title: Conversation Title
              created_at: 1663597223
              updated_at: 1663597260
              waiting_since: 1663597260
              snoozed_until: 1663597260
              open: true
              state: open
              read: true
              priority: priority
              admin_assignee_id: 0
              team_assignee_id: '5017691'
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              conversation_rating:
                rating: 5
                remark: ''
                created_at: 1671028894
                contact:
                  type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                teammate:
                  type: contact
                  id: 1a2b3c
              source:
                type: conversation
                id: '3'
                delivered_as: operator_initiated
                subject: ''
                body: <p>Hey there!</p>
                author:
                  type: admin
                  id: '274'
                  name: Operator
                  email: operator+abcd1234@intercom.io
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                url: url
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - id: 5ba682d23d7cf92bef87bfd4
              teammates:
                type: admin.list
                teammates:
                  - type: contact
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1663597223
                type: conversation
                url: https://developers.intercom.com/
              sla_applied:
                type: conversation_sla_summary
                sla_name: ''
                sla_status: hit
              statistics:
                type: conversation_statistics
                time_to_assignment: 2310
                time_to_admin_reply: 2310
                time_to_first_close: 2310
                time_to_last_close: 2310
                median_time_to_reply: 2310
                first_contact_reply_at: 1663597233
                first_assignment_at: 1663597233
                first_admin_reply_at: 1663597233
                first_close_at: 1663597233
                last_assignment_at: 1663597233
                last_assignment_admin_reply_at: 1663597233
                last_contact_reply_at: 1663597233
                last_admin_reply_at: 1663597233
                last_close_at: 1663597233
                last_closed_by_id: c3po
                count_reopens: 1
                count_assignments: 1
                count_conversation_parts: 1
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '3'
                    part_type: comment
                    created_at: 1663597223
                    updated_at: 1663597260
                    notified_at: 1663597260
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 100
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: true
              ai_agent:
                source_type: essentials_plan_setup
                source_title: My AI Workflow
                last_answer_type: ai_answer
                resolution_state: assumed_resolution
                rating: 4
                rating_remark: Very helpful!
                content_sources:
                  type: content_source.list
                  total_count: 1
                  content_sources:
                    - url: /fin-ai-agent/content?content=content_snippet&id=3234924
                      title: My internal content snippet
                      locale: en
    detachContactFromConversation:
      path: /conversations/{conversation_id}/customers/{contact_id}
      method: DELETE
      auth: true
      docs: >+
        You can add participants who are contacts to a conversation, on behalf
        of either another contact or an admin.


        {% admonition type="attention" name="Contacts without an email" %}

        If you add a contact via the email parameter and there is no user/lead
        found on that workspace with he given email, then we will create a new
        contact with `role` set to `lead`.

        {% /admonition %}

      source:
        openapi: ../openapi.yml
      path-parameters:
        conversation_id:
          type: string
          docs: The identifier for the conversation as given by Intercom.
        contact_id:
          type: string
          docs: The identifier for the contact as given by Intercom.
      display-name: Detach a contact from a group conversation
      request:
        name: DetachContactFromConversationRequest
        body:
          properties:
            admin_id:
              type: string
              docs: The `id` of the admin who is performing the action.
        content-type: application/json
      response:
        docs: Detach a contact from a group conversation
        type: Conversation
        status-code: 200
      errors:
        - root.DetachContactFromConversationRequestUnauthorizedError
        - root.DetachContactFromConversationRequestForbiddenError
        - root.DetachContactFromConversationRequestNotFoundError
        - root.DetachContactFromConversationRequestUnprocessableEntityError
      examples:
        - name: Detach a contact from a group conversation
          path-parameters:
            conversation_id: '123'
            contact_id: '123'
          request:
            admin_id: '5017690'
          response:
            body:
              type: conversation
              id: '1295'
              title: Conversation Title
              created_at: 1663597223
              updated_at: 1663597260
              waiting_since: 1663597260
              snoozed_until: 1663597260
              open: true
              state: open
              read: true
              priority: priority
              admin_assignee_id: 0
              team_assignee_id: '5017691'
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              conversation_rating:
                rating: 5
                remark: ''
                created_at: 1671028894
                contact:
                  type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                teammate:
                  type: contact
                  id: 1a2b3c
              source:
                type: conversation
                id: '3'
                delivered_as: operator_initiated
                subject: ''
                body: <p>Hey there!</p>
                author:
                  type: admin
                  id: '274'
                  name: Operator
                  email: operator+abcd1234@intercom.io
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                url: url
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - id: 5ba682d23d7cf92bef87bfd4
              teammates:
                type: admin.list
                teammates:
                  - type: contact
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1663597223
                type: conversation
                url: https://developers.intercom.com/
              sla_applied:
                type: conversation_sla_summary
                sla_name: ''
                sla_status: hit
              statistics:
                type: conversation_statistics
                time_to_assignment: 2310
                time_to_admin_reply: 2310
                time_to_first_close: 2310
                time_to_last_close: 2310
                median_time_to_reply: 2310
                first_contact_reply_at: 1663597233
                first_assignment_at: 1663597233
                first_admin_reply_at: 1663597233
                first_close_at: 1663597233
                last_assignment_at: 1663597233
                last_assignment_admin_reply_at: 1663597233
                last_contact_reply_at: 1663597233
                last_admin_reply_at: 1663597233
                last_close_at: 1663597233
                last_closed_by_id: c3po
                count_reopens: 1
                count_assignments: 1
                count_conversation_parts: 1
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '3'
                    part_type: comment
                    created_at: 1663597223
                    updated_at: 1663597260
                    notified_at: 1663597260
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 100
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: true
              ai_agent:
                source_type: essentials_plan_setup
                source_title: My AI Workflow
                last_answer_type: ai_answer
                resolution_state: assumed_resolution
                rating: 4
                rating_remark: Very helpful!
                content_sources:
                  type: content_source.list
                  total_count: 1
                  content_sources:
                    - url: /fin-ai-agent/content?content=content_snippet&id=3234924
                      title: My internal content snippet
                      locale: en
        - name: Conversation not found
          path-parameters:
            conversation_id: '123'
            contact_id: '123'
          request:
            admin_id: '5017690'
          response:
            body:
              type: conversation
              id: '1295'
              title: Conversation Title
              created_at: 1663597223
              updated_at: 1663597260
              waiting_since: 1663597260
              snoozed_until: 1663597260
              open: true
              state: open
              read: true
              priority: priority
              admin_assignee_id: 0
              team_assignee_id: '5017691'
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              conversation_rating:
                rating: 5
                remark: ''
                created_at: 1671028894
                contact:
                  type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                teammate:
                  type: contact
                  id: 1a2b3c
              source:
                type: conversation
                id: '3'
                delivered_as: operator_initiated
                subject: ''
                body: <p>Hey there!</p>
                author:
                  type: admin
                  id: '274'
                  name: Operator
                  email: operator+abcd1234@intercom.io
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                url: url
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - id: 5ba682d23d7cf92bef87bfd4
              teammates:
                type: admin.list
                teammates:
                  - type: contact
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1663597223
                type: conversation
                url: https://developers.intercom.com/
              sla_applied:
                type: conversation_sla_summary
                sla_name: ''
                sla_status: hit
              statistics:
                type: conversation_statistics
                time_to_assignment: 2310
                time_to_admin_reply: 2310
                time_to_first_close: 2310
                time_to_last_close: 2310
                median_time_to_reply: 2310
                first_contact_reply_at: 1663597233
                first_assignment_at: 1663597233
                first_admin_reply_at: 1663597233
                first_close_at: 1663597233
                last_assignment_at: 1663597233
                last_assignment_admin_reply_at: 1663597233
                last_contact_reply_at: 1663597233
                last_admin_reply_at: 1663597233
                last_close_at: 1663597233
                last_closed_by_id: c3po
                count_reopens: 1
                count_assignments: 1
                count_conversation_parts: 1
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '3'
                    part_type: comment
                    created_at: 1663597223
                    updated_at: 1663597260
                    notified_at: 1663597260
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 100
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: true
              ai_agent:
                source_type: essentials_plan_setup
                source_title: My AI Workflow
                last_answer_type: ai_answer
                resolution_state: assumed_resolution
                rating: 4
                rating_remark: Very helpful!
                content_sources:
                  type: content_source.list
                  total_count: 1
                  content_sources:
                    - url: /fin-ai-agent/content?content=content_snippet&id=3234924
                      title: My internal content snippet
                      locale: en
        - name: Contact not found
          path-parameters:
            conversation_id: '123'
            contact_id: '123'
          request:
            admin_id: '5017690'
          response:
            body:
              type: conversation
              id: '1295'
              title: Conversation Title
              created_at: 1663597223
              updated_at: 1663597260
              waiting_since: 1663597260
              snoozed_until: 1663597260
              open: true
              state: open
              read: true
              priority: priority
              admin_assignee_id: 0
              team_assignee_id: '5017691'
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              conversation_rating:
                rating: 5
                remark: ''
                created_at: 1671028894
                contact:
                  type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                teammate:
                  type: contact
                  id: 1a2b3c
              source:
                type: conversation
                id: '3'
                delivered_as: operator_initiated
                subject: ''
                body: <p>Hey there!</p>
                author:
                  type: admin
                  id: '274'
                  name: Operator
                  email: operator+abcd1234@intercom.io
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                url: url
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - id: 5ba682d23d7cf92bef87bfd4
              teammates:
                type: admin.list
                teammates:
                  - type: contact
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1663597223
                type: conversation
                url: https://developers.intercom.com/
              sla_applied:
                type: conversation_sla_summary
                sla_name: ''
                sla_status: hit
              statistics:
                type: conversation_statistics
                time_to_assignment: 2310
                time_to_admin_reply: 2310
                time_to_first_close: 2310
                time_to_last_close: 2310
                median_time_to_reply: 2310
                first_contact_reply_at: 1663597233
                first_assignment_at: 1663597233
                first_admin_reply_at: 1663597233
                first_close_at: 1663597233
                last_assignment_at: 1663597233
                last_assignment_admin_reply_at: 1663597233
                last_contact_reply_at: 1663597233
                last_admin_reply_at: 1663597233
                last_close_at: 1663597233
                last_closed_by_id: c3po
                count_reopens: 1
                count_assignments: 1
                count_conversation_parts: 1
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '3'
                    part_type: comment
                    created_at: 1663597223
                    updated_at: 1663597260
                    notified_at: 1663597260
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 100
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: true
              ai_agent:
                source_type: essentials_plan_setup
                source_title: My AI Workflow
                last_answer_type: ai_answer
                resolution_state: assumed_resolution
                rating: 4
                rating_remark: Very helpful!
                content_sources:
                  type: content_source.list
                  total_count: 1
                  content_sources:
                    - url: /fin-ai-agent/content?content=content_snippet&id=3234924
                      title: My internal content snippet
                      locale: en
        - name: Last customer
          path-parameters:
            conversation_id: '123'
            contact_id: '123'
          request:
            admin_id: '5017690'
          response:
            body:
              type: conversation
              id: '1295'
              title: Conversation Title
              created_at: 1663597223
              updated_at: 1663597260
              waiting_since: 1663597260
              snoozed_until: 1663597260
              open: true
              state: open
              read: true
              priority: priority
              admin_assignee_id: 0
              team_assignee_id: '5017691'
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              conversation_rating:
                rating: 5
                remark: ''
                created_at: 1671028894
                contact:
                  type: contact
                  id: 5ba682d23d7cf92bef87bfd4
                  external_id: f3b87a2e09d514c6c2e79b9a
                teammate:
                  type: contact
                  id: 1a2b3c
              source:
                type: conversation
                id: '3'
                delivered_as: operator_initiated
                subject: ''
                body: <p>Hey there!</p>
                author:
                  type: admin
                  id: '274'
                  name: Operator
                  email: operator+abcd1234@intercom.io
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                url: url
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - id: 5ba682d23d7cf92bef87bfd4
              teammates:
                type: admin.list
                teammates:
                  - type: contact
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1663597223
                type: conversation
                url: https://developers.intercom.com/
              sla_applied:
                type: conversation_sla_summary
                sla_name: ''
                sla_status: hit
              statistics:
                type: conversation_statistics
                time_to_assignment: 2310
                time_to_admin_reply: 2310
                time_to_first_close: 2310
                time_to_last_close: 2310
                median_time_to_reply: 2310
                first_contact_reply_at: 1663597233
                first_assignment_at: 1663597233
                first_admin_reply_at: 1663597233
                first_close_at: 1663597233
                last_assignment_at: 1663597233
                last_assignment_admin_reply_at: 1663597233
                last_contact_reply_at: 1663597233
                last_admin_reply_at: 1663597233
                last_close_at: 1663597233
                last_closed_by_id: c3po
                count_reopens: 1
                count_assignments: 1
                count_conversation_parts: 1
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '3'
                    part_type: comment
                    created_at: 1663597223
                    updated_at: 1663597260
                    notified_at: 1663597260
                    redacted: false
                total_count: 2
              linked_objects:
                type: list
                total_count: 100
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: true
              ai_agent:
                source_type: essentials_plan_setup
                source_title: My AI Workflow
                last_answer_type: ai_answer
                resolution_state: assumed_resolution
                rating: 4
                rating_remark: Very helpful!
                content_sources:
                  type: content_source.list
                  total_count: 1
                  content_sources:
                    - url: /fin-ai-agent/content?content=content_snippet&id=3234924
                      title: My internal content snippet
                      locale: en
    redactConversation:
      path: /conversations/redact
      method: POST
      auth: true
      docs: >+
        You can redact a conversation part or the source message of a
        conversation (as seen in the source object).


        {% admonition type="info" name="Redacting parts and messages" %}

        If you are redacting a conversation part, it must have a `body`. If you
        are redacting a source message, it must have been created by a contact.
        We will return a `conversation_part_not_redactable` error if these
        criteria are not met.

        {% /admonition %}

      source:
        openapi: ../openapi.yml
      display-name: Redact a conversation part
      request:
        body: root.RedactConversationRequest
        content-type: application/json
      response:
        docs: Redact a conversation part
        type: Conversation
        status-code: 200
      errors:
        - root.RedactConversationRequestUnauthorizedError
        - root.RedactConversationRequestNotFoundError
      examples:
        - name: Redact a conversation part
          request:
            type: conversation_part
            conversation_id: '19894788788'
            conversation_part_id: '19381789428'
          response:
            body:
              type: conversation
              id: '471'
              created_at: 1719492938
              updated_at: 1719492940
              waiting_since: 1719492939
              open: true
              state: open
              read: true
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918311'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267657'
                  name: Ciaran217 Lee
                  email: admin217@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d614a8a68186f43bafe42
                    external_id: '70'
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1719492939
                type: conversation
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '115'
                    part_type: open
                    body: <p><i>This message was deleted</i></p>
                    created_at: 1719492939
                    updated_at: 1719492940
                    notified_at: 1719492939
                    author:
                      type: user
                      id: 667d614a8a68186f43bafe42
                      name: Joe Bloggs
                      email: joe@bloggs.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: true
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
        - name: Not found
          request:
            type: conversation_part
            conversation_id: really_123_doesnt_exist
            conversation_part_id: really_123_doesnt_exist
          response:
            body:
              type: conversation
              id: '471'
              created_at: 1719492938
              updated_at: 1719492940
              waiting_since: 1719492939
              open: true
              state: open
              read: true
              priority: not_priority
              tags:
                type: tag.list
                tags:
                  - type: tag
                    id: '123456'
                    name: Test tag
                    applied_at: 1663597223
              source:
                type: conversation
                id: '403918311'
                delivered_as: admin_initiated
                subject: ''
                body: <p>this is the message body</p>
                author:
                  type: admin
                  id: '991267657'
                  name: Ciaran217 Lee
                  email: admin217@email.com
                attachments:
                  - type: upload
                    name: example.png
                    url: https://picsum.photos/200/300
                    content_type: image/png
                    filesize: 100
                    width: 100
                    height: 100
                redacted: false
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d614a8a68186f43bafe42
                    external_id: '70'
              custom_attributes:
                key: value
              first_contact_reply:
                created_at: 1719492939
                type: conversation
              conversation_parts:
                type: conversation_part.list
                conversation_parts:
                  - type: conversation_part
                    id: '115'
                    part_type: open
                    body: <p><i>This message was deleted</i></p>
                    created_at: 1719492939
                    updated_at: 1719492940
                    notified_at: 1719492939
                    author:
                      type: user
                      id: 667d614a8a68186f43bafe42
                      name: Joe Bloggs
                      email: joe@bloggs.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: true
                total_count: 1
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ai_agent_participated: false
    convertConversationToTicket:
      path: /conversations/{id}/convert
      method: POST
      auth: true
      docs: You can convert a conversation to a ticket.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The id of the conversation to target
      display-name: Convert a conversation to a ticket
      request:
        name: ConvertConversationToTicketRequest
        body:
          properties:
            ticket_type_id:
              type: string
              docs: >-
                The ID of the type of ticket you want to convert the
                conversation to
            attributes:
              type: optional<root.TicketRequestCustomAttributes>
        content-type: application/json
      response:
        docs: successful
        type: optional<tickets.Ticket>
        status-code: 200
      errors:
        - root.ConvertConversationToTicketRequestBadRequestError
      examples:
        - name: successful
          path-parameters:
            id: 1
          request:
            ticket_type_id: '79'
          response:
            body:
              type: ticket
              id: '474'
              ticket_id: '37'
              category: Customer
              ticket_attributes:
                key: value
              ticket_state: submitted
              ticket_type:
                type: ticket_type
                id: '79'
                category: Customer
                name: my-ticket-type-1
                description: my ticket type description is awesome.
                icon: 🦁
                workspace_id: this_is_an_id404_that_should_be_at_least_
                ticket_type_attributes:
                  type: list
                archived: false
                created_at: 1719492947
                updated_at: 1719492947
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61518a68186f43bafe45
                    external_id: '70'
              admin_assignee_id: '0'
              team_assignee_id: '0'
              created_at: 1719492945
              updated_at: 1719492947
              open: true
              snoozed_until: 1663597260
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ticket_parts:
                type: ticket_part.list
                ticket_parts:
                  - type: ticket_part
                    id: '117'
                    part_type: comment
                    body: <p>Comment for message</p>
                    created_at: 1719492945
                    updated_at: 1719492945
                    author:
                      type: user
                      id: 667d61518a68186f43bafe45
                      name: Joe Bloggs
                      email: joe@bloggs.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '118'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: submitted
                    created_at: 1719492947
                    updated_at: 1719492947
                    author:
                      type: bot
                      id: '991267667'
                      name: Operator
                      email: >-
                        operator+this_is_an_id404_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 2
              is_shared: true
              ticket_state_internal_label: Submitted
              ticket_state_external_label: Submitted
        - name: Bad request
          path-parameters:
            id: 1
          request:
            ticket_type_id: '80'
          response:
            body:
              type: ticket
              id: '474'
              ticket_id: '37'
              category: Customer
              ticket_attributes:
                key: value
              ticket_state: submitted
              ticket_type:
                type: ticket_type
                id: '79'
                category: Customer
                name: my-ticket-type-1
                description: my ticket type description is awesome.
                icon: 🦁
                workspace_id: this_is_an_id404_that_should_be_at_least_
                ticket_type_attributes:
                  type: list
                archived: false
                created_at: 1719492947
                updated_at: 1719492947
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61518a68186f43bafe45
                    external_id: '70'
              admin_assignee_id: '0'
              team_assignee_id: '0'
              created_at: 1719492945
              updated_at: 1719492947
              open: true
              snoozed_until: 1663597260
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ticket_parts:
                type: ticket_part.list
                ticket_parts:
                  - type: ticket_part
                    id: '117'
                    part_type: comment
                    body: <p>Comment for message</p>
                    created_at: 1719492945
                    updated_at: 1719492945
                    author:
                      type: user
                      id: 667d61518a68186f43bafe45
                      name: Joe Bloggs
                      email: joe@bloggs.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '118'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: submitted
                    created_at: 1719492947
                    updated_at: 1719492947
                    author:
                      type: bot
                      id: '991267667'
                      name: Operator
                      email: >-
                        operator+this_is_an_id404_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 2
              is_shared: true
              ticket_state_internal_label: Submitted
              ticket_state_external_label: Submitted
  source:
    openapi: ../openapi.yml
  display-name: Conversations
docs: Everything about your Conversations
types:
  CreateConversationRequestFromType:
    enum:
      - lead
      - user
      - contact
    docs: The role associated to the contact - user or lead.
    inline: true
    source:
      openapi: ../openapi.yml
  CreateConversationRequestFrom:
    properties:
      type:
        type: CreateConversationRequestFromType
        docs: The role associated to the contact - user or lead.
      id:
        type: string
        docs: The identifier for the contact which is given by Intercom.
        validation:
          format: uuid
          minLength: 24
          maxLength: 24
    source:
      openapi: ../openapi.yml
    inline: true
  ManageConversationRequestBody:
    discriminant: message_type
    base-properties: {}
    union:
      close:
        type: root.CloseConversationRequest
      snoozed:
        type: root.SnoozeConversationRequest
      open:
        type: root.OpenConversationRequest
      assignment:
        type: root.AssignConversationRequest
    source:
      openapi: ../openapi.yml
  AttachContactToConversationRequestCustomerIntercomUserId:
    properties:
      intercom_user_id:
        type: string
        docs: The identifier for the contact as given by Intercom.
      customer:
        type: optional<root.CustomerRequest>
    source:
      openapi: ../openapi.yml
    inline: true
  AttachContactToConversationRequestCustomerUserId:
    properties:
      user_id:
        type: string
        docs: >-
          The external_id you have defined for the contact who is being added as
          a participant.
      customer:
        type: optional<root.CustomerRequest>
    source:
      openapi: ../openapi.yml
    inline: true
  Email:
    properties:
      email:
        type: string
        docs: >-
          The email you have defined for the contact who is being added as a
          participant.
      customer:
        type: optional<root.CustomerRequest>
    source:
      openapi: ../openapi.yml
    inline: true
  AttachContactToConversationRequestCustomer:
    discriminated: false
    union:
      - type: AttachContactToConversationRequestCustomerIntercomUserId
      - type: AttachContactToConversationRequestCustomerUserId
      - type: Email
    source:
      openapi: ../openapi.yml
    inline: true
  ConversationState:
    enum:
      - open
      - closed
      - snoozed
    docs: Can be set to "open", "closed" or "snoozed".
    inline: true
    source:
      openapi: ../openapi.yml
  ConversationPriority:
    enum:
      - priority
      - not_priority
    docs: If marked as priority, it will return priority or else not_priority.
    inline: true
    source:
      openapi: ../openapi.yml
  Conversation:
    docs: >-
      Conversations are how you can communicate with users in Intercom. They are
      created when a contact replies to an outbound message, or when one admin
      directly sends a message to a single contact.
    properties:
      type:
        type: optional<string>
        docs: Always conversation.
      id:
        type: optional<string>
        docs: The id representing the conversation.
      title:
        type: optional<string>
        docs: The title given to the conversation.
      created_at:
        type: optional<integer>
        docs: The time the conversation was created.
      updated_at:
        type: optional<integer>
        docs: The last time the conversation was updated.
      waiting_since:
        type: optional<integer>
        docs: >-
          The last time a Contact responded to an Admin. In other words, the
          time a customer started waiting for a response. Set to null if last
          reply is from an Admin.
      snoozed_until:
        type: optional<integer>
        docs: >-
          If set this is the time in the future when this conversation will be
          marked as open. i.e. it will be in a snoozed state until this time.
          i.e. it will be in a snoozed state until this time.
      open:
        type: optional<boolean>
        docs: Indicates whether a conversation is open (true) or closed (false).
      state:
        type: optional<ConversationState>
        docs: Can be set to "open", "closed" or "snoozed".
      read:
        type: optional<boolean>
        docs: Indicates whether a conversation has been read.
      priority:
        type: optional<ConversationPriority>
        docs: If marked as priority, it will return priority or else not_priority.
      admin_assignee_id:
        type: optional<integer>
        docs: >-
          The id of the admin assigned to the conversation. If it's not assigned
          to an admin it will return null.
      team_assignee_id:
        type: optional<string>
        docs: >-
          The id of the team assigned to the conversation. If it's not assigned
          to a team it will return null.
      tags:
        type: optional<root.Tags>
      conversation_rating:
        type: optional<root.ConversationRating>
      source:
        type: optional<root.ConversationSource>
      contacts:
        type: optional<root.Contacts>
      teammates:
        type: optional<root.ConversationTeammates>
      custom_attributes:
        type: optional<root.CustomAttributes>
      first_contact_reply:
        type: optional<root.ConversationFirstContactReply>
      sla_applied:
        type: optional<root.SlaApplied>
      statistics:
        type: optional<root.ConversationStatistics>
      conversation_parts:
        type: optional<root.ConversationParts>
      linked_objects:
        type: optional<root.LinkedObjectList>
      ai_agent_participated:
        type: optional<boolean>
        docs: Indicates whether the AI Agent participated in the conversation.
      ai_agent:
        type: optional<aiAgent.AiAgent>
    source:
      openapi: ../openapi.yml
",
    },
    "customObjectInstances.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "types": {
          "CustomObjectInstance": {
            "docs": "A Custom Object Instance represents an instance of a custom object type. This allows you to create and set custom attributes to store data about your customers that is not already captured by Intercom. The parent object includes recommended default attributes and you can add your own custom attributes.",
            "inline": undefined,
            "properties": {
              "custom_attributes": {
                "docs": "The custom attributes you have set on the custom object instance.",
                "type": "optional<map<string, string>>",
              },
              "external_id": {
                "docs": "The id you have defined for the custom object instance.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The Intercom defined id representing the custom object instance.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The identifier of the custom object type that defines the structure of the custom object instance.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  CustomObjectInstance:
    docs: >-
      A Custom Object Instance represents an instance of a custom object type.
      This allows you to create and set custom attributes to store data about
      your customers that is not already captured by Intercom. The parent object
      includes recommended default attributes and you can add your own custom
      attributes.
    properties:
      id:
        type: optional<string>
        docs: The Intercom defined id representing the custom object instance.
      external_id:
        type: optional<string>
        docs: The id you have defined for the custom object instance.
      type:
        type: optional<string>
        docs: >-
          The identifier of the custom object type that defines the structure of
          the custom object instance.
      custom_attributes:
        type: optional<map<string, string>>
        docs: The custom attributes you have set on the custom object instance.
    source:
      openapi: ../openapi.yml
",
    },
    "dataAttributes.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Data Attributes",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Data Attributes",
          "endpoints": {
            "createDataAttribute": {
              "auth": true,
              "display-name": "Create a data attribute",
              "docs": "You can create a data attributes for a `contact` or a `company`.",
              "errors": [
                "root.CreateDataAttributeRequestBadRequestError",
                "root.CreateDataAttributeRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "request": {
                    "data_type": "string",
                    "model": "company",
                    "name": "Mithril Shirt",
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267686",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492955,
                      "custom": true,
                      "data_type": "string",
                      "description": "Whether the user is a paid subscriber.",
                      "full_name": "custom_attributes.Mithril Shirt",
                      "id": 37,
                      "label": "Mithril Shirt",
                      "messenger_writable": false,
                      "model": "company",
                      "name": "Mithril Shirt",
                      "options": [
                        "true",
                        "false",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492955,
                    },
                  },
                },
                {
                  "name": "Same name already exists",
                  "request": {
                    "data_type": "integer",
                    "model": "contact",
                    "name": "The One Ring",
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267686",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492955,
                      "custom": true,
                      "data_type": "string",
                      "description": "Whether the user is a paid subscriber.",
                      "full_name": "custom_attributes.Mithril Shirt",
                      "id": 37,
                      "label": "Mithril Shirt",
                      "messenger_writable": false,
                      "model": "company",
                      "name": "Mithril Shirt",
                      "options": [
                        "true",
                        "false",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492955,
                    },
                  },
                },
                {
                  "name": "Invalid name",
                  "request": {
                    "data_type": "string",
                    "model": "company",
                    "name": "!nv@l!d n@me",
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267686",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492955,
                      "custom": true,
                      "data_type": "string",
                      "description": "Whether the user is a paid subscriber.",
                      "full_name": "custom_attributes.Mithril Shirt",
                      "id": 37,
                      "label": "Mithril Shirt",
                      "messenger_writable": false,
                      "model": "company",
                      "name": "Mithril Shirt",
                      "options": [
                        "true",
                        "false",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492955,
                    },
                  },
                },
                {
                  "name": "Attribute already exists",
                  "request": {
                    "data_type": "string",
                    "model": "company",
                    "name": "The One Ring",
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267686",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492955,
                      "custom": true,
                      "data_type": "string",
                      "description": "Whether the user is a paid subscriber.",
                      "full_name": "custom_attributes.Mithril Shirt",
                      "id": 37,
                      "label": "Mithril Shirt",
                      "messenger_writable": false,
                      "model": "company",
                      "name": "Mithril Shirt",
                      "options": [
                        "true",
                        "false",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492955,
                    },
                  },
                },
                {
                  "name": "Invalid Data Type",
                  "request": {
                    "data_type": "string",
                    "model": "company",
                    "name": "The Second Ring",
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267686",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492955,
                      "custom": true,
                      "data_type": "string",
                      "description": "Whether the user is a paid subscriber.",
                      "full_name": "custom_attributes.Mithril Shirt",
                      "id": 37,
                      "label": "Mithril Shirt",
                      "messenger_writable": false,
                      "model": "company",
                      "name": "Mithril Shirt",
                      "options": [
                        "true",
                        "false",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492955,
                    },
                  },
                },
                {
                  "name": "Too few options for list",
                  "request": {
                    "data_type": "string",
                    "description": "Just a plain old ring",
                    "model": "contact",
                    "name": "My Data Attribute",
                    "options": [
                      "options",
                    ],
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267686",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492955,
                      "custom": true,
                      "data_type": "string",
                      "description": "Whether the user is a paid subscriber.",
                      "full_name": "custom_attributes.Mithril Shirt",
                      "id": 37,
                      "label": "Mithril Shirt",
                      "messenger_writable": false,
                      "model": "company",
                      "name": "Mithril Shirt",
                      "options": [
                        "true",
                        "false",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492955,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/data_attributes",
              "request": {
                "body": {
                  "properties": {
                    "data_type": {
                      "docs": "The type of data stored for this attribute.",
                      "type": "CreateDataAttributeRequestDataType",
                    },
                    "description": {
                      "docs": "The readable description you see in the UI for the attribute.",
                      "type": "optional<string>",
                    },
                    "messenger_writable": {
                      "docs": "Can this attribute be updated by the Messenger",
                      "type": "optional<boolean>",
                    },
                    "model": {
                      "docs": "The model that the data attribute belongs to.",
                      "type": "CreateDataAttributeRequestModel",
                    },
                    "name": {
                      "docs": "The name of the data attribute.",
                      "type": "string",
                    },
                    "options": {
                      "docs": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`.",
                      "type": "optional<list<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateDataAttributeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "DataAttribute",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "lisDataAttributes": {
              "auth": true,
              "display-name": "List all data attributes",
              "docs": "You can fetch a list of all data attributes belonging to a workspace for contacts, companies or conversations.",
              "errors": [
                "root.LisDataAttributesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "admin_id": "5712945",
                          "api_writable": true,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "The name of a company",
                          "full_name": "name",
                          "id": 12878,
                          "label": "Company name",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "name",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "A number identifying a company",
                          "full_name": "company_id",
                          "id": 12878,
                          "label": "Company ID",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "company_id",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "date",
                          "description": "The last day anyone from a company visited your site or app",
                          "full_name": "last_request_at",
                          "id": 12878,
                          "label": "Company last seen",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "last_request_at",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": true,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "date",
                          "description": "The day a company was added to Intercom",
                          "full_name": "remote_created_at",
                          "id": 12878,
                          "label": "Company created at",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "remote_created_at",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "integer",
                          "description": "The number of people in a company",
                          "full_name": "user_count",
                          "id": 12878,
                          "label": "People",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "user_count",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "integer",
                          "description": "All visits from anyone in a company to your product's site or app",
                          "full_name": "session_count",
                          "id": 12878,
                          "label": "Company web sessions",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "session_count",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "A specific plan or level within your product that companies have signed up to",
                          "full_name": "plan.name",
                          "id": 12878,
                          "label": "Plan",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "name",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": true,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "float",
                          "description": "The monthly revenue you receive from a company",
                          "full_name": "monthly_spend",
                          "id": 12878,
                          "label": "Monthly Spend",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "monthly_spend",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": true,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "integer",
                          "description": "The number of people employed in this company, expressed as a single number",
                          "full_name": "size",
                          "id": 12878,
                          "label": "Company size",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "size",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": true,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "The category or domain this company belongs to e.g. 'ecommerce' or 'SaaS'",
                          "full_name": "industry",
                          "id": 12878,
                          "label": "Company industry",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "industry",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": true,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "The web address for the company's primary marketing site",
                          "full_name": "website",
                          "id": 12878,
                          "label": "Company website",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "website",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "991267684",
                          "api_writable": true,
                          "archived": false,
                          "created_at": 1719492954,
                          "custom": true,
                          "data_type": "string",
                          "description": "One ring to rule them all, one ring to find them, One ring to bring them all and in the darkness bind them.",
                          "full_name": "custom_attributes.The One Ring",
                          "id": 34,
                          "label": "The One Ring",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "The One Ring",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1719492954,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "The Intercom defined id representing the company",
                          "full_name": "id",
                          "id": 12878,
                          "label": "ID",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "id",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "date",
                          "description": "The time the company was added to Intercom",
                          "full_name": "created_at",
                          "id": 12878,
                          "label": "Created at",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "created_at",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "date",
                          "description": "The last time the company was updated",
                          "full_name": "updated_at",
                          "id": 12878,
                          "label": "Updated at",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "updated_at",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "The Intercom defined id representing the plan",
                          "full_name": "plan.id",
                          "id": 12878,
                          "label": "Plan ID",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "id",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                        {
                          "admin_id": "5712945",
                          "api_writable": false,
                          "archived": false,
                          "created_at": 1671028894,
                          "custom": false,
                          "data_type": "string",
                          "description": "The Intercom defined id representing the app",
                          "full_name": "app_id",
                          "id": 12878,
                          "label": "App ID",
                          "messenger_writable": true,
                          "model": "company",
                          "name": "app_id",
                          "options": [
                            "true",
                            "false",
                          ],
                          "type": "data_attribute",
                          "ui_writable": false,
                          "updated_at": 1671028894,
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/data_attributes",
              "request": {
                "name": "LisDataAttributesRequest",
                "query-parameters": {
                  "include_archived": {
                    "docs": "Include archived attributes in the list. By default we return only non archived data attributes.",
                    "type": "optional<boolean>",
                  },
                  "model": {
                    "docs": "Specify the data attribute model to return.",
                    "type": "optional<LisDataAttributesRequestModel>",
                  },
                },
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "root.DataAttributeList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateDataAttribute": {
              "auth": true,
              "display-name": "Update a data attribute",
              "docs": "
You can update a data attribute.

> 🚧 Updating the data type is not possible
>
> It is currently a dangerous action to execute changing a data attribute's type via the API. You will need to update the type via the UI instead.
",
              "errors": [
                "root.UpdateDataAttributeRequestBadRequestError",
                "root.UpdateDataAttributeRequestUnauthorizedError",
                "root.UpdateDataAttributeRequestNotFoundError",
                "root.UpdateDataAttributeRequestUnprocessableEntityError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "archived": false,
                    "description": "Just a plain old ring",
                    "options": [
                      "options",
                      "options",
                    ],
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267693",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492958,
                      "custom": true,
                      "data_type": "string",
                      "description": "Just a plain old ring",
                      "full_name": "custom_attributes.The One Ring",
                      "id": 44,
                      "label": "The One Ring",
                      "messenger_writable": true,
                      "model": "company",
                      "name": "The One Ring",
                      "options": [
                        "1-10",
                        "11-20",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492959,
                    },
                  },
                },
                {
                  "name": "Too few options in list",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "archived": false,
                    "description": "Too few options",
                    "options": [
                      "option1",
                      "option2",
                    ],
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267693",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492958,
                      "custom": true,
                      "data_type": "string",
                      "description": "Just a plain old ring",
                      "full_name": "custom_attributes.The One Ring",
                      "id": 44,
                      "label": "The One Ring",
                      "messenger_writable": true,
                      "model": "company",
                      "name": "The One Ring",
                      "options": [
                        "1-10",
                        "11-20",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492959,
                    },
                  },
                },
                {
                  "name": "Attribute Not Found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "archived": false,
                    "description": "Just a plain old ring",
                    "options": [
                      "options",
                      "options",
                    ],
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267693",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492958,
                      "custom": true,
                      "data_type": "string",
                      "description": "Just a plain old ring",
                      "full_name": "custom_attributes.The One Ring",
                      "id": 44,
                      "label": "The One Ring",
                      "messenger_writable": true,
                      "model": "company",
                      "name": "The One Ring",
                      "options": [
                        "1-10",
                        "11-20",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492959,
                    },
                  },
                },
                {
                  "name": "Has Dependant Object",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "archived": true,
                    "description": "Trying to archieve",
                  },
                  "response": {
                    "body": {
                      "admin_id": "991267693",
                      "api_writable": true,
                      "archived": false,
                      "created_at": 1719492958,
                      "custom": true,
                      "data_type": "string",
                      "description": "Just a plain old ring",
                      "full_name": "custom_attributes.The One Ring",
                      "id": 44,
                      "label": "The One Ring",
                      "messenger_writable": true,
                      "model": "company",
                      "name": "The One Ring",
                      "options": [
                        "1-10",
                        "11-20",
                      ],
                      "type": "data_attribute",
                      "ui_writable": false,
                      "updated_at": 1719492959,
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/data_attributes/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The data attribute id",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "archived": {
                      "docs": "Whether the attribute is to be archived or not.",
                      "type": "optional<boolean>",
                    },
                    "description": {
                      "docs": "The readable description you see in the UI for the attribute.",
                      "type": "optional<string>",
                    },
                    "messenger_writable": {
                      "docs": "Can this attribute be updated by the Messenger",
                      "type": "optional<boolean>",
                    },
                    "options": {
                      "docs": "To create list attributes. Provide a set of hashes with `value` as the key of the options you want to make. `data_type` must be `string`.",
                      "type": "optional<list<string>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateDataAttributeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "DataAttribute",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateDataAttributeRequestDataType": {
            "docs": "The type of data stored for this attribute.",
            "enum": [
              "string",
              "integer",
              "float",
              "boolean",
              "datetime",
              "date",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateDataAttributeRequestModel": {
            "docs": "The model that the data attribute belongs to.",
            "enum": [
              "contact",
              "company",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataAttribute": {
            "docs": "Data Attributes are metadata used to describe your contact, company and conversation models. These include standard and custom attributes. By using the data attributes endpoint, you can get the global list of attributes for your workspace, as well as create and archive custom attributes.",
            "inline": undefined,
            "properties": {
              "admin_id": {
                "docs": "Teammate who created the attribute. Only applicable to CDAs",
                "type": "optional<string>",
              },
              "api_writable": {
                "docs": "Can this attribute be updated through API",
                "type": "optional<boolean>",
              },
              "archived": {
                "docs": "Is this attribute archived. (Only applicable to CDAs)",
                "type": "optional<boolean>",
              },
              "created_at": {
                "docs": "The time the attribute was created as a UTC Unix timestamp",
                "type": "optional<integer>",
              },
              "custom": {
                "docs": "Set to true if this is a CDA",
                "type": "optional<boolean>",
              },
              "data_type": {
                "docs": "The data type of the attribute.",
                "type": "optional<DataAttributeDataType>",
              },
              "description": {
                "docs": "Readable description of the attribute.",
                "type": "optional<string>",
              },
              "full_name": {
                "docs": "Full name of the attribute. Should match the name unless it's a nested attribute. We can split full_name on `.` to access nested user object values.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the data attribute which is given by Intercom. Only available for custom attributes.",
                "type": "optional<integer>",
              },
              "label": {
                "docs": "Readable name of the attribute (i.e. name you see in the UI)",
                "type": "optional<string>",
              },
              "messenger_writable": {
                "docs": "Can this attribute be updated by the Messenger",
                "type": "optional<boolean>",
              },
              "model": {
                "docs": "Value is `contact` for user/lead attributes and `company` for company attributes.",
                "type": "optional<DataAttributeModel>",
              },
              "name": {
                "docs": "Name of the attribute.",
                "type": "optional<string>",
              },
              "options": {
                "docs": "List of predefined options for attribute value.",
                "type": "optional<list<string>>",
              },
              "type": {
                "docs": "Value is `data_attribute`.",
                "type": "optional<literal<"data_attribute">>",
              },
              "ui_writable": {
                "docs": "Can this attribute be updated in the UI",
                "type": "optional<boolean>",
              },
              "updated_at": {
                "docs": "The time the attribute was last updated as a UTC Unix timestamp",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataAttributeDataType": {
            "docs": "The data type of the attribute.",
            "enum": [
              "string",
              "integer",
              "float",
              "boolean",
              "date",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataAttributeModel": {
            "docs": "Value is `contact` for user/lead attributes and `company` for company attributes.",
            "enum": [
              "contact",
              "company",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LisDataAttributesRequestModel": {
            "enum": [
              "contact",
              "company",
              "conversation",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  LisDataAttributesRequestModel:
    enum:
      - contact
      - company
      - conversation
    source:
      openapi: ../openapi.yml
  CreateDataAttributeRequestModel:
    enum:
      - contact
      - company
    docs: The model that the data attribute belongs to.
    inline: true
    source:
      openapi: ../openapi.yml
  CreateDataAttributeRequestDataType:
    enum:
      - string
      - integer
      - float
      - boolean
      - datetime
      - date
    docs: The type of data stored for this attribute.
    inline: true
    source:
      openapi: ../openapi.yml
  DataAttributeModel:
    enum:
      - contact
      - company
    docs: >-
      Value is `contact` for user/lead attributes and `company` for company
      attributes.
    inline: true
    source:
      openapi: ../openapi.yml
  DataAttributeDataType:
    enum:
      - string
      - integer
      - float
      - boolean
      - date
    docs: The data type of the attribute.
    inline: true
    source:
      openapi: ../openapi.yml
  DataAttribute:
    docs: >-
      Data Attributes are metadata used to describe your contact, company and
      conversation models. These include standard and custom attributes. By
      using the data attributes endpoint, you can get the global list of
      attributes for your workspace, as well as create and archive custom
      attributes.
    properties:
      type:
        type: optional<literal<"data_attribute">>
        docs: Value is `data_attribute`.
      id:
        type: optional<integer>
        docs: >-
          The unique identifier for the data attribute which is given by
          Intercom. Only available for custom attributes.
      model:
        type: optional<DataAttributeModel>
        docs: >-
          Value is `contact` for user/lead attributes and `company` for company
          attributes.
      name:
        type: optional<string>
        docs: Name of the attribute.
      full_name:
        type: optional<string>
        docs: >-
          Full name of the attribute. Should match the name unless it's a nested
          attribute. We can split full_name on `.` to access nested user object
          values.
      label:
        type: optional<string>
        docs: Readable name of the attribute (i.e. name you see in the UI)
      description:
        type: optional<string>
        docs: Readable description of the attribute.
      data_type:
        type: optional<DataAttributeDataType>
        docs: The data type of the attribute.
      options:
        type: optional<list<string>>
        docs: List of predefined options for attribute value.
      api_writable:
        type: optional<boolean>
        docs: Can this attribute be updated through API
      messenger_writable:
        type: optional<boolean>
        docs: Can this attribute be updated by the Messenger
      ui_writable:
        type: optional<boolean>
        docs: Can this attribute be updated in the UI
      custom:
        type: optional<boolean>
        docs: Set to true if this is a CDA
      archived:
        type: optional<boolean>
        docs: Is this attribute archived. (Only applicable to CDAs)
      created_at:
        type: optional<integer>
        docs: The time the attribute was created as a UTC Unix timestamp
      updated_at:
        type: optional<integer>
        docs: The time the attribute was last updated as a UTC Unix timestamp
      admin_id:
        type: optional<string>
        docs: Teammate who created the attribute. Only applicable to CDAs
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    lisDataAttributes:
      path: /data_attributes
      method: GET
      auth: true
      docs: >-
        You can fetch a list of all data attributes belonging to a workspace for
        contacts, companies or conversations.
      source:
        openapi: ../openapi.yml
      display-name: List all data attributes
      request:
        name: LisDataAttributesRequest
        query-parameters:
          model:
            type: optional<LisDataAttributesRequestModel>
            docs: Specify the data attribute model to return.
          include_archived:
            type: optional<boolean>
            docs: >-
              Include archived attributes in the list. By default we return only
              non archived data attributes.
      response:
        docs: Successful response
        type: root.DataAttributeList
        status-code: 200
      errors:
        - root.LisDataAttributesRequestUnauthorizedError
      examples:
        - name: Successful response
          response:
            body:
              type: list
              data:
                - type: data_attribute
                  id: 12878
                  model: company
                  name: name
                  full_name: name
                  label: Company name
                  description: The name of a company
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: true
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: company_id
                  full_name: company_id
                  label: Company ID
                  description: A number identifying a company
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: last_request_at
                  full_name: last_request_at
                  label: Company last seen
                  description: The last day anyone from a company visited your site or app
                  data_type: date
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: remote_created_at
                  full_name: remote_created_at
                  label: Company created at
                  description: The day a company was added to Intercom
                  data_type: date
                  options:
                    - 'true'
                    - 'false'
                  api_writable: true
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: user_count
                  full_name: user_count
                  label: People
                  description: The number of people in a company
                  data_type: integer
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: session_count
                  full_name: session_count
                  label: Company web sessions
                  description: >-
                    All visits from anyone in a company to your product's site
                    or app
                  data_type: integer
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: name
                  full_name: plan.name
                  label: Plan
                  description: >-
                    A specific plan or level within your product that companies
                    have signed up to
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: monthly_spend
                  full_name: monthly_spend
                  label: Monthly Spend
                  description: The monthly revenue you receive from a company
                  data_type: float
                  options:
                    - 'true'
                    - 'false'
                  api_writable: true
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: size
                  full_name: size
                  label: Company size
                  description: >-
                    The number of people employed in this company, expressed as
                    a single number
                  data_type: integer
                  options:
                    - 'true'
                    - 'false'
                  api_writable: true
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: industry
                  full_name: industry
                  label: Company industry
                  description: >-
                    The category or domain this company belongs to e.g.
                    'ecommerce' or 'SaaS'
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: true
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: website
                  full_name: website
                  label: Company website
                  description: The web address for the company's primary marketing site
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: true
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 34
                  model: company
                  name: The One Ring
                  full_name: custom_attributes.The One Ring
                  label: The One Ring
                  description: >-
                    One ring to rule them all, one ring to find them, One ring
                    to bring them all and in the darkness bind them.
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: true
                  messenger_writable: true
                  ui_writable: false
                  custom: true
                  archived: false
                  created_at: 1719492954
                  updated_at: 1719492954
                  admin_id: '991267684'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: id
                  full_name: id
                  label: ID
                  description: The Intercom defined id representing the company
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: created_at
                  full_name: created_at
                  label: Created at
                  description: The time the company was added to Intercom
                  data_type: date
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: updated_at
                  full_name: updated_at
                  label: Updated at
                  description: The last time the company was updated
                  data_type: date
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: id
                  full_name: plan.id
                  label: Plan ID
                  description: The Intercom defined id representing the plan
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
                - type: data_attribute
                  id: 12878
                  model: company
                  name: app_id
                  full_name: app_id
                  label: App ID
                  description: The Intercom defined id representing the app
                  data_type: string
                  options:
                    - 'true'
                    - 'false'
                  api_writable: false
                  messenger_writable: true
                  ui_writable: false
                  custom: false
                  archived: false
                  created_at: 1671028894
                  updated_at: 1671028894
                  admin_id: '5712945'
    createDataAttribute:
      path: /data_attributes
      method: POST
      auth: true
      docs: You can create a data attributes for a `contact` or a `company`.
      source:
        openapi: ../openapi.yml
      display-name: Create a data attribute
      request:
        name: CreateDataAttributeRequest
        body:
          properties:
            name:
              type: string
              docs: The name of the data attribute.
            model:
              type: CreateDataAttributeRequestModel
              docs: The model that the data attribute belongs to.
            data_type:
              type: CreateDataAttributeRequestDataType
              docs: The type of data stored for this attribute.
            description:
              type: optional<string>
              docs: The readable description you see in the UI for the attribute.
            options:
              type: optional<list<string>>
              docs: >-
                To create list attributes. Provide a set of hashes with `value`
                as the key of the options you want to make. `data_type` must be
                `string`.
            messenger_writable:
              type: optional<boolean>
              docs: Can this attribute be updated by the Messenger
        content-type: application/json
      response:
        docs: Successful
        type: DataAttribute
        status-code: 200
      errors:
        - root.CreateDataAttributeRequestBadRequestError
        - root.CreateDataAttributeRequestUnauthorizedError
      examples:
        - name: Successful
          request:
            name: Mithril Shirt
            model: company
            data_type: string
          response:
            body:
              type: data_attribute
              id: 37
              model: company
              name: Mithril Shirt
              full_name: custom_attributes.Mithril Shirt
              label: Mithril Shirt
              description: Whether the user is a paid subscriber.
              data_type: string
              options:
                - 'true'
                - 'false'
              api_writable: true
              messenger_writable: false
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492955
              updated_at: 1719492955
              admin_id: '991267686'
        - name: Same name already exists
          request:
            name: The One Ring
            model: contact
            data_type: integer
          response:
            body:
              type: data_attribute
              id: 37
              model: company
              name: Mithril Shirt
              full_name: custom_attributes.Mithril Shirt
              label: Mithril Shirt
              description: Whether the user is a paid subscriber.
              data_type: string
              options:
                - 'true'
                - 'false'
              api_writable: true
              messenger_writable: false
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492955
              updated_at: 1719492955
              admin_id: '991267686'
        - name: Invalid name
          request:
            name: '!nv@l!d n@me'
            model: company
            data_type: string
          response:
            body:
              type: data_attribute
              id: 37
              model: company
              name: Mithril Shirt
              full_name: custom_attributes.Mithril Shirt
              label: Mithril Shirt
              description: Whether the user is a paid subscriber.
              data_type: string
              options:
                - 'true'
                - 'false'
              api_writable: true
              messenger_writable: false
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492955
              updated_at: 1719492955
              admin_id: '991267686'
        - name: Attribute already exists
          request:
            name: The One Ring
            model: company
            data_type: string
          response:
            body:
              type: data_attribute
              id: 37
              model: company
              name: Mithril Shirt
              full_name: custom_attributes.Mithril Shirt
              label: Mithril Shirt
              description: Whether the user is a paid subscriber.
              data_type: string
              options:
                - 'true'
                - 'false'
              api_writable: true
              messenger_writable: false
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492955
              updated_at: 1719492955
              admin_id: '991267686'
        - name: Invalid Data Type
          request:
            name: The Second Ring
            model: company
            data_type: string
          response:
            body:
              type: data_attribute
              id: 37
              model: company
              name: Mithril Shirt
              full_name: custom_attributes.Mithril Shirt
              label: Mithril Shirt
              description: Whether the user is a paid subscriber.
              data_type: string
              options:
                - 'true'
                - 'false'
              api_writable: true
              messenger_writable: false
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492955
              updated_at: 1719492955
              admin_id: '991267686'
        - name: Too few options for list
          request:
            name: My Data Attribute
            model: contact
            data_type: string
            description: Just a plain old ring
            options:
              - options
          response:
            body:
              type: data_attribute
              id: 37
              model: company
              name: Mithril Shirt
              full_name: custom_attributes.Mithril Shirt
              label: Mithril Shirt
              description: Whether the user is a paid subscriber.
              data_type: string
              options:
                - 'true'
                - 'false'
              api_writable: true
              messenger_writable: false
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492955
              updated_at: 1719492955
              admin_id: '991267686'
    updateDataAttribute:
      path: /data_attributes/{id}
      method: PUT
      auth: true
      docs: >

        You can update a data attribute.


        > 🚧 Updating the data type is not possible

        >

        > It is currently a dangerous action to execute changing a data
        attribute's type via the API. You will need to update the type via the
        UI instead.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The data attribute id
      display-name: Update a data attribute
      request:
        name: UpdateDataAttributeRequest
        body:
          properties:
            archived:
              type: optional<boolean>
              docs: Whether the attribute is to be archived or not.
            description:
              type: optional<string>
              docs: The readable description you see in the UI for the attribute.
            options:
              type: optional<list<string>>
              docs: >-
                To create list attributes. Provide a set of hashes with `value`
                as the key of the options you want to make. `data_type` must be
                `string`.
            messenger_writable:
              type: optional<boolean>
              docs: Can this attribute be updated by the Messenger
        content-type: application/json
      response:
        docs: Successful
        type: DataAttribute
        status-code: 200
      errors:
        - root.UpdateDataAttributeRequestBadRequestError
        - root.UpdateDataAttributeRequestUnauthorizedError
        - root.UpdateDataAttributeRequestNotFoundError
        - root.UpdateDataAttributeRequestUnprocessableEntityError
      examples:
        - name: Successful
          path-parameters:
            id: 1
          request:
            archived: false
            description: Just a plain old ring
            options:
              - options
              - options
          response:
            body:
              type: data_attribute
              id: 44
              model: company
              name: The One Ring
              full_name: custom_attributes.The One Ring
              label: The One Ring
              description: Just a plain old ring
              data_type: string
              options:
                - 1-10
                - 11-20
              api_writable: true
              messenger_writable: true
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492958
              updated_at: 1719492959
              admin_id: '991267693'
        - name: Too few options in list
          path-parameters:
            id: 1
          request:
            archived: false
            description: Too few options
            options:
              - option1
              - option2
          response:
            body:
              type: data_attribute
              id: 44
              model: company
              name: The One Ring
              full_name: custom_attributes.The One Ring
              label: The One Ring
              description: Just a plain old ring
              data_type: string
              options:
                - 1-10
                - 11-20
              api_writable: true
              messenger_writable: true
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492958
              updated_at: 1719492959
              admin_id: '991267693'
        - name: Attribute Not Found
          path-parameters:
            id: 1
          request:
            archived: false
            description: Just a plain old ring
            options:
              - options
              - options
          response:
            body:
              type: data_attribute
              id: 44
              model: company
              name: The One Ring
              full_name: custom_attributes.The One Ring
              label: The One Ring
              description: Just a plain old ring
              data_type: string
              options:
                - 1-10
                - 11-20
              api_writable: true
              messenger_writable: true
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492958
              updated_at: 1719492959
              admin_id: '991267693'
        - name: Has Dependant Object
          path-parameters:
            id: 1
          request:
            archived: true
            description: Trying to archieve
          response:
            body:
              type: data_attribute
              id: 44
              model: company
              name: The One Ring
              full_name: custom_attributes.The One Ring
              label: The One Ring
              description: Just a plain old ring
              data_type: string
              options:
                - 1-10
                - 11-20
              api_writable: true
              messenger_writable: true
              ui_writable: false
              custom: true
              archived: false
              created_at: 1719492958
              updated_at: 1719492959
              admin_id: '991267693'
  source:
    openapi: ../openapi.yml
  display-name: Data Attributes
docs: Everything about your Data Attributes
",
    },
    "dataEvents.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Data Events",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Data Events",
          "endpoints": {
            "createDataEvent": {
              "auth": true,
              "display-name": "Submit a data event",
              "docs": "
You will need an Access Token that has write permissions to send Events. Once you have a key you can submit events via POST to the Events resource, which is located at https://api.intercom.io/events, or you can send events using one of the client libraries. When working with the HTTP API directly a client should send the event with a `Content-Type` of `application/json`.

When using the JavaScript API, [adding the code to your app](http://docs.intercom.io/configuring-Intercom/tracking-user-events-in-your-app) makes the Events API available. Once added, you can submit an event using the `trackEvent` method. This will associate the event with the Lead or currently logged-in user or logged-out visitor/lead and send it to Intercom. The final parameter is a map that can be used to send optional metadata about the event.

With the Ruby client you pass a hash describing the event to `Intercom::Event.create`, or call the `track_user` method directly on the current user object (e.g. `user.track_event`).

**NB: For the JSON object types, please note that we do not currently support nested JSON structure.**

| Type            | Description                                                                                                                                                                                                     | Example                                                                           |
| :-------------- | :-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | :-------------------------------------------------------------------------------- |
| String          | The value is a JSON String                                                                                                                                                                                      | `"source":"desktop"`                                                              |
| Number          | The value is a JSON Number                                                                                                                                                                                      | `"load": 3.67`                                                                    |
| Date            | The key ends with the String `_date` and the value is a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time), assumed to be in the [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time) timezone. | `"contact_date": 1392036272`                                                      |
| Link            | The value is a HTTP or HTTPS URI.                                                                                                                                                                               | `"article": "https://example.org/ab1de.html"`                                     |
| Rich Link       | The value is a JSON object that contains `url` and `value` keys.                                                                                                                                                | `"article": {"url": "https://example.org/ab1de.html", "value":"the dude abides"}` |
| Monetary Amount | The value is a JSON object that contains `amount` and `currency` keys. The `amount` key is a positive integer representing the amount in cents. The price in the example to the right denotes €349.99.          | `"price": {"amount": 34999, "currency": "eur"}`                                   |

**Lead Events**

When submitting events for Leads, you will need to specify the Lead's `id`.

**Metadata behaviour**

- We currently limit the number of tracked metadata keys to 10 per event. Once the quota is reached, we ignore any further keys we receive. The first 10 metadata keys are determined by the order in which they are sent in with the event.
- It is not possible to change the metadata keys once the event has been sent. A new event will need to be created with the new keys and you can archive the old one.
- There might be up to 24 hrs delay when you send a new metadata for an existing event.

**Event de-duplication**

The API may detect and ignore duplicate events. Each event is uniquely identified as a combination of the following data - the Workspace identifier, the Contact external identifier, the Data Event name and the Data Event created time. As a result, it is **strongly recommended** to send a second granularity Unix timestamp in the `created_at` field.

Duplicated events are responded to using the normal `202 Accepted` code - an error is not thrown, however repeat requests will be counted against any rate limit that is in place.

### HTTP API Responses

- Successful responses to submitted events return `202 Accepted` with an empty body.
- Unauthorised access will be rejected with a `401 Unauthorized` or `403 Forbidden` response code.
- Events sent about users that cannot be found will return a `404 Not Found`.
- Event lists containing duplicate events will have those duplicates ignored.
- Server errors will return a `500` response code and may contain an error message in the body.

",
              "errors": [
                "root.CreateDataEventRequestUnauthorizedError",
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/events",
              "request": {
                "body": "root.CreateDataEventRequestTwo",
                "content-type": "application/json",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "dataEventSummaries": {
              "auth": true,
              "display-name": "Create event summaries",
              "docs": "Create event summaries for a user. Event summaries are used to track the number of times an event has occurred, the first time it occurred and the last time it occurred.

",
              "errors": [
                "root.DataEventSummariesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "request": {},
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/events/summaries",
              "request": {
                "body": {
                  "properties": {
                    "event_summaries": {
                      "docs": "A list of event summaries for the user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
                      "type": "optional<CreateDataEventSummariesRequestEventSummaries>",
                    },
                    "user_id": {
                      "docs": "Your identifier for the user.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateDataEventSummariesRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "lisDataEvents": {
              "auth": true,
              "display-name": "List all data events",
              "docs": "
> 🚧
>
> Please note that you can only 'list' events that are less than 90 days old. Event counts and summaries will still include your events older than 90 days but you cannot 'list' these events individually if they are older than 90 days

The events belonging to a customer can be listed by sending a GET request to `https://api.intercom.io/events` with a user or lead identifier along with a `type` parameter. The identifier parameter can be one of `user_id`, `email` or `intercom_user_id`. The `type` parameter value must be `user`.

- `https://api.intercom.io/events?type=user&user_id={user_id}`
- `https://api.intercom.io/events?type=user&email={email}`
- `https://api.intercom.io/events?type=user&intercom_user_id={id}` (this call can be used to list leads)

The `email` parameter value should be [url encoded](http://en.wikipedia.org/wiki/Percent-encoding) when sending.

You can optionally define the result page size as well with the `per_page` parameter.
",
              "errors": [
                "root.LisDataEventsRequestUnauthorizedError",
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/events",
              "request": {
                "name": "LisDataEventsRequest",
                "query-parameters": {
                  "filter": "LisDataEventsRequestFilter",
                  "summary": {
                    "docs": "summary flag",
                    "type": "optional<boolean>",
                  },
                  "type": {
                    "docs": "The value must be user",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "root.DataEventSummary",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateDataEventSummariesRequestEventSummaries": {
            "docs": "A list of event summaries for the user. Each event summary should contain the event name, the time the event occurred, and the number of times the event occurred. The event name should be a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
            "inline": true,
            "properties": {
              "count": {
                "docs": "The number of times the event occurred.",
                "type": "optional<integer>",
              },
              "event_name": {
                "docs": "The name of the event that occurred. A good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
                "type": "optional<string>",
              },
              "first": {
                "docs": "The first time the event was sent",
                "type": "optional<integer>",
              },
              "last": {
                "docs": "The last time the event was sent",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataEvent": {
            "docs": "Data events are used to notify Intercom of changes to your data.",
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "The time the event occurred as a UTC Unix timestamp",
                "type": "integer",
              },
              "email": {
                "docs": "An email address for your user. An email should only be used where your application uses email to uniquely identify users.",
                "type": "optional<string>",
              },
              "event_name": {
                "docs": "The name of the event that occurred. This is presented to your App's admins when filtering and creating segments - a good event name is typically a past tense 'verb-noun' combination, to improve readability, for example `updated-plan`.",
                "type": "string",
              },
              "id": {
                "docs": "Your identifier for a lead or a user.",
                "type": "optional<string>",
              },
              "intercom_user_id": {
                "docs": "The Intercom identifier for the user.",
                "type": "optional<string>",
              },
              "metadata": {
                "docs": "Optional metadata about the event.",
                "type": "optional<map<string, string>>",
              },
              "type": {
                "docs": "The type of the object",
                "type": "optional<literal<"event">>",
              },
              "user_id": {
                "docs": "Your identifier for the user.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LisDataEventsRequestFilter": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "LisDataEventsRequestFilterUserId",
              },
              {
                "type": "LisDataEventsRequestFilterIntercomUserId",
              },
              {
                "type": "LisDataEventsRequestFilterEmail",
              },
            ],
          },
          "LisDataEventsRequestFilterEmail": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LisDataEventsRequestFilterIntercomUserId": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "intercom_user_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "LisDataEventsRequestFilterUserId": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "user_id": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  LisDataEventsRequestFilterUserId:
    properties:
      user_id: string
    source:
      openapi: ../openapi.yml
    inline: true
  LisDataEventsRequestFilterIntercomUserId:
    properties:
      intercom_user_id: string
    source:
      openapi: ../openapi.yml
    inline: true
  LisDataEventsRequestFilterEmail:
    properties:
      email: string
    source:
      openapi: ../openapi.yml
    inline: true
  LisDataEventsRequestFilter:
    discriminated: false
    union:
      - type: LisDataEventsRequestFilterUserId
      - type: LisDataEventsRequestFilterIntercomUserId
      - type: LisDataEventsRequestFilterEmail
    source:
      openapi: ../openapi.yml
  CreateDataEventSummariesRequestEventSummaries:
    docs: >-
      A list of event summaries for the user. Each event summary should contain
      the event name, the time the event occurred, and the number of times the
      event occurred. The event name should be a past tense 'verb-noun'
      combination, to improve readability, for example `updated-plan`.
    properties:
      event_name:
        type: optional<string>
        docs: >-
          The name of the event that occurred. A good event name is typically a
          past tense 'verb-noun' combination, to improve readability, for
          example `updated-plan`.
      count:
        type: optional<integer>
        docs: The number of times the event occurred.
      first:
        type: optional<integer>
        docs: The first time the event was sent
      last:
        type: optional<integer>
        docs: The last time the event was sent
    source:
      openapi: ../openapi.yml
    inline: true
  DataEvent:
    docs: Data events are used to notify Intercom of changes to your data.
    properties:
      type:
        type: optional<literal<"event">>
        docs: The type of the object
      event_name:
        type: string
        docs: >-
          The name of the event that occurred. This is presented to your App's
          admins when filtering and creating segments - a good event name is
          typically a past tense 'verb-noun' combination, to improve
          readability, for example `updated-plan`.
      created_at:
        type: integer
        docs: The time the event occurred as a UTC Unix timestamp
      user_id:
        type: optional<string>
        docs: Your identifier for the user.
      id:
        type: optional<string>
        docs: Your identifier for a lead or a user.
      intercom_user_id:
        type: optional<string>
        docs: The Intercom identifier for the user.
      email:
        type: optional<string>
        docs: >-
          An email address for your user. An email should only be used where
          your application uses email to uniquely identify users.
      metadata:
        type: optional<map<string, string>>
        docs: Optional metadata about the event.
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    lisDataEvents:
      path: /events
      method: GET
      auth: true
      docs: >

        > 🚧

        >

        > Please note that you can only 'list' events that are less than 90 days
        old. Event counts and summaries will still include your events older
        than 90 days but you cannot 'list' these events individually if they are
        older than 90 days


        The events belonging to a customer can be listed by sending a GET
        request to `https://api.intercom.io/events` with a user or lead
        identifier along with a `type` parameter. The identifier parameter can
        be one of `user_id`, `email` or `intercom_user_id`. The `type` parameter
        value must be `user`.


        - `https://api.intercom.io/events?type=user&user_id={user_id}`

        - `https://api.intercom.io/events?type=user&email={email}`

        - `https://api.intercom.io/events?type=user&intercom_user_id={id}` (this
        call can be used to list leads)


        The `email` parameter value should be [url
        encoded](http://en.wikipedia.org/wiki/Percent-encoding) when sending.


        You can optionally define the result page size as well with the
        `per_page` parameter.
      source:
        openapi: ../openapi.yml
      display-name: List all data events
      request:
        name: LisDataEventsRequest
        query-parameters:
          filter: LisDataEventsRequestFilter
          type:
            type: string
            docs: The value must be user
          summary:
            type: optional<boolean>
            docs: summary flag
      response:
        docs: Successful response
        type: root.DataEventSummary
        status-code: 200
      errors:
        - root.LisDataEventsRequestUnauthorizedError
    createDataEvent:
      path: /events
      method: POST
      auth: true
      docs: >+

        You will need an Access Token that has write permissions to send Events.
        Once you have a key you can submit events via POST to the Events
        resource, which is located at https://api.intercom.io/events, or you can
        send events using one of the client libraries. When working with the
        HTTP API directly a client should send the event with a `Content-Type`
        of `application/json`.


        When using the JavaScript API, [adding the code to your
        app](http://docs.intercom.io/configuring-Intercom/tracking-user-events-in-your-app)
        makes the Events API available. Once added, you can submit an event
        using the `trackEvent` method. This will associate the event with the
        Lead or currently logged-in user or logged-out visitor/lead and send it
        to Intercom. The final parameter is a map that can be used to send
        optional metadata about the event.


        With the Ruby client you pass a hash describing the event to
        `Intercom::Event.create`, or call the `track_user` method directly on
        the current user object (e.g. `user.track_event`).


        **NB: For the JSON object types, please note that we do not currently
        support nested JSON structure.**


        | Type            |
        Description                                                                                                                                                                                                    
        |
        Example                                                                          
        |

        | :-------------- |
        :--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
        |
        :--------------------------------------------------------------------------------
        |

        | String          | The value is a JSON
        String                                                                                                                                                                                     
        |
        `"source":"desktop"`                                                             
        |

        | Number          | The value is a JSON
        Number                                                                                                                                                                                     
        | `"load":
        3.67`                                                                   
        |

        | Date            | The key ends with the String `_date` and the value
        is a [Unix timestamp](http://en.wikipedia.org/wiki/Unix_time), assumed
        to be in the
        [UTC](http://en.wikipedia.org/wiki/Coordinated_Universal_Time) timezone.
        | `"contact_date":
        1392036272`                                                      |

        | Link            | The value is a HTTP or HTTPS
        URI.                                                                                                                                                                              
        | `"article":
        "https://example.org/ab1de.html"`                                     |

        | Rich Link       | The value is a JSON object that contains `url` and
        `value`
        keys.                                                                                                                                               
        | `"article": {"url": "https://example.org/ab1de.html", "value":"the
        dude abides"}` |

        | Monetary Amount | The value is a JSON object that contains `amount`
        and `currency` keys. The `amount` key is a positive integer representing
        the amount in cents. The price in the example to the right denotes
        €349.99.          | `"price": {"amount": 34999, "currency":
        "eur"}`                                   |


        **Lead Events**


        When submitting events for Leads, you will need to specify the Lead's
        `id`.


        **Metadata behaviour**


        - We currently limit the number of tracked metadata keys to 10 per
        event. Once the quota is reached, we ignore any further keys we receive.
        The first 10 metadata keys are determined by the order in which they are
        sent in with the event.

        - It is not possible to change the metadata keys once the event has been
        sent. A new event will need to be created with the new keys and you can
        archive the old one.

        - There might be up to 24 hrs delay when you send a new metadata for an
        existing event.


        **Event de-duplication**


        The API may detect and ignore duplicate events. Each event is uniquely
        identified as a combination of the following data - the Workspace
        identifier, the Contact external identifier, the Data Event name and the
        Data Event created time. As a result, it is **strongly recommended** to
        send a second granularity Unix timestamp in the `created_at` field.


        Duplicated events are responded to using the normal `202 Accepted` code
        - an error is not thrown, however repeat requests will be counted
        against any rate limit that is in place.


        ### HTTP API Responses


        - Successful responses to submitted events return `202 Accepted` with an
        empty body.

        - Unauthorised access will be rejected with a `401 Unauthorized` or `403
        Forbidden` response code.

        - Events sent about users that cannot be found will return a `404 Not
        Found`.

        - Event lists containing duplicate events will have those duplicates
        ignored.

        - Server errors will return a `500` response code and may contain an
        error message in the body.

      source:
        openapi: ../openapi.yml
      display-name: Submit a data event
      request:
        body: root.CreateDataEventRequestTwo
        content-type: application/json
      errors:
        - root.CreateDataEventRequestUnauthorizedError
    dataEventSummaries:
      path: /events/summaries
      method: POST
      auth: true
      docs: >+
        Create event summaries for a user. Event summaries are used to track the
        number of times an event has occurred, the first time it occurred and
        the last time it occurred.

      source:
        openapi: ../openapi.yml
      display-name: Create event summaries
      request:
        name: CreateDataEventSummariesRequest
        body:
          properties:
            user_id:
              type: optional<string>
              docs: Your identifier for the user.
            event_summaries:
              type: optional<CreateDataEventSummariesRequestEventSummaries>
              docs: >-
                A list of event summaries for the user. Each event summary
                should contain the event name, the time the event occurred, and
                the number of times the event occurred. The event name should be
                a past tense 'verb-noun' combination, to improve readability,
                for example `updated-plan`.
        content-type: application/json
      errors:
        - root.DataEventSummariesRequestUnauthorizedError
      examples:
        - request: {}
  source:
    openapi: ../openapi.yml
  display-name: Data Events
docs: Everything about your Data Events
",
    },
    "dataExport.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Data Exports",
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Data Export",
          "endpoints": {
            "cancelDataExport": {
              "auth": true,
              "display-name": "Cancel content data export",
              "docs": "You can cancel your job",
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "job_identifier": "job_identifier",
                  },
                  "response": {
                    "body": {
                      "download_expires_at": "",
                      "download_url": "",
                      "job_identfier": "orzzsbd7hk67xyu",
                      "status": "canceled",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/export/cancel/{job_identifier}",
              "path-parameters": {
                "job_identifier": {
                  "docs": "job_identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "DataExport",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createDataExport": {
              "auth": true,
              "display-name": "Create content data export",
              "docs": "To create your export job, you need to send a `POST` request to the export endpoint `https://api.intercom.io/export/content/data`.

The only parameters you need to provide are the range of dates that you want exported.

>🚧 Limit of one active job
>
> You can only have one active job per workspace. You will receive a HTTP status code of 429 with the message Exceeded rate limit of 1 pending message data export jobs if you attempt to create a second concurrent job.

>❗️ Updated_at not included
>
> It should be noted that the timeframe only includes messages sent during the time period and not messages that were only updated during this period. For example, if a message was updated yesterday but sent two days ago, you would need to set the created_at_after date before the message was sent to include that in your retrieval job.

>📘 Date ranges are inclusive
>
> Requesting data for 2018-06-01 until 2018-06-30 will get all data for those days including those specified - e.g. 2018-06-01 00:00:00 until 2018-06-30 23:59:99.
",
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "created_at_after": 1719474967,
                    "created_at_before": 1719492967,
                  },
                  "response": {
                    "body": {
                      "download_expires_at": "",
                      "download_url": "",
                      "job_identfier": "orzzsbd7hk67xyu",
                      "status": "pending",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/export/content/data",
              "request": {
                "body": {
                  "properties": {
                    "created_at_after": {
                      "docs": "The start date that you request data for. It must be formatted as a unix timestamp.",
                      "type": "integer",
                    },
                    "created_at_before": {
                      "docs": "The end date that you request data for. It must be formatted as a unix timestamp.",
                      "type": "integer",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateDataExportsRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "DataExport",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "downloadDataExport": {
              "auth": true,
              "display-name": "Download content data export",
              "docs": "When a job has a status of complete, and thus a filled download_url, you can download your data by hitting that provided URL, formatted like so: https://api.intercom.io/download/content/data/xyz1234.

Your exported message data will be streamed continuously back down to you in a gzipped CSV format.

> 📘 Octet header required
>
> You will have to specify the header Accept: `application/octet-stream` when hitting this endpoint.
",
              "examples": [
                {
                  "path-parameters": {
                    "job_identifier": "job_identifier",
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/download/content/data/{job_identifier}",
              "path-parameters": {
                "job_identifier": {
                  "docs": "job_identifier",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getDataExport": {
              "auth": true,
              "display-name": "Show content data export",
              "docs": "You can view the status of your job by sending a `GET` request to the URL
`https://api.intercom.io/export/content/data/{job_identifier}` - the `{job_identifier}` is the value returned in the response when you first created the export job. More on it can be seen in the Export Job Model.

> 🚧 Jobs expire after two days
> All jobs that have completed processing (and are thus available to download from the provided URL) will have an expiry limit of two days from when the export ob completed. After this, the data will no longer be available.
",
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "job_identifier": "job_identifier",
                  },
                  "response": {
                    "body": {
                      "download_expires_at": "",
                      "download_url": "",
                      "job_identfier": "orzzsbd7hk67xyu",
                      "status": "pending",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/export/content/data/{job_identifier}",
              "path-parameters": {
                "job_identifier": {
                  "docs": "job_identifier",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "DataExport",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "DataExport": {
            "docs": "The data export api is used to view all message sent & viewed in a given timeframe.",
            "inline": undefined,
            "properties": {
              "download_expires_at": {
                "docs": "The time after which you will not be able to access the data.",
                "type": "optional<string>",
              },
              "download_url": {
                "docs": "The location where you can download your data.",
                "type": "optional<string>",
              },
              "job_identfier": {
                "docs": "The identifier for your job.",
                "type": "optional<string>",
              },
              "status": {
                "docs": "The current state of your job.",
                "type": "optional<DataExportStatus>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "DataExportStatus": {
            "docs": "The current state of your job.",
            "enum": [
              "pending",
              "in_progress",
              "failed",
              "completed",
              "no_data",
              "canceled",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "service:
  auth: false
  base-path: ''
  endpoints:
    createDataExport:
      path: /export/content/data
      method: POST
      auth: true
      docs: >
        To create your export job, you need to send a `POST` request to the
        export endpoint `https://api.intercom.io/export/content/data`.


        The only parameters you need to provide are the range of dates that you
        want exported.


        >🚧 Limit of one active job

        >

        > You can only have one active job per workspace. You will receive a
        HTTP status code of 429 with the message Exceeded rate limit of 1
        pending message data export jobs if you attempt to create a second
        concurrent job.


        >❗️ Updated_at not included

        >

        > It should be noted that the timeframe only includes messages sent
        during the time period and not messages that were only updated during
        this period. For example, if a message was updated yesterday but sent
        two days ago, you would need to set the created_at_after date before the
        message was sent to include that in your retrieval job.


        >📘 Date ranges are inclusive

        >

        > Requesting data for 2018-06-01 until 2018-06-30 will get all data for
        those days including those specified - e.g. 2018-06-01 00:00:00 until
        2018-06-30 23:59:99.
      source:
        openapi: ../openapi.yml
      display-name: Create content data export
      request:
        name: CreateDataExportsRequest
        body:
          properties:
            created_at_after:
              type: integer
              docs: >-
                The start date that you request data for. It must be formatted
                as a unix timestamp.
            created_at_before:
              type: integer
              docs: >-
                The end date that you request data for. It must be formatted as
                a unix timestamp.
        content-type: application/json
      response:
        docs: successful
        type: DataExport
        status-code: 200
      examples:
        - name: successful
          request:
            created_at_after: 1719474967
            created_at_before: 1719492967
          response:
            body:
              job_identfier: orzzsbd7hk67xyu
              status: pending
              download_expires_at: ''
              download_url: ''
    getDataExport:
      path: /export/content/data/{job_identifier}
      method: GET
      auth: true
      docs: >
        You can view the status of your job by sending a `GET` request to the
        URL

        `https://api.intercom.io/export/content/data/{job_identifier}` - the
        `{job_identifier}` is the value returned in the response when you first
        created the export job. More on it can be seen in the Export Job Model.


        > 🚧 Jobs expire after two days

        > All jobs that have completed processing (and are thus available to
        download from the provided URL) will have an expiry limit of two days
        from when the export ob completed. After this, the data will no longer
        be available.
      source:
        openapi: ../openapi.yml
      path-parameters:
        job_identifier:
          type: string
          docs: job_identifier
      display-name: Show content data export
      response:
        docs: successful
        type: DataExport
        status-code: 200
      examples:
        - name: successful
          path-parameters:
            job_identifier: job_identifier
          response:
            body:
              job_identfier: orzzsbd7hk67xyu
              status: pending
              download_expires_at: ''
              download_url: ''
    cancelDataExport:
      path: /export/cancel/{job_identifier}
      method: POST
      auth: true
      docs: You can cancel your job
      source:
        openapi: ../openapi.yml
      path-parameters:
        job_identifier:
          type: string
          docs: job_identifier
      display-name: Cancel content data export
      response:
        docs: successful
        type: DataExport
        status-code: 200
      examples:
        - name: successful
          path-parameters:
            job_identifier: job_identifier
          response:
            body:
              job_identfier: orzzsbd7hk67xyu
              status: canceled
              download_expires_at: ''
              download_url: ''
    downloadDataExport:
      path: /download/content/data/{job_identifier}
      method: GET
      auth: true
      docs: >
        When a job has a status of complete, and thus a filled download_url, you
        can download your data by hitting that provided URL, formatted like so:
        https://api.intercom.io/download/content/data/xyz1234.


        Your exported message data will be streamed continuously back down to
        you in a gzipped CSV format.


        > 📘 Octet header required

        >

        > You will have to specify the header Accept: `application/octet-stream`
        when hitting this endpoint.
      source:
        openapi: ../openapi.yml
      path-parameters:
        job_identifier:
          type: string
          docs: job_identifier
      display-name: Download content data export
      examples:
        - path-parameters:
            job_identifier: job_identifier
  source:
    openapi: ../openapi.yml
  display-name: Data Export
docs: Everything about your Data Exports
types:
  DataExportStatus:
    enum:
      - pending
      - in_progress
      - failed
      - completed
      - no_data
      - canceled
    docs: The current state of your job.
    inline: true
    source:
      openapi: ../openapi.yml
  DataExport:
    docs: >-
      The data export api is used to view all message sent & viewed in a given
      timeframe.
    properties:
      job_identfier:
        type: optional<string>
        docs: The identifier for your job.
      status:
        type: optional<DataExportStatus>
        docs: The current state of your job.
      download_expires_at:
        type: optional<string>
        docs: The time after which you will not be able to access the data.
      download_url:
        type: optional<string>
        docs: The location where you can download your data.
    source:
      openapi: ../openapi.yml
",
    },
    "helpCenter.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Help Center",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Help Center",
          "endpoints": {
            "createCollection": {
              "auth": true,
              "display-name": "Create a collection",
              "docs": "You can create a new collection by making a POST request to `https://api.intercom.io/help_center/collections.`",
              "errors": [
                "root.CreateCollectionRequestBadRequestError",
                "root.CreateCollectionRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "collection created",
                  "request": {
                    "name": "Thanks for everything",
                  },
                  "response": {
                    "body": {
                      "created_at": 1719492721,
                      "default_locale": "en",
                      "description": "",
                      "help_center_id": 81,
                      "icon": "book-bookmark",
                      "id": "165",
                      "name": "Thanks for everything",
                      "order": 1,
                      "translated_content": {
                        "ar": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bg": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ca": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "cs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "da": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "de": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "el": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "en": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "es": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "et": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "he": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hu": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "id": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "it": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ja": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ko": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "mn": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nb": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt-BR": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ro": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ru": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "tr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "type": "group_translated_content",
                        "vi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-CN": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-TW": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                      },
                      "updated_at": 1719492721,
                      "url": "http://help-center.test/myapp-69/",
                      "workspace_id": "this_is_an_id69_that_should_be_at_least_4",
                    },
                  },
                },
                {
                  "name": "Bad Request",
                  "request": {
                    "description": "Missing required parameter",
                    "name": "collection 51",
                  },
                  "response": {
                    "body": {
                      "created_at": 1719492721,
                      "default_locale": "en",
                      "description": "",
                      "help_center_id": 81,
                      "icon": "book-bookmark",
                      "id": "165",
                      "name": "Thanks for everything",
                      "order": 1,
                      "translated_content": {
                        "ar": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bg": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ca": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "cs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "da": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "de": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "el": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "en": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "es": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "et": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "he": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hu": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "id": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "it": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ja": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ko": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "mn": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nb": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt-BR": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ro": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ru": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "tr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "type": "group_translated_content",
                        "vi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-CN": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-TW": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                      },
                      "updated_at": 1719492721,
                      "url": "http://help-center.test/myapp-69/",
                      "workspace_id": "this_is_an_id69_that_should_be_at_least_4",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/help_center/collections",
              "request": {
                "body": {
                  "properties": {
                    "description": {
                      "docs": "The description of the collection. For multilingual collections, this will be the description of the default language's content.",
                      "type": "optional<string>",
                    },
                    "help_center_id": {
                      "docs": "The id of the help center where the collection will be created. If `null` then it will be created in the default help center.",
                      "type": "optional<integer>",
                    },
                    "name": {
                      "docs": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
                      "type": "string",
                    },
                    "parent_id": {
                      "docs": "The id of the parent collection. If `null` then it will be created as the first level collection.",
                      "type": "optional<string>",
                    },
                    "translated_content": {
                      "type": "optional<root.GroupTranslatedContent>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateCollectionRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "collection created",
                "status-code": 200,
                "type": "Collection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteCollection": {
              "auth": true,
              "display-name": "Delete a collection",
              "docs": "You can delete a single collection by making a DELETE request to `https://api.intercom.io/collections/<id>`.",
              "errors": [
                "root.DeleteCollectionRequestUnauthorizedError",
                "root.DeleteCollectionRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "deleted": true,
                      "id": "182",
                      "object": "collection",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/help_center/collections/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the collection which is given by Intercom.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.DeletedCollectionObject",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listAllCollections": {
              "auth": true,
              "display-name": "List all collections",
              "docs": "You can fetch a list of all collections by making a GET request to `https://api.intercom.io/help_center/collections`.

Collections will be returned in descending order on the `updated_at` attribute. This means if you need to iterate through results then we'll show the most recently updated collections first.
",
              "errors": [
                "root.ListAllCollectionsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "created_at": 1719492720,
                          "default_locale": "en",
                          "description": "english collection description",
                          "help_center_id": 79,
                          "icon": "bookmark",
                          "id": "159",
                          "name": "English collection title",
                          "order": 17,
                          "updated_at": 1719492720,
                          "url": "http://help-center.test/myapp-65/collection-17",
                          "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                        },
                        {
                          "created_at": 1719492720,
                          "default_locale": "en",
                          "icon": "bookmark",
                          "id": "160",
                          "name": "English section title",
                          "order": 1,
                          "parent_id": "159",
                          "updated_at": 1719492720,
                          "url": "http://help-center.test/myapp-65/section-1",
                          "workspace_id": "this_is_an_id65_that_should_be_at_least_4",
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 20,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 2,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/help_center/collections",
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.Collections",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listHelpCenters": {
              "auth": true,
              "display-name": "List all Help Centers",
              "docs": "You can list all Help Centers by making a GET request to `https://api.intercom.io/help_center/help_centers`.",
              "errors": [
                "root.ListHelpCentersRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Help Centers found",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "created_at": 1672928359,
                          "display_name": "Intercom Help Center",
                          "id": "123",
                          "identifier": "intercom",
                          "updated_at": 1672928610,
                          "website_turned_on": true,
                          "workspace_id": "hfi1bx4l",
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/help_center/help_centers",
              "response": {
                "docs": "Help Centers found",
                "status-code": 200,
                "type": "HelpCenterList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveCollection": {
              "auth": true,
              "display-name": "Retrieve a collection",
              "docs": "You can fetch the details of a single collection by making a GET request to `https://api.intercom.io/help_center/collections/<id>`.",
              "errors": [
                "root.RetrieveCollectionRequestUnauthorizedError",
                "root.RetrieveCollectionRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Collection found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "created_at": 1719492723,
                      "default_locale": "en",
                      "description": "english collection description",
                      "help_center_id": 84,
                      "icon": "bookmark",
                      "id": "170",
                      "name": "English collection title",
                      "order": 22,
                      "translated_content": {
                        "ar": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bg": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ca": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "cs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "da": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "de": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "el": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "en": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "es": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "et": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "he": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hu": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "id": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "it": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ja": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ko": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "mn": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nb": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt-BR": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ro": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ru": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "tr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "type": "group_translated_content",
                        "vi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-CN": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-TW": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                      },
                      "updated_at": 1719492723,
                      "url": "http://help-center.test/myapp-75/collection-22",
                      "workspace_id": "this_is_an_id75_that_should_be_at_least_4",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/help_center/collections/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the collection which is given by Intercom.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "Collection found",
                "status-code": 200,
                "type": "Collection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveHelpCenter": {
              "auth": true,
              "display-name": "Retrieve a Help Center",
              "docs": "You can fetch the details of a single Help Center by making a GET request to `https://api.intercom.io/help_center/help_center/<id>`.",
              "errors": [
                "root.RetrieveHelpCenterRequestUnauthorizedError",
                "root.RetrieveHelpCenterRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Collection found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "created_at": 1719492727,
                      "display_name": "Intercom Help Center",
                      "id": "93",
                      "identifier": "help-center-1",
                      "updated_at": 1719492727,
                      "website_turned_on": false,
                      "workspace_id": "this_is_an_id93_that_should_be_at_least_4",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/help_center/help_centers/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the collection which is given by Intercom.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "Collection found",
                "status-code": 200,
                "type": "HelpCenter",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateCollection": {
              "auth": true,
              "display-name": "Update a collection",
              "docs": "You can update the details of a single collection by making a PUT request to `https://api.intercom.io/collections/<id>`.",
              "errors": [
                "root.UpdateCollectionRequestUnauthorizedError",
                "root.UpdateCollectionRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "name": "Update collection name",
                  },
                  "response": {
                    "body": {
                      "created_at": 1719492724,
                      "default_locale": "en",
                      "description": "english collection description",
                      "help_center_id": 87,
                      "icon": "folder",
                      "id": "176",
                      "name": "Update collection name",
                      "order": 25,
                      "translated_content": {
                        "ar": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bg": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ca": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "cs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "da": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "de": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "el": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "en": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "es": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "et": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "he": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hu": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "id": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "it": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ja": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ko": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "mn": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nb": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt-BR": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ro": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ru": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "tr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "type": "group_translated_content",
                        "vi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-CN": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-TW": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                      },
                      "updated_at": 1719492724,
                      "url": "http://help-center.test/myapp-81/collection-25",
                      "workspace_id": "this_is_an_id81_that_should_be_at_least_4",
                    },
                  },
                },
                {
                  "name": "Collection Not Found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "name": "Update collection name",
                  },
                  "response": {
                    "body": {
                      "created_at": 1719492724,
                      "default_locale": "en",
                      "description": "english collection description",
                      "help_center_id": 87,
                      "icon": "folder",
                      "id": "176",
                      "name": "Update collection name",
                      "order": 25,
                      "translated_content": {
                        "ar": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bg": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "bs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ca": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "cs": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "da": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "de": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "el": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "en": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "es": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "et": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "fr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "he": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "hu": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "id": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "it": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ja": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ko": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "lv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "mn": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nb": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "nl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "pt-BR": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ro": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "ru": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sl": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "sv": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "tr": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "type": "group_translated_content",
                        "vi": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-CN": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                        "zh-TW": {
                          "description": " Collection description",
                          "name": "Collection name",
                          "type": "group_content",
                        },
                      },
                      "updated_at": 1719492724,
                      "url": "http://help-center.test/myapp-81/collection-25",
                      "workspace_id": "this_is_an_id81_that_should_be_at_least_4",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/help_center/collections/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the collection which is given by Intercom.",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "description": {
                      "docs": "The description of the collection. For multilingual collections, this will be the description of the default language's content.",
                      "type": "optional<string>",
                    },
                    "name": {
                      "docs": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
                      "type": "optional<string>",
                    },
                    "parent_id": {
                      "docs": "The id of the parent collection. If `null` then it will be updated as the first level collection.",
                      "type": "optional<string>",
                    },
                    "translated_content": {
                      "type": "optional<root.GroupTranslatedContent>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateCollectionRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Collection",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Collection": {
            "docs": "Collections are top level containers for Articles within the Help Center.",
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "The time when the article was created (seconds). For multilingual articles, this will be the timestamp of creation of the default language's content.",
                "type": "optional<integer>",
              },
              "default_locale": {
                "docs": "The default locale of the help center. This field is only returned for multilingual help centers.",
                "type": "optional<string>",
              },
              "description": {
                "docs": "The description of the collection. For multilingual help centers, this will be the description of the collection for the default language.",
                "type": "optional<string>",
              },
              "help_center_id": {
                "docs": "The id of the help center the collection is in.",
                "type": "optional<integer>",
              },
              "icon": {
                "docs": "The icon of the collection.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the collection which is given by Intercom.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the collection. For multilingual collections, this will be the name of the default language's content.",
                "type": "optional<string>",
              },
              "order": {
                "docs": "The order of the section in relation to others sections within a collection. Values go from `0` upwards. `0` is the default if there's no order.",
                "type": "optional<integer>",
              },
              "parent_id": {
                "docs": "The id of the parent collection. If `null` then it is the first level collection.",
                "type": "optional<string>",
              },
              "translated_content": {
                "type": "optional<root.GroupTranslatedContent>",
              },
              "updated_at": {
                "docs": "The time when the article was last updated (seconds). For multilingual articles, this will be the timestamp of last update of the default language's content.",
                "type": "optional<integer>",
              },
              "url": {
                "docs": "The URL of the collection. For multilingual help centers, this will be the URL of the collection for the default language.",
                "type": "optional<string>",
              },
              "workspace_id": {
                "docs": "The id of the workspace which the collection belongs to.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HelpCenter": {
            "docs": "Help Centers contain collections",
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "The time when the Help Center was created.",
                "type": "optional<integer>",
              },
              "display_name": {
                "docs": "The display name of the Help Center only seen by teammates.",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The unique identifier for the Help Center which is given by Intercom.",
                "type": "optional<string>",
              },
              "identifier": {
                "docs": "The identifier of the Help Center. This is used in the URL of the Help Center.",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "The time when the Help Center was last updated.",
                "type": "optional<integer>",
              },
              "website_turned_on": {
                "docs": "Whether the Help Center is turned on or not. This is controlled in your Help Center settings.",
                "type": "optional<boolean>",
              },
              "workspace_id": {
                "docs": "The id of the workspace which the Help Center belongs to.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "HelpCenterList": {
            "docs": "A list of Help Centers belonging to the App",
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "An array of Help Center objects",
                "type": "optional<list<HelpCenter>>",
              },
              "type": {
                "docs": "The type of the object - `list`.",
                "type": "optional<literal<"list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listAllCollections:
      path: /help_center/collections
      method: GET
      auth: true
      docs: >
        You can fetch a list of all collections by making a GET request to
        `https://api.intercom.io/help_center/collections`.


        Collections will be returned in descending order on the `updated_at`
        attribute. This means if you need to iterate through results then we'll
        show the most recently updated collections first.
      source:
        openapi: ../openapi.yml
      display-name: List all collections
      response:
        docs: Successful
        type: root.Collections
        status-code: 200
      errors:
        - root.ListAllCollectionsRequestUnauthorizedError
      examples:
        - name: Successful
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 20
                total_pages: 1
              total_count: 2
              data:
                - id: '159'
                  workspace_id: this_is_an_id65_that_should_be_at_least_4
                  name: English collection title
                  description: english collection description
                  created_at: 1719492720
                  updated_at: 1719492720
                  url: http://help-center.test/myapp-65/collection-17
                  icon: bookmark
                  order: 17
                  default_locale: en
                  help_center_id: 79
                - id: '160'
                  workspace_id: this_is_an_id65_that_should_be_at_least_4
                  name: English section title
                  created_at: 1719492720
                  updated_at: 1719492720
                  url: http://help-center.test/myapp-65/section-1
                  icon: bookmark
                  order: 1
                  default_locale: en
                  parent_id: '159'
    createCollection:
      path: /help_center/collections
      method: POST
      auth: true
      docs: >-
        You can create a new collection by making a POST request to
        `https://api.intercom.io/help_center/collections.`
      source:
        openapi: ../openapi.yml
      display-name: Create a collection
      request:
        name: CreateCollectionRequest
        body:
          properties:
            name:
              type: string
              docs: >-
                The name of the collection. For multilingual collections, this
                will be the name of the default language's content.
            description:
              type: optional<string>
              docs: >-
                The description of the collection. For multilingual collections,
                this will be the description of the default language's content.
            translated_content:
              type: optional<root.GroupTranslatedContent>
            parent_id:
              type: optional<string>
              docs: >-
                The id of the parent collection. If `null` then it will be
                created as the first level collection.
            help_center_id:
              type: optional<integer>
              docs: >-
                The id of the help center where the collection will be created.
                If `null` then it will be created in the default help center.
        content-type: application/json
      response:
        docs: collection created
        type: Collection
        status-code: 200
      errors:
        - root.CreateCollectionRequestBadRequestError
        - root.CreateCollectionRequestUnauthorizedError
      examples:
        - name: collection created
          request:
            name: Thanks for everything
          response:
            body:
              id: '165'
              workspace_id: this_is_an_id69_that_should_be_at_least_4
              name: Thanks for everything
              description: ''
              created_at: 1719492721
              updated_at: 1719492721
              url: http://help-center.test/myapp-69/
              icon: book-bookmark
              order: 1
              default_locale: en
              translated_content:
                type: group_translated_content
                ar:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bg:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ca:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                cs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                da:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                de:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                el:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                en:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                es:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                et:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                he:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hu:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                id:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                it:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ja:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ko:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                mn:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nb:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ro:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ru:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                tr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                vi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt-BR:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-CN:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-TW:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
              help_center_id: 81
        - name: Bad Request
          request:
            name: collection 51
            description: Missing required parameter
          response:
            body:
              id: '165'
              workspace_id: this_is_an_id69_that_should_be_at_least_4
              name: Thanks for everything
              description: ''
              created_at: 1719492721
              updated_at: 1719492721
              url: http://help-center.test/myapp-69/
              icon: book-bookmark
              order: 1
              default_locale: en
              translated_content:
                type: group_translated_content
                ar:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bg:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ca:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                cs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                da:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                de:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                el:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                en:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                es:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                et:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                he:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hu:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                id:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                it:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ja:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ko:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                mn:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nb:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ro:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ru:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                tr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                vi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt-BR:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-CN:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-TW:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
              help_center_id: 81
    retrieveCollection:
      path: /help_center/collections/{id}
      method: GET
      auth: true
      docs: >-
        You can fetch the details of a single collection by making a GET request
        to `https://api.intercom.io/help_center/collections/<id>`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the collection which is given by Intercom.
      display-name: Retrieve a collection
      response:
        docs: Collection found
        type: Collection
        status-code: 200
      errors:
        - root.RetrieveCollectionRequestUnauthorizedError
        - root.RetrieveCollectionRequestNotFoundError
      examples:
        - name: Collection found
          path-parameters:
            id: 1
          response:
            body:
              id: '170'
              workspace_id: this_is_an_id75_that_should_be_at_least_4
              name: English collection title
              description: english collection description
              created_at: 1719492723
              updated_at: 1719492723
              url: http://help-center.test/myapp-75/collection-22
              icon: bookmark
              order: 22
              default_locale: en
              translated_content:
                type: group_translated_content
                ar:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bg:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ca:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                cs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                da:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                de:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                el:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                en:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                es:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                et:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                he:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hu:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                id:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                it:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ja:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ko:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                mn:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nb:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ro:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ru:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                tr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                vi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt-BR:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-CN:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-TW:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
              help_center_id: 84
    updateCollection:
      path: /help_center/collections/{id}
      method: PUT
      auth: true
      docs: >-
        You can update the details of a single collection by making a PUT
        request to `https://api.intercom.io/collections/<id>`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the collection which is given by Intercom.
      display-name: Update a collection
      request:
        name: UpdateCollectionRequest
        body:
          properties:
            name:
              type: optional<string>
              docs: >-
                The name of the collection. For multilingual collections, this
                will be the name of the default language's content.
            description:
              type: optional<string>
              docs: >-
                The description of the collection. For multilingual collections,
                this will be the description of the default language's content.
            translated_content:
              type: optional<root.GroupTranslatedContent>
            parent_id:
              type: optional<string>
              docs: >-
                The id of the parent collection. If `null` then it will be
                updated as the first level collection.
        content-type: application/json
      response:
        docs: successful
        type: Collection
        status-code: 200
      errors:
        - root.UpdateCollectionRequestUnauthorizedError
        - root.UpdateCollectionRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 1
          request:
            name: Update collection name
          response:
            body:
              id: '176'
              workspace_id: this_is_an_id81_that_should_be_at_least_4
              name: Update collection name
              description: english collection description
              created_at: 1719492724
              updated_at: 1719492724
              url: http://help-center.test/myapp-81/collection-25
              icon: folder
              order: 25
              default_locale: en
              translated_content:
                type: group_translated_content
                ar:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bg:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ca:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                cs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                da:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                de:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                el:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                en:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                es:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                et:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                he:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hu:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                id:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                it:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ja:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ko:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                mn:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nb:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ro:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ru:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                tr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                vi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt-BR:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-CN:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-TW:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
              help_center_id: 87
        - name: Collection Not Found
          path-parameters:
            id: 1
          request:
            name: Update collection name
          response:
            body:
              id: '176'
              workspace_id: this_is_an_id81_that_should_be_at_least_4
              name: Update collection name
              description: english collection description
              created_at: 1719492724
              updated_at: 1719492724
              url: http://help-center.test/myapp-81/collection-25
              icon: folder
              order: 25
              default_locale: en
              translated_content:
                type: group_translated_content
                ar:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bg:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                bs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ca:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                cs:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                da:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                de:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                el:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                en:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                es:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                et:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                fr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                he:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                hu:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                id:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                it:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ja:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ko:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                lv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                mn:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nb:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                nl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ro:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                ru:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sl:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                sv:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                tr:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                vi:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                pt-BR:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-CN:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
                zh-TW:
                  type: group_content
                  name: Collection name
                  description: ' Collection description'
              help_center_id: 87
    deleteCollection:
      path: /help_center/collections/{id}
      method: DELETE
      auth: true
      docs: >-
        You can delete a single collection by making a DELETE request to
        `https://api.intercom.io/collections/<id>`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the collection which is given by Intercom.
      display-name: Delete a collection
      response:
        docs: successful
        type: root.DeletedCollectionObject
        status-code: 200
      errors:
        - root.DeleteCollectionRequestUnauthorizedError
        - root.DeleteCollectionRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 1
          response:
            body:
              id: '182'
              object: collection
              deleted: true
    retrieveHelpCenter:
      path: /help_center/help_centers/{id}
      method: GET
      auth: true
      docs: >-
        You can fetch the details of a single Help Center by making a GET
        request to `https://api.intercom.io/help_center/help_center/<id>`.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the collection which is given by Intercom.
      display-name: Retrieve a Help Center
      response:
        docs: Collection found
        type: HelpCenter
        status-code: 200
      errors:
        - root.RetrieveHelpCenterRequestUnauthorizedError
        - root.RetrieveHelpCenterRequestNotFoundError
      examples:
        - name: Collection found
          path-parameters:
            id: 1
          response:
            body:
              id: '93'
              workspace_id: this_is_an_id93_that_should_be_at_least_4
              created_at: 1719492727
              updated_at: 1719492727
              identifier: help-center-1
              website_turned_on: false
              display_name: Intercom Help Center
    listHelpCenters:
      path: /help_center/help_centers
      method: GET
      auth: true
      docs: >-
        You can list all Help Centers by making a GET request to
        `https://api.intercom.io/help_center/help_centers`.
      source:
        openapi: ../openapi.yml
      display-name: List all Help Centers
      response:
        docs: Help Centers found
        type: HelpCenterList
        status-code: 200
      errors:
        - root.ListHelpCentersRequestUnauthorizedError
      examples:
        - name: Help Centers found
          response:
            body:
              type: list
              data:
                - id: '123'
                  workspace_id: hfi1bx4l
                  created_at: 1672928359
                  updated_at: 1672928610
                  identifier: intercom
                  website_turned_on: true
                  display_name: Intercom Help Center
  source:
    openapi: ../openapi.yml
  display-name: Help Center
docs: Everything about your Help Center
types:
  Collection:
    docs: Collections are top level containers for Articles within the Help Center.
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the collection which is given by Intercom.
      workspace_id:
        type: optional<string>
        docs: The id of the workspace which the collection belongs to.
      name:
        type: optional<string>
        docs: >-
          The name of the collection. For multilingual collections, this will be
          the name of the default language's content.
      description:
        type: optional<string>
        docs: >-
          The description of the collection. For multilingual help centers, this
          will be the description of the collection for the default language.
      created_at:
        type: optional<integer>
        docs: >-
          The time when the article was created (seconds). For multilingual
          articles, this will be the timestamp of creation of the default
          language's content.
      updated_at:
        type: optional<integer>
        docs: >-
          The time when the article was last updated (seconds). For multilingual
          articles, this will be the timestamp of last update of the default
          language's content.
      url:
        type: optional<string>
        docs: >-
          The URL of the collection. For multilingual help centers, this will be
          the URL of the collection for the default language.
      icon:
        type: optional<string>
        docs: The icon of the collection.
      order:
        type: optional<integer>
        docs: >-
          The order of the section in relation to others sections within a
          collection. Values go from `0` upwards. `0` is the default if there's
          no order.
      default_locale:
        type: optional<string>
        docs: >-
          The default locale of the help center. This field is only returned for
          multilingual help centers.
      translated_content:
        type: optional<root.GroupTranslatedContent>
      parent_id:
        type: optional<string>
        docs: >-
          The id of the parent collection. If `null` then it is the first level
          collection.
      help_center_id:
        type: optional<integer>
        docs: The id of the help center the collection is in.
    source:
      openapi: ../openapi.yml
  HelpCenter:
    docs: Help Centers contain collections
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the Help Center which is given by Intercom.
      workspace_id:
        type: optional<string>
        docs: The id of the workspace which the Help Center belongs to.
      created_at:
        type: optional<integer>
        docs: The time when the Help Center was created.
      updated_at:
        type: optional<integer>
        docs: The time when the Help Center was last updated.
      identifier:
        type: optional<string>
        docs: >-
          The identifier of the Help Center. This is used in the URL of the Help
          Center.
      website_turned_on:
        type: optional<boolean>
        docs: >-
          Whether the Help Center is turned on or not. This is controlled in
          your Help Center settings.
      display_name:
        type: optional<string>
        docs: The display name of the Help Center only seen by teammates.
    source:
      openapi: ../openapi.yml
  HelpCenterList:
    docs: A list of Help Centers belonging to the App
    properties:
      type:
        type: optional<literal<"list">>
        docs: The type of the object - `list`.
      data:
        type: optional<list<HelpCenter>>
        docs: An array of Help Center objects
    source:
      openapi: ../openapi.yml
",
    },
    "messages.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your messages",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Messages",
          "endpoints": {
            "createMessage": {
              "auth": true,
              "display-name": "Create a message",
              "docs": "You can create a message that has been initiated by an admin. The conversation can be either an in-app message or an email.

> 🚧 Sending for visitors
>
> There can be a short delay between when a contact is created and when a contact becomes available to be messaged through the API. A 404 Not Found error will be returned in this case.

This will return the Message model that has been created.

> 🚧 Retrieving Associated Conversations
>
> As this is a message, there will be no conversation present until the contact responds. Once they do, you will have to search for a contact's conversations with the id of the message.
",
              "errors": [
                "root.CreateMessageRequestBadRequestError",
                "root.CreateMessageRequestUnauthorizedError",
                "root.CreateMessageRequestForbiddenError",
                "root.CreateMessageRequestUnprocessableEntityError",
              ],
              "examples": [
                {
                  "name": "user message created",
                  "request": {
                    "body": "heyy",
                    "from": {
                      "id": "667d61698a68186f43bafe50",
                      "type": "user",
                    },
                    "referer": "https://twitter.com/bob",
                  },
                  "response": {
                    "body": {
                      "body": "heyy",
                      "conversation_id": "476",
                      "created_at": 1719492969,
                      "id": "403918316",
                      "message_type": "inapp",
                      "subject": "Greetings",
                      "type": "user_message",
                    },
                  },
                },
                {
                  "name": "lead message created",
                  "request": {
                    "body": "heyy",
                    "from": {
                      "id": "667d616a8a68186f43bafe51",
                      "type": "lead",
                    },
                    "referer": "https://twitter.com/bob",
                  },
                  "response": {
                    "body": {
                      "body": "heyy",
                      "conversation_id": "477",
                      "created_at": 1719492971,
                      "id": "403918317",
                      "message_type": "inapp",
                      "subject": "Greetings",
                      "type": "user_message",
                    },
                  },
                },
                {
                  "name": "admin message created",
                  "request": {
                    "body": "heyy",
                    "from": {
                      "id": "991267716",
                      "type": "admin",
                    },
                    "message_type": "conversation",
                    "to": {
                      "id": "667d616c8a68186f43bafe52",
                      "type": "user",
                    },
                  },
                  "response": {
                    "body": {
                      "body": "heyy",
                      "conversation_id": "64619700005570",
                      "created_at": 1719492972,
                      "id": "15",
                      "message_type": "inapp",
                      "subject": "heyy",
                      "type": "admin_message",
                    },
                  },
                },
                {
                  "name": "No body supplied for message",
                  "request": {
                    "from": {
                      "id": "991267718",
                      "type": "admin",
                    },
                    "message_type": "inapp",
                    "subject": "heyy",
                    "to": {
                      "id": "667d616d8a68186f43bafe53",
                      "type": "user",
                    },
                  },
                  "response": {
                    "body": {
                      "body": "heyy",
                      "conversation_id": "476",
                      "created_at": 1719492969,
                      "id": "403918316",
                      "message_type": "inapp",
                      "subject": "Greetings",
                      "type": "user_message",
                    },
                  },
                },
                {
                  "name": "No subject supplied for email message",
                  "request": {
                    "body": "hey there",
                    "from": {
                      "id": "991267719",
                      "type": "admin",
                    },
                    "message_type": "email",
                    "to": {
                      "type": "user",
                      "user_id": "70",
                    },
                  },
                  "response": {
                    "body": {
                      "body": "heyy",
                      "conversation_id": "476",
                      "created_at": 1719492969,
                      "id": "403918316",
                      "message_type": "inapp",
                      "subject": "Greetings",
                      "type": "user_message",
                    },
                  },
                },
                {
                  "name": "No body supplied for email message",
                  "request": {
                    "from": {
                      "id": "991267720",
                      "type": "admin",
                    },
                    "message_type": "email",
                    "subject": "heyy",
                    "to": {
                      "id": "667d616e8a68186f43bafe55",
                      "type": "user",
                    },
                  },
                  "response": {
                    "body": {
                      "body": "heyy",
                      "conversation_id": "476",
                      "created_at": 1719492969,
                      "id": "403918316",
                      "message_type": "inapp",
                      "subject": "Greetings",
                      "type": "user_message",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/messages",
              "request": {
                "body": "root.CreateMessageRequestOne",
                "content-type": "application/json",
              },
              "response": {
                "docs": "admin message created",
                "status-code": 200,
                "type": "Message",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Message": {
            "docs": "Message are how you reach out to contacts in Intercom. They are created when an admin sends an outbound message to a contact.",
            "inline": undefined,
            "properties": {
              "body": {
                "docs": "The message body, which may contain HTML.",
                "type": "string",
              },
              "conversation_id": {
                "docs": "The associated conversation_id",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the conversation was created.",
                "type": "integer",
              },
              "id": {
                "docs": "The id representing the message.",
                "type": "string",
              },
              "message_type": {
                "docs": "The type of message that was sent. Can be email, inapp, facebook or twitter.",
                "type": "MessageMessageType",
              },
              "subject": {
                "docs": "The subject of the message. Only present if message_type: email.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The type of the message",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MessageMessageType": {
            "docs": "The type of message that was sent. Can be email, inapp, facebook or twitter.",
            "enum": [
              "email",
              "inapp",
              "facebook",
              "twitter",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createMessage:
      path: /messages
      method: POST
      auth: true
      docs: >
        You can create a message that has been initiated by an admin. The
        conversation can be either an in-app message or an email.


        > 🚧 Sending for visitors

        >

        > There can be a short delay between when a contact is created and when
        a contact becomes available to be messaged through the API. A 404 Not
        Found error will be returned in this case.


        This will return the Message model that has been created.


        > 🚧 Retrieving Associated Conversations

        >

        > As this is a message, there will be no conversation present until the
        contact responds. Once they do, you will have to search for a contact's
        conversations with the id of the message.
      source:
        openapi: ../openapi.yml
      display-name: Create a message
      request:
        body: root.CreateMessageRequestOne
        content-type: application/json
      response:
        docs: admin message created
        type: Message
        status-code: 200
      errors:
        - root.CreateMessageRequestBadRequestError
        - root.CreateMessageRequestUnauthorizedError
        - root.CreateMessageRequestForbiddenError
        - root.CreateMessageRequestUnprocessableEntityError
      examples:
        - name: user message created
          request:
            from:
              type: user
              id: 667d61698a68186f43bafe50
            body: heyy
            referer: https://twitter.com/bob
          response:
            body:
              type: user_message
              id: '403918316'
              created_at: 1719492969
              subject: Greetings
              body: heyy
              message_type: inapp
              conversation_id: '476'
        - name: lead message created
          request:
            from:
              type: lead
              id: 667d616a8a68186f43bafe51
            body: heyy
            referer: https://twitter.com/bob
          response:
            body:
              type: user_message
              id: '403918317'
              created_at: 1719492971
              subject: Greetings
              body: heyy
              message_type: inapp
              conversation_id: '477'
        - name: admin message created
          request:
            from:
              type: admin
              id: '991267716'
            to:
              type: user
              id: 667d616c8a68186f43bafe52
            message_type: conversation
            body: heyy
          response:
            body:
              type: admin_message
              id: '15'
              created_at: 1719492972
              subject: heyy
              body: heyy
              message_type: inapp
              conversation_id: '64619700005570'
        - name: No body supplied for message
          request:
            from:
              type: admin
              id: '991267718'
            to:
              type: user
              id: 667d616d8a68186f43bafe53
            message_type: inapp
            subject: heyy
          response:
            body:
              type: user_message
              id: '403918316'
              created_at: 1719492969
              subject: Greetings
              body: heyy
              message_type: inapp
              conversation_id: '476'
        - name: No subject supplied for email message
          request:
            from:
              type: admin
              id: '991267719'
            to:
              type: user
              user_id: '70'
            message_type: email
            body: hey there
          response:
            body:
              type: user_message
              id: '403918316'
              created_at: 1719492969
              subject: Greetings
              body: heyy
              message_type: inapp
              conversation_id: '476'
        - name: No body supplied for email message
          request:
            from:
              type: admin
              id: '991267720'
            to:
              type: user
              id: 667d616e8a68186f43bafe55
            message_type: email
            subject: heyy
          response:
            body:
              type: user_message
              id: '403918316'
              created_at: 1719492969
              subject: Greetings
              body: heyy
              message_type: inapp
              conversation_id: '476'
  source:
    openapi: ../openapi.yml
  display-name: Messages
docs: Everything about your messages
types:
  MessageMessageType:
    enum:
      - email
      - inapp
      - facebook
      - twitter
    docs: >-
      The type of message that was sent. Can be email, inapp, facebook or
      twitter.
    inline: true
    source:
      openapi: ../openapi.yml
  Message:
    docs: >-
      Message are how you reach out to contacts in Intercom. They are created
      when an admin sends an outbound message to a contact.
    properties:
      type:
        type: string
        docs: The type of the message
      id:
        type: string
        docs: The id representing the message.
      created_at:
        type: integer
        docs: The time the conversation was created.
      subject:
        type: optional<string>
        docs: 'The subject of the message. Only present if message_type: email.'
      body:
        type: string
        docs: The message body, which may contain HTML.
      message_type:
        type: MessageMessageType
        docs: >-
          The type of message that was sent. Can be email, inapp, facebook or
          twitter.
      conversation_id:
        type: optional<string>
        docs: The associated conversation_id
    source:
      openapi: ../openapi.yml
",
    },
    "news.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your News",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "News",
          "endpoints": {
            "createNewsItem": {
              "auth": true,
              "display-name": "Create a news item",
              "docs": "You can create a news item",
              "errors": [
                "root.CreateNewsItemRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "body": "<p>New costumes in store for this spooky season</p>",
                    "deliver_silently": true,
                    "labels": [
                      "Product",
                      "Update",
                      "New",
                    ],
                    "newsfeed_assignments": [
                      {
                        "newsfeed_id": 53,
                        "published_at": 1664638214,
                      },
                    ],
                    "reactions": [
                      "😆",
                      "😅",
                    ],
                    "sender_id": 991267734,
                    "state": "live",
                    "title": "Halloween is here!",
                  },
                  "response": {
                    "body": {
                      "body": "<p>New costumes in store for this spooky season</p>",
                      "created_at": 1719492978,
                      "deliver_silently": true,
                      "id": "33",
                      "labels": [
                        "New",
                        "Product",
                        "Update",
                      ],
                      "newsfeed_assignments": [
                        {
                          "newsfeed_id": 53,
                          "published_at": 1664638214,
                        },
                      ],
                      "reactions": [
                        "😆",
                        "😅",
                      ],
                      "sender_id": 991267734,
                      "state": "live",
                      "title": "Halloween is here!",
                      "updated_at": 1719492978,
                      "workspace_id": "this_is_an_id498_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/news/news_items",
              "request": {
                "body": {
                  "type": "root.NewsItemRequest",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "NewsItem",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteNewsItem": {
              "auth": true,
              "display-name": "Delete a news item",
              "docs": "You can delete a single news item.",
              "errors": [
                "root.DeleteNewsItemRequestUnauthorizedError",
                "root.DeleteNewsItemRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "deleted": true,
                      "id": "40",
                      "object": "news-item",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/news/news_items/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the news item which is given by Intercom.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.DeletedObject",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listLiveNewsfeedItems": {
              "auth": true,
              "display-name": "List all live newsfeed items",
              "docs": "You can fetch a list of all news items that are live on a given newsfeed",
              "errors": [
                "root.ListLiveNewsfeedItemsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "created_at": 1674917488,
                          "id": "12312",
                          "name": "My Newsfeed",
                          "type": "newsfeed",
                          "updated_at": 1674917488,
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 20,
                        "total_pages": 0,
                        "type": "pages",
                      },
                      "total_count": 0,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/news/newsfeeds/{id}/items",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the news feed item which is given by Intercom.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.PaginatedResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listNewsItems": {
              "auth": true,
              "display-name": "List all news items",
              "docs": "You can fetch a list of all news items",
              "errors": [
                "root.ListNewsItemsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "created_at": 1719492976,
                          "id": "29",
                          "name": "My Newsfeed",
                          "type": "newsfeed",
                          "updated_at": 1719492976,
                        },
                        {
                          "created_at": 1719492976,
                          "id": "30",
                          "name": "My Newsfeed",
                          "type": "newsfeed",
                          "updated_at": 1719492976,
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 10,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 2,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/news/news_items",
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.PaginatedResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listNewsfeeds": {
              "auth": true,
              "display-name": "List all newsfeeds",
              "docs": "You can fetch a list of all newsfeeds",
              "errors": [
                "root.ListNewsfeedsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "created_at": 1719492987,
                          "id": "68",
                          "name": "Visitor Feed",
                          "type": "newsfeed",
                          "updated_at": 1719492987,
                        },
                        {
                          "created_at": 1719492987,
                          "id": "69",
                          "name": "Visitor Feed",
                          "type": "newsfeed",
                          "updated_at": 1719492987,
                        },
                      ],
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 10,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 2,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/news/newsfeeds",
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.PaginatedResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveNewsItem": {
              "auth": true,
              "display-name": "Retrieve a news item",
              "docs": "You can fetch the details of a single news item.",
              "errors": [
                "root.RetrieveNewsItemRequestUnauthorizedError",
                "root.RetrieveNewsItemRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "body": "<p>Hello there,</p>",
                      "created_at": 1719492979,
                      "deliver_silently": false,
                      "id": "34",
                      "labels": [
                        "Product Update",
                      ],
                      "newsfeed_assignments": [
                        {
                          "newsfeed_id": 55,
                          "published_at": 1719492980,
                        },
                      ],
                      "reactions": [
                        "👍",
                        "👍",
                        "👍",
                        "👍",
                      ],
                      "sender_id": 991267737,
                      "state": "live",
                      "title": "We have news",
                      "updated_at": 1719492979,
                      "workspace_id": "this_is_an_id502_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/news/news_items/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the news item which is given by Intercom.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "NewsItem",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveNewsfeed": {
              "auth": true,
              "display-name": "Retrieve a newsfeed",
              "docs": "You can fetch the details of a single newsfeed",
              "errors": [
                "root.RetrieveNewsfeedRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "created_at": 1719492988,
                      "id": "72",
                      "name": "Visitor Feed",
                      "updated_at": 1719492988,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/news/newsfeeds/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the news feed item which is given by Intercom.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Newsfeed",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateNewsItem": {
              "auth": true,
              "display-name": "Update a news item",
              "docs": undefined,
              "errors": [
                "root.UpdateNewsItemRequestUnauthorizedError",
                "root.UpdateNewsItemRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "body": "<p>New gifts in store for the jolly season</p>",
                    "reactions": [
                      "😝",
                      "😂",
                    ],
                    "sender_id": 991267745,
                    "title": "Christmas is here!",
                  },
                  "response": {
                    "body": {
                      "body": "<p>New gifts in store for the jolly season</p>",
                      "created_at": 1719492982,
                      "deliver_silently": false,
                      "id": "37",
                      "labels": [
                        "Product Update",
                      ],
                      "newsfeed_assignments": [
                        {
                          "newsfeed_id": 198313,
                          "published_at": 1674917488,
                        },
                      ],
                      "reactions": [
                        "😝",
                        "😂",
                      ],
                      "sender_id": 991267745,
                      "state": "live",
                      "title": "Christmas is here!",
                      "updated_at": 1719492982,
                      "workspace_id": "this_is_an_id508_that_should_be_at_least_",
                    },
                  },
                },
                {
                  "name": "News Item Not Found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "body": "<p>New gifts in store for the jolly season</p>",
                    "reactions": [
                      "😝",
                      "😂",
                    ],
                    "sender_id": 991267748,
                    "title": "Christmas is here!",
                  },
                  "response": {
                    "body": {
                      "body": "<p>New gifts in store for the jolly season</p>",
                      "created_at": 1719492982,
                      "deliver_silently": false,
                      "id": "37",
                      "labels": [
                        "Product Update",
                      ],
                      "newsfeed_assignments": [
                        {
                          "newsfeed_id": 198313,
                          "published_at": 1674917488,
                        },
                      ],
                      "reactions": [
                        "😝",
                        "😂",
                      ],
                      "sender_id": 991267745,
                      "state": "live",
                      "title": "Christmas is here!",
                      "updated_at": 1719492982,
                      "workspace_id": "this_is_an_id508_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/news/news_items/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the news item which is given by Intercom.",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "type": "root.NewsItemRequest",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "NewsItem",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "NewsItem": {
            "docs": "A News Item is a content type in Intercom enabling you to announce product updates, company news, promotions, events and more with your customers.",
            "inline": undefined,
            "properties": {
              "body": {
                "docs": "The news item body, which may contain HTML.",
                "type": "optional<string>",
              },
              "cover_image_url": {
                "docs": "URL of the image used as cover. Must have .jpg or .png extension.",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "created_at": {
                "docs": "Timestamp for when the news item was created.",
                "type": "optional<integer>",
              },
              "deliver_silently": {
                "docs": "When set to true, the news item will appear in the messenger newsfeed without showing a notification badge.",
                "type": "optional<boolean>",
              },
              "id": {
                "docs": "The unique identifier for the news item which is given by Intercom.",
                "type": "optional<string>",
              },
              "labels": {
                "docs": "Label names displayed to users to categorize the news item.",
                "type": "optional<list<optional<string>>>",
              },
              "newsfeed_assignments": {
                "docs": "A list of newsfeed_assignments to assign to the specified newsfeed.",
                "type": "optional<list<NewsfeedAssignment>>",
              },
              "reactions": {
                "docs": "Ordered list of emoji reactions to the news item. When empty, reactions are disabled.",
                "type": "optional<list<optional<string>>>",
              },
              "sender_id": {
                "docs": "The id of the sender of the news item. Must be a teammate on the workspace.",
                "type": "optional<integer>",
              },
              "state": {
                "docs": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
                "type": "optional<NewsItemState>",
              },
              "title": {
                "docs": "The title of the news item.",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Timestamp for when the news item was last updated.",
                "type": "optional<integer>",
              },
              "workspace_id": {
                "docs": "The id of the workspace which the news item belongs to.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NewsItemState": {
            "docs": "News items will not be visible to your users in the assigned newsfeeds until they are set live.",
            "enum": [
              "draft",
              "live",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Newsfeed": {
            "docs": "A newsfeed is a collection of news items, targeted to a specific audience.

Newsfeeds currently cannot be edited through the API, please refer to [this article](https://www.intercom.com/help/en/articles/6362267-getting-started-with-news) to set up your newsfeeds in Intercom.
",
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "Timestamp for when the newsfeed was created.",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "The unique identifier for the newsfeed which is given by Intercom.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the newsfeed. This name will never be visible to your users.",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "Timestamp for when the newsfeed was last updated.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NewsfeedAssignment": {
            "docs": "Assigns a news item to a newsfeed.",
            "inline": undefined,
            "properties": {
              "newsfeed_id": {
                "docs": "The unique identifier for the newsfeed which is given by Intercom. Publish dates cannot be in the future, to schedule news items use the dedicated feature in app (see this article).",
                "type": "optional<integer>",
              },
              "published_at": {
                "docs": "Publish date of the news item on the newsfeed, use this field if you want to set a publish date in the past (e.g. when importing existing news items). On write, this field will be ignored if the news item state is "draft".",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listNewsItems:
      path: /news/news_items
      method: GET
      auth: true
      docs: You can fetch a list of all news items
      source:
        openapi: ../openapi.yml
      display-name: List all news items
      response:
        docs: successful
        type: root.PaginatedResponse
        status-code: 200
      errors:
        - root.ListNewsItemsRequestUnauthorizedError
      examples:
        - name: successful
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 10
                total_pages: 1
              total_count: 2
              data:
                - type: newsfeed
                  id: '29'
                  name: My Newsfeed
                  created_at: 1719492976
                  updated_at: 1719492976
                - type: newsfeed
                  id: '30'
                  name: My Newsfeed
                  created_at: 1719492976
                  updated_at: 1719492976
    createNewsItem:
      path: /news/news_items
      method: POST
      auth: true
      docs: You can create a news item
      source:
        openapi: ../openapi.yml
      display-name: Create a news item
      request:
        body:
          type: root.NewsItemRequest
        content-type: application/json
      response:
        docs: successful
        type: NewsItem
        status-code: 200
      errors:
        - root.CreateNewsItemRequestUnauthorizedError
      examples:
        - name: successful
          request:
            title: Halloween is here!
            body: <p>New costumes in store for this spooky season</p>
            sender_id: 991267734
            state: live
            deliver_silently: true
            labels:
              - Product
              - Update
              - New
            reactions:
              - 😆
              - 😅
            newsfeed_assignments:
              - newsfeed_id: 53
                published_at: 1664638214
          response:
            body:
              id: '33'
              workspace_id: this_is_an_id498_that_should_be_at_least_
              title: Halloween is here!
              body: <p>New costumes in store for this spooky season</p>
              sender_id: 991267734
              state: live
              newsfeed_assignments:
                - newsfeed_id: 53
                  published_at: 1664638214
              labels:
                - New
                - Product
                - Update
              reactions:
                - 😆
                - 😅
              deliver_silently: true
              created_at: 1719492978
              updated_at: 1719492978
    retrieveNewsItem:
      path: /news/news_items/{id}
      method: GET
      auth: true
      docs: You can fetch the details of a single news item.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the news item which is given by Intercom.
      display-name: Retrieve a news item
      response:
        docs: successful
        type: NewsItem
        status-code: 200
      errors:
        - root.RetrieveNewsItemRequestUnauthorizedError
        - root.RetrieveNewsItemRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 1
          response:
            body:
              id: '34'
              workspace_id: this_is_an_id502_that_should_be_at_least_
              title: We have news
              body: <p>Hello there,</p>
              sender_id: 991267737
              state: live
              newsfeed_assignments:
                - newsfeed_id: 55
                  published_at: 1719492980
              labels:
                - Product Update
              reactions:
                - 👍
                - 👍
                - 👍
                - 👍
              deliver_silently: false
              created_at: 1719492979
              updated_at: 1719492979
    updateNewsItem:
      path: /news/news_items/{id}
      method: PUT
      auth: true
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the news item which is given by Intercom.
      display-name: Update a news item
      request:
        body:
          type: root.NewsItemRequest
        content-type: application/json
      response:
        docs: successful
        type: NewsItem
        status-code: 200
      errors:
        - root.UpdateNewsItemRequestUnauthorizedError
        - root.UpdateNewsItemRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 1
          request:
            title: Christmas is here!
            body: <p>New gifts in store for the jolly season</p>
            sender_id: 991267745
            reactions:
              - 😝
              - 😂
          response:
            body:
              id: '37'
              workspace_id: this_is_an_id508_that_should_be_at_least_
              title: Christmas is here!
              body: <p>New gifts in store for the jolly season</p>
              sender_id: 991267745
              state: live
              newsfeed_assignments:
                - newsfeed_id: 198313
                  published_at: 1674917488
              labels:
                - Product Update
              reactions:
                - 😝
                - 😂
              deliver_silently: false
              created_at: 1719492982
              updated_at: 1719492982
        - name: News Item Not Found
          path-parameters:
            id: 1
          request:
            title: Christmas is here!
            body: <p>New gifts in store for the jolly season</p>
            sender_id: 991267748
            reactions:
              - 😝
              - 😂
          response:
            body:
              id: '37'
              workspace_id: this_is_an_id508_that_should_be_at_least_
              title: Christmas is here!
              body: <p>New gifts in store for the jolly season</p>
              sender_id: 991267745
              state: live
              newsfeed_assignments:
                - newsfeed_id: 198313
                  published_at: 1674917488
              labels:
                - Product Update
              reactions:
                - 😝
                - 😂
              deliver_silently: false
              created_at: 1719492982
              updated_at: 1719492982
    deleteNewsItem:
      path: /news/news_items/{id}
      method: DELETE
      auth: true
      docs: You can delete a single news item.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier for the news item which is given by Intercom.
      display-name: Delete a news item
      response:
        docs: successful
        type: root.DeletedObject
        status-code: 200
      errors:
        - root.DeleteNewsItemRequestUnauthorizedError
        - root.DeleteNewsItemRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: 1
          response:
            body:
              id: '40'
              object: news-item
              deleted: true
    listLiveNewsfeedItems:
      path: /news/newsfeeds/{id}/items
      method: GET
      auth: true
      docs: You can fetch a list of all news items that are live on a given newsfeed
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The unique identifier for the news feed item which is given by
            Intercom.
      display-name: List all live newsfeed items
      response:
        docs: successful
        type: root.PaginatedResponse
        status-code: 200
      errors:
        - root.ListLiveNewsfeedItemsRequestUnauthorizedError
      examples:
        - name: successful
          path-parameters:
            id: '123'
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 20
                total_pages: 0
              total_count: 0
              data:
                - type: newsfeed
                  id: '12312'
                  name: My Newsfeed
                  created_at: 1674917488
                  updated_at: 1674917488
    listNewsfeeds:
      path: /news/newsfeeds
      method: GET
      auth: true
      docs: You can fetch a list of all newsfeeds
      source:
        openapi: ../openapi.yml
      display-name: List all newsfeeds
      response:
        docs: successful
        type: root.PaginatedResponse
        status-code: 200
      errors:
        - root.ListNewsfeedsRequestUnauthorizedError
      examples:
        - name: successful
          response:
            body:
              type: list
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 10
                total_pages: 1
              total_count: 2
              data:
                - type: newsfeed
                  id: '68'
                  name: Visitor Feed
                  created_at: 1719492987
                  updated_at: 1719492987
                - type: newsfeed
                  id: '69'
                  name: Visitor Feed
                  created_at: 1719492987
                  updated_at: 1719492987
    retrieveNewsfeed:
      path: /news/newsfeeds/{id}
      method: GET
      auth: true
      docs: You can fetch the details of a single newsfeed
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The unique identifier for the news feed item which is given by
            Intercom.
      display-name: Retrieve a newsfeed
      response:
        docs: successful
        type: Newsfeed
        status-code: 200
      errors:
        - root.RetrieveNewsfeedRequestUnauthorizedError
      examples:
        - name: successful
          path-parameters:
            id: '123'
          response:
            body:
              id: '72'
              name: Visitor Feed
              created_at: 1719492988
              updated_at: 1719492988
  source:
    openapi: ../openapi.yml
  display-name: News
docs: Everything about your News
types:
  NewsItemState:
    enum:
      - draft
      - live
    docs: >-
      News items will not be visible to your users in the assigned newsfeeds
      until they are set live.
    inline: true
    source:
      openapi: ../openapi.yml
  NewsItem:
    docs: >-
      A News Item is a content type in Intercom enabling you to announce product
      updates, company news, promotions, events and more with your customers.
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the news item which is given by Intercom.
      workspace_id:
        type: optional<string>
        docs: The id of the workspace which the news item belongs to.
      title:
        type: optional<string>
        docs: The title of the news item.
      body:
        type: optional<string>
        docs: The news item body, which may contain HTML.
      sender_id:
        type: optional<integer>
        docs: >-
          The id of the sender of the news item. Must be a teammate on the
          workspace.
      state:
        type: optional<NewsItemState>
        docs: >-
          News items will not be visible to your users in the assigned newsfeeds
          until they are set live.
      newsfeed_assignments:
        type: optional<list<NewsfeedAssignment>>
        docs: A list of newsfeed_assignments to assign to the specified newsfeed.
      labels:
        type: optional<list<optional<string>>>
        docs: Label names displayed to users to categorize the news item.
      cover_image_url:
        type: optional<string>
        docs: URL of the image used as cover. Must have .jpg or .png extension.
        validation:
          format: uri
      reactions:
        type: optional<list<optional<string>>>
        docs: >-
          Ordered list of emoji reactions to the news item. When empty,
          reactions are disabled.
      deliver_silently:
        type: optional<boolean>
        docs: >-
          When set to true, the news item will appear in the messenger newsfeed
          without showing a notification badge.
      created_at:
        type: optional<integer>
        docs: Timestamp for when the news item was created.
      updated_at:
        type: optional<integer>
        docs: Timestamp for when the news item was last updated.
    source:
      openapi: ../openapi.yml
  Newsfeed:
    docs: >
      A newsfeed is a collection of news items, targeted to a specific audience.


      Newsfeeds currently cannot be edited through the API, please refer to
      [this
      article](https://www.intercom.com/help/en/articles/6362267-getting-started-with-news)
      to set up your newsfeeds in Intercom.
    properties:
      id:
        type: optional<string>
        docs: The unique identifier for the newsfeed which is given by Intercom.
      name:
        type: optional<string>
        docs: >-
          The name of the newsfeed. This name will never be visible to your
          users.
      created_at:
        type: optional<integer>
        docs: Timestamp for when the newsfeed was created.
      updated_at:
        type: optional<integer>
        docs: Timestamp for when the newsfeed was last updated.
    source:
      openapi: ../openapi.yml
  NewsfeedAssignment:
    docs: Assigns a news item to a newsfeed.
    properties:
      newsfeed_id:
        type: optional<integer>
        docs: >-
          The unique identifier for the newsfeed which is given by Intercom.
          Publish dates cannot be in the future, to schedule news items use the
          dedicated feature in app (see this article).
      published_at:
        type: optional<integer>
        docs: >-
          Publish date of the news item on the newsfeed, use this field if you
          want to set a publish date in the past (e.g. when importing existing
          news items). On write, this field will be ignored if the news item
          state is "draft".
    source:
      openapi: ../openapi.yml
",
    },
    "notes.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Notes",
        "imports": {
          "admins": "admins.yml",
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Notes",
          "endpoints": {
            "createNote": {
              "auth": true,
              "display-name": "Create a note",
              "docs": "You can add a note to a single contact.",
              "errors": [
                "root.CreateNoteRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "admin_id": "123",
                    "body": "Hello",
                    "contact_id": "667d60978a68186f43bafd9e",
                  },
                  "response": {
                    "body": {
                      "author": {
                        "avatar": "https://picsum.photos/200/300",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false,
                        "email": "admin103@email.com",
                        "has_inbox_seat": true,
                        "id": "991267493",
                        "job_title": "Philosopher",
                        "name": "Ciaran103 Lee",
                        "team_ids": [
                          814865,
                        ],
                        "team_priority_level": {
                          "primary_team_ids": [
                            814865,
                          ],
                          "secondary_team_ids": [
                            493881,
                          ],
                        },
                        "type": "admin",
                      },
                      "body": "<p>Hello</p>",
                      "contact": {
                        "id": "667d60978a68186f43bafd9e",
                        "type": "contact",
                      },
                      "created_at": 1719492759,
                      "id": "34",
                      "type": "note",
                    },
                  },
                },
                {
                  "name": "Admin not found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "admin_id": "123",
                    "body": "Hello",
                    "contact_id": "667d60988a68186f43bafd9f",
                  },
                  "response": {
                    "body": {
                      "author": {
                        "avatar": "https://picsum.photos/200/300",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false,
                        "email": "admin103@email.com",
                        "has_inbox_seat": true,
                        "id": "991267493",
                        "job_title": "Philosopher",
                        "name": "Ciaran103 Lee",
                        "team_ids": [
                          814865,
                        ],
                        "team_priority_level": {
                          "primary_team_ids": [
                            814865,
                          ],
                          "secondary_team_ids": [
                            493881,
                          ],
                        },
                        "type": "admin",
                      },
                      "body": "<p>Hello</p>",
                      "contact": {
                        "id": "667d60978a68186f43bafd9e",
                        "type": "contact",
                      },
                      "created_at": 1719492759,
                      "id": "34",
                      "type": "note",
                    },
                  },
                },
                {
                  "name": "Contact not found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "request": {
                    "admin_id": "123",
                    "body": "Hello",
                    "contact_id": "123",
                  },
                  "response": {
                    "body": {
                      "author": {
                        "avatar": "https://picsum.photos/200/300",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false,
                        "email": "admin103@email.com",
                        "has_inbox_seat": true,
                        "id": "991267493",
                        "job_title": "Philosopher",
                        "name": "Ciaran103 Lee",
                        "team_ids": [
                          814865,
                        ],
                        "team_priority_level": {
                          "primary_team_ids": [
                            814865,
                          ],
                          "secondary_team_ids": [
                            493881,
                          ],
                        },
                        "type": "admin",
                      },
                      "body": "<p>Hello</p>",
                      "contact": {
                        "id": "667d60978a68186f43bafd9e",
                        "type": "contact",
                      },
                      "created_at": 1719492759,
                      "id": "34",
                      "type": "note",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/{id}/notes",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a given contact.",
                  "type": "integer",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "admin_id": {
                      "docs": "The unique identifier of a given admin.",
                      "type": "optional<string>",
                    },
                    "body": {
                      "docs": "The text of the note.",
                      "type": "string",
                    },
                    "contact_id": {
                      "docs": "The unique identifier of a given contact.",
                      "type": "optional<string>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateNoteRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "Note",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listNotes": {
              "auth": true,
              "display-name": "List all notes",
              "docs": "You can fetch a list of notes that are associated to a contact.",
              "errors": [
                "root.ListNotesRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "author": {
                            "away_mode_enabled": false,
                            "away_mode_reassign": false,
                            "email": "admin101@email.com",
                            "has_inbox_seat": true,
                            "id": "991267491",
                            "job_title": "Philosopher",
                            "name": "Ciaran101 Lee",
                            "type": "admin",
                          },
                          "body": "<p>This is a note.</p>",
                          "contact": {
                            "id": "667d60968a68186f43bafd9c",
                            "type": "contact",
                          },
                          "created_at": 1718887958,
                          "id": "29",
                          "type": "note",
                        },
                        {
                          "author": {
                            "away_mode_enabled": false,
                            "away_mode_reassign": false,
                            "email": "admin101@email.com",
                            "has_inbox_seat": true,
                            "id": "991267491",
                            "job_title": "Philosopher",
                            "name": "Ciaran101 Lee",
                            "type": "admin",
                          },
                          "body": "<p>This is a note.</p>",
                          "contact": {
                            "id": "667d60968a68186f43bafd9c",
                            "type": "contact",
                          },
                          "created_at": 1718801558,
                          "id": "28",
                          "type": "note",
                        },
                        {
                          "author": {
                            "away_mode_enabled": false,
                            "away_mode_reassign": false,
                            "email": "admin101@email.com",
                            "has_inbox_seat": true,
                            "id": "991267491",
                            "job_title": "Philosopher",
                            "name": "Ciaran101 Lee",
                            "type": "admin",
                          },
                          "body": "<p>This is a note.</p>",
                          "contact": {
                            "id": "667d60968a68186f43bafd9c",
                            "type": "contact",
                          },
                          "created_at": 1718801558,
                          "id": "27",
                          "type": "note",
                        },
                      ],
                      "pages": {
                        "page": 1,
                        "per_page": 50,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "total_count": 3,
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/contacts/{id}/notes",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a contact.",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "root.NoteList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveNote": {
              "auth": true,
              "display-name": "Retrieve a note",
              "docs": "You can fetch the details of a single note.",
              "errors": [
                "root.RetrieveNoteRequestUnauthorizedError",
                "root.RetrieveNoteRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Note found",
                  "path-parameters": {
                    "id": 1,
                  },
                  "response": {
                    "body": {
                      "author": {
                        "avatar": "https://picsum.photos/200/300",
                        "away_mode_enabled": false,
                        "away_mode_reassign": false,
                        "email": "admin316@email.com",
                        "has_inbox_seat": true,
                        "id": "991267764",
                        "job_title": "Philosopher",
                        "name": "Ciaran316 Lee",
                        "team_ids": [
                          814865,
                        ],
                        "team_priority_level": {
                          "primary_team_ids": [
                            814865,
                          ],
                          "secondary_team_ids": [
                            493881,
                          ],
                        },
                        "type": "admin",
                      },
                      "body": "<p>This is a note.</p>",
                      "contact": {
                        "id": "667d617d8a68186f43bafe58",
                        "type": "contact",
                      },
                      "created_at": 1718801789,
                      "id": "37",
                      "type": "note",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/notes/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a given note",
                  "type": "integer",
                },
              },
              "response": {
                "docs": "Note found",
                "status-code": 200,
                "type": "Note",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Note": {
            "docs": "Notes allow you to annotate and comment on your contacts.",
            "inline": undefined,
            "properties": {
              "author": {
                "docs": "Optional. Represents the Admin that created the note.",
                "type": "optional<admins.Admin>",
              },
              "body": {
                "docs": "The body text of the note.",
                "type": "optional<string>",
              },
              "contact": {
                "docs": "Represents the contact that the note was created about.",
                "type": "optional<NoteContact>",
              },
              "created_at": {
                "docs": "The time the note was created.",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "The id of the note.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `note`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "NoteContact": {
            "docs": "Represents the contact that the note was created about.",
            "inline": true,
            "properties": {
              "id": {
                "docs": "The id of the contact.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `contact`.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
  admins: admins.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listNotes:
      path: /contacts/{id}/notes
      method: GET
      auth: true
      docs: You can fetch a list of notes that are associated to a contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier of a contact.
      display-name: List all notes
      response:
        docs: Successful response
        type: root.NoteList
        status-code: 200
      errors:
        - root.ListNotesRequestNotFoundError
      examples:
        - name: Successful response
          path-parameters:
            id: 1
          response:
            body:
              type: list
              data:
                - type: note
                  id: '29'
                  created_at: 1718887958
                  contact:
                    type: contact
                    id: 667d60968a68186f43bafd9c
                  author:
                    type: admin
                    id: '991267491'
                    name: Ciaran101 Lee
                    email: admin101@email.com
                    job_title: Philosopher
                    away_mode_enabled: false
                    away_mode_reassign: false
                    has_inbox_seat: true
                  body: <p>This is a note.</p>
                - type: note
                  id: '28'
                  created_at: 1718801558
                  contact:
                    type: contact
                    id: 667d60968a68186f43bafd9c
                  author:
                    type: admin
                    id: '991267491'
                    name: Ciaran101 Lee
                    email: admin101@email.com
                    job_title: Philosopher
                    away_mode_enabled: false
                    away_mode_reassign: false
                    has_inbox_seat: true
                  body: <p>This is a note.</p>
                - type: note
                  id: '27'
                  created_at: 1718801558
                  contact:
                    type: contact
                    id: 667d60968a68186f43bafd9c
                  author:
                    type: admin
                    id: '991267491'
                    name: Ciaran101 Lee
                    email: admin101@email.com
                    job_title: Philosopher
                    away_mode_enabled: false
                    away_mode_reassign: false
                    has_inbox_seat: true
                  body: <p>This is a note.</p>
              total_count: 3
              pages:
                type: pages
                page: 1
                per_page: 50
                total_pages: 1
    createNote:
      path: /contacts/{id}/notes
      method: POST
      auth: true
      docs: You can add a note to a single contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier of a given contact.
      display-name: Create a note
      request:
        name: CreateNoteRequest
        body:
          properties:
            body:
              type: string
              docs: The text of the note.
            contact_id:
              type: optional<string>
              docs: The unique identifier of a given contact.
            admin_id:
              type: optional<string>
              docs: The unique identifier of a given admin.
        content-type: application/json
      response:
        docs: Successful response
        type: Note
        status-code: 200
      errors:
        - root.CreateNoteRequestNotFoundError
      examples:
        - name: Successful response
          path-parameters:
            id: 1
          request:
            body: Hello
            contact_id: 667d60978a68186f43bafd9e
            admin_id: '123'
          response:
            body:
              type: note
              id: '34'
              created_at: 1719492759
              contact:
                type: contact
                id: 667d60978a68186f43bafd9e
              author:
                type: admin
                id: '991267493'
                name: Ciaran103 Lee
                email: admin103@email.com
                job_title: Philosopher
                away_mode_enabled: false
                away_mode_reassign: false
                has_inbox_seat: true
                team_ids:
                  - 814865
                avatar: https://picsum.photos/200/300
                team_priority_level:
                  primary_team_ids:
                    - 814865
                  secondary_team_ids:
                    - 493881
              body: <p>Hello</p>
        - name: Admin not found
          path-parameters:
            id: 1
          request:
            body: Hello
            contact_id: 667d60988a68186f43bafd9f
            admin_id: '123'
          response:
            body:
              type: note
              id: '34'
              created_at: 1719492759
              contact:
                type: contact
                id: 667d60978a68186f43bafd9e
              author:
                type: admin
                id: '991267493'
                name: Ciaran103 Lee
                email: admin103@email.com
                job_title: Philosopher
                away_mode_enabled: false
                away_mode_reassign: false
                has_inbox_seat: true
                team_ids:
                  - 814865
                avatar: https://picsum.photos/200/300
                team_priority_level:
                  primary_team_ids:
                    - 814865
                  secondary_team_ids:
                    - 493881
              body: <p>Hello</p>
        - name: Contact not found
          path-parameters:
            id: 1
          request:
            body: Hello
            contact_id: '123'
            admin_id: '123'
          response:
            body:
              type: note
              id: '34'
              created_at: 1719492759
              contact:
                type: contact
                id: 667d60978a68186f43bafd9e
              author:
                type: admin
                id: '991267493'
                name: Ciaran103 Lee
                email: admin103@email.com
                job_title: Philosopher
                away_mode_enabled: false
                away_mode_reassign: false
                has_inbox_seat: true
                team_ids:
                  - 814865
                avatar: https://picsum.photos/200/300
                team_priority_level:
                  primary_team_ids:
                    - 814865
                  secondary_team_ids:
                    - 493881
              body: <p>Hello</p>
    retrieveNote:
      path: /notes/{id}
      method: GET
      auth: true
      docs: You can fetch the details of a single note.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: integer
          docs: The unique identifier of a given note
      display-name: Retrieve a note
      response:
        docs: Note found
        type: Note
        status-code: 200
      errors:
        - root.RetrieveNoteRequestUnauthorizedError
        - root.RetrieveNoteRequestNotFoundError
      examples:
        - name: Note found
          path-parameters:
            id: 1
          response:
            body:
              type: note
              id: '37'
              created_at: 1718801789
              contact:
                type: contact
                id: 667d617d8a68186f43bafe58
              author:
                type: admin
                id: '991267764'
                name: Ciaran316 Lee
                email: admin316@email.com
                job_title: Philosopher
                away_mode_enabled: false
                away_mode_reassign: false
                has_inbox_seat: true
                team_ids:
                  - 814865
                avatar: https://picsum.photos/200/300
                team_priority_level:
                  primary_team_ids:
                    - 814865
                  secondary_team_ids:
                    - 493881
              body: <p>This is a note.</p>
  source:
    openapi: ../openapi.yml
  display-name: Notes
docs: Everything about your Notes
types:
  NoteContact:
    docs: Represents the contact that the note was created about.
    properties:
      type:
        type: optional<string>
        docs: String representing the object's type. Always has the value `contact`.
      id:
        type: optional<string>
        docs: The id of the contact.
    source:
      openapi: ../openapi.yml
    inline: true
  Note:
    docs: Notes allow you to annotate and comment on your contacts.
    properties:
      type:
        type: optional<string>
        docs: String representing the object's type. Always has the value `note`.
      id:
        type: optional<string>
        docs: The id of the note.
      created_at:
        type: optional<integer>
        docs: The time the note was created.
      contact:
        type: optional<NoteContact>
        docs: Represents the contact that the note was created about.
      author:
        type: optional<admins.Admin>
        docs: Optional. Represents the Admin that created the note.
      body:
        type: optional<string>
        docs: The body text of the note.
    source:
      openapi: ../openapi.yml
",
    },
    "segments.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Segments",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Segments",
          "endpoints": {
            "listSegments": {
              "auth": true,
              "display-name": "List all segments",
              "docs": "You can fetch a list of all segments.",
              "errors": [
                "root.ListSegmentsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "response": {
                    "body": {
                      "pages": {
                        "key": "value",
                      },
                      "segments": [
                        {
                          "count": 3,
                          "created_at": 1719492991,
                          "id": "667d617f8a68186f43bafe5b",
                          "name": "John segment",
                          "person_type": "user",
                          "type": "segment",
                          "updated_at": 1719492991,
                        },
                        {
                          "count": 3,
                          "created_at": 1719492991,
                          "id": "667d617f8a68186f43bafe5c",
                          "name": "Jane segment",
                          "person_type": "user",
                          "type": "segment",
                          "updated_at": 1719492991,
                        },
                      ],
                      "type": "segment.list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/segments",
              "request": {
                "name": "ListSegmentsRequest",
                "query-parameters": {
                  "include_count": {
                    "docs": "It includes the count of contacts that belong to each segment.",
                    "type": "optional<boolean>",
                  },
                },
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "root.SegmentList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveSegment": {
              "auth": true,
              "display-name": "Retrieve a segment",
              "docs": "You can fetch the details of a single segment.",
              "errors": [
                "root.RetrieveSegmentRequestUnauthorizedError",
                "root.RetrieveSegmentRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "path-parameters": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "count": 3,
                      "created_at": 1719492992,
                      "id": "667d61808a68186f43bafe5f",
                      "name": "John segment",
                      "person_type": "user",
                      "type": "segment",
                      "updated_at": 1719492992,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/segments/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identified of a given segment.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "Segment",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Segment": {
            "docs": "A segment is a group of your contacts defined by the rules that you set.",
            "inline": undefined,
            "properties": {
              "count": {
                "docs": "The number of items in the user segment. It's returned when `include_count=true` is included in the request.",
                "type": "optional<integer>",
              },
              "created_at": {
                "docs": "The time the segment was created.",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "The unique identifier representing the segment.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the segment.",
                "type": "optional<string>",
              },
              "person_type": {
                "docs": "Type of the contact: contact (lead) or user.",
                "type": "optional<SegmentPersonType>",
              },
              "type": {
                "docs": "The type of object.",
                "type": "optional<literal<"segment">>",
              },
              "updated_at": {
                "docs": "The time the segment was updated.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SegmentPersonType": {
            "docs": "Type of the contact: contact (lead) or user.",
            "enum": [
              "contact",
              "user",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listSegments:
      path: /segments
      method: GET
      auth: true
      docs: You can fetch a list of all segments.
      source:
        openapi: ../openapi.yml
      display-name: List all segments
      request:
        name: ListSegmentsRequest
        query-parameters:
          include_count:
            type: optional<boolean>
            docs: It includes the count of contacts that belong to each segment.
      response:
        docs: Successful response
        type: root.SegmentList
        status-code: 200
      errors:
        - root.ListSegmentsRequestUnauthorizedError
      examples:
        - name: Successful response
          response:
            body:
              type: segment.list
              segments:
                - type: segment
                  id: 667d617f8a68186f43bafe5b
                  name: John segment
                  created_at: 1719492991
                  updated_at: 1719492991
                  person_type: user
                  count: 3
                - type: segment
                  id: 667d617f8a68186f43bafe5c
                  name: Jane segment
                  created_at: 1719492991
                  updated_at: 1719492991
                  person_type: user
                  count: 3
              pages:
                key: value
    retrieveSegment:
      path: /segments/{id}
      method: GET
      auth: true
      docs: You can fetch the details of a single segment.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identified of a given segment.
      display-name: Retrieve a segment
      response:
        docs: Successful response
        type: Segment
        status-code: 200
      errors:
        - root.RetrieveSegmentRequestUnauthorizedError
        - root.RetrieveSegmentRequestNotFoundError
      examples:
        - name: Successful response
          path-parameters:
            id: '123'
          response:
            body:
              type: segment
              id: 667d61808a68186f43bafe5f
              name: John segment
              created_at: 1719492992
              updated_at: 1719492992
              person_type: user
              count: 3
  source:
    openapi: ../openapi.yml
  display-name: Segments
docs: Everything about your Segments
types:
  SegmentPersonType:
    enum:
      - contact
      - user
    docs: 'Type of the contact: contact (lead) or user.'
    inline: true
    source:
      openapi: ../openapi.yml
  Segment:
    docs: A segment is a group of your contacts defined by the rules that you set.
    properties:
      type:
        type: optional<literal<"segment">>
        docs: The type of object.
      id:
        type: optional<string>
        docs: The unique identifier representing the segment.
      name:
        type: optional<string>
        docs: The name of the segment.
      created_at:
        type: optional<integer>
        docs: The time the segment was created.
      updated_at:
        type: optional<integer>
        docs: The time the segment was updated.
      person_type:
        type: optional<SegmentPersonType>
        docs: 'Type of the contact: contact (lead) or user.'
      count:
        type: optional<integer>
        docs: >-
          The number of items in the user segment. It's returned when
          `include_count=true` is included in the request.
    source:
      openapi: ../openapi.yml
",
    },
    "subscriptionTypes.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about subscription types",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Subscription Types",
          "endpoints": {
            "attachSubscriptionTypeToContact": {
              "auth": true,
              "display-name": "Add subscription to a contact",
              "docs": "You can add a specific subscription to a contact. In Intercom, we have two different subscription types based on user consent - opt-out and opt-in:

  1.Attaching a contact to an opt-out subscription type will opt that user out from receiving messages related to that subscription type.

  2.Attaching a contact to an opt-in subscription type will opt that user in to receiving messages related to that subscription type.

This will return a subscription type model for the subscription type that was added to the contact.
",
              "errors": [
                "root.AttachSubscriptionTypeToContactRequestUnauthorizedError",
                "root.AttachSubscriptionTypeToContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "request": {
                    "consent_type": "opt_in",
                    "id": "37846",
                  },
                  "response": {
                    "body": {
                      "consent_type": "opt_in",
                      "content_types": [
                        "sms_message",
                      ],
                      "default_translation": {
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en",
                        "name": "Newsletters",
                      },
                      "id": "108",
                      "state": "live",
                      "translations": [
                        {
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en",
                          "name": "Newsletters",
                        },
                      ],
                      "type": "subscription",
                    },
                  },
                },
                {
                  "name": "Contact not found",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "request": {
                    "consent_type": "opt_in",
                    "id": "37846",
                  },
                  "response": {
                    "body": {
                      "consent_type": "opt_in",
                      "content_types": [
                        "sms_message",
                      ],
                      "default_translation": {
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en",
                        "name": "Newsletters",
                      },
                      "id": "108",
                      "state": "live",
                      "translations": [
                        {
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en",
                          "name": "Newsletters",
                        },
                      ],
                      "type": "subscription",
                    },
                  },
                },
                {
                  "name": "Resource not found",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "request": {
                    "consent_type": "opt_in",
                    "id": "invalid_id",
                  },
                  "response": {
                    "body": {
                      "consent_type": "opt_in",
                      "content_types": [
                        "sms_message",
                      ],
                      "default_translation": {
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en",
                        "name": "Newsletters",
                      },
                      "id": "108",
                      "state": "live",
                      "translations": [
                        {
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en",
                          "name": "Newsletters",
                        },
                      ],
                      "type": "subscription",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/subscriptions",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "consent_type": {
                      "docs": "The consent_type of a subscription, opt_out or opt_in.",
                      "type": "string",
                    },
                    "id": {
                      "docs": "The unique identifier for the subscription which is given by Intercom",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AttachSubscriptionTypeToContactRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "SubscriptionType",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "detachSubscriptionTypeToContact": {
              "auth": true,
              "display-name": "Remove subscription from a contact",
              "docs": "You can remove a specific subscription from a contact. This will return a subscription type model for the subscription type that was removed from the contact.",
              "errors": [
                "root.DetachSubscriptionTypeToContactRequestUnauthorizedError",
                "root.DetachSubscriptionTypeToContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                    "id": "37846",
                  },
                  "response": {
                    "body": {
                      "consent_type": "opt_in",
                      "content_types": [
                        "sms_message",
                      ],
                      "default_translation": {
                        "description": "Lorem ipsum dolor sit amet",
                        "locale": "en",
                        "name": "Newsletters",
                      },
                      "id": "124",
                      "state": "live",
                      "translations": [
                        {
                          "description": "Lorem ipsum dolor sit amet",
                          "locale": "en",
                          "name": "Newsletters",
                        },
                      ],
                      "type": "subscription",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/subscriptions/{id}",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
                "id": {
                  "docs": "The unique identifier for the subscription type which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "SubscriptionType",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listSubscriptionTypes": {
              "auth": true,
              "display-name": "List subscription types",
              "docs": "You can list all subscription types. A list of subscription type objects will be returned.",
              "errors": [
                "root.ListSubscriptionTypesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "consent_type": "opt_out",
                          "content_types": [
                            "email",
                          ],
                          "default_translation": {
                            "description": "Lorem ipsum dolor sit amet",
                            "locale": "en",
                            "name": "Newsletters",
                          },
                          "id": "137",
                          "state": "live",
                          "translations": [
                            {
                              "description": "Lorem ipsum dolor sit amet",
                              "locale": "en",
                              "name": "Newsletters",
                            },
                          ],
                          "type": "subscription",
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/subscription_types",
              "response": {
                "docs": "Successful",
                "status-code": 200,
                "type": "root.SubscriptionTypeList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "SubscriptionType": {
            "docs": "A subscription type lets customers easily opt out of non-essential communications without missing what's important to them.",
            "inline": undefined,
            "properties": {
              "consent_type": {
                "docs": "Describes the type of consent.",
                "type": "optional<SubscriptionTypeConsentType>",
              },
              "content_types": {
                "docs": "The message types that this subscription supports - can contain `email` or `sms_message`.",
                "type": "optional<list<SubscriptionTypeContentTypesItem>>",
              },
              "default_translation": {
                "type": "optional<root.Translation>",
              },
              "id": {
                "docs": "The unique identifier representing the subscription type.",
                "type": "optional<string>",
              },
              "state": {
                "docs": "The state of the subscription type.",
                "type": "optional<SubscriptionTypeState>",
              },
              "translations": {
                "docs": "An array of translations objects with the localised version of the subscription type in each available locale within your translation settings.",
                "type": "optional<list<root.Translation>>",
              },
              "type": {
                "docs": "The type of the object - subscription",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SubscriptionTypeConsentType": {
            "docs": "Describes the type of consent.",
            "enum": [
              "opt_out",
              "opt_in",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SubscriptionTypeContentTypesItem": {
            "enum": [
              "email",
              "sms_message",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SubscriptionTypeState": {
            "docs": "The state of the subscription type.",
            "enum": [
              "live",
              "draft",
              "archived",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    attachSubscriptionTypeToContact:
      path: /contacts/{contact_id}/subscriptions
      method: POST
      auth: true
      docs: >
        You can add a specific subscription to a contact. In Intercom, we have
        two different subscription types based on user consent - opt-out and
        opt-in:

          1.Attaching a contact to an opt-out subscription type will opt that user out from receiving messages related to that subscription type.

          2.Attaching a contact to an opt-in subscription type will opt that user in to receiving messages related to that subscription type.

        This will return a subscription type model for the subscription type
        that was added to the contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
      display-name: Add subscription to a contact
      request:
        name: AttachSubscriptionTypeToContactRequest
        body:
          properties:
            id:
              type: string
              docs: >-
                The unique identifier for the subscription which is given by
                Intercom
            consent_type:
              type: string
              docs: The consent_type of a subscription, opt_out or opt_in.
        content-type: application/json
      response:
        docs: Successful
        type: SubscriptionType
        status-code: 200
      errors:
        - root.AttachSubscriptionTypeToContactRequestUnauthorizedError
        - root.AttachSubscriptionTypeToContactRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          request:
            id: '37846'
            consent_type: opt_in
          response:
            body:
              type: subscription
              id: '108'
              state: live
              default_translation:
                name: Newsletters
                description: Lorem ipsum dolor sit amet
                locale: en
              translations:
                - name: Newsletters
                  description: Lorem ipsum dolor sit amet
                  locale: en
              consent_type: opt_in
              content_types:
                - sms_message
        - name: Contact not found
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          request:
            id: '37846'
            consent_type: opt_in
          response:
            body:
              type: subscription
              id: '108'
              state: live
              default_translation:
                name: Newsletters
                description: Lorem ipsum dolor sit amet
                locale: en
              translations:
                - name: Newsletters
                  description: Lorem ipsum dolor sit amet
                  locale: en
              consent_type: opt_in
              content_types:
                - sms_message
        - name: Resource not found
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          request:
            id: invalid_id
            consent_type: opt_in
          response:
            body:
              type: subscription
              id: '108'
              state: live
              default_translation:
                name: Newsletters
                description: Lorem ipsum dolor sit amet
                locale: en
              translations:
                - name: Newsletters
                  description: Lorem ipsum dolor sit amet
                  locale: en
              consent_type: opt_in
              content_types:
                - sms_message
    detachSubscriptionTypeToContact:
      path: /contacts/{contact_id}/subscriptions/{id}
      method: DELETE
      auth: true
      docs: >-
        You can remove a specific subscription from a contact. This will return
        a subscription type model for the subscription type that was removed
        from the contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
        id:
          type: string
          docs: >-
            The unique identifier for the subscription type which is given by
            Intercom
      display-name: Remove subscription from a contact
      response:
        docs: Successful
        type: SubscriptionType
        status-code: 200
      errors:
        - root.DetachSubscriptionTypeToContactRequestUnauthorizedError
        - root.DetachSubscriptionTypeToContactRequestNotFoundError
      examples:
        - name: Successful
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
            id: '37846'
          response:
            body:
              type: subscription
              id: '124'
              state: live
              default_translation:
                name: Newsletters
                description: Lorem ipsum dolor sit amet
                locale: en
              translations:
                - name: Newsletters
                  description: Lorem ipsum dolor sit amet
                  locale: en
              consent_type: opt_in
              content_types:
                - sms_message
    listSubscriptionTypes:
      path: /subscription_types
      method: GET
      auth: true
      docs: >-
        You can list all subscription types. A list of subscription type objects
        will be returned.
      source:
        openapi: ../openapi.yml
      display-name: List subscription types
      response:
        docs: Successful
        type: root.SubscriptionTypeList
        status-code: 200
      errors:
        - root.ListSubscriptionTypesRequestUnauthorizedError
      examples:
        - name: Successful
          response:
            body:
              type: list
              data:
                - type: subscription
                  id: '137'
                  state: live
                  default_translation:
                    name: Newsletters
                    description: Lorem ipsum dolor sit amet
                    locale: en
                  translations:
                    - name: Newsletters
                      description: Lorem ipsum dolor sit amet
                      locale: en
                  consent_type: opt_out
                  content_types:
                    - email
  source:
    openapi: ../openapi.yml
  display-name: Subscription Types
docs: Everything about subscription types
types:
  SubscriptionTypeState:
    enum:
      - live
      - draft
      - archived
    docs: The state of the subscription type.
    inline: true
    source:
      openapi: ../openapi.yml
  SubscriptionTypeConsentType:
    enum:
      - opt_out
      - opt_in
    docs: Describes the type of consent.
    inline: true
    source:
      openapi: ../openapi.yml
  SubscriptionTypeContentTypesItem:
    enum:
      - email
      - sms_message
    inline: true
    source:
      openapi: ../openapi.yml
  SubscriptionType:
    docs: >-
      A subscription type lets customers easily opt out of non-essential
      communications without missing what's important to them.
    properties:
      type:
        type: optional<string>
        docs: The type of the object - subscription
      id:
        type: optional<string>
        docs: The unique identifier representing the subscription type.
      state:
        type: optional<SubscriptionTypeState>
        docs: The state of the subscription type.
      default_translation:
        type: optional<root.Translation>
      translations:
        type: optional<list<root.Translation>>
        docs: >-
          An array of translations objects with the localised version of the
          subscription type in each available locale within your translation
          settings.
      consent_type:
        type: optional<SubscriptionTypeConsentType>
        docs: Describes the type of consent.
      content_types:
        type: optional<list<SubscriptionTypeContentTypesItem>>
        docs: >-
          The message types that this subscription supports - can contain
          `email` or `sms_message`.
    source:
      openapi: ../openapi.yml
",
    },
    "switch.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about Switch",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Switch",
          "endpoints": {
            "createPhoneSwitch": {
              "auth": true,
              "display-name": "Create a phone Switch",
              "docs": "You can use the API to deflect phone calls to the Intercom Messenger.
Calling this endpoint will send an SMS with a link to the Messenger to the phone number specified.

If custom attributes are specified, they will be added to the user or lead's custom data attributes.
",
              "errors": [
                "root.CreatePhoneSwitchRequestBadRequestError",
                "root.CreatePhoneSwitchRequestUnauthorizedError",
                "root.CreatePhoneSwitchRequestUnprocessableEntityError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "custom_attributes": {
                      "issue_type": "Billing",
                      "priority": "High",
                    },
                    "phone": "+353832345678",
                  },
                  "response": {
                    "body": {
                      "phone": "+1 1234567890",
                      "type": "phone_call_redirect",
                    },
                  },
                },
                {
                  "name": "bad request - exception sending sms",
                  "request": {
                    "custom_attributes": {
                      "issue_type": "Billing",
                      "priority": "High",
                    },
                    "phone": "+353832345678",
                  },
                  "response": {
                    "body": {
                      "phone": "+1 1234567890",
                      "type": "phone_call_redirect",
                    },
                  },
                },
                {
                  "name": "bad request - invalid number",
                  "request": {
                    "custom_attributes": {
                      "issue_type": "Billing",
                      "priority": "High",
                    },
                    "phone": "+353832345678",
                  },
                  "response": {
                    "body": {
                      "phone": "+1 1234567890",
                      "type": "phone_call_redirect",
                    },
                  },
                },
                {
                  "name": "unprocessable entity",
                  "request": {
                    "custom_attributes": {
                      "issue_type": "Billing",
                      "priority": "High",
                    },
                    "phone": "+40241100100",
                  },
                  "response": {
                    "body": {
                      "phone": "+1 1234567890",
                      "type": "phone_call_redirect",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/phone_call_redirects",
              "request": {
                "body": {
                  "type": "optional<root.CreatePhoneSwitchRequest>",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "optional<root.PhoneSwitch>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createPhoneSwitch:
      path: /phone_call_redirects
      method: POST
      auth: true
      docs: >
        You can use the API to deflect phone calls to the Intercom Messenger.

        Calling this endpoint will send an SMS with a link to the Messenger to
        the phone number specified.


        If custom attributes are specified, they will be added to the user or
        lead's custom data attributes.
      source:
        openapi: ../openapi.yml
      display-name: Create a phone Switch
      request:
        body:
          type: optional<root.CreatePhoneSwitchRequest>
        content-type: application/json
      response:
        docs: successful
        type: optional<root.PhoneSwitch>
        status-code: 200
      errors:
        - root.CreatePhoneSwitchRequestBadRequestError
        - root.CreatePhoneSwitchRequestUnauthorizedError
        - root.CreatePhoneSwitchRequestUnprocessableEntityError
      examples:
        - name: successful
          request:
            phone: '+353832345678'
            custom_attributes:
              issue_type: Billing
              priority: High
          response:
            body:
              type: phone_call_redirect
              phone: +1 1234567890
        - name: bad request - exception sending sms
          request:
            phone: '+353832345678'
            custom_attributes:
              issue_type: Billing
              priority: High
          response:
            body:
              type: phone_call_redirect
              phone: +1 1234567890
        - name: bad request - invalid number
          request:
            phone: '+353832345678'
            custom_attributes:
              issue_type: Billing
              priority: High
          response:
            body:
              type: phone_call_redirect
              phone: +1 1234567890
        - name: unprocessable entity
          request:
            phone: '+40241100100'
            custom_attributes:
              issue_type: Billing
              priority: High
          response:
            body:
              type: phone_call_redirect
              phone: +1 1234567890
  source:
    openapi: ../openapi.yml
  display-name: Switch
docs: Everything about Switch
",
    },
    "tags.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about tags",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Tags",
          "endpoints": {
            "attachTagToContact": {
              "auth": true,
              "display-name": "Add tag to a contact",
              "docs": "You can tag a specific contact. This will return a tag object for the tag that was added to the contact.",
              "errors": [
                "root.AttachTagToContactRequestUnauthorizedError",
                "root.AttachTagToContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "request": {
                    "id": "7522907",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "94",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Contact not found",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "request": {
                    "id": "7522907",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "94",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Tag not found",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                  },
                  "request": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "94",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/tags",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "id": {
                      "docs": "The unique identifier for the tag which is given by Intercom",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AttachTagToContactRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "attachTagToConversation": {
              "auth": true,
              "display-name": "Add tag to a conversation",
              "docs": "You can tag a specific conversation. This will return a tag object for the tag that was added to the conversation.",
              "errors": [
                "root.AttachTagToConversationRequestUnauthorizedError",
                "root.AttachTagToConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "conversation_id": "64619700005694",
                  },
                  "request": {
                    "admin_id": "780",
                    "id": "7522907",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "99",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Conversation not found",
                  "path-parameters": {
                    "conversation_id": "64619700005694",
                  },
                  "request": {
                    "admin_id": "780",
                    "id": "7522907",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "99",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/conversations/{conversation_id}/tags",
              "path-parameters": {
                "conversation_id": {
                  "docs": "conversation_id",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "admin_id": {
                      "docs": "The unique identifier for the admin which is given by Intercom.",
                      "type": "string",
                    },
                    "id": {
                      "docs": "The unique identifier for the tag which is given by Intercom",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AttachTagToConversationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "attachTagToTicket": {
              "auth": true,
              "display-name": "Add tag to a ticket",
              "docs": "You can tag a specific ticket. This will return a tag object for the tag that was added to the ticket.",
              "errors": [
                "root.AttachTagToTicketRequestUnauthorizedError",
                "root.AttachTagToTicketRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "ticket_id": "64619700005694",
                  },
                  "request": {
                    "admin_id": "780",
                    "id": "7522907",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "134",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Ticket not found",
                  "path-parameters": {
                    "ticket_id": "64619700005694",
                  },
                  "request": {
                    "admin_id": "780",
                    "id": "7522907",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "134",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/tickets/{ticket_id}/tags",
              "path-parameters": {
                "ticket_id": {
                  "docs": "ticket_id",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "admin_id": {
                      "docs": "The unique identifier for the admin which is given by Intercom.",
                      "type": "string",
                    },
                    "id": {
                      "docs": "The unique identifier for the tag which is given by Intercom",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "AttachTagToTicketRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createTag": {
              "auth": true,
              "display-name": "Create or update a tag, Tag or untag companies, Tag contacts",
              "docs": "You can use this endpoint to perform the following operations:

  **1. Create a new tag:** You can create a new tag by passing in the tag name as specified in "Create or Update Tag Request Payload" described below.

  **2. Update an existing tag:** You can update an existing tag by passing the id of the tag as specified in "Create or Update Tag Request Payload" described below.

  **3. Tag Companies:** You can tag single company or a list of companies. You can tag a company by passing in the tag name and the company details as specified in "Tag Company Request Payload" described below. Also, if the tag doesn't exist then a new one will be created automatically.

  **4. Untag Companies:** You can untag a single company or a list of companies. You can untag a company by passing in the tag id and the company details as specified in "Untag Company Request Payload" described below.

  **5. Tag Multiple Users:** You can tag a list of users. You can tag the users by passing in the tag name and the user details as specified in "Tag Users Request Payload" described below.

Each operation will return a tag object.
",
              "errors": [
                "root.CreateTagRequestBadRequestError",
                "root.CreateTagRequestUnauthorizedError",
                "root.CreateTagRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Action successful",
                  "request": {
                    "name": "test",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "118",
                      "name": "test",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Invalid parameters",
                  "request": {
                    "name": "Independent",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "118",
                      "name": "test",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Company not found",
                  "request": {
                    "companies": [
                      {
                        "company_id": "123",
                      },
                    ],
                    "name": "test",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "118",
                      "name": "test",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "User  not found",
                  "request": {
                    "name": "test",
                    "users": [
                      {
                        "id": "123",
                      },
                    ],
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "118",
                      "name": "test",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/tags",
              "request": {
                "body": "CreateTagRequestBody",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Action successful",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteTag": {
              "auth": true,
              "display-name": "Delete tag",
              "docs": "You can delete the details of tags that are on the workspace by passing in the id.",
              "errors": [
                "root.DeleteTagRequestBadRequestError",
                "root.DeleteTagRequestUnauthorizedError",
                "root.DeleteTagRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "id": "123",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/tags/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a given tag",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "detachTagFromContact": {
              "auth": true,
              "display-name": "Remove tag from a contact",
              "docs": "You can remove tag from a specific contact. This will return a tag object for the tag that was removed from the contact.",
              "errors": [
                "root.DetachTagFromContactRequestUnauthorizedError",
                "root.DetachTagFromContactRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "contact_id": "63a07ddf05a32042dffac965",
                    "id": "7522907",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "97",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/contacts/{contact_id}/tags/{id}",
              "path-parameters": {
                "contact_id": {
                  "docs": "The unique identifier for the contact which is given by Intercom",
                  "type": "string",
                },
                "id": {
                  "docs": "The unique identifier for the tag which is given by Intercom",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "detachTagFromConversation": {
              "auth": true,
              "display-name": "Remove tag from a conversation",
              "docs": "You can remove tag from a specific conversation. This will return a tag object for the tag that was removed from the conversation.",
              "errors": [
                "root.DetachTagFromConversationRequestUnauthorizedError",
                "root.DetachTagFromConversationRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "conversation_id": "64619700005694",
                    "id": "7522907",
                  },
                  "request": {
                    "admin_id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "102",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Conversation not found",
                  "path-parameters": {
                    "conversation_id": "64619700005694",
                    "id": "7522907",
                  },
                  "request": {
                    "admin_id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "102",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Tag not found",
                  "path-parameters": {
                    "conversation_id": "64619700005694",
                    "id": "7522907",
                  },
                  "request": {
                    "admin_id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "102",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/conversations/{conversation_id}/tags/{id}",
              "path-parameters": {
                "conversation_id": {
                  "docs": "conversation_id",
                  "type": "string",
                },
                "id": {
                  "docs": "id",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "admin_id": {
                      "docs": "The unique identifier for the admin which is given by Intercom.",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "DetachTagFromConversationRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "detachTagFromTicket": {
              "auth": true,
              "display-name": "Remove tag from a ticket",
              "docs": "You can remove tag from a specific ticket. This will return a tag object for the tag that was removed from the ticket.",
              "errors": [
                "root.DetachTagFromTicketRequestUnauthorizedError",
                "root.DetachTagFromTicketRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "7522907",
                    "ticket_id": "64619700005694",
                  },
                  "request": {
                    "admin_id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "137",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Ticket not found",
                  "path-parameters": {
                    "id": "7522907",
                    "ticket_id": "64619700005694",
                  },
                  "request": {
                    "admin_id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "137",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
                {
                  "name": "Tag not found",
                  "path-parameters": {
                    "id": "7522907",
                    "ticket_id": "64619700005694",
                  },
                  "request": {
                    "admin_id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "137",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/tickets/{ticket_id}/tags/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the tag which is given by Intercom",
                  "type": "string",
                },
                "ticket_id": {
                  "docs": "ticket_id",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "admin_id": {
                      "docs": "The unique identifier for the admin which is given by Intercom.",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "DetachTagFromTicketRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "findTag": {
              "auth": true,
              "display-name": "Find a specific tag",
              "docs": "You can fetch the details of tags that are on the workspace by their id.
This will return a tag object.
",
              "errors": [
                "root.FindTagRequestUnauthorizedError",
                "root.FindTagRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Tag found",
                  "path-parameters": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "applied_at": 1663597223,
                      "applied_by": {
                        "id": "1a2b3c",
                        "type": "contact",
                      },
                      "id": "126",
                      "name": "Manual tag",
                      "type": "tag",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/tags/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a given tag",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Tag found",
                "status-code": 200,
                "type": "Tag",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listTags": {
              "auth": true,
              "display-name": "List all tags",
              "docs": "You can fetch a list of all tags for a given workspace.

",
              "errors": [
                "root.ListTagsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "data": [
                        {
                          "applied_at": 1663597223,
                          "applied_by": {
                            "type": "contact",
                          },
                          "id": "115",
                          "name": "Manual tag 1",
                          "type": "tag",
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/tags",
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.Tags",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateTagRequestBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "root.CreateOrUpdateTagRequest",
              },
              {
                "type": "root.TagCompanyRequest",
              },
              {
                "type": "root.UntagCompanyRequest",
              },
              {
                "type": "root.TagMultipleUsersRequest",
              },
            ],
          },
          "Tag": {
            "docs": "A tag allows you to label your contacts, companies, and conversations and list them using that tag.",
            "inline": undefined,
            "properties": {
              "applied_at": {
                "docs": "The time when the tag was applied to the object",
                "type": "optional<integer>",
              },
              "applied_by": {
                "type": "optional<root.Reference>",
              },
              "id": {
                "docs": "The id of the tag",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the tag",
                "type": "optional<string>",
              },
              "type": {
                "docs": "value is "tag"",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    attachTagToContact:
      path: /contacts/{contact_id}/tags
      method: POST
      auth: true
      docs: >-
        You can tag a specific contact. This will return a tag object for the
        tag that was added to the contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
      display-name: Add tag to a contact
      request:
        name: AttachTagToContactRequest
        body:
          properties:
            id:
              type: string
              docs: The unique identifier for the tag which is given by Intercom
        content-type: application/json
      response:
        docs: successful
        type: Tag
        status-code: 200
      errors:
        - root.AttachTagToContactRequestUnauthorizedError
        - root.AttachTagToContactRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          request:
            id: '7522907'
          response:
            body:
              type: tag
              id: '94'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Contact not found
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          request:
            id: '7522907'
          response:
            body:
              type: tag
              id: '94'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Tag not found
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
          request:
            id: '123'
          response:
            body:
              type: tag
              id: '94'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
    detachTagFromContact:
      path: /contacts/{contact_id}/tags/{id}
      method: DELETE
      auth: true
      docs: >-
        You can remove tag from a specific contact. This will return a tag
        object for the tag that was removed from the contact.
      source:
        openapi: ../openapi.yml
      path-parameters:
        contact_id:
          type: string
          docs: The unique identifier for the contact which is given by Intercom
        id:
          type: string
          docs: The unique identifier for the tag which is given by Intercom
      display-name: Remove tag from a contact
      response:
        docs: successful
        type: Tag
        status-code: 200
      errors:
        - root.DetachTagFromContactRequestUnauthorizedError
        - root.DetachTagFromContactRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            contact_id: 63a07ddf05a32042dffac965
            id: '7522907'
          response:
            body:
              type: tag
              id: '97'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
    attachTagToConversation:
      path: /conversations/{conversation_id}/tags
      method: POST
      auth: true
      docs: >-
        You can tag a specific conversation. This will return a tag object for
        the tag that was added to the conversation.
      source:
        openapi: ../openapi.yml
      path-parameters:
        conversation_id:
          type: string
          docs: conversation_id
      display-name: Add tag to a conversation
      request:
        name: AttachTagToConversationRequest
        body:
          properties:
            id:
              type: string
              docs: The unique identifier for the tag which is given by Intercom
            admin_id:
              type: string
              docs: The unique identifier for the admin which is given by Intercom.
        content-type: application/json
      response:
        docs: successful
        type: Tag
        status-code: 200
      errors:
        - root.AttachTagToConversationRequestUnauthorizedError
        - root.AttachTagToConversationRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            conversation_id: '64619700005694'
          request:
            id: '7522907'
            admin_id: '780'
          response:
            body:
              type: tag
              id: '99'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Conversation not found
          path-parameters:
            conversation_id: '64619700005694'
          request:
            id: '7522907'
            admin_id: '780'
          response:
            body:
              type: tag
              id: '99'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
    detachTagFromConversation:
      path: /conversations/{conversation_id}/tags/{id}
      method: DELETE
      auth: true
      docs: >-
        You can remove tag from a specific conversation. This will return a tag
        object for the tag that was removed from the conversation.
      source:
        openapi: ../openapi.yml
      path-parameters:
        conversation_id:
          type: string
          docs: conversation_id
        id:
          type: string
          docs: id
      display-name: Remove tag from a conversation
      request:
        name: DetachTagFromConversationRequest
        body:
          properties:
            admin_id:
              type: string
              docs: The unique identifier for the admin which is given by Intercom.
        content-type: application/json
      response:
        docs: successful
        type: Tag
        status-code: 200
      errors:
        - root.DetachTagFromConversationRequestUnauthorizedError
        - root.DetachTagFromConversationRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            conversation_id: '64619700005694'
            id: '7522907'
          request:
            admin_id: '123'
          response:
            body:
              type: tag
              id: '102'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Conversation not found
          path-parameters:
            conversation_id: '64619700005694'
            id: '7522907'
          request:
            admin_id: '123'
          response:
            body:
              type: tag
              id: '102'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Tag not found
          path-parameters:
            conversation_id: '64619700005694'
            id: '7522907'
          request:
            admin_id: '123'
          response:
            body:
              type: tag
              id: '102'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
    listTags:
      path: /tags
      method: GET
      auth: true
      docs: |+
        You can fetch a list of all tags for a given workspace.

      source:
        openapi: ../openapi.yml
      display-name: List all tags
      response:
        docs: successful
        type: root.Tags
        status-code: 200
      errors:
        - root.ListTagsRequestUnauthorizedError
      examples:
        - name: successful
          response:
            body:
              type: list
              data:
                - type: tag
                  id: '115'
                  name: Manual tag 1
                  applied_at: 1663597223
                  applied_by:
                    type: contact
    createTag:
      path: /tags
      method: POST
      auth: true
      docs: |
        You can use this endpoint to perform the following operations:

          **1. Create a new tag:** You can create a new tag by passing in the tag name as specified in "Create or Update Tag Request Payload" described below.

          **2. Update an existing tag:** You can update an existing tag by passing the id of the tag as specified in "Create or Update Tag Request Payload" described below.

          **3. Tag Companies:** You can tag single company or a list of companies. You can tag a company by passing in the tag name and the company details as specified in "Tag Company Request Payload" described below. Also, if the tag doesn't exist then a new one will be created automatically.

          **4. Untag Companies:** You can untag a single company or a list of companies. You can untag a company by passing in the tag id and the company details as specified in "Untag Company Request Payload" described below.

          **5. Tag Multiple Users:** You can tag a list of users. You can tag the users by passing in the tag name and the user details as specified in "Tag Users Request Payload" described below.

        Each operation will return a tag object.
      source:
        openapi: ../openapi.yml
      display-name: Create or update a tag, Tag or untag companies, Tag contacts
      request:
        body: CreateTagRequestBody
        content-type: application/json
      response:
        docs: Action successful
        type: Tag
        status-code: 200
      errors:
        - root.CreateTagRequestBadRequestError
        - root.CreateTagRequestUnauthorizedError
        - root.CreateTagRequestNotFoundError
      examples:
        - name: Action successful
          request:
            name: test
          response:
            body:
              type: tag
              id: '118'
              name: test
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Invalid parameters
          request:
            name: Independent
          response:
            body:
              type: tag
              id: '118'
              name: test
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Company not found
          request:
            name: test
            companies:
              - company_id: '123'
          response:
            body:
              type: tag
              id: '118'
              name: test
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: User  not found
          request:
            name: test
            users:
              - id: '123'
          response:
            body:
              type: tag
              id: '118'
              name: test
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
    findTag:
      path: /tags/{id}
      method: GET
      auth: true
      docs: |
        You can fetch the details of tags that are on the workspace by their id.
        This will return a tag object.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier of a given tag
      display-name: Find a specific tag
      response:
        docs: Tag found
        type: Tag
        status-code: 200
      errors:
        - root.FindTagRequestUnauthorizedError
        - root.FindTagRequestNotFoundError
      examples:
        - name: Tag found
          path-parameters:
            id: '123'
          response:
            body:
              type: tag
              id: '126'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
    deleteTag:
      path: /tags/{id}
      method: DELETE
      auth: true
      docs: >-
        You can delete the details of tags that are on the workspace by passing
        in the id.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier of a given tag
      display-name: Delete tag
      errors:
        - root.DeleteTagRequestBadRequestError
        - root.DeleteTagRequestUnauthorizedError
        - root.DeleteTagRequestNotFoundError
      examples:
        - path-parameters:
            id: '123'
    attachTagToTicket:
      path: /tickets/{ticket_id}/tags
      method: POST
      auth: true
      docs: >-
        You can tag a specific ticket. This will return a tag object for the tag
        that was added to the ticket.
      source:
        openapi: ../openapi.yml
      path-parameters:
        ticket_id:
          type: string
          docs: ticket_id
      display-name: Add tag to a ticket
      request:
        name: AttachTagToTicketRequest
        body:
          properties:
            id:
              type: string
              docs: The unique identifier for the tag which is given by Intercom
            admin_id:
              type: string
              docs: The unique identifier for the admin which is given by Intercom.
        content-type: application/json
      response:
        docs: successful
        type: Tag
        status-code: 200
      errors:
        - root.AttachTagToTicketRequestUnauthorizedError
        - root.AttachTagToTicketRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            ticket_id: '64619700005694'
          request:
            id: '7522907'
            admin_id: '780'
          response:
            body:
              type: tag
              id: '134'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Ticket not found
          path-parameters:
            ticket_id: '64619700005694'
          request:
            id: '7522907'
            admin_id: '780'
          response:
            body:
              type: tag
              id: '134'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
    detachTagFromTicket:
      path: /tickets/{ticket_id}/tags/{id}
      method: DELETE
      auth: true
      docs: >-
        You can remove tag from a specific ticket. This will return a tag object
        for the tag that was removed from the ticket.
      source:
        openapi: ../openapi.yml
      path-parameters:
        ticket_id:
          type: string
          docs: ticket_id
        id:
          type: string
          docs: The unique identifier for the tag which is given by Intercom
      display-name: Remove tag from a ticket
      request:
        name: DetachTagFromTicketRequest
        body:
          properties:
            admin_id:
              type: string
              docs: The unique identifier for the admin which is given by Intercom.
        content-type: application/json
      response:
        docs: successful
        type: Tag
        status-code: 200
      errors:
        - root.DetachTagFromTicketRequestUnauthorizedError
        - root.DetachTagFromTicketRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            ticket_id: '64619700005694'
            id: '7522907'
          request:
            admin_id: '123'
          response:
            body:
              type: tag
              id: '137'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Ticket not found
          path-parameters:
            ticket_id: '64619700005694'
            id: '7522907'
          request:
            admin_id: '123'
          response:
            body:
              type: tag
              id: '137'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
        - name: Tag not found
          path-parameters:
            ticket_id: '64619700005694'
            id: '7522907'
          request:
            admin_id: '123'
          response:
            body:
              type: tag
              id: '137'
              name: Manual tag
              applied_at: 1663597223
              applied_by:
                type: contact
                id: 1a2b3c
  source:
    openapi: ../openapi.yml
  display-name: Tags
docs: Everything about tags
types:
  CreateTagRequestBody:
    discriminated: false
    union:
      - type: root.CreateOrUpdateTagRequest
      - type: root.TagCompanyRequest
      - type: root.UntagCompanyRequest
      - type: root.TagMultipleUsersRequest
    source:
      openapi: ../openapi.yml
  Tag:
    docs: >-
      A tag allows you to label your contacts, companies, and conversations and
      list them using that tag.
    properties:
      type:
        type: optional<string>
        docs: value is "tag"
      id:
        type: optional<string>
        docs: The id of the tag
      name:
        type: optional<string>
        docs: The name of the tag
      applied_at:
        type: optional<integer>
        docs: The time when the tag was applied to the object
      applied_by:
        type: optional<root.Reference>
    source:
      openapi: ../openapi.yml
",
    },
    "teams.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Teams",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Teams",
          "endpoints": {
            "listTeams": {
              "auth": true,
              "display-name": "List all teams",
              "docs": "This will return a list of team objects for the App.",
              "errors": [
                "root.ListTeamsRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "teams": [
                        {
                          "admin_ids": [
                            493881,
                          ],
                          "id": "814865",
                          "name": "Example Team",
                          "type": "team",
                        },
                      ],
                      "type": "team.list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/teams",
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.TeamList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveTeam": {
              "auth": true,
              "display-name": "Retrieve a team",
              "docs": "You can fetch the details of a single team, containing an array of admins that belong to this team.",
              "errors": [
                "root.RetrieveTeamRequestUnauthorizedError",
                "root.RetrieveTeamRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "path-parameters": {
                    "id": "123",
                  },
                  "response": {
                    "body": {
                      "admin_ids": [
                        493881,
                      ],
                      "admin_priority_level": {
                        "primary_admin_ids": [
                          493881,
                        ],
                        "secondary_admin_ids": [
                          814865,
                        ],
                      },
                      "id": "991267802",
                      "name": "team 1",
                      "type": "team",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/teams/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier of a given team.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "Team",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Team": {
            "docs": "Teams are groups of admins in Intercom.",
            "inline": undefined,
            "properties": {
              "admin_ids": {
                "docs": "The list of admin IDs that are a part of the team.",
                "type": "optional<list<integer>>",
              },
              "admin_priority_level": {
                "type": "optional<root.AdminPriorityLevel>",
              },
              "id": {
                "docs": "The id of the team",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the team",
                "type": "optional<string>",
              },
              "type": {
                "docs": "Value is always "team"",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listTeams:
      path: /teams
      method: GET
      auth: true
      docs: This will return a list of team objects for the App.
      source:
        openapi: ../openapi.yml
      display-name: List all teams
      response:
        docs: successful
        type: root.TeamList
        status-code: 200
      errors:
        - root.ListTeamsRequestUnauthorizedError
      examples:
        - name: successful
          response:
            body:
              type: team.list
              teams:
                - type: team
                  id: '814865'
                  name: Example Team
                  admin_ids:
                    - 493881
    retrieveTeam:
      path: /teams/{id}
      method: GET
      auth: true
      docs: >-
        You can fetch the details of a single team, containing an array of
        admins that belong to this team.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier of a given team.
      display-name: Retrieve a team
      response:
        docs: successful
        type: Team
        status-code: 200
      errors:
        - root.RetrieveTeamRequestUnauthorizedError
        - root.RetrieveTeamRequestNotFoundError
      examples:
        - name: successful
          path-parameters:
            id: '123'
          response:
            body:
              type: team
              id: '991267802'
              name: team 1
              admin_ids:
                - 493881
              admin_priority_level:
                primary_admin_ids:
                  - 493881
                secondary_admin_ids:
                  - 814865
  source:
    openapi: ../openapi.yml
  display-name: Teams
docs: Everything about your Teams
types:
  Team:
    docs: Teams are groups of admins in Intercom.
    properties:
      type:
        type: optional<string>
        docs: Value is always "team"
      id:
        type: optional<string>
        docs: The id of the team
      name:
        type: optional<string>
        docs: The name of the team
      admin_ids:
        type: optional<list<integer>>
        docs: The list of admin IDs that are a part of the team.
      admin_priority_level:
        type: optional<root.AdminPriorityLevel>
    source:
      openapi: ../openapi.yml
",
    },
    "ticketTypeAttributes.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your ticket type attributes",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Ticket Type Attributes",
          "endpoints": {
            "createTicketTypeAttribute": {
              "auth": true,
              "display-name": "Create a new attribute for a ticket type",
              "docs": "You can create a new attribute for a ticket type.",
              "errors": [
                "root.CreateTicketTypeAttributeRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Ticket Type Attribute created",
                  "path-parameters": {
                    "ticket_type_id": "ticket_type_id",
                  },
                  "request": {
                    "data_type": "string",
                    "description": "Attribute Description",
                    "name": "Attribute Title",
                    "required_to_create": false,
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "created_at": 1719493013,
                      "data_type": "string",
                      "default": false,
                      "description": "Attribute Description",
                      "id": "210",
                      "input_options": {
                        "multiline": false,
                      },
                      "name": "Attribute Title",
                      "order": 2,
                      "required_to_create": false,
                      "required_to_create_for_contacts": false,
                      "ticket_type_id": 81,
                      "type": "ticket_type_attribute",
                      "updated_at": 1719493013,
                      "visible_on_create": true,
                      "visible_to_contacts": true,
                      "workspace_id": "this_is_an_id600_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/ticket_types/{ticket_type_id}/attributes",
              "path-parameters": {
                "ticket_type_id": {
                  "docs": "The unique identifier for the ticket type which is given by Intercom.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "allow_multiple_values": {
                      "docs": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)",
                      "type": "optional<boolean>",
                    },
                    "data_type": {
                      "docs": "The data type of the attribute",
                      "type": "CreateTicketTypeAttributeRequestDataType",
                    },
                    "description": {
                      "docs": "The description of the attribute presented to the teammate or contact",
                      "type": "string",
                    },
                    "list_items": {
                      "docs": "A comma delimited list of items for the attribute value (only applicable to list attributes)",
                      "type": "optional<string>",
                    },
                    "multiline": {
                      "docs": "Whether the attribute allows multiple lines of text (only applicable to string attributes)",
                      "type": "optional<boolean>",
                    },
                    "name": {
                      "docs": "The name of the ticket type attribute",
                      "type": "string",
                    },
                    "required_to_create": {
                      "default": false,
                      "docs": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox.",
                      "type": "optional<boolean>",
                    },
                    "required_to_create_for_contacts": {
                      "default": false,
                      "docs": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger.",
                      "type": "optional<boolean>",
                    },
                    "visible_on_create": {
                      "default": true,
                      "docs": "Whether the attribute is visible to teammates when creating a ticket in Inbox.",
                      "type": "optional<boolean>",
                    },
                    "visible_to_contacts": {
                      "default": true,
                      "docs": "Whether the attribute is visible to contacts when creating a ticket in Messenger.",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateTicketTypeAttributeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Ticket Type Attribute created",
                "status-code": 200,
                "type": "optional<root.TicketTypeAttribute>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateTicketTypeAttribute": {
              "auth": true,
              "display-name": "Update an existing attribute for a ticket type",
              "docs": "You can update an existing attribute for a ticket type.",
              "errors": [
                "root.UpdateTicketTypeAttributeRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Ticket Type Attribute updated",
                  "path-parameters": {
                    "id": "id",
                    "ticket_type_id": "ticket_type_id",
                  },
                  "request": {
                    "description": "New Attribute Description",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "created_at": 1719493013,
                      "data_type": "string",
                      "default": false,
                      "description": "New Attribute Description",
                      "id": "215",
                      "input_options": {
                        "key": "value",
                      },
                      "name": "name",
                      "order": 0,
                      "required_to_create": false,
                      "required_to_create_for_contacts": false,
                      "ticket_type_id": 83,
                      "type": "ticket_type_attribute",
                      "updated_at": 1719493014,
                      "visible_on_create": false,
                      "visible_to_contacts": false,
                      "workspace_id": "this_is_an_id604_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/ticket_types/{ticket_type_id}/attributes/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the ticket type attribute which is given by Intercom.",
                  "type": "string",
                },
                "ticket_type_id": {
                  "docs": "The unique identifier for the ticket type which is given by Intercom.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "allow_multiple_values": {
                      "docs": "Whether the attribute allows multiple files to be attached to it (only applicable to file attributes)",
                      "type": "optional<boolean>",
                    },
                    "archived": {
                      "docs": "Whether the attribute should be archived and not shown during creation of the ticket (it will still be present on previously created tickets)",
                      "type": "optional<boolean>",
                    },
                    "description": {
                      "docs": "The description of the attribute presented to the teammate or contact",
                      "type": "optional<string>",
                    },
                    "list_items": {
                      "docs": "A comma delimited list of items for the attribute value (only applicable to list attributes)",
                      "type": "optional<string>",
                    },
                    "multiline": {
                      "docs": "Whether the attribute allows multiple lines of text (only applicable to string attributes)",
                      "type": "optional<boolean>",
                    },
                    "name": {
                      "docs": "The name of the ticket type attribute",
                      "type": "optional<string>",
                    },
                    "required_to_create": {
                      "default": false,
                      "docs": "Whether the attribute is required to be filled in when teammates are creating the ticket in Inbox.",
                      "type": "optional<boolean>",
                    },
                    "required_to_create_for_contacts": {
                      "default": false,
                      "docs": "Whether the attribute is required to be filled in when contacts are creating the ticket in Messenger.",
                      "type": "optional<boolean>",
                    },
                    "visible_on_create": {
                      "default": true,
                      "docs": "Whether the attribute is visible to teammates when creating a ticket in Inbox.",
                      "type": "optional<boolean>",
                    },
                    "visible_to_contacts": {
                      "default": true,
                      "docs": "Whether the attribute is visible to contacts when creating a ticket in Messenger.",
                      "type": "optional<boolean>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateTicketTypeAttributeRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Ticket Type Attribute updated",
                "status-code": 200,
                "type": "optional<root.TicketTypeAttribute>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "CreateTicketTypeAttributeRequestDataType": {
            "docs": "The data type of the attribute",
            "enum": [
              "string",
              "list",
              "integer",
              "decimal",
              "boolean",
              "datetime",
              "files",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  CreateTicketTypeAttributeRequestDataType:
    enum:
      - string
      - list
      - integer
      - decimal
      - boolean
      - datetime
      - files
    docs: The data type of the attribute
    inline: true
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    createTicketTypeAttribute:
      path: /ticket_types/{ticket_type_id}/attributes
      method: POST
      auth: true
      docs: You can create a new attribute for a ticket type.
      source:
        openapi: ../openapi.yml
      path-parameters:
        ticket_type_id:
          type: string
          docs: >-
            The unique identifier for the ticket type which is given by
            Intercom.
      display-name: Create a new attribute for a ticket type
      request:
        name: CreateTicketTypeAttributeRequest
        body:
          properties:
            name:
              type: string
              docs: The name of the ticket type attribute
            description:
              type: string
              docs: >-
                The description of the attribute presented to the teammate or
                contact
            data_type:
              type: CreateTicketTypeAttributeRequestDataType
              docs: The data type of the attribute
            required_to_create:
              type: optional<boolean>
              docs: >-
                Whether the attribute is required to be filled in when teammates
                are creating the ticket in Inbox.
              default: false
            required_to_create_for_contacts:
              type: optional<boolean>
              docs: >-
                Whether the attribute is required to be filled in when contacts
                are creating the ticket in Messenger.
              default: false
            visible_on_create:
              type: optional<boolean>
              docs: >-
                Whether the attribute is visible to teammates when creating a
                ticket in Inbox.
              default: true
            visible_to_contacts:
              type: optional<boolean>
              docs: >-
                Whether the attribute is visible to contacts when creating a
                ticket in Messenger.
              default: true
            multiline:
              type: optional<boolean>
              docs: >-
                Whether the attribute allows multiple lines of text (only
                applicable to string attributes)
            list_items:
              type: optional<string>
              docs: >-
                A comma delimited list of items for the attribute value (only
                applicable to list attributes)
            allow_multiple_values:
              type: optional<boolean>
              docs: >-
                Whether the attribute allows multiple files to be attached to it
                (only applicable to file attributes)
        content-type: application/json
      response:
        docs: Ticket Type Attribute created
        type: optional<root.TicketTypeAttribute>
        status-code: 200
      errors:
        - root.CreateTicketTypeAttributeRequestUnauthorizedError
      examples:
        - name: Ticket Type Attribute created
          path-parameters:
            ticket_type_id: ticket_type_id
          request:
            name: Attribute Title
            description: Attribute Description
            data_type: string
            required_to_create: false
          response:
            body:
              type: ticket_type_attribute
              id: '210'
              workspace_id: this_is_an_id600_that_should_be_at_least_
              name: Attribute Title
              description: Attribute Description
              data_type: string
              input_options:
                multiline: false
              order: 2
              required_to_create: false
              required_to_create_for_contacts: false
              visible_on_create: true
              visible_to_contacts: true
              default: false
              ticket_type_id: 81
              archived: false
              created_at: 1719493013
              updated_at: 1719493013
    updateTicketTypeAttribute:
      path: /ticket_types/{ticket_type_id}/attributes/{id}
      method: PUT
      auth: true
      docs: You can update an existing attribute for a ticket type.
      source:
        openapi: ../openapi.yml
      path-parameters:
        ticket_type_id:
          type: string
          docs: >-
            The unique identifier for the ticket type which is given by
            Intercom.
        id:
          type: string
          docs: >-
            The unique identifier for the ticket type attribute which is given
            by Intercom.
      display-name: Update an existing attribute for a ticket type
      request:
        name: UpdateTicketTypeAttributeRequest
        body:
          properties:
            name:
              type: optional<string>
              docs: The name of the ticket type attribute
            description:
              type: optional<string>
              docs: >-
                The description of the attribute presented to the teammate or
                contact
            required_to_create:
              type: optional<boolean>
              docs: >-
                Whether the attribute is required to be filled in when teammates
                are creating the ticket in Inbox.
              default: false
            required_to_create_for_contacts:
              type: optional<boolean>
              docs: >-
                Whether the attribute is required to be filled in when contacts
                are creating the ticket in Messenger.
              default: false
            visible_on_create:
              type: optional<boolean>
              docs: >-
                Whether the attribute is visible to teammates when creating a
                ticket in Inbox.
              default: true
            visible_to_contacts:
              type: optional<boolean>
              docs: >-
                Whether the attribute is visible to contacts when creating a
                ticket in Messenger.
              default: true
            multiline:
              type: optional<boolean>
              docs: >-
                Whether the attribute allows multiple lines of text (only
                applicable to string attributes)
            list_items:
              type: optional<string>
              docs: >-
                A comma delimited list of items for the attribute value (only
                applicable to list attributes)
            allow_multiple_values:
              type: optional<boolean>
              docs: >-
                Whether the attribute allows multiple files to be attached to it
                (only applicable to file attributes)
            archived:
              type: optional<boolean>
              docs: >-
                Whether the attribute should be archived and not shown during
                creation of the ticket (it will still be present on previously
                created tickets)
        content-type: application/json
      response:
        docs: Ticket Type Attribute updated
        type: optional<root.TicketTypeAttribute>
        status-code: 200
      errors:
        - root.UpdateTicketTypeAttributeRequestUnauthorizedError
      examples:
        - name: Ticket Type Attribute updated
          path-parameters:
            ticket_type_id: ticket_type_id
            id: id
          request:
            description: New Attribute Description
          response:
            body:
              type: ticket_type_attribute
              id: '215'
              workspace_id: this_is_an_id604_that_should_be_at_least_
              name: name
              description: New Attribute Description
              data_type: string
              input_options:
                key: value
              order: 0
              required_to_create: false
              required_to_create_for_contacts: false
              visible_on_create: false
              visible_to_contacts: false
              default: false
              ticket_type_id: 83
              archived: false
              created_at: 1719493013
              updated_at: 1719493014
  source:
    openapi: ../openapi.yml
  display-name: Ticket Type Attributes
docs: Everything about your ticket type attributes
",
    },
    "ticketTypes.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your ticket types",
        "imports": {
          "root": "__package__.yml",
          "tickets": "tickets.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Ticket Types",
          "endpoints": {
            "createTicketType": {
              "auth": true,
              "display-name": "Create a ticket type",
              "docs": "You can create a new ticket type.
> 📘 Creating ticket types.
>
> Every ticket type will be created with two default attributes: _default_title_ and _default_description_.
> For the `icon` propery, use an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
",
              "errors": [
                "root.CreateTicketTypeRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Ticket type created",
                  "request": {
                    "category": "Customer",
                    "description": "Customer Report Template",
                    "icon": "🎟️",
                    "name": "Customer Issue",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "category": "Customer",
                      "created_at": 1719493016,
                      "description": "Customer Report Template",
                      "icon": "🎟️",
                      "id": "88",
                      "name": "Customer Issue",
                      "ticket_type_attributes": {
                        "ticket_type_attributes": [
                          {
                            "archived": false,
                            "data_type": "string",
                            "default": true,
                            "description": "Bug title.",
                            "id": "1",
                            "input_options": {
                              "key": "value",
                            },
                            "name": "Title",
                            "order": 1,
                            "required_to_create": false,
                            "required_to_create_for_contacts": false,
                            "ticket_type_id": 42,
                            "type": "ticket_type_attribute",
                            "visible_on_create": false,
                            "visible_to_contacts": false,
                            "workspace_id": "ecahpwf5",
                          },
                        ],
                        "type": "list",
                      },
                      "type": "ticket_type",
                      "updated_at": 1719493016,
                      "workspace_id": "this_is_an_id612_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/ticket_types",
              "request": {
                "body": {
                  "type": "optional<root.CreateTicketTypeRequest>",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "Ticket type created",
                "status-code": 200,
                "type": "optional<tickets.TicketType>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTicketType": {
              "auth": true,
              "display-name": "Retrieve a ticket type",
              "docs": "You can fetch the details of a single ticket type.",
              "errors": [
                "root.GetTicketTypeRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Ticket type found",
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "category": "Customer",
                      "created_at": 1719493017,
                      "description": "Bug Report Template",
                      "icon": "🎟️",
                      "id": "90",
                      "name": "Bug Report",
                      "ticket_type_attributes": {
                        "ticket_type_attributes": [
                          {
                            "archived": false,
                            "data_type": "string",
                            "default": true,
                            "description": "Bug title.",
                            "id": "1",
                            "input_options": {
                              "key": "value",
                            },
                            "name": "Title",
                            "order": 1,
                            "required_to_create": false,
                            "required_to_create_for_contacts": false,
                            "ticket_type_id": 42,
                            "type": "ticket_type_attribute",
                            "visible_on_create": false,
                            "visible_to_contacts": false,
                            "workspace_id": "ecahpwf5",
                          },
                        ],
                        "type": "list",
                      },
                      "type": "ticket_type",
                      "updated_at": 1719493017,
                      "workspace_id": "this_is_an_id616_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ticket_types/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the ticket type which is given by Intercom.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Ticket type found",
                "status-code": 200,
                "type": "optional<tickets.TicketType>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "listTicketTypes": {
              "auth": true,
              "display-name": "List all ticket types",
              "docs": "You can get a list of all ticket types for a workspace.",
              "errors": [
                "root.ListTicketTypesRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "response": {
                    "body": {
                      "ticket_types": [
                        {
                          "archived": false,
                          "category": "Customer",
                          "created_at": 1,
                          "description": "A bug that has been reported.",
                          "icon": "🐞",
                          "id": "1295",
                          "name": "Bug",
                          "type": "ticket_type",
                          "updated_at": 1,
                          "workspace_id": "ecahpwf5",
                        },
                      ],
                      "type": "list",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/ticket_types",
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.TicketTypeList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateTicketType": {
              "auth": true,
              "display-name": "Update a ticket type",
              "docs": "
You can update a ticket type.

> 📘 Updating a ticket type.
>
> For the `icon` propery, use an emoji from [Twemoji Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
",
              "errors": [
                "root.UpdateTicketTypeRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Ticket type updated",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "name": "Bug Report 2",
                  },
                  "response": {
                    "body": {
                      "archived": false,
                      "category": "Customer",
                      "created_at": 1719493018,
                      "description": "Bug Report Template",
                      "icon": "🎟️",
                      "id": "92",
                      "name": "Bug Report 2",
                      "ticket_type_attributes": {
                        "ticket_type_attributes": [
                          {
                            "archived": false,
                            "data_type": "string",
                            "default": true,
                            "description": "Bug title.",
                            "id": "1",
                            "input_options": {
                              "key": "value",
                            },
                            "name": "Title",
                            "order": 1,
                            "required_to_create": false,
                            "required_to_create_for_contacts": false,
                            "ticket_type_id": 42,
                            "type": "ticket_type_attribute",
                            "visible_on_create": false,
                            "visible_to_contacts": false,
                            "workspace_id": "ecahpwf5",
                          },
                        ],
                        "type": "list",
                      },
                      "type": "ticket_type",
                      "updated_at": 1719493018,
                      "workspace_id": "this_is_an_id620_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/ticket_types/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the ticket type which is given by Intercom.",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "type": "optional<root.UpdateTicketTypeRequest>",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "Ticket type updated",
                "status-code": 200,
                "type": "optional<tickets.TicketType>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
  tickets: tickets.yml
service:
  auth: false
  base-path: ''
  endpoints:
    listTicketTypes:
      path: /ticket_types
      method: GET
      auth: true
      docs: You can get a list of all ticket types for a workspace.
      source:
        openapi: ../openapi.yml
      display-name: List all ticket types
      response:
        docs: successful
        type: root.TicketTypeList
        status-code: 200
      errors:
        - root.ListTicketTypesRequestUnauthorizedError
      examples:
        - name: successful
          response:
            body:
              type: list
              ticket_types:
                - type: ticket_type
                  id: '1295'
                  category: Customer
                  name: Bug
                  description: A bug that has been reported.
                  icon: 🐞
                  workspace_id: ecahpwf5
                  archived: false
                  created_at: 1
                  updated_at: 1
    createTicketType:
      path: /ticket_types
      method: POST
      auth: true
      docs: >
        You can create a new ticket type.

        > 📘 Creating ticket types.

        >

        > Every ticket type will be created with two default attributes:
        _default_title_ and _default_description_.

        > For the `icon` propery, use an emoji from [Twemoji
        Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
      source:
        openapi: ../openapi.yml
      display-name: Create a ticket type
      request:
        body:
          type: optional<root.CreateTicketTypeRequest>
        content-type: application/json
      response:
        docs: Ticket type created
        type: optional<tickets.TicketType>
        status-code: 200
      errors:
        - root.CreateTicketTypeRequestUnauthorizedError
      examples:
        - name: Ticket type created
          request:
            name: Customer Issue
            description: Customer Report Template
            category: Customer
            icon: 🎟️
          response:
            body:
              type: ticket_type
              id: '88'
              category: Customer
              name: Customer Issue
              description: Customer Report Template
              icon: 🎟️
              workspace_id: this_is_an_id612_that_should_be_at_least_
              ticket_type_attributes:
                type: list
                ticket_type_attributes:
                  - type: ticket_type_attribute
                    id: '1'
                    workspace_id: ecahpwf5
                    name: Title
                    description: Bug title.
                    data_type: string
                    input_options:
                      key: value
                    order: 1
                    required_to_create: false
                    required_to_create_for_contacts: false
                    visible_on_create: false
                    visible_to_contacts: false
                    default: true
                    ticket_type_id: 42
                    archived: false
              archived: false
              created_at: 1719493016
              updated_at: 1719493016
    getTicketType:
      path: /ticket_types/{id}
      method: GET
      auth: true
      docs: You can fetch the details of a single ticket type.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The unique identifier for the ticket type which is given by
            Intercom.
      display-name: Retrieve a ticket type
      response:
        docs: Ticket type found
        type: optional<tickets.TicketType>
        status-code: 200
      errors:
        - root.GetTicketTypeRequestUnauthorizedError
      examples:
        - name: Ticket type found
          path-parameters:
            id: id
          response:
            body:
              type: ticket_type
              id: '90'
              category: Customer
              name: Bug Report
              description: Bug Report Template
              icon: 🎟️
              workspace_id: this_is_an_id616_that_should_be_at_least_
              ticket_type_attributes:
                type: list
                ticket_type_attributes:
                  - type: ticket_type_attribute
                    id: '1'
                    workspace_id: ecahpwf5
                    name: Title
                    description: Bug title.
                    data_type: string
                    input_options:
                      key: value
                    order: 1
                    required_to_create: false
                    required_to_create_for_contacts: false
                    visible_on_create: false
                    visible_to_contacts: false
                    default: true
                    ticket_type_id: 42
                    archived: false
              archived: false
              created_at: 1719493017
              updated_at: 1719493017
    updateTicketType:
      path: /ticket_types/{id}
      method: PUT
      auth: true
      docs: >

        You can update a ticket type.


        > 📘 Updating a ticket type.

        >

        > For the `icon` propery, use an emoji from [Twemoji
        Cheatsheet](https://twemoji-cheatsheet.vercel.app/)
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: >-
            The unique identifier for the ticket type which is given by
            Intercom.
      display-name: Update a ticket type
      request:
        body:
          type: optional<root.UpdateTicketTypeRequest>
        content-type: application/json
      response:
        docs: Ticket type updated
        type: optional<tickets.TicketType>
        status-code: 200
      errors:
        - root.UpdateTicketTypeRequestUnauthorizedError
      examples:
        - name: Ticket type updated
          path-parameters:
            id: id
          request:
            name: Bug Report 2
          response:
            body:
              type: ticket_type
              id: '92'
              category: Customer
              name: Bug Report 2
              description: Bug Report Template
              icon: 🎟️
              workspace_id: this_is_an_id620_that_should_be_at_least_
              ticket_type_attributes:
                type: list
                ticket_type_attributes:
                  - type: ticket_type_attribute
                    id: '1'
                    workspace_id: ecahpwf5
                    name: Title
                    description: Bug title.
                    data_type: string
                    input_options:
                      key: value
                    order: 1
                    required_to_create: false
                    required_to_create_for_contacts: false
                    visible_on_create: false
                    visible_to_contacts: false
                    default: true
                    ticket_type_id: 42
                    archived: false
              archived: false
              created_at: 1719493018
              updated_at: 1719493018
  source:
    openapi: ../openapi.yml
  display-name: Ticket Types
docs: Everything about your ticket types
",
    },
    "tickets.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your tickets",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Tickets",
          "endpoints": {
            "createTicket": {
              "auth": true,
              "display-name": "Create a ticket",
              "docs": "You can create a new ticket.",
              "errors": [
                "root.CreateTicketRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "request": {
                    "contacts": [
                      {
                        "id": "667d61b78a68186f43bafe8d",
                      },
                    ],
                    "ticket_attributes": {
                      "_default_description_": "there is a problem",
                      "_default_title_": "example",
                    },
                    "ticket_type_id": "1234",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": "0",
                      "category": "Back-office",
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "70",
                            "id": "667d61b78a68186f43bafe8d",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "created_at": 1719493048,
                      "id": "489",
                      "is_shared": false,
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "snoozed_until": 1663597260,
                      "team_assignee_id": "0",
                      "ticket_attributes": {
                        "_default_description_": "there is a problem",
                        "_default_title_": "example",
                      },
                      "ticket_id": "48",
                      "ticket_parts": {
                        "ticket_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id648_that_should_be_at_least_@intercom.io",
                              "id": "991267871",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493048,
                            "id": "125",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "submitted",
                            "type": "ticket_part",
                            "updated_at": 1719493048,
                          },
                        ],
                        "total_count": 1,
                        "type": "ticket_part.list",
                      },
                      "ticket_state": "submitted",
                      "ticket_state_external_label": "Submitted",
                      "ticket_state_internal_label": "Submitted",
                      "ticket_type": {
                        "archived": false,
                        "category": "Back-office",
                        "created_at": 1719493047,
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "id": "106",
                        "name": "my-ticket-type-15",
                        "ticket_type_attributes": {
                          "type": "list",
                        },
                        "type": "ticket_type",
                        "updated_at": 1719493047,
                        "workspace_id": "this_is_an_id648_that_should_be_at_least_",
                      },
                      "type": "ticket",
                      "updated_at": 1719493048,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/tickets",
              "request": {
                "body": {
                  "properties": {
                    "company_id": {
                      "docs": "The ID of the company that the ticket is associated with. The ID that you set upon company creation.",
                      "type": "optional<string>",
                    },
                    "contacts": {
                      "docs": "The list of contacts (users or leads) affected by this ticket. Currently only one is allowed",
                      "type": "list<CreateTicketRequestContactsItem>",
                    },
                    "created_at": {
                      "docs": "The time the ticket was created. If not provided, the current time will be used.",
                      "type": "optional<integer>",
                    },
                    "ticket_attributes": {
                      "type": "optional<root.TicketRequestCustomAttributes>",
                    },
                    "ticket_type_id": {
                      "docs": "The ID of the type of ticket you want to create",
                      "type": "string",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "CreateTicketRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "optional<Ticket>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getTicket": {
              "auth": true,
              "display-name": "Retrieve a ticket",
              "docs": "You can fetch the details of a single ticket.",
              "errors": [
                "root.GetTicketRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "Ticket found",
                  "path-parameters": {
                    "id": "id",
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": "0",
                      "category": "Back-office",
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "038050f6-d917-4b9d-89cb-539b1d371172",
                            "id": "667d61c48a68186f43bafe91",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "created_at": 1719493061,
                      "id": "493",
                      "is_shared": false,
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "snoozed_until": 1663597260,
                      "team_assignee_id": "0",
                      "ticket_attributes": {
                        "_default_description_": "ticket_attributes",
                        "_default_title_": "attribute_value",
                      },
                      "ticket_id": "52",
                      "ticket_parts": {
                        "ticket_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin445@email.com",
                              "id": "991267912",
                              "name": "Ciaran445 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719493061,
                            "id": "134",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "submitted",
                            "type": "ticket_part",
                            "updated_at": 1719493061,
                          },
                        ],
                        "total_count": 1,
                        "type": "ticket_part.list",
                      },
                      "ticket_state": "submitted",
                      "ticket_state_external_label": "Submitted",
                      "ticket_state_internal_label": "Submitted",
                      "ticket_type": {
                        "archived": false,
                        "category": "Back-office",
                        "created_at": 1719493060,
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "id": "112",
                        "name": "my-ticket-type-21",
                        "ticket_type_attributes": {
                          "type": "list",
                        },
                        "type": "ticket_type",
                        "updated_at": 1719493060,
                        "workspace_id": "this_is_an_id660_that_should_be_at_least_",
                      },
                      "type": "ticket",
                      "updated_at": 1719493061,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/tickets/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the ticket which is given by Intercom.",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Ticket found",
                "status-code": 200,
                "type": "optional<Ticket>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "replyTicket": {
              "auth": true,
              "display-name": "Reply to a ticket",
              "docs": "You can reply to a ticket with a message from an admin or on behalf of a contact, or with a note for admins.",
              "errors": [
                "root.ReplyTicketRequestBadRequestError",
                "root.ReplyTicketRequestUnauthorizedError",
                "root.ReplyTicketRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "User reply",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "body": "Thanks again :)",
                    "intercom_user_id": "667d619d8a68186f43bafe82",
                    "message_type": "comment",
                    "type": "user",
                  },
                  "response": {
                    "body": {
                      "attachments": [
                        {
                          "content_type": "image/png",
                          "filesize": 100,
                          "height": 100,
                          "name": "example.png",
                          "type": "upload",
                          "url": "https://picsum.photos/200/300",
                          "width": 100,
                        },
                      ],
                      "author": {
                        "email": "admin375@email.com",
                        "id": "991267829",
                        "name": "Ciaran375 Lee",
                        "type": "admin",
                      },
                      "body": "<h2>An Unordered HTML List</h2>
<ul>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ul>
<h2>An Ordered HTML List</h2>
<ol>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ol>",
                      "created_at": 1719493024,
                      "id": "122",
                      "part_type": "note",
                      "redacted": false,
                      "type": "ticket_part",
                      "updated_at": 1719493024,
                    },
                  },
                },
                {
                  "name": "Admin note reply",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "3156780",
                    "body": "<html> <body>  <h2>An Unordered HTML List</h2>  <ul>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ol>   </body> </html>",
                    "message_type": "note",
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "attachments": [
                        {
                          "content_type": "image/png",
                          "filesize": 100,
                          "height": 100,
                          "name": "example.png",
                          "type": "upload",
                          "url": "https://picsum.photos/200/300",
                          "width": 100,
                        },
                      ],
                      "author": {
                        "email": "admin375@email.com",
                        "id": "991267829",
                        "name": "Ciaran375 Lee",
                        "type": "admin",
                      },
                      "body": "<h2>An Unordered HTML List</h2>
<ul>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ul>
<h2>An Ordered HTML List</h2>
<ol>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ol>",
                      "created_at": 1719493024,
                      "id": "122",
                      "part_type": "note",
                      "redacted": false,
                      "type": "ticket_part",
                      "updated_at": 1719493024,
                    },
                  },
                },
                {
                  "name": "Admin quick_reply reply",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "admin_id": "3156780",
                    "message_type": "quick_reply",
                    "reply_options": [
                      {
                        "text": "Yes",
                        "uuid": "22d6d1f4-1a19-41d0-94c2-e54031f78aca",
                      },
                      {
                        "text": "No",
                        "uuid": "fbc3dbe0-ec0c-4fb6-826d-e19127191906",
                      },
                    ],
                    "type": "admin",
                  },
                  "response": {
                    "body": {
                      "attachments": [
                        {
                          "content_type": "image/png",
                          "filesize": 100,
                          "height": 100,
                          "name": "example.png",
                          "type": "upload",
                          "url": "https://picsum.photos/200/300",
                          "width": 100,
                        },
                      ],
                      "author": {
                        "email": "admin379@email.com",
                        "id": "991267834",
                        "name": "Ciaran379 Lee",
                        "type": "admin",
                      },
                      "body": "<p>Okay!</p>",
                      "created_at": 1719493029,
                      "id": "124",
                      "part_type": "quick_reply",
                      "redacted": false,
                      "type": "ticket_part",
                      "updated_at": 1719493029,
                    },
                  },
                },
                {
                  "name": "Not found",
                  "path-parameters": {
                    "id": "123",
                  },
                  "request": {
                    "body": "Thanks again :)",
                    "intercom_user_id": "667d61a68a68186f43bafe85",
                    "message_type": "comment",
                    "type": "user",
                  },
                  "response": {
                    "body": {
                      "attachments": [
                        {
                          "content_type": "image/png",
                          "filesize": 100,
                          "height": 100,
                          "name": "example.png",
                          "type": "upload",
                          "url": "https://picsum.photos/200/300",
                          "width": 100,
                        },
                      ],
                      "author": {
                        "email": "admin375@email.com",
                        "id": "991267829",
                        "name": "Ciaran375 Lee",
                        "type": "admin",
                      },
                      "body": "<h2>An Unordered HTML List</h2>
<ul>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ul>
<h2>An Ordered HTML List</h2>
<ol>
<li>Coffee</li>
<li>Tea</li>
<li>Milk</li>
</ol>",
                      "created_at": 1719493024,
                      "id": "122",
                      "part_type": "note",
                      "redacted": false,
                      "type": "ticket_part",
                      "updated_at": 1719493024,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/tickets/{id}/reply",
              "path-parameters": {
                "id": "string",
              },
              "request": {
                "body": "ReplyTicketRequestBody",
                "content-type": "application/json",
              },
              "response": {
                "docs": "Admin quick_reply reply",
                "status-code": 200,
                "type": "root.TicketReply",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "searchTickets": {
              "auth": true,
              "display-name": "Search tickets",
              "docs": "You can search for multiple tickets by the value of their attributes in order to fetch exactly which ones you want.

To search for tickets, you send a `POST` request to `https://api.intercom.io/tickets/search`.

This will accept a query object in the body which will define your filters.
{% admonition type="warning" name="Optimizing search queries" %}
  Search queries can be complex, so optimizing them can help the performance of your search.
  Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize
  pagination to limit the number of results returned. The default is `20` results per page.
  See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.
{% /admonition %}

### Nesting & Limitations

You can nest these filters in order to get even more granular insights that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).
There are some limitations to the amount of multiples there can be:
- There's a limit of max 2 nested filters
- There's a limit of max 15 filters for each AND or OR group

### Accepted Fields

Most keys listed as part of the Ticket model are searchable, whether writeable or not. The value you search for has to match the accepted type, otherwise the query will fail (ie. as `created_at` accepts a date, the `value` cannot be a string such as `"foobar"`).

| Field                                     | Type                                                                                     |
| :---------------------------------------- | :--------------------------------------------------------------------------------------- |
| id                                        | String                                                                                   |
| created_at                                | Date (UNIX timestamp)                                                                    |
| updated_at                                | Date (UNIX timestamp)                                                                    |
| _default_title_                           | String                                                                                   |
| _default_description_                     | String                                                                                   |
| category                                  | String                                                                                   |
| ticket_type_id                            | String                                                                                   |
| contact_ids                               | String                                                                                   |
| teammate_ids                              | String                                                                                   |
| admin_assignee_id                         | String                                                                                   |
| team_assignee_id                          | String                                                                                   |
| open                                      | Boolean                                                                                  |
| state                                     | String                                                                                   |
| snoozed_until                             | Date (UNIX timestamp)                                                                    |
| ticket_attribute.{id}                     | String or Boolean or Date (UNIX timestamp) or Float or Integer                           |

### Accepted Operators

{% admonition type="info" name="Searching based on `created_at`" %}
  You may use the `<=` or `>=` operators to search by `created_at`.
{% /admonition %}

The table below shows the operators you can use to define how you want to search for the value.  The operator should be put in as a string (`"="`). The operator has to be compatible with the field's type  (eg. you cannot search with `>` for a given string value as it's only compatible for integer's and dates).

| Operator | Valid Types                    | Description                                                  |
| :------- | :----------------------------- | :----------------------------------------------------------- |
| =        | All                            | Equals                                                       |
| !=       | All                            | Doesn't Equal                                                |
| IN       | All                            | In  Shortcut for `OR` queries  Values most be in Array       |
| NIN      | All                            | Not In  Shortcut for `OR !` queries  Values must be in Array |
| >        | Integer  Date (UNIX Timestamp) | Greater (or equal) than                                      |
| <       | Integer  Date (UNIX Timestamp) | Lower (or equal) than                                        |
| ~        | String                         | Contains                                                     |
| !~       | String                         | Doesn't Contain                                              |
| ^        | String                         | Starts With                                                  |
| $        | String                         | Ends With                                                    |
",
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "pagination": {
                      "per_page": 5,
                    },
                    "query": {
                      "operator": "AND",
                      "value": [
                        {
                          "field": "created_at",
                          "operator": ">",
                          "value": "1306054154",
                        },
                      ],
                    },
                  },
                  "response": {
                    "body": {
                      "pages": {
                        "next": {
                          "per_page": 2,
                          "starting_after": "your-cursor-from-response",
                        },
                        "page": 1,
                        "per_page": 5,
                        "total_pages": 1,
                        "type": "pages",
                      },
                      "tickets": [
                        {
                          "admin_assignee_id": "0",
                          "category": "Back-office",
                          "contacts": {
                            "contacts": [
                              {
                                "external_id": "6895b33e-2768-4611-908e-da6632dfc8ea",
                                "id": "667d61c98a68186f43bafe92",
                                "type": "contact",
                              },
                            ],
                            "type": "contact.list",
                          },
                          "created_at": 1719493065,
                          "id": "494",
                          "is_shared": false,
                          "linked_objects": {
                            "data": [
                              {
                                "id": "7583",
                              },
                            ],
                            "has_more": false,
                            "total_count": 0,
                            "type": "list",
                          },
                          "open": true,
                          "snoozed_until": 1663597260,
                          "team_assignee_id": "0",
                          "ticket_attributes": {
                            "_default_title_": "attribute_value",
                          },
                          "ticket_id": "53",
                          "ticket_parts": {
                            "ticket_parts": [
                              {
                                "attachments": [
                                  {
                                    "content_type": "image/png",
                                    "filesize": 100,
                                    "height": 100,
                                    "name": "example.png",
                                    "type": "upload",
                                    "url": "https://picsum.photos/200/300",
                                    "width": 100,
                                  },
                                ],
                                "author": {
                                  "email": "admin472@email.com",
                                  "id": "991267940",
                                  "name": "Ciaran472 Lee",
                                  "type": "admin",
                                },
                                "created_at": 1719493066,
                                "id": "135",
                                "part_type": "ticket_state_updated_by_admin",
                                "previous_ticket_state": "submitted",
                                "redacted": false,
                                "ticket_state": "submitted",
                                "type": "ticket_part",
                                "updated_at": 1719493066,
                              },
                            ],
                            "total_count": 1,
                            "type": "ticket_part.list",
                          },
                          "ticket_state": "submitted",
                          "ticket_state_external_label": "Submitted",
                          "ticket_state_internal_label": "Submitted",
                          "ticket_type": {
                            "archived": false,
                            "category": "Back-office",
                            "created_at": 1719493065,
                            "description": "my ticket type description is awesome.",
                            "icon": "🦁",
                            "id": "117",
                            "name": "my-ticket-type-26",
                            "ticket_type_attributes": {
                              "type": "list",
                            },
                            "type": "ticket_type",
                            "updated_at": 1719493065,
                            "workspace_id": "this_is_an_id667_that_should_be_at_least_",
                          },
                          "type": "ticket",
                          "updated_at": 1719493066,
                        },
                      ],
                      "total_count": 1,
                      "type": "ticket.list",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/tickets/search",
              "request": {
                "body": {
                  "type": "root.SearchRequest",
                },
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "root.TicketList",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateTicket": {
              "auth": true,
              "display-name": "Update a ticket",
              "docs": "You can update a ticket.",
              "errors": [
                "root.UpdateTicketRequestUnauthorizedError",
                "root.UpdateTicketRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "Successful response",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "assignment": {
                      "admin_id": "991267883",
                      "assignee_id": "991267885",
                    },
                    "open": true,
                    "snoozed_until": 1673609604,
                    "state": "in_progress",
                    "ticket_attributes": {
                      "_default_description_": "there is a problem",
                      "_default_title_": "example",
                    },
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": "991267885",
                      "category": "Back-office",
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "cd63b6b5-ea75-4ad9-b72c-9d7a647baf08",
                            "id": "667d61bb8a68186f43bafe8e",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "created_at": 1719493051,
                      "id": "490",
                      "is_shared": false,
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "snoozed_until": 1719590400,
                      "team_assignee_id": "0",
                      "ticket_attributes": {
                        "_default_description_": "there is a problem",
                        "_default_title_": "example",
                      },
                      "ticket_id": "49",
                      "ticket_parts": {
                        "ticket_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin419@email.com",
                              "id": "991267883",
                              "name": "Ciaran419 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719493051,
                            "id": "126",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "submitted",
                            "type": "ticket_part",
                            "updated_at": 1719493051,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "127",
                            "part_type": "ticket_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "128",
                            "part_type": "ticket_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "129",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "in_progress",
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "assigned_to": {
                              "id": "991267885",
                              "type": "admin",
                            },
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin419@email.com",
                              "id": "991267883",
                              "name": "Ciaran419 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719493054,
                            "id": "130",
                            "part_type": "assignment",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493054,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493054,
                            "id": "131",
                            "part_type": "snoozed",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493054,
                          },
                        ],
                        "total_count": 6,
                        "type": "ticket_part.list",
                      },
                      "ticket_state": "in_progress",
                      "ticket_state_external_label": "In progress",
                      "ticket_state_internal_label": "In progress",
                      "ticket_type": {
                        "archived": false,
                        "category": "Back-office",
                        "created_at": 1719493050,
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "id": "108",
                        "name": "my-ticket-type-17",
                        "ticket_type_attributes": {
                          "type": "list",
                        },
                        "type": "ticket_type",
                        "updated_at": 1719493050,
                        "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      },
                      "type": "ticket",
                      "updated_at": 1719493054,
                    },
                  },
                },
                {
                  "name": "Admin not found",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "assignment": {
                      "admin_id": "123",
                      "assignee_id": "991267893",
                    },
                    "state": "in_progress",
                    "ticket_attributes": {
                      "_default_description_": "there is a problem",
                      "_default_title_": "example",
                    },
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": "991267885",
                      "category": "Back-office",
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "cd63b6b5-ea75-4ad9-b72c-9d7a647baf08",
                            "id": "667d61bb8a68186f43bafe8e",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "created_at": 1719493051,
                      "id": "490",
                      "is_shared": false,
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "snoozed_until": 1719590400,
                      "team_assignee_id": "0",
                      "ticket_attributes": {
                        "_default_description_": "there is a problem",
                        "_default_title_": "example",
                      },
                      "ticket_id": "49",
                      "ticket_parts": {
                        "ticket_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin419@email.com",
                              "id": "991267883",
                              "name": "Ciaran419 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719493051,
                            "id": "126",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "submitted",
                            "type": "ticket_part",
                            "updated_at": 1719493051,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "127",
                            "part_type": "ticket_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "128",
                            "part_type": "ticket_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "129",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "in_progress",
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "assigned_to": {
                              "id": "991267885",
                              "type": "admin",
                            },
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin419@email.com",
                              "id": "991267883",
                              "name": "Ciaran419 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719493054,
                            "id": "130",
                            "part_type": "assignment",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493054,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493054,
                            "id": "131",
                            "part_type": "snoozed",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493054,
                          },
                        ],
                        "total_count": 6,
                        "type": "ticket_part.list",
                      },
                      "ticket_state": "in_progress",
                      "ticket_state_external_label": "In progress",
                      "ticket_state_internal_label": "In progress",
                      "ticket_type": {
                        "archived": false,
                        "category": "Back-office",
                        "created_at": 1719493050,
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "id": "108",
                        "name": "my-ticket-type-17",
                        "ticket_type_attributes": {
                          "type": "list",
                        },
                        "type": "ticket_type",
                        "updated_at": 1719493050,
                        "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      },
                      "type": "ticket",
                      "updated_at": 1719493054,
                    },
                  },
                },
                {
                  "name": "Assignee not found",
                  "path-parameters": {
                    "id": "id",
                  },
                  "request": {
                    "assignment": {
                      "admin_id": "991267899",
                      "assignee_id": "456",
                    },
                    "state": "in_progress",
                    "ticket_attributes": {
                      "_default_description_": "there is a problem",
                      "_default_title_": "example",
                    },
                  },
                  "response": {
                    "body": {
                      "admin_assignee_id": "991267885",
                      "category": "Back-office",
                      "contacts": {
                        "contacts": [
                          {
                            "external_id": "cd63b6b5-ea75-4ad9-b72c-9d7a647baf08",
                            "id": "667d61bb8a68186f43bafe8e",
                            "type": "contact",
                          },
                        ],
                        "type": "contact.list",
                      },
                      "created_at": 1719493051,
                      "id": "490",
                      "is_shared": false,
                      "linked_objects": {
                        "data": [
                          {
                            "id": "7583",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "type": "list",
                      },
                      "open": true,
                      "snoozed_until": 1719590400,
                      "team_assignee_id": "0",
                      "ticket_attributes": {
                        "_default_description_": "there is a problem",
                        "_default_title_": "example",
                      },
                      "ticket_id": "49",
                      "ticket_parts": {
                        "ticket_parts": [
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin419@email.com",
                              "id": "991267883",
                              "name": "Ciaran419 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719493051,
                            "id": "126",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "submitted",
                            "type": "ticket_part",
                            "updated_at": 1719493051,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "127",
                            "part_type": "ticket_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "128",
                            "part_type": "ticket_attribute_updated_by_admin",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493053,
                            "id": "129",
                            "part_type": "ticket_state_updated_by_admin",
                            "previous_ticket_state": "submitted",
                            "redacted": false,
                            "ticket_state": "in_progress",
                            "type": "ticket_part",
                            "updated_at": 1719493053,
                          },
                          {
                            "assigned_to": {
                              "id": "991267885",
                              "type": "admin",
                            },
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "admin419@email.com",
                              "id": "991267883",
                              "name": "Ciaran419 Lee",
                              "type": "admin",
                            },
                            "created_at": 1719493054,
                            "id": "130",
                            "part_type": "assignment",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493054,
                          },
                          {
                            "attachments": [
                              {
                                "content_type": "image/png",
                                "filesize": 100,
                                "height": 100,
                                "name": "example.png",
                                "type": "upload",
                                "url": "https://picsum.photos/200/300",
                                "width": 100,
                              },
                            ],
                            "author": {
                              "email": "operator+this_is_an_id652_that_should_be_at_least_@intercom.io",
                              "id": "991267884",
                              "name": "Operator",
                              "type": "bot",
                            },
                            "created_at": 1719493054,
                            "id": "131",
                            "part_type": "snoozed",
                            "redacted": false,
                            "type": "ticket_part",
                            "updated_at": 1719493054,
                          },
                        ],
                        "total_count": 6,
                        "type": "ticket_part.list",
                      },
                      "ticket_state": "in_progress",
                      "ticket_state_external_label": "In progress",
                      "ticket_state_internal_label": "In progress",
                      "ticket_type": {
                        "archived": false,
                        "category": "Back-office",
                        "created_at": 1719493050,
                        "description": "my ticket type description is awesome.",
                        "icon": "🦁",
                        "id": "108",
                        "name": "my-ticket-type-17",
                        "ticket_type_attributes": {
                          "type": "list",
                        },
                        "type": "ticket_type",
                        "updated_at": 1719493050,
                        "workspace_id": "this_is_an_id652_that_should_be_at_least_",
                      },
                      "type": "ticket",
                      "updated_at": 1719493054,
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/tickets/{id}",
              "path-parameters": {
                "id": {
                  "docs": "The unique identifier for the ticket which is given by Intercom",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "assignment": {
                      "type": "optional<UpdateTicketRequestAssignment>",
                    },
                    "is_shared": {
                      "docs": "Specify whether the ticket is visible to users.",
                      "type": "optional<boolean>",
                    },
                    "open": {
                      "docs": "Specify if a ticket is open. Set to false to close a ticket. Closing a ticket will also unsnooze it.",
                      "type": "optional<boolean>",
                    },
                    "snoozed_until": {
                      "docs": "The time you want the ticket to reopen.",
                      "type": "optional<integer>",
                    },
                    "state": {
                      "docs": "The state of the ticket.",
                      "type": "optional<UpdateTicketRequestState>",
                    },
                    "ticket_attributes": {
                      "docs": "The attributes set on the ticket.",
                      "type": "optional<map<string, unknown>>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "UpdateTicketRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successful response",
                "status-code": 200,
                "type": "optional<Ticket>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "Contacts": {
            "docs": "The list of contacts affected by a ticket.",
            "inline": undefined,
            "properties": {
              "contacts": {
                "docs": "The list of contacts affected by this ticket.",
                "type": "optional<list<root.ContactReference>>",
              },
              "type": {
                "docs": "always contact.list",
                "type": "optional<literal<"contact.list">>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "CreateTicketRequestContactsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "ID",
              },
              {
                "type": "CreateTicketRequestContactsItemExternalId",
              },
              {
                "type": "Email",
              },
            ],
          },
          "CreateTicketRequestContactsItemExternalId": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "external_id": {
                "docs": "The external_id you have defined for the contact who is being added as a participant.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "Email": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "email": {
                "docs": "The email you have defined for the contact who is being added as a participant. If a contact with this email does not exist, one will be created.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ID": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "docs": "The identifier for the contact as given by Intercom.",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ReplyTicketRequestBody": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "type": "root.ContactReplyTicketRequest",
              },
              {
                "type": "root.AdminReplyTicketRequest",
              },
            ],
          },
          "Ticket": {
            "docs": "Tickets are how you track requests from your users.",
            "inline": undefined,
            "properties": {
              "admin_assignee_id": {
                "docs": "The id representing the admin assigned to the ticket.",
                "type": "optional<string>",
              },
              "category": {
                "docs": "Category of the Ticket.",
                "type": "optional<TicketCategory>",
              },
              "contacts": {
                "type": "optional<Contacts>",
              },
              "created_at": {
                "docs": "The time the ticket was created as a UTC Unix timestamp.",
                "type": "optional<integer>",
              },
              "id": {
                "docs": "The unique identifier for the ticket which is given by Intercom.",
                "type": "optional<string>",
              },
              "is_shared": {
                "docs": "Whether or not the ticket is shared with the customer.",
                "type": "optional<boolean>",
              },
              "linked_objects": {
                "type": "optional<root.LinkedObjectList>",
              },
              "open": {
                "docs": "Whether or not the ticket is open. If false, the ticket is closed.",
                "type": "optional<boolean>",
              },
              "snoozed_until": {
                "docs": "The time the ticket will be snoozed until as a UTC Unix timestamp. If null, the ticket is not currently snoozed.",
                "type": "optional<integer>",
              },
              "team_assignee_id": {
                "docs": "The id representing the team assigned to the ticket.",
                "type": "optional<string>",
              },
              "ticket_attributes": {
                "type": "optional<root.TicketCustomAttributes>",
              },
              "ticket_id": {
                "docs": "The ID of the Ticket used in the Intercom Inbox and Messenger. Do not use ticket_id for API queries.",
                "type": "optional<string>",
              },
              "ticket_parts": {
                "type": "optional<root.TicketParts>",
              },
              "ticket_state": {
                "docs": "The state the ticket is currently in",
                "type": "optional<TicketTicketState>",
              },
              "ticket_state_external_label": {
                "docs": "The state the ticket is currently in, in a human readable form - visible to customers, in the messenger, email and tickets portal.",
                "type": "optional<string>",
              },
              "ticket_state_internal_label": {
                "docs": "The state the ticket is currently in, in a human readable form - visible in Intercom",
                "type": "optional<string>",
              },
              "ticket_type": {
                "type": "optional<TicketType>",
              },
              "type": {
                "docs": "Always ticket",
                "type": "optional<literal<"ticket">>",
              },
              "updated_at": {
                "docs": "The last time the ticket was updated as a UTC Unix timestamp.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketCategory": {
            "docs": "Category of the Ticket.",
            "enum": [
              "Customer",
              {
                "name": "BackOffice",
                "value": "Back-office",
              },
              "Tracker",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketPart": {
            "docs": "A Ticket Part represents a message in the ticket.",
            "inline": undefined,
            "properties": {
              "assigned_to": {
                "docs": "The id of the admin that was assigned the ticket by this ticket_part (null if there has been no change in assignment.)",
                "type": "optional<root.Reference>",
              },
              "attachments": {
                "docs": "A list of attachments for the part.",
                "type": "optional<list<root.PartAttachment>>",
              },
              "author": {
                "type": "optional<root.TicketPartAuthor>",
              },
              "body": {
                "docs": "The message body, which may contain HTML.",
                "type": "optional<string>",
              },
              "created_at": {
                "docs": "The time the ticket part was created.",
                "type": "optional<integer>",
              },
              "external_id": {
                "docs": "The external id of the ticket part",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The id representing the ticket part.",
                "type": "optional<string>",
              },
              "part_type": {
                "docs": "The type of ticket part.",
                "type": "optional<string>",
              },
              "previous_ticket_state": {
                "docs": "The previous state of the ticket.",
                "type": "optional<TicketPartPreviousTicketState>",
              },
              "redacted": {
                "docs": "Whether or not the ticket part has been redacted.",
                "type": "optional<boolean>",
              },
              "ticket_state": {
                "docs": "The state of the ticket.",
                "type": "optional<TicketPartTicketState>",
              },
              "type": {
                "docs": "Always ticket_part",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "The last time the ticket part was updated.",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketPartPreviousTicketState": {
            "docs": "The previous state of the ticket.",
            "enum": [
              "submitted",
              "in_progress",
              "waiting_on_customer",
              "resolved",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketPartTicketState": {
            "docs": "The state of the ticket.",
            "enum": [
              "submitted",
              "in_progress",
              "waiting_on_customer",
              "resolved",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketTicketState": {
            "docs": "The state the ticket is currently in",
            "enum": [
              "submitted",
              "in_progress",
              "waiting_on_customer",
              "resolved",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketType": {
            "docs": "A ticket type, used to define the data fields to be captured in a ticket.",
            "inline": undefined,
            "properties": {
              "archived": {
                "docs": "Whether the ticket type is archived or not.",
                "type": "optional<boolean>",
              },
              "category": {
                "docs": "Category of the Ticket Type.",
                "type": "optional<TicketTypeCategory>",
              },
              "created_at": {
                "docs": "The date and time the ticket type was created.",
                "type": "optional<integer>",
              },
              "description": {
                "docs": "The description of the ticket type",
                "type": "optional<string>",
              },
              "icon": {
                "docs": "The icon of the ticket type",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The id representing the ticket type.",
                "type": "optional<string>",
              },
              "name": {
                "docs": "The name of the ticket type",
                "type": "optional<string>",
              },
              "ticket_type_attributes": {
                "type": "optional<root.TicketTypeAttributeList>",
              },
              "type": {
                "docs": "String representing the object's type. Always has the value `ticket_type`.",
                "type": "optional<string>",
              },
              "updated_at": {
                "docs": "The date and time the ticket type was last updated.",
                "type": "optional<integer>",
              },
              "workspace_id": {
                "docs": "The id of the workspace that the ticket type belongs to.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "TicketTypeCategory": {
            "docs": "Category of the Ticket Type.",
            "enum": [
              "Customer",
              {
                "name": "BackOffice",
                "value": "Back-office",
              },
              "Tracker",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateTicketRequestAssignment": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "admin_id": {
                "docs": "The ID of the admin performing the action.",
                "type": "optional<string>",
              },
              "assignee_id": {
                "docs": "The ID of the admin or team to which the ticket is assigned. Set this 0 to unassign it.",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UpdateTicketRequestState": {
            "docs": "The state of the ticket.",
            "enum": [
              "in_progress",
              "waiting_on_customer",
              "resolved",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  ReplyTicketRequestBody:
    discriminated: false
    union:
      - type: root.ContactReplyTicketRequest
      - type: root.AdminReplyTicketRequest
    source:
      openapi: ../openapi.yml
  ID:
    properties:
      id:
        type: string
        docs: The identifier for the contact as given by Intercom.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateTicketRequestContactsItemExternalId:
    properties:
      external_id:
        type: string
        docs: >-
          The external_id you have defined for the contact who is being added as
          a participant.
    source:
      openapi: ../openapi.yml
    inline: true
  Email:
    properties:
      email:
        type: string
        docs: >-
          The email you have defined for the contact who is being added as a
          participant. If a contact with this email does not exist, one will be
          created.
    source:
      openapi: ../openapi.yml
    inline: true
  CreateTicketRequestContactsItem:
    discriminated: false
    union:
      - type: ID
      - type: CreateTicketRequestContactsItemExternalId
      - type: Email
    source:
      openapi: ../openapi.yml
    inline: true
  UpdateTicketRequestState:
    enum:
      - in_progress
      - waiting_on_customer
      - resolved
    docs: The state of the ticket.
    inline: true
    source:
      openapi: ../openapi.yml
  UpdateTicketRequestAssignment:
    properties:
      admin_id:
        type: optional<string>
        docs: The ID of the admin performing the action.
      assignee_id:
        type: optional<string>
        docs: >-
          The ID of the admin or team to which the ticket is assigned. Set this
          0 to unassign it.
    source:
      openapi: ../openapi.yml
    inline: true
  TicketCategory:
    enum:
      - Customer
      - value: Back-office
        name: BackOffice
      - Tracker
    docs: Category of the Ticket.
    inline: true
    source:
      openapi: ../openapi.yml
  TicketTicketState:
    enum:
      - submitted
      - in_progress
      - waiting_on_customer
      - resolved
    docs: The state the ticket is currently in
    inline: true
    source:
      openapi: ../openapi.yml
  Ticket:
    docs: Tickets are how you track requests from your users.
    properties:
      type:
        type: optional<literal<"ticket">>
        docs: Always ticket
      id:
        type: optional<string>
        docs: The unique identifier for the ticket which is given by Intercom.
      ticket_id:
        type: optional<string>
        docs: >-
          The ID of the Ticket used in the Intercom Inbox and Messenger. Do not
          use ticket_id for API queries.
      category:
        type: optional<TicketCategory>
        docs: Category of the Ticket.
      ticket_attributes:
        type: optional<root.TicketCustomAttributes>
      ticket_state:
        type: optional<TicketTicketState>
        docs: The state the ticket is currently in
      ticket_type:
        type: optional<TicketType>
      contacts:
        type: optional<Contacts>
      admin_assignee_id:
        type: optional<string>
        docs: The id representing the admin assigned to the ticket.
      team_assignee_id:
        type: optional<string>
        docs: The id representing the team assigned to the ticket.
      created_at:
        type: optional<integer>
        docs: The time the ticket was created as a UTC Unix timestamp.
      updated_at:
        type: optional<integer>
        docs: The last time the ticket was updated as a UTC Unix timestamp.
      open:
        type: optional<boolean>
        docs: Whether or not the ticket is open. If false, the ticket is closed.
      snoozed_until:
        type: optional<integer>
        docs: >-
          The time the ticket will be snoozed until as a UTC Unix timestamp. If
          null, the ticket is not currently snoozed.
      linked_objects:
        type: optional<root.LinkedObjectList>
      ticket_parts:
        type: optional<root.TicketParts>
      is_shared:
        type: optional<boolean>
        docs: Whether or not the ticket is shared with the customer.
      ticket_state_internal_label:
        type: optional<string>
        docs: >-
          The state the ticket is currently in, in a human readable form -
          visible in Intercom
      ticket_state_external_label:
        type: optional<string>
        docs: >-
          The state the ticket is currently in, in a human readable form -
          visible to customers, in the messenger, email and tickets portal.
    source:
      openapi: ../openapi.yml
  Contacts:
    docs: The list of contacts affected by a ticket.
    properties:
      type:
        type: optional<literal<"contact.list">>
        docs: always contact.list
      contacts:
        type: optional<list<root.ContactReference>>
        docs: The list of contacts affected by this ticket.
    source:
      openapi: ../openapi.yml
  TicketPartPreviousTicketState:
    enum:
      - submitted
      - in_progress
      - waiting_on_customer
      - resolved
    docs: The previous state of the ticket.
    inline: true
    source:
      openapi: ../openapi.yml
  TicketPartTicketState:
    enum:
      - submitted
      - in_progress
      - waiting_on_customer
      - resolved
    docs: The state of the ticket.
    inline: true
    source:
      openapi: ../openapi.yml
  TicketPart:
    docs: A Ticket Part represents a message in the ticket.
    properties:
      type:
        type: optional<string>
        docs: Always ticket_part
      id:
        type: optional<string>
        docs: The id representing the ticket part.
      part_type:
        type: optional<string>
        docs: The type of ticket part.
      body:
        type: optional<string>
        docs: The message body, which may contain HTML.
      previous_ticket_state:
        type: optional<TicketPartPreviousTicketState>
        docs: The previous state of the ticket.
      ticket_state:
        type: optional<TicketPartTicketState>
        docs: The state of the ticket.
      created_at:
        type: optional<integer>
        docs: The time the ticket part was created.
      updated_at:
        type: optional<integer>
        docs: The last time the ticket part was updated.
      assigned_to:
        type: optional<root.Reference>
        docs: >-
          The id of the admin that was assigned the ticket by this ticket_part
          (null if there has been no change in assignment.)
      author:
        type: optional<root.TicketPartAuthor>
      attachments:
        type: optional<list<root.PartAttachment>>
        docs: A list of attachments for the part.
      external_id:
        type: optional<string>
        docs: The external id of the ticket part
      redacted:
        type: optional<boolean>
        docs: Whether or not the ticket part has been redacted.
    source:
      openapi: ../openapi.yml
  TicketTypeCategory:
    enum:
      - Customer
      - value: Back-office
        name: BackOffice
      - Tracker
    docs: Category of the Ticket Type.
    inline: true
    source:
      openapi: ../openapi.yml
  TicketType:
    docs: A ticket type, used to define the data fields to be captured in a ticket.
    properties:
      type:
        type: optional<string>
        docs: >-
          String representing the object's type. Always has the value
          `ticket_type`.
      id:
        type: optional<string>
        docs: The id representing the ticket type.
      category:
        type: optional<TicketTypeCategory>
        docs: Category of the Ticket Type.
      name:
        type: optional<string>
        docs: The name of the ticket type
      description:
        type: optional<string>
        docs: The description of the ticket type
      icon:
        type: optional<string>
        docs: The icon of the ticket type
      workspace_id:
        type: optional<string>
        docs: The id of the workspace that the ticket type belongs to.
      ticket_type_attributes:
        type: optional<root.TicketTypeAttributeList>
      archived:
        type: optional<boolean>
        docs: Whether the ticket type is archived or not.
      created_at:
        type: optional<integer>
        docs: The date and time the ticket type was created.
      updated_at:
        type: optional<integer>
        docs: The date and time the ticket type was last updated.
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    replyTicket:
      path: /tickets/{id}/reply
      method: POST
      auth: true
      docs: >-
        You can reply to a ticket with a message from an admin or on behalf of a
        contact, or with a note for admins.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id: string
      display-name: Reply to a ticket
      request:
        body: ReplyTicketRequestBody
        content-type: application/json
      response:
        docs: Admin quick_reply reply
        type: root.TicketReply
        status-code: 200
      errors:
        - root.ReplyTicketRequestBadRequestError
        - root.ReplyTicketRequestUnauthorizedError
        - root.ReplyTicketRequestNotFoundError
      examples:
        - name: User reply
          path-parameters:
            id: '123'
          request:
            message_type: comment
            type: user
            body: Thanks again :)
            intercom_user_id: 667d619d8a68186f43bafe82
          response:
            body:
              type: ticket_part
              id: '122'
              part_type: note
              body: |-
                <h2>An Unordered HTML List</h2>
                <ul>
                <li>Coffee</li>
                <li>Tea</li>
                <li>Milk</li>
                </ul>
                <h2>An Ordered HTML List</h2>
                <ol>
                <li>Coffee</li>
                <li>Tea</li>
                <li>Milk</li>
                </ol>
              created_at: 1719493024
              updated_at: 1719493024
              author:
                type: admin
                id: '991267829'
                name: Ciaran375 Lee
                email: admin375@email.com
              attachments:
                - type: upload
                  name: example.png
                  url: https://picsum.photos/200/300
                  content_type: image/png
                  filesize: 100
                  width: 100
                  height: 100
              redacted: false
        - name: Admin note reply
          path-parameters:
            id: '123'
          request:
            message_type: note
            type: admin
            body: >-
              <html> <body>  <h2>An Unordered HTML List</h2>  <ul>  
              <li>Coffee</li>   <li>Tea</li>   <li>Milk</li> </ul>    <h2>An
              Ordered HTML List</h2>  <ol>   <li>Coffee</li>   <li>Tea</li>  
              <li>Milk</li> </ol>   </body> </html>
            admin_id: '3156780'
          response:
            body:
              type: ticket_part
              id: '122'
              part_type: note
              body: |-
                <h2>An Unordered HTML List</h2>
                <ul>
                <li>Coffee</li>
                <li>Tea</li>
                <li>Milk</li>
                </ul>
                <h2>An Ordered HTML List</h2>
                <ol>
                <li>Coffee</li>
                <li>Tea</li>
                <li>Milk</li>
                </ol>
              created_at: 1719493024
              updated_at: 1719493024
              author:
                type: admin
                id: '991267829'
                name: Ciaran375 Lee
                email: admin375@email.com
              attachments:
                - type: upload
                  name: example.png
                  url: https://picsum.photos/200/300
                  content_type: image/png
                  filesize: 100
                  width: 100
                  height: 100
              redacted: false
        - name: Admin quick_reply reply
          path-parameters:
            id: '123'
          request:
            message_type: quick_reply
            type: admin
            admin_id: '3156780'
            reply_options:
              - text: 'Yes'
                uuid: 22d6d1f4-1a19-41d0-94c2-e54031f78aca
              - text: 'No'
                uuid: fbc3dbe0-ec0c-4fb6-826d-e19127191906
          response:
            body:
              type: ticket_part
              id: '124'
              part_type: quick_reply
              body: <p>Okay!</p>
              created_at: 1719493029
              updated_at: 1719493029
              author:
                type: admin
                id: '991267834'
                name: Ciaran379 Lee
                email: admin379@email.com
              attachments:
                - type: upload
                  name: example.png
                  url: https://picsum.photos/200/300
                  content_type: image/png
                  filesize: 100
                  width: 100
                  height: 100
              redacted: false
        - name: Not found
          path-parameters:
            id: '123'
          request:
            message_type: comment
            type: user
            body: Thanks again :)
            intercom_user_id: 667d61a68a68186f43bafe85
          response:
            body:
              type: ticket_part
              id: '122'
              part_type: note
              body: |-
                <h2>An Unordered HTML List</h2>
                <ul>
                <li>Coffee</li>
                <li>Tea</li>
                <li>Milk</li>
                </ul>
                <h2>An Ordered HTML List</h2>
                <ol>
                <li>Coffee</li>
                <li>Tea</li>
                <li>Milk</li>
                </ol>
              created_at: 1719493024
              updated_at: 1719493024
              author:
                type: admin
                id: '991267829'
                name: Ciaran375 Lee
                email: admin375@email.com
              attachments:
                - type: upload
                  name: example.png
                  url: https://picsum.photos/200/300
                  content_type: image/png
                  filesize: 100
                  width: 100
                  height: 100
              redacted: false
    createTicket:
      path: /tickets
      method: POST
      auth: true
      docs: You can create a new ticket.
      source:
        openapi: ../openapi.yml
      display-name: Create a ticket
      request:
        name: CreateTicketRequest
        body:
          properties:
            ticket_type_id:
              type: string
              docs: The ID of the type of ticket you want to create
            contacts:
              docs: >-
                The list of contacts (users or leads) affected by this ticket.
                Currently only one is allowed
              type: list<CreateTicketRequestContactsItem>
            company_id:
              type: optional<string>
              docs: >-
                The ID of the company that the ticket is associated with. The ID
                that you set upon company creation.
            created_at:
              type: optional<integer>
              docs: >-
                The time the ticket was created. If not provided, the current
                time will be used.
            ticket_attributes:
              type: optional<root.TicketRequestCustomAttributes>
        content-type: application/json
      response:
        docs: Successful response
        type: optional<Ticket>
        status-code: 200
      errors:
        - root.CreateTicketRequestUnauthorizedError
      examples:
        - name: Successful response
          request:
            ticket_type_id: '1234'
            contacts:
              - id: 667d61b78a68186f43bafe8d
            ticket_attributes:
              _default_title_: example
              _default_description_: there is a problem
          response:
            body:
              type: ticket
              id: '489'
              ticket_id: '48'
              category: Back-office
              ticket_attributes:
                _default_title_: example
                _default_description_: there is a problem
              ticket_state: submitted
              ticket_type:
                type: ticket_type
                id: '106'
                category: Back-office
                name: my-ticket-type-15
                description: my ticket type description is awesome.
                icon: 🦁
                workspace_id: this_is_an_id648_that_should_be_at_least_
                ticket_type_attributes:
                  type: list
                archived: false
                created_at: 1719493047
                updated_at: 1719493047
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61b78a68186f43bafe8d
                    external_id: '70'
              admin_assignee_id: '0'
              team_assignee_id: '0'
              created_at: 1719493048
              updated_at: 1719493048
              open: true
              snoozed_until: 1663597260
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ticket_parts:
                type: ticket_part.list
                ticket_parts:
                  - type: ticket_part
                    id: '125'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: submitted
                    created_at: 1719493048
                    updated_at: 1719493048
                    author:
                      type: bot
                      id: '991267871'
                      name: Operator
                      email: >-
                        operator+this_is_an_id648_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              is_shared: false
              ticket_state_internal_label: Submitted
              ticket_state_external_label: Submitted
    getTicket:
      path: /tickets/{id}
      method: GET
      auth: true
      docs: You can fetch the details of a single ticket.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the ticket which is given by Intercom.
      display-name: Retrieve a ticket
      response:
        docs: Ticket found
        type: optional<Ticket>
        status-code: 200
      errors:
        - root.GetTicketRequestUnauthorizedError
      examples:
        - name: Ticket found
          path-parameters:
            id: id
          response:
            body:
              type: ticket
              id: '493'
              ticket_id: '52'
              category: Back-office
              ticket_attributes:
                _default_title_: attribute_value
                _default_description_: ticket_attributes
              ticket_state: submitted
              ticket_type:
                type: ticket_type
                id: '112'
                category: Back-office
                name: my-ticket-type-21
                description: my ticket type description is awesome.
                icon: 🦁
                workspace_id: this_is_an_id660_that_should_be_at_least_
                ticket_type_attributes:
                  type: list
                archived: false
                created_at: 1719493060
                updated_at: 1719493060
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61c48a68186f43bafe91
                    external_id: 038050f6-d917-4b9d-89cb-539b1d371172
              admin_assignee_id: '0'
              team_assignee_id: '0'
              created_at: 1719493061
              updated_at: 1719493061
              open: true
              snoozed_until: 1663597260
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ticket_parts:
                type: ticket_part.list
                ticket_parts:
                  - type: ticket_part
                    id: '134'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: submitted
                    created_at: 1719493061
                    updated_at: 1719493061
                    author:
                      type: admin
                      id: '991267912'
                      name: Ciaran445 Lee
                      email: admin445@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 1
              is_shared: false
              ticket_state_internal_label: Submitted
              ticket_state_external_label: Submitted
    updateTicket:
      path: /tickets/{id}
      method: PUT
      auth: true
      docs: You can update a ticket.
      source:
        openapi: ../openapi.yml
      path-parameters:
        id:
          type: string
          docs: The unique identifier for the ticket which is given by Intercom
      display-name: Update a ticket
      request:
        name: UpdateTicketRequest
        body:
          properties:
            ticket_attributes:
              type: optional<map<string, unknown>>
              docs: The attributes set on the ticket.
            state:
              type: optional<UpdateTicketRequestState>
              docs: The state of the ticket.
            open:
              type: optional<boolean>
              docs: >-
                Specify if a ticket is open. Set to false to close a ticket.
                Closing a ticket will also unsnooze it.
            is_shared:
              type: optional<boolean>
              docs: Specify whether the ticket is visible to users.
            snoozed_until:
              type: optional<integer>
              docs: The time you want the ticket to reopen.
            assignment:
              type: optional<UpdateTicketRequestAssignment>
        content-type: application/json
      response:
        docs: Successful response
        type: optional<Ticket>
        status-code: 200
      errors:
        - root.UpdateTicketRequestUnauthorizedError
        - root.UpdateTicketRequestNotFoundError
      examples:
        - name: Successful response
          path-parameters:
            id: id
          request:
            ticket_attributes:
              _default_title_: example
              _default_description_: there is a problem
            state: in_progress
            open: true
            snoozed_until: 1673609604
            assignment:
              admin_id: '991267883'
              assignee_id: '991267885'
          response:
            body:
              type: ticket
              id: '490'
              ticket_id: '49'
              category: Back-office
              ticket_attributes:
                _default_title_: example
                _default_description_: there is a problem
              ticket_state: in_progress
              ticket_type:
                type: ticket_type
                id: '108'
                category: Back-office
                name: my-ticket-type-17
                description: my ticket type description is awesome.
                icon: 🦁
                workspace_id: this_is_an_id652_that_should_be_at_least_
                ticket_type_attributes:
                  type: list
                archived: false
                created_at: 1719493050
                updated_at: 1719493050
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61bb8a68186f43bafe8e
                    external_id: cd63b6b5-ea75-4ad9-b72c-9d7a647baf08
              admin_assignee_id: '991267885'
              team_assignee_id: '0'
              created_at: 1719493051
              updated_at: 1719493054
              open: true
              snoozed_until: 1719590400
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ticket_parts:
                type: ticket_part.list
                ticket_parts:
                  - type: ticket_part
                    id: '126'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: submitted
                    created_at: 1719493051
                    updated_at: 1719493051
                    author:
                      type: admin
                      id: '991267883'
                      name: Ciaran419 Lee
                      email: admin419@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '127'
                    part_type: ticket_attribute_updated_by_admin
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '128'
                    part_type: ticket_attribute_updated_by_admin
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '129'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: in_progress
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '130'
                    part_type: assignment
                    created_at: 1719493054
                    updated_at: 1719493054
                    assigned_to:
                      type: admin
                      id: '991267885'
                    author:
                      type: admin
                      id: '991267883'
                      name: Ciaran419 Lee
                      email: admin419@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '131'
                    part_type: snoozed
                    created_at: 1719493054
                    updated_at: 1719493054
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 6
              is_shared: false
              ticket_state_internal_label: In progress
              ticket_state_external_label: In progress
        - name: Admin not found
          path-parameters:
            id: id
          request:
            ticket_attributes:
              _default_title_: example
              _default_description_: there is a problem
            state: in_progress
            assignment:
              admin_id: '123'
              assignee_id: '991267893'
          response:
            body:
              type: ticket
              id: '490'
              ticket_id: '49'
              category: Back-office
              ticket_attributes:
                _default_title_: example
                _default_description_: there is a problem
              ticket_state: in_progress
              ticket_type:
                type: ticket_type
                id: '108'
                category: Back-office
                name: my-ticket-type-17
                description: my ticket type description is awesome.
                icon: 🦁
                workspace_id: this_is_an_id652_that_should_be_at_least_
                ticket_type_attributes:
                  type: list
                archived: false
                created_at: 1719493050
                updated_at: 1719493050
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61bb8a68186f43bafe8e
                    external_id: cd63b6b5-ea75-4ad9-b72c-9d7a647baf08
              admin_assignee_id: '991267885'
              team_assignee_id: '0'
              created_at: 1719493051
              updated_at: 1719493054
              open: true
              snoozed_until: 1719590400
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ticket_parts:
                type: ticket_part.list
                ticket_parts:
                  - type: ticket_part
                    id: '126'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: submitted
                    created_at: 1719493051
                    updated_at: 1719493051
                    author:
                      type: admin
                      id: '991267883'
                      name: Ciaran419 Lee
                      email: admin419@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '127'
                    part_type: ticket_attribute_updated_by_admin
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '128'
                    part_type: ticket_attribute_updated_by_admin
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '129'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: in_progress
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '130'
                    part_type: assignment
                    created_at: 1719493054
                    updated_at: 1719493054
                    assigned_to:
                      type: admin
                      id: '991267885'
                    author:
                      type: admin
                      id: '991267883'
                      name: Ciaran419 Lee
                      email: admin419@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '131'
                    part_type: snoozed
                    created_at: 1719493054
                    updated_at: 1719493054
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 6
              is_shared: false
              ticket_state_internal_label: In progress
              ticket_state_external_label: In progress
        - name: Assignee not found
          path-parameters:
            id: id
          request:
            ticket_attributes:
              _default_title_: example
              _default_description_: there is a problem
            state: in_progress
            assignment:
              admin_id: '991267899'
              assignee_id: '456'
          response:
            body:
              type: ticket
              id: '490'
              ticket_id: '49'
              category: Back-office
              ticket_attributes:
                _default_title_: example
                _default_description_: there is a problem
              ticket_state: in_progress
              ticket_type:
                type: ticket_type
                id: '108'
                category: Back-office
                name: my-ticket-type-17
                description: my ticket type description is awesome.
                icon: 🦁
                workspace_id: this_is_an_id652_that_should_be_at_least_
                ticket_type_attributes:
                  type: list
                archived: false
                created_at: 1719493050
                updated_at: 1719493050
              contacts:
                type: contact.list
                contacts:
                  - type: contact
                    id: 667d61bb8a68186f43bafe8e
                    external_id: cd63b6b5-ea75-4ad9-b72c-9d7a647baf08
              admin_assignee_id: '991267885'
              team_assignee_id: '0'
              created_at: 1719493051
              updated_at: 1719493054
              open: true
              snoozed_until: 1719590400
              linked_objects:
                type: list
                total_count: 0
                has_more: false
                data:
                  - id: '7583'
              ticket_parts:
                type: ticket_part.list
                ticket_parts:
                  - type: ticket_part
                    id: '126'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: submitted
                    created_at: 1719493051
                    updated_at: 1719493051
                    author:
                      type: admin
                      id: '991267883'
                      name: Ciaran419 Lee
                      email: admin419@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '127'
                    part_type: ticket_attribute_updated_by_admin
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '128'
                    part_type: ticket_attribute_updated_by_admin
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '129'
                    part_type: ticket_state_updated_by_admin
                    previous_ticket_state: submitted
                    ticket_state: in_progress
                    created_at: 1719493053
                    updated_at: 1719493053
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '130'
                    part_type: assignment
                    created_at: 1719493054
                    updated_at: 1719493054
                    assigned_to:
                      type: admin
                      id: '991267885'
                    author:
                      type: admin
                      id: '991267883'
                      name: Ciaran419 Lee
                      email: admin419@email.com
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                  - type: ticket_part
                    id: '131'
                    part_type: snoozed
                    created_at: 1719493054
                    updated_at: 1719493054
                    author:
                      type: bot
                      id: '991267884'
                      name: Operator
                      email: >-
                        operator+this_is_an_id652_that_should_be_at_least_@intercom.io
                    attachments:
                      - type: upload
                        name: example.png
                        url: https://picsum.photos/200/300
                        content_type: image/png
                        filesize: 100
                        width: 100
                        height: 100
                    redacted: false
                total_count: 6
              is_shared: false
              ticket_state_internal_label: In progress
              ticket_state_external_label: In progress
    searchTickets:
      path: /tickets/search
      method: POST
      auth: true
      docs: >
        You can search for multiple tickets by the value of their attributes in
        order to fetch exactly which ones you want.


        To search for tickets, you send a `POST` request to
        `https://api.intercom.io/tickets/search`.


        This will accept a query object in the body which will define your
        filters.

        {% admonition type="warning" name="Optimizing search queries" %}
          Search queries can be complex, so optimizing them can help the performance of your search.
          Use the `AND` and `OR` operators to combine multiple filters to get the exact results you need and utilize
          pagination to limit the number of results returned. The default is `20` results per page.
          See the [pagination section](https://developers.intercom.com/docs/build-an-integration/learn-more/rest-apis/pagination/#example-search-conversations-request) for more details on how to use the `starting_after` param.
        {% /admonition %}


        ### Nesting & Limitations


        You can nest these filters in order to get even more granular insights
        that pinpoint exactly what you need. Example: (1 OR 2) AND (3 OR 4).

        There are some limitations to the amount of multiples there can be:

        - There's a limit of max 2 nested filters

        - There's a limit of max 15 filters for each AND or OR group


        ### Accepted Fields


        Most keys listed as part of the Ticket model are searchable, whether
        writeable or not. The value you search for has to match the accepted
        type, otherwise the query will fail (ie. as `created_at` accepts a date,
        the `value` cannot be a string such as `"foobar"`).


        | Field                                     |
        Type                                                                                    
        |

        | :---------------------------------------- |
        :---------------------------------------------------------------------------------------
        |

        | id                                        |
        String                                                                                  
        |

        | created_at                                | Date (UNIX
        timestamp)                                                                   
        |

        | updated_at                                | Date (UNIX
        timestamp)                                                                   
        |

        | _default_title_                           |
        String                                                                                  
        |

        | _default_description_                     |
        String                                                                                  
        |

        | category                                  |
        String                                                                                  
        |

        | ticket_type_id                            |
        String                                                                                  
        |

        | contact_ids                               |
        String                                                                                  
        |

        | teammate_ids                              |
        String                                                                                  
        |

        | admin_assignee_id                         |
        String                                                                                  
        |

        | team_assignee_id                          |
        String                                                                                  
        |

        | open                                      |
        Boolean                                                                                 
        |

        | state                                     |
        String                                                                                  
        |

        | snoozed_until                             | Date (UNIX
        timestamp)                                                                   
        |

        | ticket_attribute.{id}                     | String or Boolean or Date
        (UNIX timestamp) or Float or Integer                           |


        ### Accepted Operators


        {% admonition type="info" name="Searching based on `created_at`" %}
          You may use the `<=` or `>=` operators to search by `created_at`.
        {% /admonition %}


        The table below shows the operators you can use to define how you want
        to search for the value.  The operator should be put in as a string
        (`"="`). The operator has to be compatible with the field's type  (eg.
        you cannot search with `>` for a given string value as it's only
        compatible for integer's and dates).


        | Operator | Valid Types                    |
        Description                                                  |

        | :------- | :----------------------------- |
        :----------------------------------------------------------- |

        | =        | All                            |
        Equals                                                       |

        | !=       | All                            | Doesn't
        Equal                                                |

        | IN       | All                            | In  Shortcut for `OR`
        queries  Values most be in Array       |

        | NIN      | All                            | Not In  Shortcut for `OR
        !` queries  Values must be in Array |

        | >        | Integer  Date (UNIX Timestamp) | Greater (or equal)
        than                                      |

        | <       | Integer  Date (UNIX Timestamp) | Lower (or equal)
        than                                        |

        | ~        | String                         |
        Contains                                                     |

        | !~       | String                         | Doesn't
        Contain                                              |

        | ^        | String                         | Starts
        With                                                  |

        | $        | String                         | Ends
        With                                                    |
      source:
        openapi: ../openapi.yml
      display-name: Search tickets
      request:
        body:
          type: root.SearchRequest
        content-type: application/json
      response:
        docs: successful
        type: root.TicketList
        status-code: 200
      examples:
        - name: successful
          request:
            query:
              operator: AND
              value:
                - field: created_at
                  operator: '>'
                  value: '1306054154'
            pagination:
              per_page: 5
          response:
            body:
              type: ticket.list
              tickets:
                - type: ticket
                  id: '494'
                  ticket_id: '53'
                  category: Back-office
                  ticket_attributes:
                    _default_title_: attribute_value
                  ticket_state: submitted
                  ticket_type:
                    type: ticket_type
                    id: '117'
                    category: Back-office
                    name: my-ticket-type-26
                    description: my ticket type description is awesome.
                    icon: 🦁
                    workspace_id: this_is_an_id667_that_should_be_at_least_
                    ticket_type_attributes:
                      type: list
                    archived: false
                    created_at: 1719493065
                    updated_at: 1719493065
                  contacts:
                    type: contact.list
                    contacts:
                      - type: contact
                        id: 667d61c98a68186f43bafe92
                        external_id: 6895b33e-2768-4611-908e-da6632dfc8ea
                  admin_assignee_id: '0'
                  team_assignee_id: '0'
                  created_at: 1719493065
                  updated_at: 1719493066
                  open: true
                  snoozed_until: 1663597260
                  linked_objects:
                    type: list
                    total_count: 0
                    has_more: false
                    data:
                      - id: '7583'
                  ticket_parts:
                    type: ticket_part.list
                    ticket_parts:
                      - type: ticket_part
                        id: '135'
                        part_type: ticket_state_updated_by_admin
                        previous_ticket_state: submitted
                        ticket_state: submitted
                        created_at: 1719493066
                        updated_at: 1719493066
                        author:
                          type: admin
                          id: '991267940'
                          name: Ciaran472 Lee
                          email: admin472@email.com
                        attachments:
                          - type: upload
                            name: example.png
                            url: https://picsum.photos/200/300
                            content_type: image/png
                            filesize: 100
                            width: 100
                            height: 100
                        redacted: false
                    total_count: 1
                  is_shared: false
                  ticket_state_internal_label: Submitted
                  ticket_state_external_label: Submitted
              total_count: 1
              pages:
                type: pages
                page: 1
                next:
                  per_page: 2
                  starting_after: your-cursor-from-response
                per_page: 5
                total_pages: 1
  source:
    openapi: ../openapi.yml
  display-name: Tickets
docs: Everything about your tickets
",
    },
    "visitors.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Everything about your Visitors",
        "imports": {
          "contacts": "contacts.yml",
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "Visitors",
          "endpoints": {
            "convertVisitor": {
              "auth": true,
              "display-name": "Convert a visitor",
              "docs": "You can merge a Visitor to a Contact of role type `lead` or `user`.

> 📘 What happens upon a visitor being converted?
>
> If the User exists, then the Visitor will be merged into it, the Visitor deleted and the User returned. If the User does not exist, the Visitor will be converted to a User, with the User identifiers replacing it's Visitor identifiers.
",
              "errors": [
                "root.ConvertVisitorRequestUnauthorizedError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "type": "user",
                    "user": {
                      "email": "foo@bar.com",
                    },
                    "visitor": {
                      "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                    },
                  },
                  "response": {
                    "body": {
                      "companies": {
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d61d08a68186f43bafea2/companies",
                      },
                      "created_at": 1719493072,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "foo@bar.com",
                      "email_domain": "example.com",
                      "formatted_phone": "+1123456789",
                      "has_hard_bounced": false,
                      "id": "667d61d08a68186f43bafea2",
                      "location": {
                        "type": "location",
                      },
                      "marked_email_as_spam": false,
                      "notes": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d61d08a68186f43bafea2/notes",
                      },
                      "role": "user",
                      "signed_up_at": 1719493072,
                      "social_profiles": {
                        "data": [
                          {
                            "name": "Facebook",
                            "type": "social_profile",
                            "url": "http://twitter.com/th1sland",
                          },
                        ],
                      },
                      "tags": {
                        "data": [
                          {
                            "id": "123",
                            "type": "note",
                            "url": "/contacts/5ba682d23d7cf92bef87bfd4/notes",
                          },
                        ],
                        "has_more": false,
                        "total_count": 0,
                        "url": "/contacts/667d61d08a68186f43bafea2/tags",
                      },
                      "type": "contact",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719493072,
                      "workspace_id": "this_is_an_id683_that_should_be_at_least_",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/visitors/convert",
              "request": {
                "body": {
                  "properties": {
                    "type": {
                      "docs": "Represents the role of the Contact model. Accepts `lead` or `user`.",
                      "type": "string",
                    },
                    "user": "unknown",
                    "visitor": "unknown",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ConvertVisitorRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "contacts.Contact",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "retrieveVisitorWithUserId": {
              "auth": true,
              "display-name": "Retrieve a visitor with User ID",
              "docs": "You can fetch the details of a single visitor.",
              "errors": [
                "root.RetrieveVisitorWithUserIdRequestUnauthorizedError",
                "root.RetrieveVisitorWithUserIdRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "query-parameters": {
                    "user_id": "user_id",
                  },
                  "response": {
                    "body": {
                      "anonymous": true,
                      "app_id": "this_is_an_id677_that_should_be_at_least_",
                      "avatar": {
                        "type": "avatar",
                      },
                      "companies": {
                        "companies": [
                          {
                            "app_id": "ecahpwf5",
                            "company_id": "6",
                            "created_at": 1663597223,
                            "custom_attributes": {
                              "monthly_spend": "custom_attributes",
                              "paid_subscriber": "custom_attributes",
                              "team_mates": "custom_attributes",
                            },
                            "id": "531ee472cce572a6ec000006",
                            "industry": "Software",
                            "last_request_at": 1663597223,
                            "monthly_spend": 100,
                            "name": "Blue Sun",
                            "remote_created_at": 1663597223,
                            "session_count": 100,
                            "size": 100,
                            "updated_at": 1663597223,
                            "user_count": 100,
                            "website": "https://www.intercom.com",
                          },
                        ],
                        "type": "company.list",
                      },
                      "created_at": 1719493070,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "",
                      "has_hard_bounced": false,
                      "id": "667d61ce8a68186f43bafe9b",
                      "las_request_at": 1663597260,
                      "location_data": {
                        "city_name": "Dublin",
                        "continent_code": "EU",
                        "country_code": "IRL",
                        "country_name": "Ireland",
                        "postal_code": "D02 N960",
                        "region_name": "Leinster",
                        "timezone": "Europe/Dublin",
                        "type": "location_data",
                      },
                      "marked_email_as_spam": false,
                      "remote_created_at": 1719493070,
                      "segments": {
                        "segments": [
                          "segments",
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "signed_up_at": 1719493070,
                      "social_profiles": {
                        "social_profiles": [
                          "social_profiles",
                        ],
                        "type": "social_profile.list",
                      },
                      "tags": {
                        "tags": [
                          {
                            "id": "8482",
                            "name": "tag_name",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "visitor",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719493070,
                      "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/visitors",
              "request": {
                "name": "RetrieveVisitorWithUserIdRequest",
                "query-parameters": {
                  "user_id": {
                    "docs": "The user_id of the Visitor you want to retrieve.",
                    "type": "string",
                  },
                },
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "optional<root.Visitor>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "updateVisitor": {
              "auth": true,
              "display-name": "Update a visitor",
              "docs": "Sending a PUT request to `/visitors` will result in an update of an existing Visitor.

**Option 1.** You can update a visitor by passing in the `user_id` of the visitor in the Request body.

**Option 2.** You can update a visitor by passing in the `id` of the visitor in the Request body.
",
              "errors": [
                "root.UpdateVisitorRequestUnauthorizedError",
                "root.UpdateVisitorRequestNotFoundError",
              ],
              "examples": [
                {
                  "name": "successful",
                  "request": {
                    "id": "667d61cc8a68186f43bafe95",
                    "name": "Gareth Bale",
                  },
                  "response": {
                    "body": {
                      "anonymous": true,
                      "app_id": "this_is_an_id671_that_should_be_at_least_",
                      "avatar": {
                        "image_url": "https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png",
                        "type": "avatar",
                      },
                      "companies": {
                        "companies": [
                          {
                            "app_id": "ecahpwf5",
                            "company_id": "6",
                            "created_at": 1663597223,
                            "custom_attributes": {
                              "monthly_spend": "custom_attributes",
                              "paid_subscriber": "custom_attributes",
                              "team_mates": "custom_attributes",
                            },
                            "id": "531ee472cce572a6ec000006",
                            "industry": "Software",
                            "last_request_at": 1663597223,
                            "monthly_spend": 100,
                            "name": "Blue Sun",
                            "remote_created_at": 1663597223,
                            "session_count": 100,
                            "size": 100,
                            "updated_at": 1663597223,
                            "user_count": 100,
                            "website": "https://www.intercom.com",
                          },
                        ],
                        "type": "company.list",
                      },
                      "created_at": 1719493068,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "",
                      "has_hard_bounced": false,
                      "id": "667d61cc8a68186f43bafe95",
                      "las_request_at": 1663597260,
                      "location_data": {
                        "city_name": "Dublin",
                        "continent_code": "EU",
                        "country_code": "IRL",
                        "country_name": "Ireland",
                        "postal_code": "D02 N960",
                        "region_name": "Leinster",
                        "timezone": "Europe/Dublin",
                        "type": "location_data",
                      },
                      "marked_email_as_spam": false,
                      "name": "Gareth Bale",
                      "pseudonym": "Indigo Ghost",
                      "remote_created_at": 1719493068,
                      "segments": {
                        "segments": [
                          "segments",
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "signed_up_at": 1719493068,
                      "social_profiles": {
                        "social_profiles": [
                          "social_profiles",
                        ],
                        "type": "social_profile.list",
                      },
                      "tags": {
                        "tags": [
                          {
                            "id": "8482",
                            "name": "tag_name",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "visitor",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719493068,
                      "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                    },
                  },
                },
                {
                  "name": "visitor Not Found",
                  "request": {
                    "name": "Christian Fail",
                    "user_id": "fail",
                  },
                  "response": {
                    "body": {
                      "anonymous": true,
                      "app_id": "this_is_an_id671_that_should_be_at_least_",
                      "avatar": {
                        "image_url": "https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png",
                        "type": "avatar",
                      },
                      "companies": {
                        "companies": [
                          {
                            "app_id": "ecahpwf5",
                            "company_id": "6",
                            "created_at": 1663597223,
                            "custom_attributes": {
                              "monthly_spend": "custom_attributes",
                              "paid_subscriber": "custom_attributes",
                              "team_mates": "custom_attributes",
                            },
                            "id": "531ee472cce572a6ec000006",
                            "industry": "Software",
                            "last_request_at": 1663597223,
                            "monthly_spend": 100,
                            "name": "Blue Sun",
                            "remote_created_at": 1663597223,
                            "session_count": 100,
                            "size": 100,
                            "updated_at": 1663597223,
                            "user_count": 100,
                            "website": "https://www.intercom.com",
                          },
                        ],
                        "type": "company.list",
                      },
                      "created_at": 1719493068,
                      "custom_attributes": {
                        "key": "value",
                      },
                      "email": "",
                      "has_hard_bounced": false,
                      "id": "667d61cc8a68186f43bafe95",
                      "las_request_at": 1663597260,
                      "location_data": {
                        "city_name": "Dublin",
                        "continent_code": "EU",
                        "country_code": "IRL",
                        "country_name": "Ireland",
                        "postal_code": "D02 N960",
                        "region_name": "Leinster",
                        "timezone": "Europe/Dublin",
                        "type": "location_data",
                      },
                      "marked_email_as_spam": false,
                      "name": "Gareth Bale",
                      "pseudonym": "Indigo Ghost",
                      "remote_created_at": 1719493068,
                      "segments": {
                        "segments": [
                          "segments",
                        ],
                        "type": "segment.list",
                      },
                      "session_count": 0,
                      "signed_up_at": 1719493068,
                      "social_profiles": {
                        "social_profiles": [
                          "social_profiles",
                        ],
                        "type": "social_profile.list",
                      },
                      "tags": {
                        "tags": [
                          {
                            "id": "8482",
                            "name": "tag_name",
                          },
                        ],
                        "type": "tag.list",
                      },
                      "type": "visitor",
                      "unsubscribed_from_emails": false,
                      "updated_at": 1719493068,
                      "user_id": "3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3",
                    },
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/visitors",
              "request": {
                "body": "root.UpdateVisitorRequestOne",
                "content-type": "application/json",
              },
              "response": {
                "docs": "successful",
                "status-code": 200,
                "type": "optional<root.Visitor>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
  contacts: contacts.yml
service:
  auth: false
  base-path: ''
  endpoints:
    retrieveVisitorWithUserId:
      path: /visitors
      method: GET
      auth: true
      docs: You can fetch the details of a single visitor.
      source:
        openapi: ../openapi.yml
      display-name: Retrieve a visitor with User ID
      request:
        name: RetrieveVisitorWithUserIdRequest
        query-parameters:
          user_id:
            type: string
            docs: The user_id of the Visitor you want to retrieve.
      response:
        docs: successful
        type: optional<root.Visitor>
        status-code: 200
      errors:
        - root.RetrieveVisitorWithUserIdRequestUnauthorizedError
        - root.RetrieveVisitorWithUserIdRequestNotFoundError
      examples:
        - name: successful
          query-parameters:
            user_id: user_id
          response:
            body:
              type: visitor
              id: 667d61ce8a68186f43bafe9b
              user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
              anonymous: true
              email: ''
              avatar:
                type: avatar
              app_id: this_is_an_id677_that_should_be_at_least_
              companies:
                type: company.list
                companies:
                  - id: 531ee472cce572a6ec000006
                    name: Blue Sun
                    app_id: ecahpwf5
                    company_id: '6'
                    remote_created_at: 1663597223
                    created_at: 1663597223
                    updated_at: 1663597223
                    last_request_at: 1663597223
                    size: 100
                    website: https://www.intercom.com
                    industry: Software
                    monthly_spend: 100
                    session_count: 100
                    user_count: 100
                    custom_attributes:
                      paid_subscriber: custom_attributes
                      monthly_spend: custom_attributes
                      team_mates: custom_attributes
              location_data:
                type: location_data
                city_name: Dublin
                continent_code: EU
                country_code: IRL
                country_name: Ireland
                postal_code: D02 N960
                region_name: Leinster
                timezone: Europe/Dublin
              las_request_at: 1663597260
              created_at: 1719493070
              remote_created_at: 1719493070
              signed_up_at: 1719493070
              updated_at: 1719493070
              session_count: 0
              social_profiles:
                type: social_profile.list
                social_profiles:
                  - social_profiles
              unsubscribed_from_emails: false
              marked_email_as_spam: false
              has_hard_bounced: false
              tags:
                type: tag.list
                tags:
                  - id: '8482'
                    name: tag_name
              segments:
                type: segment.list
                segments:
                  - segments
              custom_attributes:
                key: value
    updateVisitor:
      path: /visitors
      method: PUT
      auth: true
      docs: >
        Sending a PUT request to `/visitors` will result in an update of an
        existing Visitor.


        **Option 1.** You can update a visitor by passing in the `user_id` of
        the visitor in the Request body.


        **Option 2.** You can update a visitor by passing in the `id` of the
        visitor in the Request body.
      source:
        openapi: ../openapi.yml
      display-name: Update a visitor
      request:
        body: root.UpdateVisitorRequestOne
        content-type: application/json
      response:
        docs: successful
        type: optional<root.Visitor>
        status-code: 200
      errors:
        - root.UpdateVisitorRequestUnauthorizedError
        - root.UpdateVisitorRequestNotFoundError
      examples:
        - name: successful
          request:
            id: 667d61cc8a68186f43bafe95
            name: Gareth Bale
          response:
            body:
              type: visitor
              id: 667d61cc8a68186f43bafe95
              user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
              anonymous: true
              email: ''
              name: Gareth Bale
              pseudonym: Indigo Ghost
              avatar:
                type: avatar
                image_url: >-
                  https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png
              app_id: this_is_an_id671_that_should_be_at_least_
              companies:
                type: company.list
                companies:
                  - id: 531ee472cce572a6ec000006
                    name: Blue Sun
                    app_id: ecahpwf5
                    company_id: '6'
                    remote_created_at: 1663597223
                    created_at: 1663597223
                    updated_at: 1663597223
                    last_request_at: 1663597223
                    size: 100
                    website: https://www.intercom.com
                    industry: Software
                    monthly_spend: 100
                    session_count: 100
                    user_count: 100
                    custom_attributes:
                      paid_subscriber: custom_attributes
                      monthly_spend: custom_attributes
                      team_mates: custom_attributes
              location_data:
                type: location_data
                city_name: Dublin
                continent_code: EU
                country_code: IRL
                country_name: Ireland
                postal_code: D02 N960
                region_name: Leinster
                timezone: Europe/Dublin
              las_request_at: 1663597260
              created_at: 1719493068
              remote_created_at: 1719493068
              signed_up_at: 1719493068
              updated_at: 1719493068
              session_count: 0
              social_profiles:
                type: social_profile.list
                social_profiles:
                  - social_profiles
              unsubscribed_from_emails: false
              marked_email_as_spam: false
              has_hard_bounced: false
              tags:
                type: tag.list
                tags:
                  - id: '8482'
                    name: tag_name
              segments:
                type: segment.list
                segments:
                  - segments
              custom_attributes:
                key: value
        - name: visitor Not Found
          request:
            user_id: fail
            name: Christian Fail
          response:
            body:
              type: visitor
              id: 667d61cc8a68186f43bafe95
              user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
              anonymous: true
              email: ''
              name: Gareth Bale
              pseudonym: Indigo Ghost
              avatar:
                type: avatar
                image_url: >-
                  https://static.intercomassets.com/app/pseudonym_avatars_2019/indigo-ghost.png
              app_id: this_is_an_id671_that_should_be_at_least_
              companies:
                type: company.list
                companies:
                  - id: 531ee472cce572a6ec000006
                    name: Blue Sun
                    app_id: ecahpwf5
                    company_id: '6'
                    remote_created_at: 1663597223
                    created_at: 1663597223
                    updated_at: 1663597223
                    last_request_at: 1663597223
                    size: 100
                    website: https://www.intercom.com
                    industry: Software
                    monthly_spend: 100
                    session_count: 100
                    user_count: 100
                    custom_attributes:
                      paid_subscriber: custom_attributes
                      monthly_spend: custom_attributes
                      team_mates: custom_attributes
              location_data:
                type: location_data
                city_name: Dublin
                continent_code: EU
                country_code: IRL
                country_name: Ireland
                postal_code: D02 N960
                region_name: Leinster
                timezone: Europe/Dublin
              las_request_at: 1663597260
              created_at: 1719493068
              remote_created_at: 1719493068
              signed_up_at: 1719493068
              updated_at: 1719493068
              session_count: 0
              social_profiles:
                type: social_profile.list
                social_profiles:
                  - social_profiles
              unsubscribed_from_emails: false
              marked_email_as_spam: false
              has_hard_bounced: false
              tags:
                type: tag.list
                tags:
                  - id: '8482'
                    name: tag_name
              segments:
                type: segment.list
                segments:
                  - segments
              custom_attributes:
                key: value
    convertVisitor:
      path: /visitors/convert
      method: POST
      auth: true
      docs: >
        You can merge a Visitor to a Contact of role type `lead` or `user`.


        > 📘 What happens upon a visitor being converted?

        >

        > If the User exists, then the Visitor will be merged into it, the
        Visitor deleted and the User returned. If the User does not exist, the
        Visitor will be converted to a User, with the User identifiers replacing
        it's Visitor identifiers.
      source:
        openapi: ../openapi.yml
      display-name: Convert a visitor
      request:
        name: ConvertVisitorRequest
        body:
          properties:
            type:
              type: string
              docs: >-
                Represents the role of the Contact model. Accepts `lead` or
                `user`.
            user: unknown
            visitor: unknown
        content-type: application/json
      response:
        docs: successful
        type: contacts.Contact
        status-code: 200
      errors:
        - root.ConvertVisitorRequestUnauthorizedError
      examples:
        - name: successful
          request:
            type: user
            user:
              email: foo@bar.com
            visitor:
              user_id: 3ecf64d0-9ed1-4e9f-88e1-da7d6e6782f3
          response:
            body:
              type: contact
              id: 667d61d08a68186f43bafea2
              workspace_id: this_is_an_id683_that_should_be_at_least_
              role: user
              email: foo@bar.com
              email_domain: example.com
              formatted_phone: '+1123456789'
              has_hard_bounced: false
              marked_email_as_spam: false
              unsubscribed_from_emails: false
              created_at: 1719493072
              updated_at: 1719493072
              signed_up_at: 1719493072
              custom_attributes:
                key: value
              tags:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d61d08a68186f43bafea2/tags
                total_count: 0
                has_more: false
              notes:
                data:
                  - type: note
                    id: '123'
                    url: /contacts/5ba682d23d7cf92bef87bfd4/notes
                url: /contacts/667d61d08a68186f43bafea2/notes
                total_count: 0
                has_more: false
              companies:
                url: /contacts/667d61d08a68186f43bafea2/companies
                total_count: 0
                has_more: false
              location:
                type: location
              social_profiles:
                data:
                  - type: social_profile
                    name: Facebook
                    url: http://twitter.com/th1sland
  source:
    openapi: ../openapi.yml
  display-name: Visitors
docs: Everything about your Visitors
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "Intercom API",
      "environments": {
        "Default": "https://api.intercom.io",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "headers": {
        "Intercom-Version": {
          "name": "intercomVersion",
          "type": "optional<root.IntercomVersion>",
        },
      },
      "imports": {
        "root": "__package__.yml",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Intercom API
environments:
  Default: https://api.intercom.io
default-environment: Default
imports:
  root: __package__.yml
headers:
  Intercom-Version:
    type: optional<root.IntercomVersion>
    name: intercomVersion
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}