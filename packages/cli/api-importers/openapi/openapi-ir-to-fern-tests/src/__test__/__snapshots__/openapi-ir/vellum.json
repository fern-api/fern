{
  "title": "Vellum Client API",
  "description": "\n## Vellum API Documentation\n\n### Welcome ðŸ‘‹\nWelcome to Vellum's API documentation! Here you'll find information about the various endpoints available to you,\nas well as the parameters and responses that they accept and return.\n\nWe will be exposing more and more of our APIs over time as they stabilize. If there is some action you can perform\nvia the UI that you wish you could perform via API, please let us know and we can expose it here in an unstable state.\n\n### API Stability\nSome of the APIs documented within are undergoing active development. Use the\n<strong style=\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\">Stable</strong>\nand\n<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\ntags to differentiate between those that are stable and those that are not.\n\n### Base URLs\nSome endpoints are hosted separately from the main Vellum API and therefore have a different base url. If this is\nthe case, they will say so in their description.\n\nUnless otherwise specified, all endpoints use <code>https://api.vellum.ai</code> as their base URL.\n\n### Official API Clients:\nVellum maintains official API clients for Python and Node/Typescript. We recommend using these clients to interact\nwith all stable endpoints. You can find them here:\n- [Python](https://github.com/vellum-ai/vellum-client-python)\n- [Node/Typescript](https://github.com/vellum-ai/vellum-client-node)\n",
  "servers": [
    {
      "url": "https://api.vellum.ai",
      "description": "Default Server",
      "name": "Default"
    }
  ],
  "tags": {
    "tagsById": {}
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "audiences": [],
      "operationId": "deployments_retrieve",
      "tags": [
        "deployments"
      ],
      "pathParameters": [
        {
          "description": "Either the Deployment's ID or its unique name",
          "name": "id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeploymentsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeploymentsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DeploymentsRetrieveResponse",
          "schema": "DeploymentRead",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "\n<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nUsed to retrieve a deployment given its ID or name.\n",
      "authed": true,
      "method": "GET",
      "path": "/v1/deployments/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "ACTIVE",
                  "type": "enum"
                },
                "environment": {
                  "value": "DEVELOPMENT",
                  "type": "enum"
                },
                "model_type": {
                  "value": "GENERATE",
                  "type": "enum"
                },
                "active_model_version_ids": {
                  "value": [
                    {
                      "value": {
                        "value": "active_model_version_ids",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "last_deployed_on": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "document_indexes_create",
      "tags": [
        "document-indexes"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DocumentIndexesCreateRequest",
      "request": {
        "schema": {
          "generatedName": "DocumentIndexesCreateRequest",
          "schema": "DocumentIndexCreateRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "Index Using Instructor Model",
            "value": {
              "label": "My Document Index",
              "name": "my-document-index",
              "indexing_config": {
                "chunking": {
                  "chunker_name": "sentence-chunker",
                  "chunker_config": {
                    "character_limit": 1000,
                    "min_overlap_ratio": 0.5
                  }
                },
                "vectorizer": {
                  "model_name": "hkunlp/instructor-xl",
                  "config": {
                    "instruction_domain": "",
                    "instruction_document_text_type": "plain_text",
                    "instruction_query_text_type": "plain_text"
                  }
                }
              },
              "copy_documents_from_index_id": null
            },
            "description": "This example shows how to create a document index that vectorizes documents using an instructor model."
          },
          {
            "name": "Index Using a Sentence Transformers Model",
            "value": {
              "label": "My Document Index",
              "name": "my-document-index",
              "indexing_config": {
                "chunking": {
                  "chunker_name": "sentence-chunker",
                  "chunker_config": {
                    "character_limit": 1000,
                    "min_overlap_ratio": 0.5
                  }
                },
                "vectorizer": {
                  "model_name": "sentence-transformers/multi-qa-mpnet-base-dot-v1",
                  "config": {}
                }
              },
              "copy_documents_from_index_id": null
            },
            "description": "This example shows how to create a document index that vectorizes documents using a Sentence Transformers model."
          },
          {
            "name": "Index Using OpenAI Model",
            "value": {
              "label": "My Document Index",
              "name": "my-document-index",
              "indexing_config": {
                "chunking": {
                  "chunker_name": "sentence-chunker",
                  "chunker_config": {
                    "character_limit": 1000,
                    "min_overlap_ratio": 0.5
                  }
                },
                "vectorizer": {
                  "model_name": "text-embedding-ada-002",
                  "config": {
                    "add_openai_api_key": true
                  }
                }
              },
              "copy_documents_from_index_id": null
            },
            "description": "This example shows how to create a document index that vectorizes documents using one of OpenAI's embedding models."
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DocumentIndexesCreateResponse",
          "schema": "DocumentIndexRead",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nCreates a new document index.",
      "authed": true,
      "method": "POST",
      "path": "/v1/document-indexes",
      "examples": [
        {
          "name": "Index Using Instructor Model",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "label": {
                "value": {
                  "value": "My Document Index",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "my-document-index",
                  "type": "string"
                },
                "type": "primitive"
              },
              "indexing_config": {
                "value": [
                  {
                    "key": {
                      "value": "chunking",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "chunker_name",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "sentence-chunker",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "chunker_config",
                              "type": "string"
                            },
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "character_limit",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": 1000,
                                      "type": "int"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "min_overlap_ratio",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": 0.5,
                                      "type": "double"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "vectorizer",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "model_name",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "hkunlp/instructor-xl",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "config",
                              "type": "string"
                            },
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "instruction_domain",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "instruction_document_text_type",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "plain_text",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "instruction_query_text_type",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": "plain_text",
                                      "type": "string"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "ACTIVE",
                  "type": "enum"
                },
                "environment": {
                  "value": "DEVELOPMENT",
                  "type": "enum"
                },
                "indexing_config": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        },
        {
          "name": "Index Using a Sentence Transformers Model",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "label": {
                "value": {
                  "value": "My Document Index",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "my-document-index",
                  "type": "string"
                },
                "type": "primitive"
              },
              "indexing_config": {
                "value": [
                  {
                    "key": {
                      "value": "chunking",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "chunker_name",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "sentence-chunker",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "chunker_config",
                              "type": "string"
                            },
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "character_limit",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": 1000,
                                      "type": "int"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "min_overlap_ratio",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": 0.5,
                                      "type": "double"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "vectorizer",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "model_name",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "sentence-transformers/multi-qa-mpnet-base-dot-v1",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "config",
                              "type": "string"
                            },
                            "value": {
                              "value": [],
                              "type": "map"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "ACTIVE",
                  "type": "enum"
                },
                "environment": {
                  "value": "DEVELOPMENT",
                  "type": "enum"
                },
                "indexing_config": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        },
        {
          "name": "Index Using OpenAI Model",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "label": {
                "value": {
                  "value": "My Document Index",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "my-document-index",
                  "type": "string"
                },
                "type": "primitive"
              },
              "indexing_config": {
                "value": [
                  {
                    "key": {
                      "value": "chunking",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "chunker_name",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "sentence-chunker",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "chunker_config",
                              "type": "string"
                            },
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "character_limit",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": 1000,
                                      "type": "int"
                                    },
                                    "type": "primitive"
                                  }
                                },
                                {
                                  "key": {
                                    "value": "min_overlap_ratio",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": 0.5,
                                      "type": "double"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  },
                  {
                    "key": {
                      "value": "vectorizer",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": [
                          {
                            "key": {
                              "value": "model_name",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": "text-embedding-ada-002",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          {
                            "key": {
                              "value": "config",
                              "type": "string"
                            },
                            "value": {
                              "value": [
                                {
                                  "key": {
                                    "value": "add_openai_api_key",
                                    "type": "string"
                                  },
                                  "value": {
                                    "value": {
                                      "value": true,
                                      "type": "boolean"
                                    },
                                    "type": "primitive"
                                  }
                                }
                              ],
                              "type": "map"
                            }
                          }
                        ],
                        "type": "map"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "status": {
                  "value": "ACTIVE",
                  "type": "enum"
                },
                "environment": {
                  "value": "DEVELOPMENT",
                  "type": "enum"
                },
                "indexing_config": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "documents_list",
      "tags": [
        "documents"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Filter down to only those documents that are included in the specified index. You may provide either the Vellum-generated ID or the unique name of the index specified upon initial creation.",
          "name": "document_index_id",
          "schema": {
            "generatedName": "DocumentsListRequestDocumentIndexId",
            "value": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "DocumentsListRequestDocumentIndexId",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Number of results to return per page.",
          "name": "limit",
          "schema": {
            "generatedName": "DocumentsListRequestLimit",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "DocumentsListRequestLimit",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The initial index from which to return the results.",
          "name": "offset",
          "schema": {
            "generatedName": "DocumentsListRequestOffset",
            "value": {
              "schema": {
                "type": "int"
              },
              "generatedName": "DocumentsListRequestOffset",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Which field to use when ordering the results.",
          "name": "ordering",
          "schema": {
            "generatedName": "DocumentsListRequestOrdering",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "DocumentsListRequestOrdering",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "DocumentsListRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DocumentsListResponse",
          "schema": "PaginatedSlimDocumentList",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "\n<strong style=\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\">Stable</strong>\n\nUsed to list documents. Optionally filter on supported fields.\n",
      "authed": true,
      "method": "GET",
      "path": "/v1/documents",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "count": {
                  "value": {
                    "value": 123,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "next": {
                  "value": {
                    "value": "http://api.example.org/accounts/?offset=400&limit=100",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "previous": {
                  "value": {
                    "value": "http://api.example.org/accounts/?offset=200&limit=100",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "results": {
                  "value": [
                    {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "external_id": {
                          "value": {
                            "value": "external_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "last_uploaded_at": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "label": {
                          "value": {
                            "value": "label",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "processing_state": {
                          "value": "QUEUED",
                          "type": "enum"
                        },
                        "processing_failure_reason": {
                          "value": {
                            "value": "EXCEEDED_CHARACTER_LIMIT",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "status": {
                          "value": {
                            "value": "ACTIVE",
                            "type": "string"
                          },
                          "type": "literal"
                        },
                        "keywords": {
                          "value": [
                            {
                              "value": {
                                "value": "keywords",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "document_to_document_indexes": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "document_index_id": {
                                  "value": {
                                    "value": "document_index_id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "execute_workflow_stream",
      "tags": [
        "execute-workflow-stream"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ExecuteWorkflowStreamRequest",
      "request": {
        "schema": {
          "generatedName": "ExecuteWorkflowStreamRequest",
          "schema": "ExecuteWorkflowStreamRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "fullExamples": [],
        "schema": {
          "generatedName": "ExecuteWorkflowStreamResponse",
          "schema": "WorkflowStreamEvent",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "streamingJson"
      },
      "errors": {},
      "server": [
        {
          "url": "https://predict.vellum.ai",
          "name": "Predict"
        }
      ],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nExecutes a deployed Workflow and streams back its results.",
      "authed": true,
      "method": "POST",
      "path": "/v1/execute-workflow-stream",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "inputs": {
                "value": [
                  {
                    "value": {
                      "value": {
                        "type": {
                          "value": {
                            "value": "CHAT_HISTORY",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "name": {
                          "value": {
                            "value": "inputs",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "value": {
                          "value": [
                            {
                              "properties": {
                                "text": {
                                  "value": {
                                    "value": "text",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "role": {
                                  "value": "SYSTEM",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "discriminated"
                    },
                    "type": "oneOf"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "sse": false,
            "events": [
              {
                "value": {
                  "value": {
                    "type": {
                      "value": {
                        "value": "NODE",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "run_id": {
                      "value": {
                        "value": "string",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "external_id": {
                      "value": {
                        "value": "string",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "data": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "node_id": {
                          "value": {
                            "value": "node_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "node_result_id": {
                          "value": {
                            "value": "node_result_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "state": {
                          "value": "INITIATED",
                          "type": "enum"
                        },
                        "ts": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "data": {
                          "value": {
                            "value": {
                              "type": {
                                "value": {
                                  "value": "TERMINAL",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "data": {
                                "properties": {
                                  "output": {
                                    "value": {
                                      "value": {
                                        "type": {
                                          "value": {
                                            "value": "CHAT_HISTORY",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "name": {
                                          "value": {
                                            "value": "output",
                                            "type": "string"
                                          },
                                          "type": "primitive"
                                        },
                                        "value": {
                                          "value": [
                                            {
                                              "properties": {
                                                "text": {
                                                  "value": {
                                                    "value": "text",
                                                    "type": "string"
                                                  },
                                                  "type": "primitive"
                                                },
                                                "role": {
                                                  "value": "SYSTEM",
                                                  "type": "enum"
                                                }
                                              },
                                              "type": "object"
                                            }
                                          ],
                                          "type": "array"
                                        }
                                      },
                                      "type": "discriminated"
                                    },
                                    "type": "oneOf"
                                  }
                                },
                                "type": "object"
                              }
                            },
                            "type": "discriminated"
                          },
                          "type": "oneOf"
                        },
                        "error": {
                          "properties": {
                            "message": {
                              "value": {
                                "value": "message",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "code": {
                              "value": "WORKFLOW_INITIALIZATION",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "discriminated"
                },
                "type": "oneOf"
              }
            ],
            "type": "withStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "generate",
      "tags": [
        "generate"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GenerateRequest",
      "request": {
        "schema": {
          "generatedName": "GenerateRequest",
          "schema": "GenerateBodyRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "GenerateResponse",
          "schema": "GenerateResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [
        {
          "url": "https://predict.vellum.ai",
          "name": "Predict"
        }
      ],
      "description": "<strong style=\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\">Stable</strong>\n\nGenerate a completion using a previously defined deployment.\n\n**Note:** Uses a base url of `https://predict.vellum.ai`.",
      "authed": true,
      "method": "POST",
      "path": "/v1/generate",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "requests": {
                "value": [
                  {
                    "properties": {
                      "input_values": {
                        "value": [
                          {
                            "key": {
                              "value": "key",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "data": {
                          "properties": {
                            "completions": {
                              "value": [
                                {
                                  "properties": {
                                    "id": {
                                      "value": {
                                        "value": "id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "text": {
                                      "value": {
                                        "value": "text",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    },
                                    "model_version_id": {
                                      "value": {
                                        "value": "model_version_id",
                                        "type": "string"
                                      },
                                      "type": "primitive"
                                    }
                                  },
                                  "type": "object"
                                }
                              ],
                              "type": "array"
                            }
                          },
                          "type": "object"
                        },
                        "error": {
                          "properties": {
                            "message": {
                              "value": {
                                "value": "message",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "generate_stream",
      "tags": [
        "generate-stream"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "GenerateStreamRequest",
      "request": {
        "schema": {
          "generatedName": "GenerateStreamRequest",
          "schema": "GenerateStreamBodyRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "fullExamples": [],
        "schema": {
          "generatedName": "GenerateStreamResponse",
          "schema": "GenerateStreamResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "streamingJson"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "403": {
          "generatedName": "ForbiddenError",
          "schema": {
            "generatedName": "ForbiddenErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "GenerateErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [
        {
          "url": "https://predict.vellum.ai",
          "name": "Predict"
        }
      ],
      "description": "<strong style=\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\">Stable</strong>\n\nGenerate a stream of completions using a previously defined deployment.\n\n**Note:** Uses a base url of `https://predict.vellum.ai`.",
      "authed": true,
      "method": "POST",
      "path": "/v1/generate-stream",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "requests": {
                "value": [
                  {
                    "properties": {
                      "input_values": {
                        "value": [
                          {
                            "key": {
                              "value": "key",
                              "type": "string"
                            },
                            "value": {
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          }
                        ],
                        "type": "map"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "sse": false,
            "events": [
              {
                "properties": {
                  "delta": {
                    "properties": {
                      "request_index": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "data": {
                        "properties": {
                          "completion_index": {
                            "value": {
                              "value": 1,
                              "type": "int"
                            },
                            "type": "primitive"
                          },
                          "completion": {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "text": {
                                "value": {
                                  "value": "text",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "model_version_id": {
                                "value": {
                                  "value": "model_version_id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            },
                            "type": "object"
                          }
                        },
                        "type": "object"
                      },
                      "error": {
                        "properties": {
                          "message": {
                            "value": {
                              "value": "message",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              }
            ],
            "type": "withStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "model_versions_retrieve",
      "tags": [
        "model-versions"
      ],
      "pathParameters": [
        {
          "description": "A UUID string identifying this model version.",
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ModelVersionsRetrieveRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ModelVersionsRetrieveRequest",
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ModelVersionsRetrieveResponse",
          "schema": "ModelVersionRead",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "\n<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nUsed to retrieve a model version given its ID.\n",
      "authed": true,
      "method": "GET",
      "path": "/v1/model-versions/{id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "created": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "model_type": {
                  "value": "GENERATE",
                  "type": "enum"
                },
                "provider": {
                  "value": "ANTHROPIC",
                  "type": "enum"
                },
                "external_id": {
                  "value": {
                    "value": "external_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "build_config": {
                  "properties": {
                    "base_model": {
                      "value": {
                        "value": "base_model",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "sandbox_snapshot": {
                      "properties": {
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "prompt_index": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "prompt_id": {
                          "value": {
                            "value": "prompt_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "sandbox_id": {
                          "value": {
                            "value": "sandbox_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "exec_config": {
                  "properties": {
                    "parameters": {
                      "properties": {
                        "temperature": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "max_tokens": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "top_p": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "frequency_penalty": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "presence_penalty": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        },
                        "stop": {
                          "value": [
                            {
                              "value": {
                                "value": "stop",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "top_k": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    },
                    "input_variables": {
                      "value": [
                        {
                          "properties": {
                            "key": {
                              "value": {
                                "value": "key",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      ],
                      "type": "array"
                    },
                    "prompt_template": {
                      "value": {
                        "value": "prompt_template",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "prompt_block_data": {
                      "properties": {
                        "version": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "blocks": {
                          "value": [
                            {
                              "properties": {
                                "id": {
                                  "value": {
                                    "value": "id",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "block_type": {
                                  "value": "CHAT_MESSAGE",
                                  "type": "enum"
                                },
                                "properties": {
                                  "properties": {},
                                  "type": "object"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    },
                    "prompt_syntax_version": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "status": {
                  "value": "CREATING",
                  "type": "enum"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "model_version_compile_prompt",
      "tags": [
        "model-versions"
      ],
      "pathParameters": [
        {
          "description": "A UUID string identifying this model version.",
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ModelVersionCompilePromptRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ModelVersionCompilePromptRequest",
      "request": {
        "schema": {
          "generatedName": "ModelVersionCompilePromptRequest",
          "schema": "ModelVersionCompilePromptRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "ModelVersionCompilePromptResponse",
          "schema": "ModelVersionCompilePromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nCompiles the prompt backing the model version using the provided input values.",
      "authed": true,
      "method": "POST",
      "path": "/v1/model-versions/{id}/compile-prompt",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "input_values": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "prompt": {
                  "properties": {
                    "text": {
                      "value": {
                        "value": "text",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "num_tokens": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "register_prompt",
      "tags": [
        "registered-prompts"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RegisterPromptRequest",
      "request": {
        "schema": {
          "generatedName": "RegisterPromptRequest",
          "schema": "RegisterPromptRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "RegisterPromptResponse",
          "schema": "RegisterPromptResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "409": {
          "generatedName": "ConflictError",
          "schema": {
            "generatedName": "ConflictErrorBody",
            "schema": "RegisterPromptErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nRegisters a prompt within Vellum and creates associated Vellum entities. Intended to be used by integration\npartners, not directly by Vellum users.\n\nUnder the hood, this endpoint creates a new sandbox, a new model version, and a new deployment.",
      "authed": true,
      "method": "POST",
      "path": "/v1/registered-prompts/register",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "label": {
                "value": {
                  "value": "label",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "name",
                  "type": "string"
                },
                "type": "primitive"
              },
              "prompt": {
                "properties": {
                  "prompt_block_data": {
                    "properties": {
                      "version": {
                        "value": {
                          "value": 1,
                          "type": "int"
                        },
                        "type": "primitive"
                      },
                      "blocks": {
                        "value": [
                          {
                            "properties": {
                              "id": {
                                "value": {
                                  "value": "id",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "block_type": {
                                "value": "CHAT_MESSAGE",
                                "type": "enum"
                              },
                              "properties": {
                                "properties": {},
                                "type": "object"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "input_variables": {
                    "value": [
                      {
                        "properties": {
                          "key": {
                            "value": {
                              "value": "key",
                              "type": "string"
                            },
                            "type": "primitive"
                          }
                        },
                        "type": "object"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "provider": {
                "value": "ANTHROPIC",
                "type": "enum"
              },
              "model": {
                "value": {
                  "value": "model",
                  "type": "string"
                },
                "type": "primitive"
              },
              "parameters": {
                "properties": {
                  "temperature": {
                    "value": {
                      "value": 1.1,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "max_tokens": {
                    "value": {
                      "value": 1,
                      "type": "int"
                    },
                    "type": "primitive"
                  },
                  "top_p": {
                    "value": {
                      "value": 1.1,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "frequency_penalty": {
                    "value": {
                      "value": 1.1,
                      "type": "double"
                    },
                    "type": "primitive"
                  },
                  "presence_penalty": {
                    "value": {
                      "value": 1.1,
                      "type": "double"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "prompt": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "sandbox_snapshot": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "sandbox": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "model_version": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "deployment": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "name": {
                      "value": {
                        "value": "name",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "label": {
                      "value": {
                        "value": "label",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "upsert_sandbox_scenario",
      "tags": [
        "sandboxes"
      ],
      "pathParameters": [
        {
          "description": "A UUID string identifying this sandbox.",
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "UpsertSandboxScenarioRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpsertSandboxScenarioRequest",
      "request": {
        "schema": {
          "generatedName": "UpsertSandboxScenarioRequest",
          "schema": "UpsertSandboxScenarioRequestRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "Basic Example",
            "value": {
              "id": "3ee58bf2-1e5c-415e-8b6c-02ca8b77f29d",
              "label": "Scenario 1",
              "inputs": [
                {
                  "key": "var_1",
                  "value": "Hello, world!",
                  "type": "TEXT"
                },
                {
                  "key": "var_2",
                  "value": "Why hello, there!",
                  "type": "TEXT"
                }
              ],
              "metric_input_params": {
                "params": {}
              }
            },
            "description": "This example shows how to specify a scenario with two variables, var_1 and var_2."
          },
          {
            "name": "Chat History Example",
            "value": {
              "id": "50c55d1d-4c37-4c83-afc1-9d895f286320",
              "label": "Scenario 2",
              "inputs": [
                {
                  "key": "$chat_history",
                  "type": "CHAT_HISTORY",
                  "chat_history": [
                    {
                      "role": "USER",
                      "text": "What's your favorite color?"
                    },
                    {
                      "role": "ASSISTANT",
                      "text": "AI's don't have a favorite color.... Yet."
                    }
                  ]
                }
              ],
              "metric_input_params": {
                "params": {}
              }
            },
            "description": "This example shows how to specify a chat history for the special $chat_history variable."
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "UpsertSandboxScenarioResponse",
          "schema": "SandboxScenario",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nUpserts a new scenario for a sandbox, keying off of the optionally provided scenario id.\n\nIf an id is provided and has a match, the scenario will be updated. If no id is provided or no match\nis found, a new scenario will be appended to the end.\n\nNote that a full replacement of the scenario is performed, so any fields not provided will be removed\nor overwritten with default values.",
      "authed": true,
      "method": "POST",
      "path": "/v1/sandboxes/{id}/scenarios",
      "examples": [
        {
          "name": "Basic Example",
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "label": {
                "value": {
                  "value": "Scenario 1",
                  "type": "string"
                },
                "type": "primitive"
              },
              "inputs": {
                "value": [
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "var_1",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": {
                        "value": "TEXT",
                        "type": "enum"
                      },
                      "value": {
                        "value": {
                          "value": "Hello, world!",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  },
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "var_2",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": {
                        "value": "TEXT",
                        "type": "enum"
                      },
                      "value": {
                        "value": {
                          "value": "Why hello, there!",
                          "type": "string"
                        },
                        "type": "primitive"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "key",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "TEXT",
                          "type": "enum"
                        },
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "chat_history": {
                          "value": [
                            {
                              "properties": {
                                "text": {
                                  "value": {
                                    "value": "text",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "role": {
                                  "value": "SYSTEM",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metric_input_params": {
                  "properties": {
                    "params": {
                      "properties": {
                        "target": {
                          "value": {
                            "value": "target",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        },
        {
          "name": "Chat History Example",
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "label": {
                "value": {
                  "value": "Scenario 2",
                  "type": "string"
                },
                "type": "primitive"
              },
              "inputs": {
                "value": [
                  {
                    "properties": {
                      "key": {
                        "value": {
                          "value": "$chat_history",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": {
                        "value": "CHAT_HISTORY",
                        "type": "enum"
                      },
                      "chat_history": {
                        "value": [
                          {
                            "properties": {
                              "text": {
                                "value": {
                                  "value": "What's your favorite color?",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "role": {
                                "value": "USER",
                                "type": "enum"
                              }
                            },
                            "type": "object"
                          },
                          {
                            "properties": {
                              "text": {
                                "value": {
                                  "value": "AI's don't have a favorite color.... Yet.",
                                  "type": "string"
                                },
                                "type": "primitive"
                              },
                              "role": {
                                "value": "ASSISTANT",
                                "type": "enum"
                              }
                            },
                            "type": "object"
                          }
                        ],
                        "type": "array"
                      }
                    },
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "inputs": {
                  "value": [
                    {
                      "properties": {
                        "key": {
                          "value": {
                            "value": "key",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": {
                          "value": "TEXT",
                          "type": "enum"
                        },
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "chat_history": {
                          "value": [
                            {
                              "properties": {
                                "text": {
                                  "value": {
                                    "value": "text",
                                    "type": "string"
                                  },
                                  "type": "primitive"
                                },
                                "role": {
                                  "value": "SYSTEM",
                                  "type": "enum"
                                }
                              },
                              "type": "object"
                            }
                          ],
                          "type": "array"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "metric_input_params": {
                  "properties": {
                    "params": {
                      "properties": {
                        "target": {
                          "value": {
                            "value": "target",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "delete_sandbox_scenario",
      "tags": [
        "sandboxes"
      ],
      "pathParameters": [
        {
          "description": "A UUID string identifying this sandbox.",
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "DeleteSandboxScenarioRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An id identifying the scenario that you'd like to delete",
          "name": "scenario_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteSandboxScenarioRequestScenarioId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteSandboxScenarioRequest",
      "errors": {},
      "server": [],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nDeletes an existing scenario from a sandbox, keying off of the provided scenario id.",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/sandboxes/{id}/scenarios/{scenario_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "scenario_id",
              "value": {
                "value": {
                  "value": "scenario_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "search",
      "tags": [
        "search"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SearchRequest",
      "request": {
        "schema": {
          "generatedName": "SearchRequest",
          "schema": "SearchRequestBodyRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "SearchResponse",
          "schema": "SearchResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "SearchErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "SearchErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "SearchErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [
        {
          "url": "https://predict.vellum.ai",
          "name": "Predict"
        }
      ],
      "description": "<strong style=\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\">Stable</strong>\n\nPerform a search against a document index.\n\n**Note:** Uses a base url of `https://predict.vellum.ai`.",
      "authed": true,
      "method": "POST",
      "path": "/v1/search",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "query": {
                "value": {
                  "value": "query",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "results": {
                  "value": [
                    {
                      "properties": {
                        "document": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "label": {
                              "value": {
                                "value": "label",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "text": {
                          "value": {
                            "value": "text",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "keywords": {
                          "value": [
                            {
                              "value": {
                                "value": "keywords",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          ],
                          "type": "array"
                        },
                        "score": {
                          "value": {
                            "value": 1.1,
                            "type": "double"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "submit_completion_actuals",
      "tags": [
        "submit-completion-actuals"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SubmitCompletionActualsRequest",
      "request": {
        "schema": {
          "generatedName": "SubmitCompletionActualsRequest",
          "schema": "SubmitCompletionActualsRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "SubmitCompletionActualsErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "SubmitCompletionActualsErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "SubmitCompletionActualsErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [
        {
          "url": "https://predict.vellum.ai",
          "name": "Predict"
        }
      ],
      "description": "<strong style=\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\">Stable</strong>\n\nUsed to submit feedback regarding the quality of previously generated completions.\n\n**Note:** Uses a base url of `https://predict.vellum.ai`.",
      "authed": true,
      "method": "POST",
      "path": "/v1/submit-completion-actuals",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "actuals": {
                "value": [
                  {
                    "properties": {},
                    "type": "object"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "upsert_test_suite_test_case",
      "tags": [
        "test-suites"
      ],
      "pathParameters": [
        {
          "description": "A UUID string identifying this test suite.",
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "UpsertTestSuiteTestCaseRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UpsertTestSuiteTestCaseRequest",
      "request": {
        "schema": {
          "generatedName": "UpsertTestSuiteTestCaseRequest",
          "schema": "TestSuiteTestCaseRequest",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "UpsertTestSuiteTestCaseResponse",
          "schema": "TestSuiteTestCase",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nUpserts a new test case for a test suite, keying off of the optionally provided test case id.\n\nIf an id is provided and has a match, the test case will be updated. If no id is provided or no match\nis found, a new test case will be appended to the end.\n\nNote that a full replacement of the test case is performed, so any fields not provided will be removed\nor overwritten with default values.",
      "authed": true,
      "method": "POST",
      "path": "/v1/test-suites/{id}/test-cases",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "input_values": {
                "value": [
                  {
                    "key": {
                      "value": "key",
                      "type": "string"
                    },
                    "value": {
                      "value": {
                        "value": {
                          "value": "value",
                          "type": "string"
                        },
                        "type": "primitive"
                      },
                      "type": "unknown"
                    }
                  }
                ],
                "type": "map"
              },
              "evaluation_params": {
                "properties": {},
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "test_case_id": {
                  "value": {
                    "value": "test_case_id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "label": {
                  "value": {
                    "value": "label",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "input_values": {
                  "value": [
                    {
                      "key": {
                        "value": "key",
                        "type": "string"
                      },
                      "value": {
                        "value": {
                          "value": {
                            "value": "value",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "type": "unknown"
                      }
                    }
                  ],
                  "type": "map"
                },
                "evaluation_params": {
                  "properties": {
                    "target": {
                      "value": {
                        "value": "target",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "delete_test_suite_test_case",
      "tags": [
        "test-suites"
      ],
      "pathParameters": [
        {
          "description": "A UUID string identifying this test suite.",
          "name": "id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "DeleteTestSuiteTestCaseRequestId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "An id identifying the test case that you'd like to delete",
          "name": "test_case_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "DeleteTestSuiteTestCaseRequestTestCaseId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DeleteTestSuiteTestCaseRequest",
      "errors": {},
      "server": [],
      "description": "<strong style=\"background-color:#ffc107; color:white; padding:4px; border-radius:4px\">Unstable</strong>\n\nDeletes an existing test case for a test suite, keying off of the test case id.",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/test-suites/{id}/test-cases/{test_case_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "id",
              "value": {
                "value": {
                  "value": "id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "test_case_id",
              "value": {
                "value": {
                  "value": "test_case_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "documents_upload",
      "tags": [
        "documents"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "DocumentsUploadRequest",
      "request": {
        "name": "UploadDocumentBodyRequest",
        "properties": [
          {
            "key": "add_to_index_names",
            "schema": {
              "value": {
                "generatedName": "documentsUploadRequestAddToIndexNames",
                "value": {
                  "generatedName": "DocumentsUploadRequestAddToIndexNames",
                  "value": {
                    "generatedName": "DocumentsUploadRequestAddToIndexNames",
                    "value": {
                      "generatedName": "DocumentsUploadRequestAddToIndexNamesItem",
                      "schema": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "groupName": [],
                      "type": "primitive"
                    },
                    "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                    "groupName": [],
                    "type": "array"
                  },
                  "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "type": "json"
            }
          },
          {
            "key": "external_id",
            "schema": {
              "value": {
                "generatedName": "documentsUploadRequestExternalId",
                "value": {
                  "generatedName": "DocumentsUploadRequestExternalId",
                  "value": {
                    "generatedName": "DocumentsUploadRequestExternalId",
                    "schema": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "type": "json"
            }
          },
          {
            "key": "label",
            "schema": {
              "value": {
                "generatedName": "DocumentsUploadRequestLabel",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "description": "A human-friendly name for this document. Typically the filename.",
                "groupName": [],
                "type": "primitive"
              },
              "type": "json"
            }
          },
          {
            "key": "contents",
            "schema": {
              "isOptional": false,
              "isArray": false,
              "type": "file"
            },
            "description": "The file contents of the document."
          },
          {
            "key": "keywords",
            "schema": {
              "value": {
                "generatedName": "documentsUploadRequestKeywords",
                "value": {
                  "generatedName": "DocumentsUploadRequestKeywords",
                  "value": {
                    "generatedName": "DocumentsUploadRequestKeywords",
                    "value": {
                      "generatedName": "DocumentsUploadRequestKeywordsItem",
                      "schema": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "groupName": [],
                      "type": "primitive"
                    },
                    "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                    "groupName": [],
                    "type": "array"
                  },
                  "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                  "groupName": [],
                  "type": "nullable"
                },
                "groupName": [],
                "type": "optional"
              },
              "type": "json"
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "multipart"
      },
      "response": {
        "description": "",
        "schema": {
          "generatedName": "DocumentsUploadResponse",
          "schema": "UploadDocumentResponse",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "generatedName": "BadRequestErrorBody",
            "schema": "UploadDocumentErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "schema": "UploadDocumentErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        },
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "generatedName": "InternalServerErrorBody",
            "schema": "UploadDocumentErrorResponse",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "description": "",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "detail": {
                    "value": {
                      "value": "detail",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [
        {
          "url": "https://documents.vellum.ai",
          "name": "Documents"
        }
      ],
      "description": "<strong style=\"background-color:#4caf50; color:white; padding:4px; border-radius:4px\">Stable</strong>\n\nUpload a document to be indexed and used for search.\n\n**Note:** Uses a base url of `https://documents.vellum.ai`.",
      "authed": true,
      "method": "POST",
      "path": "/v1/upload-document",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "label": {
                "value": {
                  "value": "label",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "document_id": {
                  "value": {
                    "value": "document_id",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "BlockTypeEnum": {
        "description": "* `CHAT_MESSAGE` - CHAT_MESSAGE\n* `CHAT_HISTORY` - CHAT_HISTORY\n* `JINJA` - JINJA\n* `FUNCTION_DEFINITION` - FUNCTION_DEFINITION",
        "generatedName": "BlockTypeEnum",
        "values": [
          {
            "generatedName": "CHAT_MESSAGE",
            "value": "CHAT_MESSAGE",
            "casing": {}
          },
          {
            "generatedName": "CHAT_HISTORY",
            "value": "CHAT_HISTORY",
            "casing": {}
          },
          {
            "generatedName": "JINJA",
            "value": "JINJA",
            "casing": {}
          },
          {
            "generatedName": "FUNCTION_DEFINITION",
            "value": "FUNCTION_DEFINITION",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ChatMessage": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "chatMessageText",
            "key": "text",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ChatMessageText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageRole",
            "key": "role",
            "schema": {
              "generatedName": "ChatMessageRole",
              "schema": "ChatMessageRole",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ChatMessage",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChatMessageRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "chatMessageRequestText",
            "key": "text",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ChatMessageRequestText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "chatMessageRequestRole",
            "key": "role",
            "schema": {
              "generatedName": "ChatMessageRequestRole",
              "schema": "ChatMessageRole",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ChatMessageRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ChatMessageRole": {
        "description": "* `SYSTEM` - System\n* `ASSISTANT` - Assistant\n* `USER` - User\n* `FUNCTION` - Function",
        "generatedName": "ChatMessageRole",
        "values": [
          {
            "generatedName": "SYSTEM",
            "value": "SYSTEM",
            "casing": {}
          },
          {
            "generatedName": "ASSISTANT",
            "value": "ASSISTANT",
            "casing": {}
          },
          {
            "generatedName": "USER",
            "value": "USER",
            "casing": {}
          },
          {
            "generatedName": "FUNCTION",
            "value": "FUNCTION",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ConditionalNodeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionalNodeResultData",
            "key": "data",
            "schema": {
              "generatedName": "ConditionalNodeResultData",
              "schema": "ConditionalNodeResultData",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionalNodeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ConditionalNodeResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "conditionalNodeResultDataSourceHandleId",
            "key": "source_handle_id",
            "schema": {
              "generatedName": "conditionalNodeResultDataSourceHandleId",
              "value": {
                "generatedName": "ConditionalNodeResultDataSourceHandleId",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "ConditionalNodeResultDataSourceHandleId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ConditionalNodeResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ContentType": {
        "description": "* `STRING` - STRING\n* `JSON` - JSON",
        "generatedName": "ContentType",
        "values": [
          {
            "generatedName": "STRING",
            "value": "STRING",
            "casing": {}
          },
          {
            "generatedName": "JSON",
            "value": "JSON",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "DeploymentNodeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deploymentNodeResultData",
            "key": "data",
            "schema": {
              "generatedName": "DeploymentNodeResultData",
              "schema": "DeploymentNodeResultData",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DeploymentNodeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DeploymentNodeResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deploymentNodeResultDataOutputId",
            "key": "output_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "DeploymentNodeResultDataOutputId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deploymentNodeResultDataText",
            "key": "text",
            "schema": {
              "generatedName": "deploymentNodeResultDataText",
              "value": {
                "generatedName": "DeploymentNodeResultDataText",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DeploymentNodeResultDataText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deploymentNodeResultDataDelta",
            "key": "delta",
            "schema": {
              "generatedName": "deploymentNodeResultDataDelta",
              "value": {
                "generatedName": "DeploymentNodeResultDataDelta",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "DeploymentNodeResultDataDelta",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DeploymentNodeResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DeploymentRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "deploymentReadId",
            "key": "id",
            "schema": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "DeploymentReadId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadCreated",
            "key": "created",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "DeploymentReadCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadLabel",
            "key": "label",
            "schema": {
              "description": "A human-readable label for the deployment",
              "schema": {
                "maxLength": 150,
                "type": "string"
              },
              "generatedName": "DeploymentReadLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadName",
            "key": "name",
            "schema": {
              "description": "A name that uniquely identifies this deployment within its workspace",
              "schema": {
                "maxLength": 150,
                "type": "string"
              },
              "generatedName": "DeploymentReadName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadStatus",
            "key": "status",
            "schema": {
              "generatedName": "deploymentReadStatus",
              "value": {
                "description": "The current status of the deployment\n\n* `ACTIVE` - Active\n* `INACTIVE` - Inactive\n* `ARCHIVED` - Archived",
                "generatedName": "DeploymentReadStatus",
                "schema": "DeploymentReadStatusEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "deploymentReadEnvironment",
              "value": {
                "description": "The environment this deployment is used in\n\n* `DEVELOPMENT` - Development\n* `STAGING` - Staging\n* `PRODUCTION` - Production",
                "generatedName": "DeploymentReadEnvironment",
                "schema": "EnvironmentEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadModelType",
            "key": "model_type",
            "schema": {
              "description": "The type of model this deployment serves\n\n* `GENERATE` - Generate\n* `CLASSIFY` - Classify",
              "generatedName": "DeploymentReadModelType",
              "schema": "ModelTypeEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadActiveModelVersionIds",
            "key": "active_model_version_ids",
            "schema": {
              "value": {
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "DeploymentReadActiveModelVersionIdsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "DeploymentReadActiveModelVersionIds",
              "groupName": [],
              "type": "array"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "deploymentReadLastDeployedOn",
            "key": "last_deployed_on",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "DeploymentReadLastDeployedOn",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DeploymentRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DeploymentReadStatusEnum": {
        "description": "* `ACTIVE` - Active\n* `INACTIVE` - Inactive\n* `ARCHIVED` - Archived",
        "generatedName": "DeploymentReadStatusEnum",
        "values": [
          {
            "generatedName": "ACTIVE",
            "value": "ACTIVE",
            "casing": {}
          },
          {
            "generatedName": "INACTIVE",
            "value": "INACTIVE",
            "casing": {}
          },
          {
            "generatedName": "ARCHIVED",
            "value": "ARCHIVED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "Document": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "documentId",
            "key": "id",
            "schema": {
              "description": "The ID of the document.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "DocumentId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "documentLabel",
            "key": "label",
            "schema": {
              "description": "The human-readable name for the document.",
              "schema": {
                "maxLength": 1000,
                "type": "string"
              },
              "generatedName": "DocumentLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "documentExternalId",
              "value": {
                "generatedName": "DocumentExternalId",
                "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                "value": {
                  "description": "The unique ID of the document as represented in an external system and specified when it was originally uploaded.",
                  "schema": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "generatedName": "DocumentExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "Document",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DocumentDocumentToDocumentIndex": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "documentDocumentToDocumentIndexId",
            "key": "id",
            "schema": {
              "description": "Vellum-generated ID that uniquely identifies this link.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "DocumentDocumentToDocumentIndexId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "documentDocumentToDocumentIndexDocumentIndexId",
            "key": "document_index_id",
            "schema": {
              "description": "Vellum-generated ID that uniquely identifies the index this document is included in.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "DocumentDocumentToDocumentIndexDocumentIndexId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "documentDocumentToDocumentIndexIndexingState",
            "key": "indexing_state",
            "schema": {
              "generatedName": "documentDocumentToDocumentIndexIndexingState",
              "value": {
                "description": "An enum value representing where this document is along its indexing lifecycle for this index.\n\n* `AWAITING_PROCESSING` - Awaiting Processing\n* `QUEUED` - Queued\n* `INDEXING` - Indexing\n* `INDEXED` - Indexed\n* `FAILED` - Failed",
                "generatedName": "DocumentDocumentToDocumentIndexIndexingState",
                "schema": "IndexingStateEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DocumentDocumentToDocumentIndex",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DocumentIndexCreateRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "documentIndexCreateRequestLabel",
            "key": "label",
            "schema": {
              "description": "A human-readable label for the document index",
              "schema": {
                "minLength": 1,
                "maxLength": 150,
                "type": "string"
              },
              "generatedName": "DocumentIndexCreateRequestLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexCreateRequestName",
            "key": "name",
            "schema": {
              "description": "A name that uniquely identifies this index within its workspace",
              "schema": {
                "minLength": 1,
                "maxLength": 150,
                "type": "string"
              },
              "generatedName": "DocumentIndexCreateRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexCreateRequestStatus",
            "key": "status",
            "schema": {
              "generatedName": "documentIndexCreateRequestStatus",
              "value": {
                "description": "The current status of the document index\n\n* `ACTIVE` - Active\n* `ARCHIVED` - Archived",
                "generatedName": "DocumentIndexCreateRequestStatus",
                "schema": "DocumentIndexStatus",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexCreateRequestEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "documentIndexCreateRequestEnvironment",
              "value": {
                "description": "The environment this document index is used in\n\n* `DEVELOPMENT` - Development\n* `STAGING` - Staging\n* `PRODUCTION` - Production",
                "generatedName": "DocumentIndexCreateRequestEnvironment",
                "schema": "EnvironmentEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexCreateRequestIndexingConfig",
            "key": "indexing_config",
            "schema": {
              "description": "Configuration representing how documents should be indexed",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "DocumentIndexCreateRequestIndexingConfigKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "DocumentIndexCreateRequestIndexingConfigValue",
                "type": "unknown"
              },
              "generatedName": "DocumentIndexCreateRequestIndexingConfig",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexCreateRequestCopyDocumentsFromIndexId",
            "key": "copy_documents_from_index_id",
            "schema": {
              "generatedName": "documentIndexCreateRequestCopyDocumentsFromIndexId",
              "value": {
                "description": "Optionally specify the id of a document index from which you'd like to copy and re-index its documents into this newly created index",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "DocumentIndexCreateRequestCopyDocumentsFromIndexId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DocumentIndexCreateRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DocumentIndexRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "documentIndexReadId",
            "key": "id",
            "schema": {
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "DocumentIndexReadId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "documentIndexReadCreated",
            "key": "created",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "DocumentIndexReadCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "documentIndexReadLabel",
            "key": "label",
            "schema": {
              "description": "A human-readable label for the document index",
              "schema": {
                "maxLength": 150,
                "type": "string"
              },
              "generatedName": "DocumentIndexReadLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexReadName",
            "key": "name",
            "schema": {
              "description": "A name that uniquely identifies this index within its workspace",
              "schema": {
                "maxLength": 150,
                "type": "string"
              },
              "generatedName": "DocumentIndexReadName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexReadStatus",
            "key": "status",
            "schema": {
              "generatedName": "documentIndexReadStatus",
              "value": {
                "description": "The current status of the document index\n\n* `ACTIVE` - Active\n* `ARCHIVED` - Archived",
                "generatedName": "DocumentIndexReadStatus",
                "schema": "DocumentIndexStatus",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexReadEnvironment",
            "key": "environment",
            "schema": {
              "generatedName": "documentIndexReadEnvironment",
              "value": {
                "description": "The environment this document index is used in\n\n* `DEVELOPMENT` - Development\n* `STAGING` - Staging\n* `PRODUCTION` - Production",
                "generatedName": "DocumentIndexReadEnvironment",
                "schema": "EnvironmentEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "documentIndexReadIndexingConfig",
            "key": "indexing_config",
            "schema": {
              "description": "Configuration representing how documents should be indexed",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "DocumentIndexReadIndexingConfigKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "DocumentIndexReadIndexingConfigValue",
                "type": "unknown"
              },
              "generatedName": "DocumentIndexReadIndexingConfig",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "DocumentIndexRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "DocumentIndexStatus": {
        "description": "* `ACTIVE` - Active\n* `ARCHIVED` - Archived",
        "generatedName": "DocumentIndexStatus",
        "values": [
          {
            "generatedName": "ACTIVE",
            "value": "ACTIVE",
            "casing": {}
          },
          {
            "generatedName": "ARCHIVED",
            "value": "ARCHIVED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EnrichedNormalizedCompletion": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "enrichedNormalizedCompletionId",
            "key": "id",
            "schema": {
              "description": "The Vellum-generated ID of the completion.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "EnrichedNormalizedCompletionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "enrichedNormalizedCompletionExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "enrichedNormalizedCompletionExternalId",
              "value": {
                "generatedName": "EnrichedNormalizedCompletionExternalId",
                "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                "value": {
                  "description": "The external ID that was originally provided along with the generation request, which uniquely identifies this generation in an external system.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EnrichedNormalizedCompletionExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "enrichedNormalizedCompletionText",
            "key": "text",
            "schema": {
              "description": "The text generated by the LLM.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EnrichedNormalizedCompletionText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "enrichedNormalizedCompletionFinishReason",
            "key": "finish_reason",
            "schema": {
              "generatedName": "EnrichedNormalizedCompletionFinishReason",
              "description": "The reason the generation finished.\n\n* `LENGTH` - LENGTH\n* `STOP` - STOP\n* `UNKNOWN` - UNKNOWN",
              "value": {
                "generatedName": "EnrichedNormalizedCompletionFinishReason",
                "schema": "FinishReasonEnum",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "enrichedNormalizedCompletionLogprobs",
            "key": "logprobs",
            "schema": {
              "generatedName": "enrichedNormalizedCompletionLogprobs",
              "value": {
                "generatedName": "EnrichedNormalizedCompletionLogprobs",
                "description": "The logprobs of the completion. Only present if specified in the original request options.",
                "value": {
                  "generatedName": "EnrichedNormalizedCompletionLogprobs",
                  "schema": "NormalizedLogProbs",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "enrichedNormalizedCompletionModelVersionId",
            "key": "model_version_id",
            "schema": {
              "description": "The ID of the model version used to generate this completion.",
              "schema": {
                "type": "string"
              },
              "generatedName": "EnrichedNormalizedCompletionModelVersionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "enrichedNormalizedCompletionType",
            "key": "type",
            "schema": {
              "generatedName": "enrichedNormalizedCompletionType",
              "value": {
                "generatedName": "EnrichedNormalizedCompletionType",
                "schema": "ContentType",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EnrichedNormalizedCompletion",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EnvironmentEnum": {
        "description": "* `DEVELOPMENT` - Development\n* `STAGING` - Staging\n* `PRODUCTION` - Production",
        "generatedName": "EnvironmentEnum",
        "values": [
          {
            "generatedName": "DEVELOPMENT",
            "value": "DEVELOPMENT",
            "casing": {}
          },
          {
            "generatedName": "STAGING",
            "value": "STAGING",
            "casing": {}
          },
          {
            "generatedName": "PRODUCTION",
            "value": "PRODUCTION",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "EvaluationParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluationParamsTarget",
            "key": "target",
            "schema": {
              "generatedName": "evaluationParamsTarget",
              "value": {
                "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluationParamsTarget",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluationParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "EvaluationParamsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "evaluationParamsRequestTarget",
            "key": "target",
            "schema": {
              "generatedName": "evaluationParamsRequestTarget",
              "value": {
                "description": "The target value to compare the LLM output against. Typically what you expect or desire the LLM output to be.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "EvaluationParamsRequestTarget",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "EvaluationParamsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ExecuteWorkflowStreamRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentId",
            "key": "workflow_deployment_id",
            "schema": {
              "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentId",
              "value": {
                "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentId",
                "description": "The ID of the Workflow Deployment. Must provide either this or workflow_deployment_name.",
                "value": {
                  "description": "The ID of the Workflow Deployment. Must provide either this or workflow_deployment_name.",
                  "schema": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentName",
            "key": "workflow_deployment_name",
            "schema": {
              "generatedName": "executeWorkflowStreamRequestWorkflowDeploymentName",
              "value": {
                "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentName",
                "description": "The name of the Workflow Deployment. Must provide either this or workflow_deployment_id.",
                "value": {
                  "description": "The name of the Workflow Deployment. Must provide either this or workflow_deployment_id.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "ExecuteWorkflowStreamRequestWorkflowDeploymentName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executeWorkflowStreamRequestReleaseTag",
            "key": "release_tag",
            "schema": {
              "generatedName": "executeWorkflowStreamRequestReleaseTag",
              "value": {
                "generatedName": "ExecuteWorkflowStreamRequestReleaseTag",
                "description": "Optionally specify a release tag if you want to pin to a specific release of the Workflow Deployment",
                "value": {
                  "description": "Optionally specify a release tag if you want to pin to a specific release of the Workflow Deployment",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "ExecuteWorkflowStreamRequestReleaseTag",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executeWorkflowStreamRequestInputs",
            "key": "inputs",
            "schema": {
              "value": {
                "generatedName": "ExecuteWorkflowStreamRequestInputsItem",
                "schema": "WorkflowRequestInputRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ExecuteWorkflowStreamRequestInputs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "executeWorkflowStreamRequestExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "executeWorkflowStreamRequestExternalId",
              "value": {
                "generatedName": "ExecuteWorkflowStreamRequestExternalId",
                "description": "Optionally include a unique identifier for tracking purposes.",
                "value": {
                  "description": "Optionally include a unique identifier for tracking purposes.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "ExecuteWorkflowStreamRequestExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ExecuteWorkflowStreamRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "FinishReasonEnum": {
        "description": "* `LENGTH` - LENGTH\n* `STOP` - STOP\n* `UNKNOWN` - UNKNOWN",
        "generatedName": "FinishReasonEnum",
        "values": [
          {
            "generatedName": "LENGTH",
            "value": "LENGTH",
            "casing": {}
          },
          {
            "generatedName": "STOP",
            "value": "STOP",
            "casing": {}
          },
          {
            "generatedName": "UNKNOWN",
            "value": "UNKNOWN",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "GenerateBodyRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateBodyRequestDeploymentId",
            "key": "deployment_id",
            "schema": {
              "generatedName": "generateBodyRequestDeploymentId",
              "value": {
                "generatedName": "GenerateBodyRequestDeploymentId",
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "value": {
                  "description": "The ID of the deployment. Must provide either this or deployment_name.",
                  "schema": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "generatedName": "GenerateBodyRequestDeploymentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateBodyRequestDeploymentName",
            "key": "deployment_name",
            "schema": {
              "generatedName": "generateBodyRequestDeploymentName",
              "value": {
                "generatedName": "GenerateBodyRequestDeploymentName",
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "value": {
                  "description": "The name of the deployment. Must provide either this or deployment_id.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "GenerateBodyRequestDeploymentName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateBodyRequestRequests",
            "key": "requests",
            "schema": {
              "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
              "value": {
                "generatedName": "GenerateBodyRequestRequestsItem",
                "schema": "GenerateRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GenerateBodyRequestRequests",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateBodyRequestOptions",
            "key": "options",
            "schema": {
              "generatedName": "generateBodyRequestOptions",
              "value": {
                "generatedName": "GenerateBodyRequestOptions",
                "description": "Additional configuration that can be used to control what's included in the response.",
                "value": {
                  "generatedName": "GenerateBodyRequestOptions",
                  "schema": "GenerateOptionsRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateBodyRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateErrorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateErrorResponseDetail",
            "key": "detail",
            "schema": {
              "description": "Details about why the request failed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GenerateErrorResponseDetail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateErrorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateOptionsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateOptionsRequestLogprobs",
            "key": "logprobs",
            "schema": {
              "generatedName": "generateOptionsRequestLogprobs",
              "value": {
                "description": "Which logprobs to include, if any. Defaults to NONE.\n\n* `ALL` - ALL\n* `NONE` - NONE",
                "generatedName": "GenerateOptionsRequestLogprobs",
                "schema": "LogprobsEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateOptionsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateRequestInputValues",
            "key": "input_values",
            "schema": {
              "description": "Key/value pairs for each template variable defined in the deployment's prompt.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "GenerateRequestInputValuesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "GenerateRequestInputValuesValue",
                "type": "unknown"
              },
              "generatedName": "GenerateRequestInputValues",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateRequestChatHistory",
            "key": "chat_history",
            "schema": {
              "generatedName": "generateRequestChatHistory",
              "value": {
                "description": "Optionally provide a list of chat messages that'll be used in place of the special {$chat_history} variable, if included in the prompt.",
                "value": {
                  "generatedName": "GenerateRequestChatHistoryItem",
                  "schema": "ChatMessageRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "GenerateRequestChatHistory",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateRequestExternalIds",
            "key": "external_ids",
            "schema": {
              "generatedName": "generateRequestExternalIds",
              "value": {
                "generatedName": "GenerateRequestExternalIds",
                "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                "value": {
                  "description": "Optionally include a unique identifier for each generation, as represented outside of Vellum. Note that this should generally be a list of length one.",
                  "value": {
                    "schema": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "generatedName": "GenerateRequestExternalIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "GenerateRequestExternalIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateResponseResults",
            "key": "results",
            "schema": {
              "description": "The results of each generation request.",
              "value": {
                "generatedName": "GenerateResponseResultsItem",
                "schema": "GenerateResult",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GenerateResponseResults",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateResultData",
            "key": "data",
            "schema": {
              "generatedName": "generateResultData",
              "value": {
                "description": "An object containing the resulting generation. This key will be absent if the LLM provider experienced an error.",
                "generatedName": "GenerateResultData",
                "schema": "GenerateResultData",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateResultError",
            "key": "error",
            "schema": {
              "generatedName": "generateResultError",
              "value": {
                "description": "An object containing details about the error that occurred. This key will be absent if the LLM provider did not experience an error.",
                "generatedName": "GenerateResultError",
                "schema": "GenerateResultError",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateResultDataCompletions",
            "key": "completions",
            "schema": {
              "description": "The generated completions. This will generally be a list of length one.",
              "value": {
                "generatedName": "GenerateResultDataCompletionsItem",
                "schema": "EnrichedNormalizedCompletion",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GenerateResultDataCompletions",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateResultError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateResultErrorMessage",
            "key": "message",
            "schema": {
              "description": "The error message returned by the LLM provider.",
              "schema": {
                "type": "string"
              },
              "generatedName": "GenerateResultErrorMessage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateResultError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateStreamBodyRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateStreamBodyRequestDeploymentId",
            "key": "deployment_id",
            "schema": {
              "generatedName": "generateStreamBodyRequestDeploymentId",
              "value": {
                "generatedName": "GenerateStreamBodyRequestDeploymentId",
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "value": {
                  "description": "The ID of the deployment. Must provide either this or deployment_name.",
                  "schema": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "generatedName": "GenerateStreamBodyRequestDeploymentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateStreamBodyRequestDeploymentName",
            "key": "deployment_name",
            "schema": {
              "generatedName": "generateStreamBodyRequestDeploymentName",
              "value": {
                "generatedName": "GenerateStreamBodyRequestDeploymentName",
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "value": {
                  "description": "The name of the deployment. Must provide either this or deployment_id.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "GenerateStreamBodyRequestDeploymentName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateStreamBodyRequestRequests",
            "key": "requests",
            "schema": {
              "description": "The generation requests to make. Supplying multiple will perform a bulk request to the LLM provided when possible.",
              "value": {
                "generatedName": "GenerateStreamBodyRequestRequestsItem",
                "schema": "GenerateRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "GenerateStreamBodyRequestRequests",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateStreamBodyRequestOptions",
            "key": "options",
            "schema": {
              "generatedName": "generateStreamBodyRequestOptions",
              "value": {
                "generatedName": "GenerateStreamBodyRequestOptions",
                "description": "Additional configuration that can be used to control what's included in the response.",
                "value": {
                  "generatedName": "GenerateStreamBodyRequestOptions",
                  "schema": "GenerateOptionsRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateStreamBodyRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateStreamResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateStreamResponseDelta",
            "key": "delta",
            "schema": {
              "generatedName": "GenerateStreamResponseDelta",
              "schema": "GenerateStreamResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateStreamResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateStreamResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateStreamResultRequestIndex",
            "key": "request_index",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GenerateStreamResultRequestIndex",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateStreamResultData",
            "key": "data",
            "schema": {
              "generatedName": "generateStreamResultData",
              "value": {
                "generatedName": "GenerateStreamResultData",
                "schema": "GenerateStreamResultData",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "generateStreamResultError",
            "key": "error",
            "schema": {
              "generatedName": "generateStreamResultError",
              "value": {
                "generatedName": "GenerateStreamResultError",
                "schema": "GenerateResultError",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateStreamResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "GenerateStreamResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "generateStreamResultDataCompletionIndex",
            "key": "completion_index",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "GenerateStreamResultDataCompletionIndex",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "generateStreamResultDataCompletion",
            "key": "completion",
            "schema": {
              "generatedName": "GenerateStreamResultDataCompletion",
              "schema": "EnrichedNormalizedCompletion",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "GenerateStreamResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "IndexingStateEnum": {
        "description": "* `AWAITING_PROCESSING` - Awaiting Processing\n* `QUEUED` - Queued\n* `INDEXING` - Indexing\n* `INDEXED` - Indexed\n* `FAILED` - Failed",
        "generatedName": "IndexingStateEnum",
        "values": [
          {
            "generatedName": "AWAITING_PROCESSING",
            "value": "AWAITING_PROCESSING",
            "casing": {}
          },
          {
            "generatedName": "QUEUED",
            "value": "QUEUED",
            "casing": {}
          },
          {
            "generatedName": "INDEXING",
            "value": "INDEXING",
            "casing": {}
          },
          {
            "generatedName": "INDEXED",
            "value": "INDEXED",
            "casing": {}
          },
          {
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "LogprobsEnum": {
        "description": "* `ALL` - ALL\n* `NONE` - NONE",
        "generatedName": "LogprobsEnum",
        "values": [
          {
            "generatedName": "ALL",
            "value": "ALL",
            "casing": {}
          },
          {
            "generatedName": "NONE",
            "value": "NONE",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ModelTypeEnum": {
        "description": "* `GENERATE` - Generate\n* `CLASSIFY` - Classify",
        "generatedName": "ModelTypeEnum",
        "values": [
          {
            "generatedName": "GENERATE",
            "value": "GENERATE",
            "casing": {}
          },
          {
            "generatedName": "CLASSIFY",
            "value": "CLASSIFY",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ModelVersionBuildConfig": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionBuildConfigBaseModel",
            "key": "base_model",
            "schema": {
              "description": "The name of the base model used to create this model version, as identified by the LLM provider.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ModelVersionBuildConfigBaseModel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionBuildConfigSandboxSnapshot",
            "key": "sandbox_snapshot",
            "schema": {
              "generatedName": "modelVersionBuildConfigSandboxSnapshot",
              "value": {
                "generatedName": "ModelVersionBuildConfigSandboxSnapshot",
                "description": "Information about the sandbox snapshot that was used to create this model version, if applicable.",
                "value": {
                  "generatedName": "ModelVersionBuildConfigSandboxSnapshot",
                  "schema": "ModelVersionSandboxSnapshot",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionBuildConfig",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelVersionCompilePromptRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionCompilePromptRequestRequestInputValues",
            "key": "input_values",
            "schema": {
              "description": "Key/value pairs for each variable found within the model version's prompt template.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelVersionCompilePromptRequestRequestInputValuesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "ModelVersionCompilePromptRequestRequestInputValuesValue",
                "type": "unknown"
              },
              "generatedName": "ModelVersionCompilePromptRequestRequestInputValues",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionCompilePromptRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelVersionCompilePromptResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionCompilePromptResponsePrompt",
            "key": "prompt",
            "schema": {
              "description": "Information about the compiled prompt.",
              "generatedName": "ModelVersionCompilePromptResponsePrompt",
              "schema": "ModelVersionCompiledPrompt",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionCompilePromptResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelVersionCompiledPrompt": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionCompiledPromptText",
            "key": "text",
            "schema": {
              "description": "The fully compiled prompt in normalized ChatML syntax after all variable substitutions and templating functions are applied.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ModelVersionCompiledPromptText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionCompiledPromptNumTokens",
            "key": "num_tokens",
            "schema": {
              "description": "The approximate number of tokens used by the compiled prompt.",
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "ModelVersionCompiledPromptNumTokens",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionCompiledPrompt",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelVersionExecConfig": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParameters",
            "key": "parameters",
            "schema": {
              "description": "The generation parameters that are passed to the LLM provider at runtime.",
              "generatedName": "ModelVersionExecConfigParameters",
              "schema": "ModelVersionExecConfigParameters",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigInputVariables",
            "key": "input_variables",
            "schema": {
              "description": "Names of the input variables specified in the prompt template.",
              "value": {
                "generatedName": "ModelVersionExecConfigInputVariablesItem",
                "schema": "PromptTemplateInputVariable",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "ModelVersionExecConfigInputVariables",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigPromptTemplate",
            "key": "prompt_template",
            "schema": {
              "generatedName": "modelVersionExecConfigPromptTemplate",
              "value": {
                "description": "The template used to generate prompts for this model version.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelVersionExecConfigPromptTemplate",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigPromptBlockData",
            "key": "prompt_block_data",
            "schema": {
              "generatedName": "modelVersionExecConfigPromptBlockData",
              "value": {
                "generatedName": "ModelVersionExecConfigPromptBlockData",
                "schema": "PromptTemplateBlockData",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigPromptSyntaxVersion",
            "key": "prompt_syntax_version",
            "schema": {
              "generatedName": "modelVersionExecConfigPromptSyntaxVersion",
              "value": {
                "schema": {
                  "type": "int"
                },
                "generatedName": "ModelVersionExecConfigPromptSyntaxVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionExecConfig",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelVersionExecConfigParameters": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersTemperature",
            "key": "temperature",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "ModelVersionExecConfigParametersTemperature",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersMaxTokens",
            "key": "max_tokens",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "ModelVersionExecConfigParametersMaxTokens",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersTopP",
            "key": "top_p",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "ModelVersionExecConfigParametersTopP",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersFrequencyPenalty",
            "key": "frequency_penalty",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "ModelVersionExecConfigParametersFrequencyPenalty",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersPresencePenalty",
            "key": "presence_penalty",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "ModelVersionExecConfigParametersPresencePenalty",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersLogitBias",
            "key": "logit_bias",
            "schema": {
              "generatedName": "modelVersionExecConfigParametersLogitBias",
              "value": {
                "generatedName": "ModelVersionExecConfigParametersLogitBias",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ModelVersionExecConfigParametersLogitBiasKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "ModelVersionExecConfigParametersLogitBiasValue",
                    "value": {
                      "schema": {
                        "type": "double"
                      },
                      "generatedName": "ModelVersionExecConfigParametersLogitBiasValue",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "inline": true,
                    "type": "nullable"
                  },
                  "generatedName": "ModelVersionExecConfigParametersLogitBias",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersStop",
            "key": "stop",
            "schema": {
              "generatedName": "modelVersionExecConfigParametersStop",
              "value": {
                "generatedName": "ModelVersionExecConfigParametersStop",
                "value": {
                  "value": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "ModelVersionExecConfigParametersStopItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "ModelVersionExecConfigParametersStop",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionExecConfigParametersTopK",
            "key": "top_k",
            "schema": {
              "generatedName": "modelVersionExecConfigParametersTopK",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "ModelVersionExecConfigParametersTopK",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionExecConfigParameters",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelVersionRead": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionReadId",
            "key": "id",
            "schema": {
              "description": "Vellum-generated ID that uniquely identifies this model version.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ModelVersionReadId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadCreated",
            "key": "created",
            "schema": {
              "description": "Timestamp of when this model version was created.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ModelVersionReadCreated",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadLabel",
            "key": "label",
            "schema": {
              "description": "Human-friendly name for this model version.",
              "schema": {
                "maxLength": 150,
                "type": "string"
              },
              "generatedName": "ModelVersionReadLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadModelType",
            "key": "model_type",
            "schema": {
              "description": "The type of task this model is used for.\n\n* `GENERATE` - Generate\n* `CLASSIFY` - Classify",
              "generatedName": "ModelVersionReadModelType",
              "schema": "ModelTypeEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadProvider",
            "key": "provider",
            "schema": {
              "description": "Which LLM provider this model version is associated with.\n\n* `ANTHROPIC` - Anthropic\n* `COHERE` - Cohere\n* `GOOGLE` - Google\n* `HOSTED` - Hosted\n* `MOSAICML` - MosaicML\n* `MYSTIC` - Mystic\n* `OPENAI` - OpenAI\n* `PYQ` - Pyq",
              "generatedName": "ModelVersionReadProvider",
              "schema": "ProviderEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadExternalId",
            "key": "external_id",
            "schema": {
              "description": "The unique id of this model version as it exists in the above provider's system.",
              "schema": {
                "maxLength": 250,
                "type": "string"
              },
              "generatedName": "ModelVersionReadExternalId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadBuildConfig",
            "key": "build_config",
            "schema": {
              "description": "Configuration used to build this model version.",
              "generatedName": "ModelVersionReadBuildConfig",
              "schema": "ModelVersionBuildConfig",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadExecConfig",
            "key": "exec_config",
            "schema": {
              "description": "Configuration used to execute this model version.",
              "generatedName": "ModelVersionReadExecConfig",
              "schema": "ModelVersionExecConfig",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionReadStatus",
            "key": "status",
            "schema": {
              "generatedName": "modelVersionReadStatus",
              "value": {
                "generatedName": "ModelVersionReadStatus",
                "schema": "ModelVersionReadStatusEnum",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionRead",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ModelVersionReadStatusEnum": {
        "description": "* `CREATING` - Creating\n* `READY` - Ready\n* `CREATION_FAILED` - Creation Failed\n* `DISABLED` - Disabled",
        "generatedName": "ModelVersionReadStatusEnum",
        "values": [
          {
            "generatedName": "CREATING",
            "value": "CREATING",
            "casing": {}
          },
          {
            "generatedName": "READY",
            "value": "READY",
            "casing": {}
          },
          {
            "generatedName": "CREATION_FAILED",
            "value": "CREATION_FAILED",
            "casing": {}
          },
          {
            "generatedName": "DISABLED",
            "value": "DISABLED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "ModelVersionSandboxSnapshot": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "modelVersionSandboxSnapshotId",
            "key": "id",
            "schema": {
              "description": "The ID of the sandbox snapshot.",
              "schema": {
                "type": "string"
              },
              "generatedName": "ModelVersionSandboxSnapshotId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionSandboxSnapshotPromptIndex",
            "key": "prompt_index",
            "schema": {
              "generatedName": "modelVersionSandboxSnapshotPromptIndex",
              "value": {
                "description": "The index of the prompt in the sandbox snapshot.",
                "schema": {
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "ModelVersionSandboxSnapshotPromptIndex",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionSandboxSnapshotPromptId",
            "key": "prompt_id",
            "schema": {
              "generatedName": "modelVersionSandboxSnapshotPromptId",
              "value": {
                "description": "The id of the prompt in the sandbox snapshot.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelVersionSandboxSnapshotPromptId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "modelVersionSandboxSnapshotSandboxId",
            "key": "sandbox_id",
            "schema": {
              "generatedName": "ModelVersionSandboxSnapshotSandboxId",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ModelVersionSandboxSnapshotSandboxId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": [],
            "readonly": true
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ModelVersionSandboxSnapshot",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "NormalizedLogProbs": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "normalizedLogProbsTokens",
            "key": "tokens",
            "schema": {
              "value": {
                "generatedName": "NormalizedLogProbsTokensItem",
                "schema": "NormalizedTokenLogProbs",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "NormalizedLogProbsTokens",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "normalizedLogProbsLikelihood",
            "key": "likelihood",
            "schema": {
              "generatedName": "NormalizedLogProbsLikelihood",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "NormalizedLogProbsLikelihood",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "NormalizedLogProbs",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "NormalizedTokenLogProbs": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "normalizedTokenLogProbsToken",
            "key": "token",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "NormalizedTokenLogProbsToken",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "normalizedTokenLogProbsLogprob",
            "key": "logprob",
            "schema": {
              "generatedName": "NormalizedTokenLogProbsLogprob",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "NormalizedTokenLogProbsLogprob",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "normalizedTokenLogProbsTopLogprobs",
            "key": "top_logprobs",
            "schema": {
              "generatedName": "NormalizedTokenLogProbsTopLogprobs",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "NormalizedTokenLogProbsTopLogprobsKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "NormalizedTokenLogProbsTopLogprobsValue",
                  "value": {
                    "schema": {
                      "type": "double"
                    },
                    "generatedName": "NormalizedTokenLogProbsTopLogprobsValue",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "inline": true,
                  "type": "nullable"
                },
                "generatedName": "NormalizedTokenLogProbsTopLogprobs",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "normalizedTokenLogProbsTextOffset",
            "key": "text_offset",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "NormalizedTokenLogProbsTextOffset",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "NormalizedTokenLogProbs",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginatedSlimDocumentList": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginatedSlimDocumentListCount",
            "key": "count",
            "schema": {
              "generatedName": "paginatedSlimDocumentListCount",
              "value": {
                "schema": {
                  "example": 123,
                  "type": "int"
                },
                "generatedName": "PaginatedSlimDocumentListCount",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedSlimDocumentListNext",
            "key": "next",
            "schema": {
              "generatedName": "paginatedSlimDocumentListNext",
              "value": {
                "generatedName": "PaginatedSlimDocumentListNext",
                "value": {
                  "schema": {
                    "format": "uri",
                    "example": "http://api.example.org/accounts/?offset=400&limit=100",
                    "type": "string"
                  },
                  "generatedName": "PaginatedSlimDocumentListNext",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedSlimDocumentListPrevious",
            "key": "previous",
            "schema": {
              "generatedName": "paginatedSlimDocumentListPrevious",
              "value": {
                "generatedName": "PaginatedSlimDocumentListPrevious",
                "value": {
                  "schema": {
                    "format": "uri",
                    "example": "http://api.example.org/accounts/?offset=200&limit=100",
                    "type": "string"
                  },
                  "generatedName": "PaginatedSlimDocumentListPrevious",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginatedSlimDocumentListResults",
            "key": "results",
            "schema": {
              "generatedName": "paginatedSlimDocumentListResults",
              "value": {
                "value": {
                  "generatedName": "PaginatedSlimDocumentListResultsItem",
                  "schema": "SlimDocument",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "PaginatedSlimDocumentListResults",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PaginatedSlimDocumentList",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProcessingFailureReasonEnum": {
        "description": "* `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit",
        "value": {
          "value": "EXCEEDED_CHARACTER_LIMIT",
          "type": "string"
        },
        "generatedName": "ProcessingFailureReasonEnum",
        "groupName": [],
        "type": "literal"
      },
      "ProcessingStateEnum": {
        "description": "* `QUEUED` - Queued\n* `PROCESSING` - Processing\n* `PROCESSED` - Processed\n* `FAILED` - Failed",
        "generatedName": "ProcessingStateEnum",
        "values": [
          {
            "generatedName": "QUEUED",
            "value": "QUEUED",
            "casing": {}
          },
          {
            "generatedName": "PROCESSING",
            "value": "PROCESSING",
            "casing": {}
          },
          {
            "generatedName": "PROCESSED",
            "value": "PROCESSED",
            "casing": {}
          },
          {
            "generatedName": "FAILED",
            "value": "FAILED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "PromptNodeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptNodeResultData",
            "key": "data",
            "schema": {
              "generatedName": "PromptNodeResultData",
              "schema": "PromptNodeResultData",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptNodeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptNodeResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptNodeResultDataOutputId",
            "key": "output_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptNodeResultDataOutputId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptNodeResultDataText",
            "key": "text",
            "schema": {
              "generatedName": "promptNodeResultDataText",
              "value": {
                "generatedName": "PromptNodeResultDataText",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptNodeResultDataText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptNodeResultDataDelta",
            "key": "delta",
            "schema": {
              "generatedName": "promptNodeResultDataDelta",
              "value": {
                "generatedName": "PromptNodeResultDataDelta",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptNodeResultDataDelta",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptNodeResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateBlock": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptTemplateBlockId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockBlockType",
            "key": "block_type",
            "schema": {
              "generatedName": "PromptTemplateBlockBlockType",
              "schema": "BlockTypeEnum",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockProperties",
            "key": "properties",
            "schema": {
              "generatedName": "PromptTemplateBlockProperties",
              "schema": "PromptTemplateBlockProperties",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateBlock",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateBlockData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockDataVersion",
            "key": "version",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PromptTemplateBlockDataVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockDataBlocks",
            "key": "blocks",
            "schema": {
              "value": {
                "generatedName": "PromptTemplateBlockDataBlocksItem",
                "schema": "PromptTemplateBlock",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PromptTemplateBlockDataBlocks",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateBlockData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateBlockDataRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockDataRequestVersion",
            "key": "version",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "PromptTemplateBlockDataRequestVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockDataRequestBlocks",
            "key": "blocks",
            "schema": {
              "value": {
                "generatedName": "PromptTemplateBlockDataRequestBlocksItem",
                "schema": "PromptTemplateBlockRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "PromptTemplateBlockDataRequestBlocks",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateBlockDataRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateBlockProperties": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesChatRole",
            "key": "chat_role",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesChatRole",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesChatRole",
                "value": {
                  "generatedName": "PromptTemplateBlockPropertiesChatRole",
                  "schema": "ChatMessageRole",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesChatMessageUnterminated",
            "key": "chat_message_unterminated",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesChatMessageUnterminated",
              "value": {
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "PromptTemplateBlockPropertiesChatMessageUnterminated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesTemplate",
            "key": "template",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesTemplate",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesTemplate",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesTemplate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesTemplateType",
            "key": "template_type",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesTemplateType",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesTemplateType",
                "value": {
                  "generatedName": "PromptTemplateBlockPropertiesTemplateType",
                  "schema": "ContentType",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesFunctionName",
            "key": "function_name",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesFunctionName",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesFunctionName",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesFunctionName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesFunctionDescription",
            "key": "function_description",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesFunctionDescription",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesFunctionDescription",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesFunctionDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesFunctionParameters",
            "key": "function_parameters",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesFunctionParameters",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesFunctionParameters",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "PromptTemplateBlockPropertiesFunctionParametersKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "PromptTemplateBlockPropertiesFunctionParametersValue",
                    "type": "unknown"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesFunctionParameters",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesBlocks",
            "key": "blocks",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesBlocks",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesBlocks",
                "value": {
                  "value": {
                    "generatedName": "PromptTemplateBlockPropertiesBlocksItem",
                    "schema": "PromptTemplateBlock",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesBlocks",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateBlockProperties",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateBlockPropertiesRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestChatRole",
            "key": "chat_role",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestChatRole",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesRequestChatRole",
                "value": {
                  "generatedName": "PromptTemplateBlockPropertiesRequestChatRole",
                  "schema": "ChatMessageRole",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestChatMessageUnterminated",
            "key": "chat_message_unterminated",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestChatMessageUnterminated",
              "value": {
                "schema": {
                  "default": false,
                  "type": "boolean"
                },
                "generatedName": "PromptTemplateBlockPropertiesRequestChatMessageUnterminated",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestTemplate",
            "key": "template",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestTemplate",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesRequestTemplate",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesRequestTemplate",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestTemplateType",
            "key": "template_type",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestTemplateType",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesRequestTemplateType",
                "value": {
                  "generatedName": "PromptTemplateBlockPropertiesRequestTemplateType",
                  "schema": "ContentType",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestFunctionName",
            "key": "function_name",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestFunctionName",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesRequestFunctionName",
                "value": {
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesRequestFunctionName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestFunctionDescription",
            "key": "function_description",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestFunctionDescription",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesRequestFunctionDescription",
                "value": {
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesRequestFunctionDescription",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestFunctionParameters",
            "key": "function_parameters",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestFunctionParameters",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParameters",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParametersKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParametersValue",
                    "type": "unknown"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesRequestFunctionParameters",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockPropertiesRequestBlocks",
            "key": "blocks",
            "schema": {
              "generatedName": "promptTemplateBlockPropertiesRequestBlocks",
              "value": {
                "generatedName": "PromptTemplateBlockPropertiesRequestBlocks",
                "value": {
                  "value": {
                    "generatedName": "PromptTemplateBlockPropertiesRequestBlocksItem",
                    "schema": "PromptTemplateBlockRequest",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "PromptTemplateBlockPropertiesRequestBlocks",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateBlockPropertiesRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateBlockRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockRequestId",
            "key": "id",
            "schema": {
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "PromptTemplateBlockRequestId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockRequestBlockType",
            "key": "block_type",
            "schema": {
              "generatedName": "PromptTemplateBlockRequestBlockType",
              "schema": "BlockTypeEnum",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "promptTemplateBlockRequestProperties",
            "key": "properties",
            "schema": {
              "generatedName": "PromptTemplateBlockRequestProperties",
              "schema": "PromptTemplateBlockPropertiesRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateBlockRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateInputVariable": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateInputVariableKey",
            "key": "key",
            "schema": {
              "description": "The name of the input variable.",
              "schema": {
                "type": "string"
              },
              "generatedName": "PromptTemplateInputVariableKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateInputVariable",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PromptTemplateInputVariableRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "promptTemplateInputVariableRequestKey",
            "key": "key",
            "schema": {
              "description": "The name of the input variable.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "PromptTemplateInputVariableRequestKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "PromptTemplateInputVariableRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ProviderEnum": {
        "description": "* `ANTHROPIC` - Anthropic\n* `COHERE` - Cohere\n* `GOOGLE` - Google\n* `HOSTED` - Hosted\n* `MOSAICML` - MosaicML\n* `MYSTIC` - Mystic\n* `OPENAI` - OpenAI\n* `PYQ` - Pyq",
        "generatedName": "ProviderEnum",
        "values": [
          {
            "generatedName": "ANTHROPIC",
            "value": "ANTHROPIC",
            "casing": {}
          },
          {
            "generatedName": "COHERE",
            "value": "COHERE",
            "casing": {}
          },
          {
            "generatedName": "GOOGLE",
            "value": "GOOGLE",
            "casing": {}
          },
          {
            "generatedName": "HOSTED",
            "value": "HOSTED",
            "casing": {}
          },
          {
            "generatedName": "MOSAICML",
            "value": "MOSAICML",
            "casing": {}
          },
          {
            "generatedName": "MYSTIC",
            "value": "MYSTIC",
            "casing": {}
          },
          {
            "generatedName": "OPENAI",
            "value": "OPENAI",
            "casing": {}
          },
          {
            "generatedName": "PYQ",
            "value": "PYQ",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "RegisterPromptErrorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registerPromptErrorResponseDetail",
            "key": "detail",
            "schema": {
              "description": "Details about why the request failed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisterPromptErrorResponseDetail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisterPromptErrorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisterPromptModelParametersRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestTemperature",
            "key": "temperature",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "RegisterPromptModelParametersRequestTemperature",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestMaxTokens",
            "key": "max_tokens",
            "schema": {
              "schema": {
                "type": "int"
              },
              "generatedName": "RegisterPromptModelParametersRequestMaxTokens",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestStop",
            "key": "stop",
            "schema": {
              "generatedName": "RegisterPromptModelParametersRequestStop",
              "value": {
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RegisterPromptModelParametersRequestStopItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "RegisterPromptModelParametersRequestStop",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestTopP",
            "key": "top_p",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "RegisterPromptModelParametersRequestTopP",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestTopK",
            "key": "top_k",
            "schema": {
              "generatedName": "registerPromptModelParametersRequestTopK",
              "value": {
                "schema": {
                  "type": "double"
                },
                "generatedName": "RegisterPromptModelParametersRequestTopK",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestFrequencyPenalty",
            "key": "frequency_penalty",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "RegisterPromptModelParametersRequestFrequencyPenalty",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestPresencePenalty",
            "key": "presence_penalty",
            "schema": {
              "schema": {
                "type": "double"
              },
              "generatedName": "RegisterPromptModelParametersRequestPresencePenalty",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptModelParametersRequestLogitBias",
            "key": "logit_bias",
            "schema": {
              "generatedName": "registerPromptModelParametersRequestLogitBias",
              "value": {
                "generatedName": "RegisterPromptModelParametersRequestLogitBias",
                "value": {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "RegisterPromptModelParametersRequestLogitBiasKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "RegisterPromptModelParametersRequestLogitBiasValue",
                    "value": {
                      "schema": {
                        "type": "double"
                      },
                      "generatedName": "RegisterPromptModelParametersRequestLogitBiasValue",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "groupName": [],
                    "inline": true,
                    "type": "nullable"
                  },
                  "generatedName": "RegisterPromptModelParametersRequestLogitBias",
                  "groupName": [],
                  "type": "map"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisterPromptModelParametersRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisterPromptPrompt": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registerPromptPromptId",
            "key": "id",
            "schema": {
              "description": "The ID of the generated prompt.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisterPromptPromptId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptPromptLabel",
            "key": "label",
            "schema": {
              "description": "A human-friendly label for the generated prompt.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisterPromptPromptLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisterPromptPrompt",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisterPromptPromptInfoRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registerPromptPromptInfoRequestPromptSyntaxVersion",
            "key": "prompt_syntax_version",
            "schema": {
              "generatedName": "registerPromptPromptInfoRequestPromptSyntaxVersion",
              "value": {
                "schema": {
                  "default": 2,
                  "type": "int"
                },
                "generatedName": "RegisterPromptPromptInfoRequestPromptSyntaxVersion",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptPromptInfoRequestPromptBlockData",
            "key": "prompt_block_data",
            "schema": {
              "generatedName": "RegisterPromptPromptInfoRequestPromptBlockData",
              "schema": "PromptTemplateBlockDataRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "registerPromptPromptInfoRequestInputVariables",
            "key": "input_variables",
            "schema": {
              "description": "Names of the input variables specified in the prompt template.",
              "value": {
                "generatedName": "RegisterPromptPromptInfoRequestInputVariablesItem",
                "schema": "PromptTemplateInputVariableRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "RegisterPromptPromptInfoRequestInputVariables",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisterPromptPromptInfoRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisterPromptRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registerPromptRequestRequestLabel",
            "key": "label",
            "schema": {
              "description": "A human-friendly label for corresponding entities created in Vellum.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RegisterPromptRequestRequestLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptRequestRequestName",
            "key": "name",
            "schema": {
              "description": "A uniquely-identifying name for corresponding entities created in Vellum.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RegisterPromptRequestRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptRequestRequestPrompt",
            "key": "prompt",
            "schema": {
              "description": "Information about how to execute the prompt template.",
              "generatedName": "RegisterPromptRequestRequestPrompt",
              "schema": "RegisterPromptPromptInfoRequest",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptRequestRequestProvider",
            "key": "provider",
            "schema": {
              "description": "The initial LLM provider to use for this prompt\n\n* `ANTHROPIC` - Anthropic\n* `COHERE` - Cohere\n* `GOOGLE` - Google\n* `HOSTED` - Hosted\n* `MOSAICML` - MosaicML\n* `MYSTIC` - Mystic\n* `OPENAI` - OpenAI\n* `PYQ` - Pyq",
              "generatedName": "RegisterPromptRequestRequestProvider",
              "schema": "ProviderEnum",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptRequestRequestModel",
            "key": "model",
            "schema": {
              "description": "The initial model to use for this prompt",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "RegisterPromptRequestRequestModel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptRequestRequestParameters",
            "key": "parameters",
            "schema": {
              "description": "The initial model parameters to use for  this prompt",
              "generatedName": "RegisterPromptRequestRequestParameters",
              "schema": "RegisterPromptModelParametersRequest",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptRequestRequestMeta",
            "key": "meta",
            "schema": {
              "generatedName": "registerPromptRequestRequestMeta",
              "value": {
                "description": "Optionally include additional metadata to store along with the prompt.",
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "RegisterPromptRequestRequestMetaKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "RegisterPromptRequestRequestMetaValue",
                  "type": "unknown"
                },
                "generatedName": "RegisterPromptRequestRequestMeta",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisterPromptRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisterPromptResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registerPromptResponsePrompt",
            "key": "prompt",
            "schema": {
              "description": "Information about the generated prompt",
              "generatedName": "RegisterPromptResponsePrompt",
              "schema": "RegisterPromptPrompt",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptResponseSandboxSnapshot",
            "key": "sandbox_snapshot",
            "schema": {
              "description": "Information about the generated sandbox snapshot",
              "generatedName": "RegisterPromptResponseSandboxSnapshot",
              "schema": "RegisteredPromptSandboxSnapshot",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptResponseSandbox",
            "key": "sandbox",
            "schema": {
              "description": "Information about the generated sandbox",
              "generatedName": "RegisterPromptResponseSandbox",
              "schema": "RegisteredPromptSandbox",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptResponseModelVersion",
            "key": "model_version",
            "schema": {
              "description": "Information about the generated model version",
              "generatedName": "RegisterPromptResponseModelVersion",
              "schema": "RegisteredPromptModelVersion",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registerPromptResponseDeployment",
            "key": "deployment",
            "schema": {
              "description": "Information about the generated deployment",
              "generatedName": "RegisterPromptResponseDeployment",
              "schema": "RegisteredPromptDeployment",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisterPromptResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisteredPromptDeployment": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registeredPromptDeploymentId",
            "key": "id",
            "schema": {
              "description": "The ID of the generated deployment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptDeploymentId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registeredPromptDeploymentName",
            "key": "name",
            "schema": {
              "description": "A uniquely-identifying name for generated deployment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptDeploymentName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registeredPromptDeploymentLabel",
            "key": "label",
            "schema": {
              "description": "A human-friendly label for the generated deployment.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptDeploymentLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisteredPromptDeployment",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisteredPromptModelVersion": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registeredPromptModelVersionId",
            "key": "id",
            "schema": {
              "description": "The ID of the generated model version.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptModelVersionId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registeredPromptModelVersionLabel",
            "key": "label",
            "schema": {
              "description": "A human-friendly label for the generated model version.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptModelVersionLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisteredPromptModelVersion",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisteredPromptSandbox": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registeredPromptSandboxId",
            "key": "id",
            "schema": {
              "description": "The ID of the generated sandbox.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptSandboxId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "registeredPromptSandboxLabel",
            "key": "label",
            "schema": {
              "description": "A human-friendly label for the generated sandbox.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptSandboxLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisteredPromptSandbox",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "RegisteredPromptSandboxSnapshot": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "registeredPromptSandboxSnapshotId",
            "key": "id",
            "schema": {
              "description": "The ID of the generated sandbox snapshot.",
              "schema": {
                "type": "string"
              },
              "generatedName": "RegisteredPromptSandboxSnapshotId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "RegisteredPromptSandboxSnapshot",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SandboxMetricInputParams": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sandboxMetricInputParamsParams",
            "key": "params",
            "schema": {
              "generatedName": "sandboxMetricInputParamsParams",
              "value": {
                "generatedName": "SandboxMetricInputParamsParams",
                "value": {
                  "generatedName": "SandboxMetricInputParamsParams",
                  "schema": "EvaluationParams",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SandboxMetricInputParams",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SandboxMetricInputParamsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sandboxMetricInputParamsRequestParams",
            "key": "params",
            "schema": {
              "generatedName": "sandboxMetricInputParamsRequestParams",
              "value": {
                "generatedName": "SandboxMetricInputParamsRequestParams",
                "value": {
                  "generatedName": "SandboxMetricInputParamsRequestParams",
                  "schema": "EvaluationParamsRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SandboxMetricInputParamsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SandboxNodeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sandboxNodeResultData",
            "key": "data",
            "schema": {
              "generatedName": "SandboxNodeResultData",
              "schema": "SandboxNodeResultData",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SandboxNodeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SandboxNodeResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sandboxNodeResultDataOutputId",
            "key": "output_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SandboxNodeResultDataOutputId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sandboxNodeResultDataText",
            "key": "text",
            "schema": {
              "generatedName": "sandboxNodeResultDataText",
              "value": {
                "generatedName": "SandboxNodeResultDataText",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SandboxNodeResultDataText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sandboxNodeResultDataDelta",
            "key": "delta",
            "schema": {
              "generatedName": "sandboxNodeResultDataDelta",
              "value": {
                "generatedName": "SandboxNodeResultDataDelta",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SandboxNodeResultDataDelta",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SandboxNodeResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SandboxScenario": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "sandboxScenarioLabel",
            "key": "label",
            "schema": {
              "generatedName": "sandboxScenarioLabel",
              "value": {
                "schema": {
                  "default": "Untitled Scenario",
                  "type": "string"
                },
                "generatedName": "SandboxScenarioLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sandboxScenarioInputs",
            "key": "inputs",
            "schema": {
              "description": "The inputs for the scenario",
              "value": {
                "generatedName": "SandboxScenarioInputsItem",
                "schema": "ScenarioInput",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SandboxScenarioInputs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sandboxScenarioId",
            "key": "id",
            "schema": {
              "description": "The id of the scenario",
              "schema": {
                "type": "string"
              },
              "generatedName": "SandboxScenarioId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "sandboxScenarioMetricInputParams",
            "key": "metric_input_params",
            "schema": {
              "generatedName": "SandboxScenarioMetricInputParams",
              "schema": "SandboxMetricInputParams",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SandboxScenario",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ScenarioInput": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "scenarioInputKey",
            "key": "key",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "ScenarioInputKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scenarioInputType",
            "key": "type",
            "schema": {
              "generatedName": "scenarioInputType",
              "value": {
                "generatedName": "ScenarioInputType",
                "value": {
                  "generatedName": "ScenarioInputType",
                  "schema": "ScenarioInputTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scenarioInputValue",
            "key": "value",
            "schema": {
              "generatedName": "scenarioInputValue",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ScenarioInputValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scenarioInputChatHistory",
            "key": "chat_history",
            "schema": {
              "generatedName": "scenarioInputChatHistory",
              "value": {
                "value": {
                  "generatedName": "ScenarioInputChatHistoryItem",
                  "schema": "ChatMessage",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ScenarioInputChatHistory",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ScenarioInput",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ScenarioInputRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "scenarioInputRequestKey",
            "key": "key",
            "schema": {
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "ScenarioInputRequestKey",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scenarioInputRequestType",
            "key": "type",
            "schema": {
              "generatedName": "scenarioInputRequestType",
              "value": {
                "generatedName": "ScenarioInputRequestType",
                "value": {
                  "generatedName": "ScenarioInputRequestType",
                  "schema": "ScenarioInputTypeEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scenarioInputRequestValue",
            "key": "value",
            "schema": {
              "generatedName": "scenarioInputRequestValue",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ScenarioInputRequestValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "scenarioInputRequestChatHistory",
            "key": "chat_history",
            "schema": {
              "generatedName": "scenarioInputRequestChatHistory",
              "value": {
                "value": {
                  "generatedName": "ScenarioInputRequestChatHistoryItem",
                  "schema": "ChatMessageRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "ScenarioInputRequestChatHistory",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "ScenarioInputRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ScenarioInputTypeEnum": {
        "description": "* `TEXT` - Text\n* `CHAT_HISTORY` - Chat History",
        "generatedName": "ScenarioInputTypeEnum",
        "values": [
          {
            "generatedName": "TEXT",
            "value": "TEXT",
            "casing": {}
          },
          {
            "generatedName": "CHAT_HISTORY",
            "value": "CHAT_HISTORY",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "SearchErrorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchErrorResponseDetail",
            "key": "detail",
            "schema": {
              "description": "Details about why the request failed.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchErrorResponseDetail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchErrorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchFiltersRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchFiltersRequestExternalIds",
            "key": "external_ids",
            "schema": {
              "generatedName": "searchFiltersRequestExternalIds",
              "value": {
                "generatedName": "SearchFiltersRequestExternalIds",
                "description": "The document external IDs to filter by",
                "value": {
                  "description": "The document external IDs to filter by",
                  "value": {
                    "schema": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "generatedName": "SearchFiltersRequestExternalIdsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "SearchFiltersRequestExternalIds",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchFiltersRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchNodeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchNodeResultData",
            "key": "data",
            "schema": {
              "generatedName": "SearchNodeResultData",
              "schema": "SearchNodeResultData",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchNodeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchNodeResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchNodeResultDataResultsOutputId",
            "key": "results_output_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchNodeResultDataResultsOutputId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchNodeResultDataResults",
            "key": "results",
            "schema": {
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SearchNodeResultDataResultsItemKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "SearchNodeResultDataResultsItemValue",
                  "type": "unknown"
                },
                "generatedName": "SearchNodeResultDataResultsItem",
                "groupName": [],
                "type": "map"
              },
              "generatedName": "SearchNodeResultDataResults",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchNodeResultDataTextOutputId",
            "key": "text_output_id",
            "schema": {
              "generatedName": "searchNodeResultDataTextOutputId",
              "value": {
                "generatedName": "SearchNodeResultDataTextOutputId",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SearchNodeResultDataTextOutputId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchNodeResultDataText",
            "key": "text",
            "schema": {
              "generatedName": "searchNodeResultDataText",
              "value": {
                "generatedName": "SearchNodeResultDataText",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SearchNodeResultDataText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchNodeResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchRequestBodyRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchRequestBodyRequestIndexId",
            "key": "index_id",
            "schema": {
              "generatedName": "searchRequestBodyRequestIndexId",
              "value": {
                "generatedName": "SearchRequestBodyRequestIndexId",
                "description": "The ID of the index to search against. Must provide either this or index_name.",
                "value": {
                  "description": "The ID of the index to search against. Must provide either this or index_name.",
                  "schema": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "generatedName": "SearchRequestBodyRequestIndexId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchRequestBodyRequestIndexName",
            "key": "index_name",
            "schema": {
              "generatedName": "searchRequestBodyRequestIndexName",
              "value": {
                "generatedName": "SearchRequestBodyRequestIndexName",
                "description": "The name of the index to search against. Must provide either this or index_id.",
                "value": {
                  "description": "The name of the index to search against. Must provide either this or index_id.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "SearchRequestBodyRequestIndexName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchRequestBodyRequestQuery",
            "key": "query",
            "schema": {
              "description": "The query to search for.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "SearchRequestBodyRequestQuery",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchRequestBodyRequestOptions",
            "key": "options",
            "schema": {
              "generatedName": "searchRequestBodyRequestOptions",
              "value": {
                "generatedName": "SearchRequestBodyRequestOptions",
                "description": "Configuration options for the search.",
                "value": {
                  "generatedName": "SearchRequestBodyRequestOptions",
                  "schema": "SearchRequestOptionsRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchRequestBodyRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchRequestOptionsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchRequestOptionsRequestLimit",
            "key": "limit",
            "schema": {
              "generatedName": "searchRequestOptionsRequestLimit",
              "value": {
                "generatedName": "SearchRequestOptionsRequestLimit",
                "description": "The maximum number of results to return.",
                "value": {
                  "description": "The maximum number of results to return.",
                  "schema": {
                    "type": "int"
                  },
                  "generatedName": "SearchRequestOptionsRequestLimit",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchRequestOptionsRequestWeights",
            "key": "weights",
            "schema": {
              "generatedName": "searchRequestOptionsRequestWeights",
              "value": {
                "generatedName": "SearchRequestOptionsRequestWeights",
                "description": "The weights to use for the search. Must add up to 1.0.",
                "value": {
                  "generatedName": "SearchRequestOptionsRequestWeights",
                  "schema": "SearchWeightsRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchRequestOptionsRequestResultMerging",
            "key": "result_merging",
            "schema": {
              "generatedName": "searchRequestOptionsRequestResultMerging",
              "value": {
                "generatedName": "SearchRequestOptionsRequestResultMerging",
                "description": "The configuration for merging results.",
                "value": {
                  "generatedName": "SearchRequestOptionsRequestResultMerging",
                  "schema": "SearchResultMergingRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchRequestOptionsRequestFilters",
            "key": "filters",
            "schema": {
              "generatedName": "searchRequestOptionsRequestFilters",
              "value": {
                "generatedName": "SearchRequestOptionsRequestFilters",
                "description": "The filters to apply to the search.",
                "value": {
                  "generatedName": "SearchRequestOptionsRequestFilters",
                  "schema": "SearchFiltersRequest",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchRequestOptionsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchResponseResults",
            "key": "results",
            "schema": {
              "description": "The results of the search. Each result represents a chunk that matches the search query.",
              "value": {
                "generatedName": "SearchResponseResultsItem",
                "schema": "SearchResult",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SearchResponseResults",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchResultDocument",
            "key": "document",
            "schema": {
              "description": "The document that contains the chunk that matched the search query.",
              "generatedName": "SearchResultDocument",
              "schema": "Document",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchResultText",
            "key": "text",
            "schema": {
              "description": "The text of the chunk that matched the search query.",
              "schema": {
                "type": "string"
              },
              "generatedName": "SearchResultText",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchResultKeywords",
            "key": "keywords",
            "schema": {
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "SearchResultKeywordsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "SearchResultKeywords",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchResultScore",
            "key": "score",
            "schema": {
              "description": "A score representing how well the chunk matches the search query.",
              "schema": {
                "type": "double"
              },
              "generatedName": "SearchResultScore",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchResultMergingRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchResultMergingRequestEnabled",
            "key": "enabled",
            "schema": {
              "description": "Whether to enable merging results",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "SearchResultMergingRequestEnabled",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchResultMergingRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SearchWeightsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "searchWeightsRequestSemanticSimilarity",
            "key": "semantic_similarity",
            "schema": {
              "description": "The relative weight to give to semantic similarity",
              "schema": {
                "type": "double"
              },
              "generatedName": "SearchWeightsRequestSemanticSimilarity",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "searchWeightsRequestKeywords",
            "key": "keywords",
            "schema": {
              "description": "The relative weight to give to keyword matches",
              "schema": {
                "type": "double"
              },
              "generatedName": "SearchWeightsRequestKeywords",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SearchWeightsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SlimDocument": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "slimDocumentId",
            "key": "id",
            "schema": {
              "description": "Vellum-generated ID that uniquely identifies this document.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "SlimDocumentId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "slimDocumentExternalId",
              "value": {
                "generatedName": "SlimDocumentExternalId",
                "description": "The external ID that was originally provided when uploading the document.",
                "value": {
                  "description": "The external ID that was originally provided when uploading the document.",
                  "schema": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "generatedName": "SlimDocumentExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentLastUploadedAt",
            "key": "last_uploaded_at",
            "schema": {
              "description": "A timestamp representing when this document was most recently uploaded.",
              "schema": {
                "type": "datetime"
              },
              "generatedName": "SlimDocumentLastUploadedAt",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentLabel",
            "key": "label",
            "schema": {
              "description": "Human-friendly name for this document.",
              "schema": {
                "maxLength": 1000,
                "type": "string"
              },
              "generatedName": "SlimDocumentLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentProcessingState",
            "key": "processing_state",
            "schema": {
              "generatedName": "slimDocumentProcessingState",
              "value": {
                "description": "An enum value representing where this document is along its processing lifecycle. Note that this is different than its indexing lifecycle.\n\n* `QUEUED` - Queued\n* `PROCESSING` - Processing\n* `PROCESSED` - Processed\n* `FAILED` - Failed",
                "generatedName": "SlimDocumentProcessingState",
                "schema": "ProcessingStateEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentProcessingFailureReason",
            "key": "processing_failure_reason",
            "schema": {
              "generatedName": "slimDocumentProcessingFailureReason",
              "value": {
                "generatedName": "SlimDocumentProcessingFailureReason",
                "description": "An enum value representing why the document could not be processed. Is null unless processing_state is FAILED.\n\n* `EXCEEDED_CHARACTER_LIMIT` - Exceeded Character Limit",
                "value": {
                  "generatedName": "SlimDocumentProcessingFailureReason",
                  "schema": "ProcessingFailureReasonEnum",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentStatus",
            "key": "status",
            "schema": {
              "generatedName": "slimDocumentStatus",
              "value": {
                "description": "The document's current status.\n\n* `ACTIVE` - Active",
                "generatedName": "SlimDocumentStatus",
                "schema": "SlimDocumentStatusEnum",
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentKeywords",
            "key": "keywords",
            "schema": {
              "generatedName": "slimDocumentKeywords",
              "value": {
                "description": "A list of keywords associated with this document. Originally provided when uploading the document.",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SlimDocumentKeywordsItem",
                  "groupName": [],
                  "type": "primitive"
                },
                "generatedName": "SlimDocumentKeywords",
                "groupName": [],
                "type": "array"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "slimDocumentDocumentToDocumentIndexes",
            "key": "document_to_document_indexes",
            "schema": {
              "value": {
                "generatedName": "SlimDocumentDocumentToDocumentIndexesItem",
                "schema": "DocumentDocumentToDocumentIndex",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SlimDocumentDocumentToDocumentIndexes",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SlimDocument",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SlimDocumentStatusEnum": {
        "description": "* `ACTIVE` - Active",
        "value": {
          "value": "ACTIVE",
          "type": "string"
        },
        "generatedName": "SlimDocumentStatusEnum",
        "groupName": [],
        "type": "literal"
      },
      "SubmitCompletionActualRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "submitCompletionActualRequestId",
            "key": "id",
            "schema": {
              "generatedName": "submitCompletionActualRequestId",
              "value": {
                "generatedName": "SubmitCompletionActualRequestId",
                "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                "value": {
                  "description": "The Vellum-generated ID of a previously generated completion. Must provide either this or external_id.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "SubmitCompletionActualRequestId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submitCompletionActualRequestExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "submitCompletionActualRequestExternalId",
              "value": {
                "generatedName": "SubmitCompletionActualRequestExternalId",
                "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                "value": {
                  "description": "The external ID that was originally provided when generating the completion that you'd now like to submit actuals for. Must provide either this or id.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "SubmitCompletionActualRequestExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submitCompletionActualRequestText",
            "key": "text",
            "schema": {
              "generatedName": "submitCompletionActualRequestText",
              "value": {
                "generatedName": "SubmitCompletionActualRequestText",
                "description": "Text representing what the completion _should_ have been.",
                "value": {
                  "description": "Text representing what the completion _should_ have been.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "SubmitCompletionActualRequestText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submitCompletionActualRequestQuality",
            "key": "quality",
            "schema": {
              "generatedName": "submitCompletionActualRequestQuality",
              "value": {
                "generatedName": "SubmitCompletionActualRequestQuality",
                "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                "value": {
                  "description": "A number between 0 and 1 representing the quality of the completion. 0 is the worst, 1 is the best.",
                  "schema": {
                    "minimum": 0,
                    "maximum": 1,
                    "type": "double"
                  },
                  "generatedName": "SubmitCompletionActualRequestQuality",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submitCompletionActualRequestTimestamp",
            "key": "timestamp",
            "schema": {
              "generatedName": "submitCompletionActualRequestTimestamp",
              "value": {
                "generatedName": "SubmitCompletionActualRequestTimestamp",
                "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                "value": {
                  "description": "Optionally provide the timestamp representing when this feedback was collected. Used for reporting purposes.",
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "SubmitCompletionActualRequestTimestamp",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SubmitCompletionActualRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SubmitCompletionActualsErrorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "submitCompletionActualsErrorResponseDetail",
            "key": "detail",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "SubmitCompletionActualsErrorResponseDetail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SubmitCompletionActualsErrorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "SubmitCompletionActualsRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "submitCompletionActualsRequestDeploymentId",
            "key": "deployment_id",
            "schema": {
              "generatedName": "submitCompletionActualsRequestDeploymentId",
              "value": {
                "generatedName": "SubmitCompletionActualsRequestDeploymentId",
                "description": "The ID of the deployment. Must provide either this or deployment_name.",
                "value": {
                  "description": "The ID of the deployment. Must provide either this or deployment_name.",
                  "schema": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "generatedName": "SubmitCompletionActualsRequestDeploymentId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submitCompletionActualsRequestDeploymentName",
            "key": "deployment_name",
            "schema": {
              "generatedName": "submitCompletionActualsRequestDeploymentName",
              "value": {
                "generatedName": "SubmitCompletionActualsRequestDeploymentName",
                "description": "The name of the deployment. Must provide either this or deployment_id.",
                "value": {
                  "description": "The name of the deployment. Must provide either this or deployment_id.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "SubmitCompletionActualsRequestDeploymentName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "submitCompletionActualsRequestActuals",
            "key": "actuals",
            "schema": {
              "description": "Feedback regarding the quality of previously generated completions",
              "value": {
                "generatedName": "SubmitCompletionActualsRequestActualsItem",
                "schema": "SubmitCompletionActualRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "SubmitCompletionActualsRequestActuals",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "SubmitCompletionActualsRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TerminalNodeChatHistoryResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "terminalNodeChatHistoryResultName",
            "key": "name",
            "schema": {
              "description": "The unique name given to the terminal node that produced this output.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TerminalNodeChatHistoryResultName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "terminalNodeChatHistoryResultValue",
            "key": "value",
            "schema": {
              "value": {
                "generatedName": "TerminalNodeChatHistoryResultValueItem",
                "schema": "ChatMessage",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "TerminalNodeChatHistoryResultValue",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TerminalNodeChatHistoryResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TerminalNodeJsonResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "terminalNodeJsonResultName",
            "key": "name",
            "schema": {
              "description": "The unique name given to the terminal node that produced this output.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TerminalNodeJsonResultName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "terminalNodeJsonResultValue",
            "key": "value",
            "schema": {
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TerminalNodeJsonResultValueKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "TerminalNodeJsonResultValueValue",
                "type": "unknown"
              },
              "generatedName": "TerminalNodeJsonResultValue",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TerminalNodeJsonResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TerminalNodeResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "terminalNodeResultData",
            "key": "data",
            "schema": {
              "generatedName": "TerminalNodeResultData",
              "schema": "TerminalNodeResultData",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TerminalNodeResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TerminalNodeResultData": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "terminalNodeResultDataOutput",
            "key": "output",
            "schema": {
              "generatedName": "TerminalNodeResultDataOutput",
              "schema": "TerminalNodeResultOutput",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TerminalNodeResultData",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TerminalNodeResultOutput": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "TerminalNodeResultOutput",
          "schemas": {
            "STRING": {
              "generatedName": "ComponentsSchemasTerminalNodeStringResult",
              "schema": "TerminalNodeStringResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "JSON": {
              "generatedName": "ComponentsSchemasTerminalNodeJsonResult",
              "schema": "TerminalNodeJsonResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "CHAT_HISTORY": {
              "generatedName": "ComponentsSchemasTerminalNodeChatHistoryResult",
              "schema": "TerminalNodeChatHistoryResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "TerminalNodeStringResult": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "terminalNodeStringResultName",
            "key": "name",
            "schema": {
              "description": "The unique name given to the terminal node that produced this output.",
              "schema": {
                "type": "string"
              },
              "generatedName": "TerminalNodeStringResultName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "terminalNodeStringResultValue",
            "key": "value",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "TerminalNodeStringResultValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TerminalNodeStringResult",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TestSuiteTestCase": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseTestCaseId",
            "key": "test_case_id",
            "schema": {
              "generatedName": "testSuiteTestCaseTestCaseId",
              "value": {
                "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "TestSuiteTestCaseTestCaseId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseLabel",
            "key": "label",
            "schema": {
              "generatedName": "testSuiteTestCaseLabel",
              "value": {
                "generatedName": "TestSuiteTestCaseLabel",
                "description": "A human-friendly label for the test case.",
                "value": {
                  "description": "A human-friendly label for the test case.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TestSuiteTestCaseLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseInputValues",
            "key": "input_values",
            "schema": {
              "description": "Key/value pairs for each input variable that the Test Suite expects.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TestSuiteTestCaseInputValuesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "TestSuiteTestCaseInputValuesValue",
                "type": "unknown"
              },
              "generatedName": "TestSuiteTestCaseInputValues",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseEvaluationParams",
            "key": "evaluation_params",
            "schema": {
              "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
              "generatedName": "TestSuiteTestCaseEvaluationParams",
              "schema": "EvaluationParams",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TestSuiteTestCase",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "TestSuiteTestCaseRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseRequestTestCaseId",
            "key": "test_case_id",
            "schema": {
              "generatedName": "testSuiteTestCaseRequestTestCaseId",
              "value": {
                "description": "The id of the test case to update. If none is provided, an id will be generated and a new test case will be appended.",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "TestSuiteTestCaseRequestTestCaseId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseRequestLabel",
            "key": "label",
            "schema": {
              "generatedName": "testSuiteTestCaseRequestLabel",
              "value": {
                "generatedName": "TestSuiteTestCaseRequestLabel",
                "description": "A human-friendly label for the test case.",
                "value": {
                  "description": "A human-friendly label for the test case.",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "TestSuiteTestCaseRequestLabel",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseRequestInputValues",
            "key": "input_values",
            "schema": {
              "description": "Key/value pairs for each input variable that the Test Suite expects.",
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "TestSuiteTestCaseRequestInputValuesKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "TestSuiteTestCaseRequestInputValuesValue",
                "type": "unknown"
              },
              "generatedName": "TestSuiteTestCaseRequestInputValues",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "testSuiteTestCaseRequestEvaluationParams",
            "key": "evaluation_params",
            "schema": {
              "description": "Parameters to use when evaluating the test case, specific to the test suite's evaluation metric.",
              "generatedName": "TestSuiteTestCaseRequestEvaluationParams",
              "schema": "EvaluationParamsRequest",
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "TestSuiteTestCaseRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UploadDocumentBodyRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "uploadDocumentBodyRequestAddToIndexNames",
            "key": "add_to_index_names",
            "schema": {
              "generatedName": "uploadDocumentBodyRequestAddToIndexNames",
              "value": {
                "generatedName": "UploadDocumentBodyRequestAddToIndexNames",
                "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                "value": {
                  "description": "Optionally include the names of all indexes that you'd like this document to be included in",
                  "value": {
                    "schema": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "generatedName": "UploadDocumentBodyRequestAddToIndexNamesItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "UploadDocumentBodyRequestAddToIndexNames",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "uploadDocumentBodyRequestExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "uploadDocumentBodyRequestExternalId",
              "value": {
                "generatedName": "UploadDocumentBodyRequestExternalId",
                "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                "value": {
                  "description": "Optionally include an external ID for this document. This is useful if you want to re-upload the same document later when its contents change and would like it to be re-indexed.",
                  "schema": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "generatedName": "UploadDocumentBodyRequestExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "uploadDocumentBodyRequestLabel",
            "key": "label",
            "schema": {
              "description": "A human-friendly name for this document. Typically the filename.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "UploadDocumentBodyRequestLabel",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "uploadDocumentBodyRequestContents",
            "key": "contents",
            "schema": {
              "description": "The file contents of the document.",
              "schema": {
                "format": "binary",
                "type": "string"
              },
              "generatedName": "UploadDocumentBodyRequestContents",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "uploadDocumentBodyRequestKeywords",
            "key": "keywords",
            "schema": {
              "generatedName": "uploadDocumentBodyRequestKeywords",
              "value": {
                "generatedName": "UploadDocumentBodyRequestKeywords",
                "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                "value": {
                  "description": "Optionally include a list of keywords that'll be associated with this document. Used when performing keyword searches.",
                  "value": {
                    "schema": {
                      "minLength": 1,
                      "type": "string"
                    },
                    "generatedName": "UploadDocumentBodyRequestKeywordsItem",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "generatedName": "UploadDocumentBodyRequestKeywords",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UploadDocumentBodyRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UploadDocumentErrorResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "uploadDocumentErrorResponseDetail",
            "key": "detail",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "UploadDocumentErrorResponseDetail",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UploadDocumentErrorResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UploadDocumentResponse": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "uploadDocumentResponseDocumentId",
            "key": "document_id",
            "schema": {
              "description": "The ID of the newly created document.",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "UploadDocumentResponseDocumentId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UploadDocumentResponse",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "UpsertSandboxScenarioRequestRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "upsertSandboxScenarioRequestRequestLabel",
            "key": "label",
            "schema": {
              "generatedName": "upsertSandboxScenarioRequestRequestLabel",
              "value": {
                "schema": {
                  "default": "Untitled Scenario",
                  "type": "string"
                },
                "generatedName": "UpsertSandboxScenarioRequestRequestLabel",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSandboxScenarioRequestRequestInputs",
            "key": "inputs",
            "schema": {
              "description": "The inputs for the scenario",
              "value": {
                "generatedName": "UpsertSandboxScenarioRequestRequestInputsItem",
                "schema": "ScenarioInputRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "UpsertSandboxScenarioRequestRequestInputs",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSandboxScenarioRequestRequestScenarioId",
            "key": "scenario_id",
            "schema": {
              "generatedName": "upsertSandboxScenarioRequestRequestScenarioId",
              "value": {
                "description": "The id of the scenario to update. If none is provided, an id will be generated and a new scenario will be appended.",
                "schema": {
                  "minLength": 1,
                  "type": "string"
                },
                "generatedName": "UpsertSandboxScenarioRequestRequestScenarioId",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "upsertSandboxScenarioRequestRequestMetricInputParams",
            "key": "metric_input_params",
            "schema": {
              "generatedName": "upsertSandboxScenarioRequestRequestMetricInputParams",
              "value": {
                "generatedName": "UpsertSandboxScenarioRequestRequestMetricInputParams",
                "schema": "SandboxMetricInputParamsRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "UpsertSandboxScenarioRequestRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowEventError": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowEventErrorMessage",
            "key": "message",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowEventErrorMessage",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowEventErrorCode",
            "key": "code",
            "schema": {
              "generatedName": "WorkflowEventErrorCode",
              "schema": "WorkflowExecutionEventErrorCode",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowEventError",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowExecutionEventErrorCode": {
        "description": "* `WORKFLOW_INITIALIZATION` - WORKFLOW_INITIALIZATION\n* `NODE_EXECUTION` - NODE_EXECUTION",
        "generatedName": "WorkflowExecutionEventErrorCode",
        "values": [
          {
            "generatedName": "WORKFLOW_INITIALIZATION",
            "value": "WORKFLOW_INITIALIZATION",
            "casing": {}
          },
          {
            "generatedName": "NODE_EXECUTION",
            "value": "NODE_EXECUTION",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "WorkflowExecutionNodeResultEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowExecutionNodeResultEventRunId",
            "key": "run_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowExecutionNodeResultEventRunId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowExecutionNodeResultEventExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "workflowExecutionNodeResultEventExternalId",
              "value": {
                "generatedName": "WorkflowExecutionNodeResultEventExternalId",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowExecutionNodeResultEventExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowExecutionNodeResultEventData",
            "key": "data",
            "schema": {
              "generatedName": "WorkflowExecutionNodeResultEventData",
              "schema": "WorkflowNodeResultEvent",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowExecutionNodeResultEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowExecutionWorkflowResultEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowExecutionWorkflowResultEventRunId",
            "key": "run_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowExecutionWorkflowResultEventRunId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowExecutionWorkflowResultEventExternalId",
            "key": "external_id",
            "schema": {
              "generatedName": "workflowExecutionWorkflowResultEventExternalId",
              "value": {
                "generatedName": "WorkflowExecutionWorkflowResultEventExternalId",
                "value": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowExecutionWorkflowResultEventExternalId",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowExecutionWorkflowResultEventData",
            "key": "data",
            "schema": {
              "generatedName": "WorkflowExecutionWorkflowResultEventData",
              "schema": "WorkflowResultEvent",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowExecutionWorkflowResultEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowNodeResultData": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "WorkflowNodeResultData",
          "schemas": {
            "PROMPT": {
              "generatedName": "ComponentsSchemasPromptNodeResult",
              "schema": "PromptNodeResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "SANDBOX": {
              "generatedName": "ComponentsSchemasSandboxNodeResult",
              "schema": "SandboxNodeResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "DEPLOYMENT": {
              "generatedName": "ComponentsSchemasDeploymentNodeResult",
              "schema": "DeploymentNodeResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "SEARCH": {
              "generatedName": "ComponentsSchemasSearchNodeResult",
              "schema": "SearchNodeResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "CONDITIONAL": {
              "generatedName": "ComponentsSchemasConditionalNodeResult",
              "schema": "ConditionalNodeResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "TERMINAL": {
              "generatedName": "ComponentsSchemasTerminalNodeResult",
              "schema": "TerminalNodeResult",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "WorkflowNodeResultEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowNodeResultEventId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowNodeResultEventId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowNodeResultEventNodeId",
            "key": "node_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowNodeResultEventNodeId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowNodeResultEventNodeResultId",
            "key": "node_result_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowNodeResultEventNodeResultId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowNodeResultEventState",
            "key": "state",
            "schema": {
              "generatedName": "WorkflowNodeResultEventState",
              "schema": "WorkflowNodeResultEventState",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "workflowNodeResultEventTs",
            "key": "ts",
            "schema": {
              "generatedName": "workflowNodeResultEventTs",
              "value": {
                "generatedName": "WorkflowNodeResultEventTs",
                "value": {
                  "schema": {
                    "type": "datetime"
                  },
                  "generatedName": "WorkflowNodeResultEventTs",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowNodeResultEventData",
            "key": "data",
            "schema": {
              "generatedName": "WorkflowNodeResultEventData",
              "value": {
                "generatedName": "WorkflowNodeResultEventData",
                "schema": "WorkflowNodeResultData",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowNodeResultEventError",
            "key": "error",
            "schema": {
              "generatedName": "workflowNodeResultEventError",
              "value": {
                "generatedName": "WorkflowNodeResultEventError",
                "value": {
                  "generatedName": "WorkflowNodeResultEventError",
                  "schema": "WorkflowEventError",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowNodeResultEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowNodeResultEventState": {
        "description": "* `INITIATED` - INITIATED\n* `STREAMING` - STREAMING\n* `FULFILLED` - FULFILLED\n* `REJECTED` - REJECTED",
        "generatedName": "WorkflowNodeResultEventState",
        "values": [
          {
            "generatedName": "INITIATED",
            "value": "INITIATED",
            "casing": {}
          },
          {
            "generatedName": "STREAMING",
            "value": "STREAMING",
            "casing": {}
          },
          {
            "generatedName": "FULFILLED",
            "value": "FULFILLED",
            "casing": {}
          },
          {
            "generatedName": "REJECTED",
            "value": "REJECTED",
            "casing": {}
          }
        ],
        "groupName": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "enum"
      },
      "WorkflowRequestChatHistoryInputRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowRequestChatHistoryInputRequestName",
            "key": "name",
            "schema": {
              "description": "The variable's name, as defined in the Workflow.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "WorkflowRequestChatHistoryInputRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowRequestChatHistoryInputRequestValue",
            "key": "value",
            "schema": {
              "value": {
                "generatedName": "WorkflowRequestChatHistoryInputRequestValueItem",
                "schema": "ChatMessageRequest",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "generatedName": "WorkflowRequestChatHistoryInputRequestValue",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowRequestChatHistoryInputRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowRequestInputRequest": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "WorkflowRequestInputRequest",
          "schemas": {
            "STRING": {
              "generatedName": "ComponentsSchemasWorkflowRequestStringInputRequest",
              "schema": "WorkflowRequestStringInputRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "JSON": {
              "generatedName": "ComponentsSchemasWorkflowRequestJsonInputRequest",
              "schema": "WorkflowRequestJSONInputRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "CHAT_HISTORY": {
              "generatedName": "ComponentsSchemasWorkflowRequestChatHistoryInputRequest",
              "schema": "WorkflowRequestChatHistoryInputRequest",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "WorkflowRequestJSONInputRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowRequestJsonInputRequestName",
            "key": "name",
            "schema": {
              "description": "The variable's name, as defined in the Workflow.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "WorkflowRequestJsonInputRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowRequestJsonInputRequestValue",
            "key": "value",
            "schema": {
              "key": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowRequestJsonInputRequestValueKey",
                "groupName": [],
                "type": "primitive"
              },
              "value": {
                "generatedName": "WorkflowRequestJsonInputRequestValueValue",
                "type": "unknown"
              },
              "generatedName": "WorkflowRequestJsonInputRequestValue",
              "groupName": [],
              "type": "map"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowRequestJsonInputRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowRequestStringInputRequest": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowRequestStringInputRequestName",
            "key": "name",
            "schema": {
              "description": "The variable's name, as defined in the Workflow.",
              "schema": {
                "minLength": 1,
                "type": "string"
              },
              "generatedName": "WorkflowRequestStringInputRequestName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowRequestStringInputRequestValue",
            "key": "value",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowRequestStringInputRequestValue",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowRequestStringInputRequest",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowResultEvent": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowResultEventId",
            "key": "id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowResultEventId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventState",
            "key": "state",
            "schema": {
              "generatedName": "WorkflowResultEventState",
              "schema": "WorkflowNodeResultEventState",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventTs",
            "key": "ts",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "WorkflowResultEventTs",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutput",
            "key": "output",
            "schema": {
              "generatedName": "WorkflowResultEventOutput",
              "value": {
                "generatedName": "WorkflowResultEventOutput",
                "schema": "WorkflowResultEventOutputData",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventError",
            "key": "error",
            "schema": {
              "generatedName": "workflowResultEventError",
              "value": {
                "generatedName": "WorkflowResultEventError",
                "value": {
                  "generatedName": "WorkflowResultEventError",
                  "schema": "WorkflowEventError",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowResultEvent",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowResultEventOutputData": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "WorkflowResultEventOutputData",
          "schemas": {
            "STRING": {
              "generatedName": "ComponentsSchemasWorkflowResultEventOutputDataString",
              "schema": "WorkflowResultEventOutputDataString",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "JSON": {
              "generatedName": "ComponentsSchemasWorkflowResultEventOutputDataJson",
              "schema": "WorkflowResultEventOutputDataJSON",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "CHAT_HISTORY": {
              "generatedName": "ComponentsSchemasWorkflowResultEventOutputDataChatHistory",
              "schema": "WorkflowResultEventOutputDataChatHistory",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      },
      "WorkflowResultEventOutputDataChatHistory": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataChatHistoryName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowResultEventOutputDataChatHistoryName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataChatHistoryState",
            "key": "state",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataChatHistoryState",
              "schema": "WorkflowNodeResultEventState",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataChatHistoryNodeId",
            "key": "node_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowResultEventOutputDataChatHistoryNodeId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataChatHistoryDelta",
            "key": "delta",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataChatHistoryDelta",
              "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
              "value": {
                "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowResultEventOutputDataChatHistoryDelta",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataChatHistoryValue",
            "key": "value",
            "schema": {
              "generatedName": "workflowResultEventOutputDataChatHistoryValue",
              "value": {
                "generatedName": "WorkflowResultEventOutputDataChatHistoryValue",
                "value": {
                  "value": {
                    "generatedName": "WorkflowResultEventOutputDataChatHistoryValueItem",
                    "schema": "ChatMessage",
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "reference"
                  },
                  "generatedName": "WorkflowResultEventOutputDataChatHistoryValue",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowResultEventOutputDataChatHistory",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowResultEventOutputDataJSON": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataJsonName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowResultEventOutputDataJsonName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataJsonState",
            "key": "state",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataJsonState",
              "schema": "WorkflowNodeResultEventState",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataJsonNodeId",
            "key": "node_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowResultEventOutputDataJsonNodeId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataJsonDelta",
            "key": "delta",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataJsonDelta",
              "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
              "value": {
                "description": "The newly output string value. Only relevant for string outputs with a state of STREAMING.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowResultEventOutputDataJsonDelta",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": [],
            "readonly": true
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataJsonValue",
            "key": "value",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataJsonValue",
              "value": {
                "key": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "WorkflowResultEventOutputDataJsonValueKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "value": {
                  "generatedName": "WorkflowResultEventOutputDataJsonValueValue",
                  "type": "unknown"
                },
                "generatedName": "WorkflowResultEventOutputDataJsonValue",
                "groupName": [],
                "type": "map"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowResultEventOutputDataJson",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowResultEventOutputDataString": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataStringName",
            "key": "name",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowResultEventOutputDataStringName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataStringState",
            "key": "state",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataStringState",
              "schema": "WorkflowNodeResultEventState",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "audiences": [],
            "readonly": false
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataStringNodeId",
            "key": "node_id",
            "schema": {
              "schema": {
                "type": "string"
              },
              "generatedName": "WorkflowResultEventOutputDataStringNodeId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataStringDelta",
            "key": "delta",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataStringDelta",
              "description": "The newly output string value, meant to be concatenated with all previous. Will be non-null for events of state STREAMING.",
              "value": {
                "description": "The newly output string value, meant to be concatenated with all previous. Will be non-null for events of state STREAMING.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowResultEventOutputDataStringDelta",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "workflowResultEventOutputDataStringValue",
            "key": "value",
            "schema": {
              "generatedName": "WorkflowResultEventOutputDataStringValue",
              "description": "The entire string value. Will be non-null for events of state FULFILLED.",
              "value": {
                "description": "The entire string value. Will be non-null for events of state FULFILLED.",
                "schema": {
                  "type": "string"
                },
                "generatedName": "WorkflowResultEventOutputDataStringValue",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "generatedName": "WorkflowResultEventOutputDataString",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "WorkflowStreamEvent": {
        "value": {
          "commonProperties": [],
          "discriminantProperty": "type",
          "generatedName": "WorkflowStreamEvent",
          "schemas": {
            "WORKFLOW": {
              "generatedName": "ComponentsSchemasWorkflowExecutionWorkflowResultEvent",
              "schema": "WorkflowExecutionWorkflowResultEvent",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            },
            "NODE": {
              "generatedName": "ComponentsSchemasWorkflowExecutionNodeResultEvent",
              "schema": "WorkflowExecutionNodeResultEvent",
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "reference"
            }
          },
          "groupName": [],
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "discriminated"
        },
        "type": "oneOf"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "apiKeyAuth": {
      "headerName": "X_API_KEY",
      "type": "header"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}