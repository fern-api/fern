{
  "type": "openapi",
  "value": {
    "$schema": "http://json-schema.org/draft-04/schema#",
    "openapi": "3.0.1",
    "info": {
      "title": "Required nullable example"
    },
    "components": {
      "schemas": {
        "Foo": {
          "type": "object",
          "required": [
            "nullable_required_bar",
            "required_bar"
          ],
          "properties": {
            "nullable_required_bar": {
              "type": "string",
              "nullable": true
            },
            "nullable_bar": {
              "type": "string",
              "nullable": true
            },
            "required_bar": {
              "type": "string",
              "nullable": false
            },
            "bar": {
              "type": "string",
              "nullable": false
            }
          }
        }
      }
    },
    "paths": {
      "/foo": {
        "get": {
          "summary": "Get foo",
          "operationId": "getFoo",
          "parameters": [
            {
              "name": "baz",
              "in": "query",
              "description": "An optional baz",
              "required": false,
              "schema": {
                "type": "string",
                "nullable": false
              }
            }
          ],
          "responses": {
            "200": {
              "description": "successful operation",
              "content": {
                "application/json": {
                  "$ref": "#/components/schemas/Foo"
                }
              }
            }
          }
        }
      }
    }
  },
  "settings": {
    "disableExamples": false,
    "discriminatedUnionV2": false,
    "useTitlesAsName": true,
    "optionalAdditionalProperties": true,
    "coerceEnumsToLiterals": true,
    "respectReadonlySchemas": false,
    "respectNullableSchemas": false,
    "onlyIncludeReferencedSchemas": false,
    "inlinePathParameters": false,
    "preserveSchemaIds": false,
    "shouldUseUndiscriminatedUnionsWithLiterals": false,
    "shouldUseIdiomaticRequestNames": false,
    "objectQueryParameters": false,
    "asyncApiNaming": "v1",
    "useBytesForBinaryResponse": false,
    "respectForwardCompatibleEnums": false,
    "additionalPropertiesDefaultsTo": false,
    "typeDatesAsStrings": true,
    "preserveSingleSchemaOneOf": false,
    "inlineAllOfSchemas": false,
    "groupMultiApiEnvironments": false,
    "coerceNullableToOptional": true
  }
}