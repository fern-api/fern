{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "EmailsSendRequestInternalServerError": {
            "docs": "Default Response",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "error": "error",
                },
              },
            ],
            "status-code": 500,
            "type": "EmailsSendRequestInternalServerErrorBody",
          },
          "EvalGetRequestBadRequestError": {
            "docs": "The function throw an error or had invalid syntax",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "error": "error",
                  "type": "error",
                },
              },
            ],
            "status-code": 400,
            "type": "EvalGetRequestBadRequestErrorBody",
          },
          "EvalPostRequestBadRequestError": {
            "docs": "Default Response",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": {
                  "error": "error",
                  "type": "error",
                },
              },
            ],
            "status-code": 400,
            "type": "EvalPostRequestBadRequestErrorBody",
          },
          "ValsCancelRequestNotFoundError": {
            "docs": "Default Response",
            "examples": [
              {
                "docs": undefined,
                "name": undefined,
                "value": "string",
              },
            ],
            "status-code": 404,
            "type": "string",
          },
          "ValsDeleteRequestNotFoundError": {
            "docs": "The val was not found",
            "status-code": 404,
            "type": "unknown",
          },
          "ValsDeleteVersionRequestNotFoundError": {
            "docs": "The val was not found",
            "status-code": 404,
            "type": "unknown",
          },
        },
        "navigation": [
          "vals",
          "alias",
          "me",
          "users",
          "sqlite",
          "blobs",
          "search",
          "emails",
        ],
        "types": {
          "BasicVal": {
            "docs": "A Val",
            "inline": undefined,
            "properties": {
              "author": {
                "docs": "The user who created this val",
                "type": "optional<BasicValAuthor>",
              },
              "code": {
                "docs": "TypeScript code associated with this val",
                "type": "optional<string>",
              },
              "createdAt": "datetime",
              "id": {
                "docs": "This val’s id",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "links": "BasicValLinks",
              "name": {
                "docs": "The name of this val",
                "type": "string",
              },
              "privacy": {
                "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                "type": "BasicValPrivacy",
              },
              "public": {
                "docs": "Whether this val is available publicly on Val Town",
                "type": "boolean",
              },
              "type": {
                "docs": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
                "type": "BasicValType",
              },
              "url": {
                "docs": "The URL of this val on the Val Town website",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": {
                "docs": "The version of this val, starting at zero",
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicValAuthor": {
            "docs": "The user who created this val",
            "inline": true,
            "properties": {
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicValLinks": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "module": {
                "docs": "The URL of this Val’s source code as a module",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "self": {
                "docs": "The URL of this val on this API",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "versions": {
                "docs": "The endpoint to retrieve this val’s versions",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicValPrivacy": {
            "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
            "enum": [
              "public",
              "unlisted",
              "private",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "BasicValType": {
            "docs": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
            "enum": [
              "interval",
              "http",
              "express",
              "email",
              "script",
              "rpc",
              "httpnext",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmailsSendRequestInternalServerErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "error": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EvalGetRequestBadRequestErrorBody": {
            "docs": "The function throw an error or had invalid syntax",
            "inline": undefined,
            "properties": {
              "error": "string",
              "type": "literal<"error">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EvalPostRequestBadRequestErrorBody": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "error": "string",
              "type": "literal<"error">",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ExtendedVal": {
            "docs": "A Val",
            "inline": undefined,
            "properties": {
              "author": {
                "docs": "The user who created this val",
                "type": "optional<ExtendedValAuthor>",
              },
              "code": {
                "docs": "TypeScript code associated with this val",
                "type": "optional<string>",
              },
              "createdAt": "datetime",
              "id": {
                "docs": "This val’s id",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "likeCount": {
                "docs": "How many likes this val has received",
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "links": "ExtendedValLinks",
              "name": {
                "docs": "The name of this val",
                "type": "string",
              },
              "privacy": {
                "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                "type": "ExtendedValPrivacy",
              },
              "public": {
                "docs": "Whether this val is available publicly on Val Town",
                "type": "boolean",
              },
              "readme": {
                "docs": "This val’s readme, as Markdown",
                "type": "optional<string>",
              },
              "referenceCount": {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "type": {
                "docs": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
                "type": "ExtendedValType",
              },
              "url": {
                "docs": "The URL of this val on the Val Town website",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": {
                "docs": "The version of this val, starting at zero",
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ExtendedValAuthor": {
            "docs": "The user who created this val",
            "inline": true,
            "properties": {
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ExtendedValLinks": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "module": {
                "docs": "The URL of this Val’s source code as a module",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "self": {
                "docs": "The URL of this val on this API",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "versions": {
                "docs": "The endpoint to retrieve this val’s versions",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ExtendedValPrivacy": {
            "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
            "enum": [
              "public",
              "unlisted",
              "private",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ExtendedValType": {
            "docs": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
            "enum": [
              "interval",
              "http",
              "express",
              "email",
              "script",
              "rpc",
              "httpnext",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "PaginationLinks": {
            "docs": "Links to use for pagination",
            "inline": undefined,
            "properties": {
              "next": {
                "docs": "URL of the next page, if any",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "prev": {
                "docs": "URL of the previous page, if any",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "self": {
                "docs": "URL of this page",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ResultSet": {
            "docs": "Result of executing an SQL statement.",
            "inline": undefined,
            "properties": {
              "columnTypes": {
                "docs": "Types of columns.

The types are currently shown for types declared in a SQL table. For column types of function calls, for example, an empty string is returned.",
                "type": "list<string>",
              },
              "columns": {
                "docs": "Names of columns.

Names of columns can be defined using the `AS` keyword in SQL:

```sql
SELECT author AS author, COUNT(*) AS count FROM books GROUP BY author
```",
                "type": "list<string>",
              },
              "lastInsertRowid": {
                "docs": "ROWID of the last inserted row.

This value is not specified if the SQL statement was not an INSERT or if the table was not a ROWID table.",
                "type": "optional<ResultSetLastInsertRowid>",
              },
              "rows": {
                "docs": "Rows produced by the statement.",
                "type": "list<list<unknown>>",
              },
              "rowsAffected": {
                "docs": "Number of rows that were affected by an UPDATE, INSERT or DELETE operation.

This value is not specified for other SQL statements.",
                "type": "double",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ResultSetLastInsertRowid": {
            "discriminated": false,
            "docs": "ROWID of the last inserted row.

This value is not specified if the SQL statement was not an INSERT or if the table was not a ROWID table.",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "double",
            ],
          },
          "User": {
            "docs": "User object",
            "inline": undefined,
            "properties": {
              "bio": {
                "docs": "The user’s biography, if they have provided one",
                "type": "optional<string>",
              },
              "id": {
                "docs": "The ID of this user",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "links": "UserLinks",
              "profileImageUrl": {
                "docs": "URL that points to the user’s profile image, if one exists",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "url": {
                "docs": "URL of this user’s profile on Val Town’s website",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "username": {
                "docs": "The user’s handle that they chose for themselves. Does not include the @ symbol",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "UserLinks": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "self": {
                "docs": "URL of this user on this API",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  EvalPostRequestBadRequestErrorBody:
    properties:
      type: literal<"error">
      error: string
    source:
      openapi: ../openapi.yml
  EvalGetRequestBadRequestErrorBody:
    docs: The function throw an error or had invalid syntax
    properties:
      type: literal<"error">
      error: string
    source:
      openapi: ../openapi.yml
  EmailsSendRequestInternalServerErrorBody:
    properties:
      error: string
    source:
      openapi: ../openapi.yml
  UserLinks:
    properties:
      self:
        type: string
        docs: URL of this user on this API
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  User:
    docs: User object
    properties:
      id:
        type: string
        docs: The ID of this user
        validation:
          format: uuid
      bio:
        type: optional<string>
        docs: The user’s biography, if they have provided one
      username:
        type: optional<string>
        docs: >-
          The user’s handle that they chose for themselves. Does not include the
          @ symbol
      profileImageUrl:
        type: optional<string>
        docs: URL that points to the user’s profile image, if one exists
        validation:
          format: uri
      url:
        type: string
        docs: URL of this user’s profile on Val Town’s website
        validation:
          format: uri
      links: UserLinks
    source:
      openapi: ../openapi.yml
  ResultSetLastInsertRowid:
    discriminated: false
    docs: >-
      ROWID of the last inserted row.


      This value is not specified if the SQL statement was not an INSERT or if
      the table was not a ROWID table.
    union:
      - string
      - double
    source:
      openapi: ../openapi.yml
    inline: true
  ResultSet:
    docs: Result of executing an SQL statement.
    properties:
      columns:
        docs: |-
          Names of columns.

          Names of columns can be defined using the `AS` keyword in SQL:

          ```sql
          SELECT author AS author, COUNT(*) AS count FROM books GROUP BY author
          ```
        type: list<string>
      columnTypes:
        docs: >-
          Types of columns.


          The types are currently shown for types declared in a SQL table. For
          column types of function calls, for example, an empty string is
          returned.
        type: list<string>
      rows:
        docs: Rows produced by the statement.
        type: list<list<unknown>>
      rowsAffected:
        type: double
        docs: >-
          Number of rows that were affected by an UPDATE, INSERT or DELETE
          operation.


          This value is not specified for other SQL statements.
      lastInsertRowid:
        type: optional<ResultSetLastInsertRowid>
        docs: >-
          ROWID of the last inserted row.


          This value is not specified if the SQL statement was not an INSERT or
          if the table was not a ROWID table.
    source:
      openapi: ../openapi.yml
  ExtendedValPrivacy:
    enum:
      - public
      - unlisted
      - private
    docs: >-
      This val’s privacy setting. Unlisted vals do not appear on profile pages
      or elsewhere, but you can link to them.
    inline: true
    source:
      openapi: ../openapi.yml
  ExtendedValType:
    enum:
      - interval
      - http
      - express
      - email
      - script
      - rpc
      - httpnext
    docs: >-
      The type of a val. HTTP can receive web requests, Email can receive
      emails, Cron runs periodically, and Script can be used for libraries or
      one-off calculations
    inline: true
    source:
      openapi: ../openapi.yml
  ExtendedValLinks:
    properties:
      self:
        type: string
        docs: The URL of this val on this API
        validation:
          format: uri
      versions:
        type: string
        docs: The endpoint to retrieve this val’s versions
        validation:
          format: uri
      module:
        type: string
        docs: The URL of this Val’s source code as a module
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  ExtendedValAuthor:
    docs: The user who created this val
    properties:
      id:
        type: string
        validation:
          format: uuid
      username: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  ExtendedVal:
    docs: A Val
    properties:
      name:
        type: string
        docs: The name of this val
      id:
        type: string
        docs: This val’s id
        validation:
          format: uuid
      version:
        type: integer
        docs: The version of this val, starting at zero
        validation:
          min: 0
      code:
        type: optional<string>
        docs: TypeScript code associated with this val
      public:
        type: boolean
        docs: Whether this val is available publicly on Val Town
      createdAt: datetime
      privacy:
        type: ExtendedValPrivacy
        docs: >-
          This val’s privacy setting. Unlisted vals do not appear on profile
          pages or elsewhere, but you can link to them.
      type:
        type: ExtendedValType
        docs: >-
          The type of a val. HTTP can receive web requests, Email can receive
          emails, Cron runs periodically, and Script can be used for libraries
          or one-off calculations
      url:
        type: string
        docs: The URL of this val on the Val Town website
        validation:
          format: uri
      links: ExtendedValLinks
      author:
        type: optional<ExtendedValAuthor>
        docs: The user who created this val
      likeCount:
        type: integer
        docs: How many likes this val has received
        validation:
          min: 0
      referenceCount:
        type: integer
        validation:
          min: 0
      readme:
        type: optional<string>
        docs: This val’s readme, as Markdown
    source:
      openapi: ../openapi.yml
  BasicValPrivacy:
    enum:
      - public
      - unlisted
      - private
    docs: >-
      This val’s privacy setting. Unlisted vals do not appear on profile pages
      or elsewhere, but you can link to them.
    inline: true
    source:
      openapi: ../openapi.yml
  BasicValType:
    enum:
      - interval
      - http
      - express
      - email
      - script
      - rpc
      - httpnext
    docs: >-
      The type of a val. HTTP can receive web requests, Email can receive
      emails, Cron runs periodically, and Script can be used for libraries or
      one-off calculations
    inline: true
    source:
      openapi: ../openapi.yml
  BasicValLinks:
    properties:
      self:
        type: string
        docs: The URL of this val on this API
        validation:
          format: uri
      versions:
        type: string
        docs: The endpoint to retrieve this val’s versions
        validation:
          format: uri
      module:
        type: string
        docs: The URL of this Val’s source code as a module
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  BasicValAuthor:
    docs: The user who created this val
    properties:
      id:
        type: string
        validation:
          format: uuid
      username: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  BasicVal:
    docs: A Val
    properties:
      name:
        type: string
        docs: The name of this val
      id:
        type: string
        docs: This val’s id
        validation:
          format: uuid
      version:
        type: integer
        docs: The version of this val, starting at zero
        validation:
          min: 0
      code:
        type: optional<string>
        docs: TypeScript code associated with this val
      public:
        type: boolean
        docs: Whether this val is available publicly on Val Town
      createdAt: datetime
      privacy:
        type: BasicValPrivacy
        docs: >-
          This val’s privacy setting. Unlisted vals do not appear on profile
          pages or elsewhere, but you can link to them.
      type:
        type: BasicValType
        docs: >-
          The type of a val. HTTP can receive web requests, Email can receive
          emails, Cron runs periodically, and Script can be used for libraries
          or one-off calculations
      url:
        type: string
        docs: The URL of this val on the Val Town website
        validation:
          format: uri
      links: BasicValLinks
      author:
        type: optional<BasicValAuthor>
        docs: The user who created this val
    source:
      openapi: ../openapi.yml
  PaginationLinks:
    docs: Links to use for pagination
    properties:
      self:
        type: string
        docs: URL of this page
        validation:
          format: uri
      prev:
        type: optional<string>
        docs: URL of the previous page, if any
        validation:
          format: uri
      next:
        type: optional<string>
        docs: URL of the next page, if any
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
errors:
  EvalPostRequestBadRequestError:
    status-code: 400
    type: EvalPostRequestBadRequestErrorBody
    docs: Default Response
    examples:
      - value:
          type: error
          error: error
  EvalGetRequestBadRequestError:
    status-code: 400
    type: EvalGetRequestBadRequestErrorBody
    docs: The function throw an error or had invalid syntax
    examples:
      - value:
          type: error
          error: error
  EmailsSendRequestInternalServerError:
    status-code: 500
    type: EmailsSendRequestInternalServerErrorBody
    docs: Default Response
    examples:
      - value:
          error: error
  ValsDeleteRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: The val was not found
  ValsDeleteVersionRequestNotFoundError:
    status-code: 404
    type: unknown
    docs: The val was not found
  ValsCancelRequestNotFoundError:
    status-code: 404
    type: string
    docs: Default Response
    examples:
      - value: string
navigation:
  - vals
  - alias
  - me
  - users
  - sqlite
  - blobs
  - search
  - emails
",
    },
    "alias.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Many API endpoints
accept IDs instead of user-facing names. The alias
endpoints let you convert between the user-facing name of a
val or another object into an ID that can be used with other
API endpoints",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "alias",
          "endpoints": {
            "username": {
              "auth": false,
              "docs": "Get basic details about a user, given their username",
              "examples": [
                {
                  "path-parameters": {
                    "username": "username",
                  },
                  "response": {
                    "body": {
                      "bio": "Hello world",
                      "id": "00000000-0000-0000-0000-000000000000",
                      "links": {
                        "self": "self",
                      },
                      "profileImageUrl": "profileImageUrl",
                      "url": "https://val.town/u/tmcw",
                      "username": "tmcw",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/alias/{username}",
              "path-parameters": {
                "username": {
                  "docs": "Username of the user who you are looking for",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "root.User",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "val": {
              "auth": false,
              "docs": "Get a val",
              "examples": [
                {
                  "path-parameters": {
                    "username": "username",
                    "val_name": "val_name",
                  },
                  "response": {
                    "body": {
                      "author": {
                        "id": "id",
                        "username": "username",
                      },
                      "code": "code",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "likeCount": 1,
                      "links": {
                        "module": "module",
                        "self": "self",
                        "versions": "versions",
                      },
                      "name": "name",
                      "privacy": "public",
                      "public": true,
                      "readme": "readme",
                      "referenceCount": 1,
                      "type": "interval",
                      "url": "url",
                      "version": 1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/alias/{username}/{val_name}",
              "path-parameters": {
                "username": {
                  "docs": "Username of the user whose val you are looking for",
                  "type": "string",
                },
                "val_name": {
                  "docs": "Name of the val you’re looking for",
                  "type": "string",
                },
              },
              "response": {
                "docs": "A Val",
                "status-code": 200,
                "type": "AliasValResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AliasValResponse": {
            "docs": "A Val",
            "inline": undefined,
            "properties": {
              "author": {
                "docs": "The user who created this val",
                "type": "optional<AliasValResponseAuthor>",
              },
              "code": {
                "docs": "TypeScript code associated with this val",
                "type": "optional<string>",
              },
              "createdAt": "datetime",
              "id": {
                "docs": "This val’s id",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "likeCount": {
                "docs": "How many likes this val has received",
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "links": "AliasValResponseLinks",
              "name": {
                "docs": "The name of this val",
                "type": "string",
              },
              "privacy": {
                "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                "type": "AliasValResponsePrivacy",
              },
              "public": {
                "docs": "Whether this val is available publicly on Val Town",
                "type": "boolean",
              },
              "readme": {
                "docs": "This val’s readme, as Markdown",
                "type": "optional<string>",
              },
              "referenceCount": {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
              "type": {
                "docs": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
                "type": "AliasValResponseType",
              },
              "url": {
                "docs": "The URL of this val on the Val Town website",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": {
                "docs": "The version of this val, starting at zero",
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AliasValResponseAuthor": {
            "docs": "The user who created this val",
            "inline": true,
            "properties": {
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AliasValResponseLinks": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "module": {
                "docs": "The URL of this Val’s source code as a module",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "self": {
                "docs": "The URL of this val on this API",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "versions": {
                "docs": "The endpoint to retrieve this val’s versions",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AliasValResponsePrivacy": {
            "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
            "enum": [
              "public",
              "unlisted",
              "private",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "AliasValResponseType": {
            "docs": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
            "enum": [
              "interval",
              "http",
              "express",
              "email",
              "script",
              "rpc",
              "httpnext",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    username:
      path: /v1/alias/{username}
      method: GET
      auth: false
      docs: Get basic details about a user, given their username
      source:
        openapi: ../openapi.yml
      path-parameters:
        username:
          type: string
          docs: Username of the user who you are looking for
      response:
        docs: Default Response
        type: root.User
        status-code: 200
      examples:
        - path-parameters:
            username: username
          response:
            body:
              id: 00000000-0000-0000-0000-000000000000
              bio: Hello world
              username: tmcw
              profileImageUrl: profileImageUrl
              url: https://val.town/u/tmcw
              links:
                self: self
    val:
      path: /v1/alias/{username}/{val_name}
      method: GET
      auth: false
      docs: Get a val
      source:
        openapi: ../openapi.yml
      path-parameters:
        username:
          type: string
          docs: Username of the user whose val you are looking for
        val_name:
          type: string
          docs: Name of the val you’re looking for
      response:
        docs: A Val
        type: AliasValResponse
        status-code: 200
      examples:
        - path-parameters:
            username: username
            val_name: val_name
          response:
            body:
              name: name
              id: id
              version: 1
              code: code
              public: true
              createdAt: '2024-01-15T09:30:00Z'
              privacy: public
              type: interval
              url: url
              links:
                self: self
                versions: versions
                module: module
              author:
                id: id
                username: username
              likeCount: 1
              referenceCount: 1
              readme: readme
  source:
    openapi: ../openapi.yml
  display-name: alias
docs: |-
  Many API endpoints
  accept IDs instead of user-facing names. The alias
  endpoints let you convert between the user-facing name of a
  val or another object into an ID that can be used with other
  API endpoints
types:
  AliasValResponsePrivacy:
    enum:
      - public
      - unlisted
      - private
    docs: >-
      This val’s privacy setting. Unlisted vals do not appear on profile pages
      or elsewhere, but you can link to them.
    inline: true
    source:
      openapi: ../openapi.yml
  AliasValResponseType:
    enum:
      - interval
      - http
      - express
      - email
      - script
      - rpc
      - httpnext
    docs: >-
      The type of a val. HTTP can receive web requests, Email can receive
      emails, Cron runs periodically, and Script can be used for libraries or
      one-off calculations
    inline: true
    source:
      openapi: ../openapi.yml
  AliasValResponseLinks:
    properties:
      self:
        type: string
        docs: The URL of this val on this API
        validation:
          format: uri
      versions:
        type: string
        docs: The endpoint to retrieve this val’s versions
        validation:
          format: uri
      module:
        type: string
        docs: The URL of this Val’s source code as a module
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  AliasValResponseAuthor:
    docs: The user who created this val
    properties:
      id:
        type: string
        validation:
          format: uuid
      username: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  AliasValResponse:
    docs: A Val
    properties:
      name:
        type: string
        docs: The name of this val
      id:
        type: string
        docs: This val’s id
        validation:
          format: uuid
      version:
        type: integer
        docs: The version of this val, starting at zero
        validation:
          min: 0
      code:
        type: optional<string>
        docs: TypeScript code associated with this val
      public:
        type: boolean
        docs: Whether this val is available publicly on Val Town
      createdAt: datetime
      privacy:
        type: AliasValResponsePrivacy
        docs: >-
          This val’s privacy setting. Unlisted vals do not appear on profile
          pages or elsewhere, but you can link to them.
      type:
        type: AliasValResponseType
        docs: >-
          The type of a val. HTTP can receive web requests, Email can receive
          emails, Cron runs periodically, and Script can be used for libraries
          or one-off calculations
      url:
        type: string
        docs: The URL of this val on the Val Town website
        validation:
          format: uri
      links: AliasValResponseLinks
      author:
        type: optional<AliasValResponseAuthor>
        docs: The user who created this val
      likeCount:
        type: integer
        docs: How many likes this val has received
        validation:
          min: 0
      referenceCount:
        type: integer
        validation:
          min: 0
      readme:
        type: optional<string>
        docs: This val’s readme, as Markdown
    source:
      openapi: ../openapi.yml
",
    },
    "blobs.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Blobs",
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "blobs",
          "endpoints": {
            "delete": {
              "auth": true,
              "docs": "Delete a blob",
              "examples": [
                {
                  "path-parameters": {
                    "key": "key",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/blob/{key}",
              "path-parameters": {
                "key": {
                  "docs": "Key that uniquely identifies this blob",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": false,
              "docs": "Get a blob’s contents.",
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/blob/{key}",
              "path-parameters": {
                "key": {
                  "docs": "Key that uniquely identifies this blob",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Binary contents of the returned file",
                "status-code": 200,
                "type": "file",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": false,
              "docs": "List blobs in your account",
              "examples": [
                {
                  "response": {
                    "body": [
                      {
                        "key": "hello_world",
                        "lastModified": "2024-06-24T20:00:59Z",
                        "size": 20,
                      },
                    ],
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/blob",
              "request": {
                "name": "BlobsListRequest",
                "query-parameters": {
                  "prefix": {
                    "docs": "If specified, only include blobs that start with this string",
                    "type": "optional<string>",
                  },
                },
              },
              "response": {
                "docs": "List of blobs that you’ve stored",
                "status-code": 200,
                "type": "list<BlobListingItem>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "store": {
              "auth": true,
              "docs": "Store data in blob storage",
              "examples": [
                {
                  "path-parameters": {
                    "key": "key",
                  },
                  "request": "string",
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/blob/{key}",
              "path-parameters": {
                "key": {
                  "docs": "Key that uniquely identifies this blob",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "docs": "Binary input data",
                  "type": "string",
                  "validation": {
                    "format": "binary",
                    "maxLength": undefined,
                    "minLength": undefined,
                    "pattern": undefined,
                  },
                },
                "content-type": "application/json",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "BlobListingItem": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "key": "string",
              "lastModified": {
                "docs": "Creation date of the object",
                "type": "optional<datetime>",
              },
              "size": {
                "docs": "Size in bytes of the object",
                "type": "optional<integer>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  BlobListingItem:
    properties:
      key: string
      size:
        type: optional<integer>
        docs: Size in bytes of the object
      lastModified:
        type: optional<datetime>
        docs: Creation date of the object
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /v1/blob
      method: GET
      auth: false
      docs: List blobs in your account
      source:
        openapi: ../openapi.yml
      request:
        name: BlobsListRequest
        query-parameters:
          prefix:
            type: optional<string>
            docs: If specified, only include blobs that start with this string
      response:
        docs: List of blobs that you’ve stored
        type: list<BlobListingItem>
        status-code: 200
      examples:
        - response:
            body:
              - key: hello_world
                size: 20
                lastModified: '2024-06-24T20:00:59Z'
    get:
      path: /v1/blob/{key}
      method: GET
      auth: false
      docs: Get a blob’s contents.
      source:
        openapi: ../openapi.yml
      path-parameters:
        key:
          type: string
          docs: Key that uniquely identifies this blob
      response:
        docs: Binary contents of the returned file
        type: file
        status-code: 200
    store:
      path: /v1/blob/{key}
      method: POST
      auth: true
      docs: Store data in blob storage
      source:
        openapi: ../openapi.yml
      path-parameters:
        key:
          type: string
          docs: Key that uniquely identifies this blob
      request:
        body:
          type: string
          docs: Binary input data
          validation:
            format: binary
        content-type: application/json
      examples:
        - path-parameters:
            key: key
          request: string
    delete:
      path: /v1/blob/{key}
      method: DELETE
      auth: true
      docs: Delete a blob
      source:
        openapi: ../openapi.yml
      path-parameters:
        key:
          type: string
          docs: Key that uniquely identifies this blob
      examples:
        - path-parameters:
            key: key
  source:
    openapi: ../openapi.yml
  display-name: blobs
docs: Blobs
",
    },
    "emails.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Emails",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "emails",
          "endpoints": {
            "send": {
              "auth": true,
              "docs": "Send emails",
              "errors": [
                "root.EmailsSendRequestInternalServerError",
              ],
              "examples": [
                {
                  "request": {
                    "html": "Hello <strong>world</strong>",
                    "subject": "An important message",
                    "text": "Hello world",
                  },
                  "response": {
                    "body": {
                      "message": "message",
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/email",
              "request": {
                "body": {
                  "properties": {
                    "attachments": {
                      "docs": "A list of attachments to add to the email",
                      "type": "optional<list<AttachmentObject>>",
                    },
                    "bcc": {
                      "docs": "A single email or list of emails for one of the address fields",
                      "type": "optional<EmailDataInput>",
                    },
                    "cc": {
                      "docs": "A single email or list of emails for one of the address fields",
                      "type": "optional<EmailDataInput>",
                    },
                    "from": "optional<EmailData>",
                    "html": {
                      "docs": "HTML content of the email. Can be specified alongside text",
                      "type": "optional<string>",
                    },
                    "replyToList": {
                      "docs": "A reply-to list of email addresses",
                      "type": "optional<ReplyToList>",
                    },
                    "subject": {
                      "docs": "The subject line of the email",
                      "type": "optional<string>",
                    },
                    "text": {
                      "docs": "Text content of the email, for email clients that may not support HTML",
                      "type": "optional<string>",
                    },
                    "to": {
                      "docs": "A single email or list of emails for one of the address fields",
                      "type": "optional<EmailDataInput>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "EmailsSendRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Successfully sent email",
                "status-code": 200,
                "type": "EmailsSendResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "AttachmentObject": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "content": "string",
              "contentId": {
                "type": "optional<string>",
              },
              "disposition": {
                "type": "optional<string>",
              },
              "filename": "string",
              "type": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmailData": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              {
                "docs": "An email address and name",
                "type": "EmailNameAndAddress",
              },
            ],
          },
          "EmailDataInput": {
            "discriminated": false,
            "docs": "A single email or list of emails for one of the address fields",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "display-name": "EmailData",
                "type": "EmailData",
              },
              {
                "type": "list<EmailData>",
              },
            ],
          },
          "EmailNameAndAddress": {
            "docs": "An email address and name",
            "inline": true,
            "properties": {
              "email": "string",
              "name": {
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "EmailsSendResponse": {
            "docs": "Successfully sent email",
            "inline": undefined,
            "properties": {
              "message": "string",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ReplyToList": {
            "discriminated": false,
            "docs": "A reply-to list of email addresses",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "An email address and name",
                "type": "EmailNameAndAddress",
              },
              {
                "type": "list<EmailNameAndAddress>",
              },
            ],
          },
        },
      },
      "rawContents": "types:
  EmailNameAndAddress:
    docs: An email address and name
    properties:
      name:
        type: optional<string>
      email: string
    source:
      openapi: ../openapi.yml
    inline: true
  EmailData:
    discriminated: false
    union:
      - string
      - type: EmailNameAndAddress
        docs: An email address and name
    source:
      openapi: ../openapi.yml
    inline: true
  EmailDataInput:
    discriminated: false
    docs: A single email or list of emails for one of the address fields
    union:
      - display-name: EmailData
        type: EmailData
      - type: list<EmailData>
    source:
      openapi: ../openapi.yml
    inline: true
  AttachmentObject:
    properties:
      content: string
      filename: string
      type:
        type: optional<string>
      disposition:
        type: optional<string>
      contentId:
        type: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  ReplyToList:
    discriminated: false
    docs: A reply-to list of email addresses
    union:
      - type: EmailNameAndAddress
        docs: An email address and name
      - type: list<EmailNameAndAddress>
    source:
      openapi: ../openapi.yml
    inline: true
  EmailsSendResponse:
    docs: Successfully sent email
    properties:
      message: string
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    send:
      path: /v1/email
      method: POST
      auth: true
      docs: Send emails
      source:
        openapi: ../openapi.yml
      request:
        name: EmailsSendRequest
        body:
          properties:
            subject:
              type: optional<string>
              docs: The subject line of the email
            from: optional<EmailData>
            to:
              type: optional<EmailDataInput>
              docs: A single email or list of emails for one of the address fields
            cc:
              type: optional<EmailDataInput>
              docs: A single email or list of emails for one of the address fields
            bcc:
              type: optional<EmailDataInput>
              docs: A single email or list of emails for one of the address fields
            text:
              type: optional<string>
              docs: >-
                Text content of the email, for email clients that may not
                support HTML
            html:
              type: optional<string>
              docs: HTML content of the email. Can be specified alongside text
            attachments:
              type: optional<list<AttachmentObject>>
              docs: A list of attachments to add to the email
            replyToList:
              type: optional<ReplyToList>
              docs: A reply-to list of email addresses
        content-type: application/json
      response:
        docs: Successfully sent email
        type: EmailsSendResponse
        status-code: 200
      errors:
        - root.EmailsSendRequestInternalServerError
      examples:
        - request:
            subject: An important message
            text: Hello world
            html: Hello <strong>world</strong>
          response:
            body:
              message: message
  source:
    openapi: ../openapi.yml
  display-name: emails
docs: Emails
",
    },
    "me.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "These endpoints
give access to details and data from the requesting user.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "me",
          "endpoints": {
            "comments": {
              "auth": false,
              "docs": "Get comments related to current user, either given or received",
              "examples": [
                {
                  "query-parameters": {
                    "limit": 1,
                    "offset": 1,
                    "relationship": "any",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "author": {
                            "id": "id",
                          },
                          "comment": "comment",
                          "createdAt": "2024-01-15T09:30:00Z",
                          "id": "id",
                          "val": {
                            "id": "id",
                            "name": "name",
                            "privacy": "public",
                            "version": 1,
                          },
                        },
                      ],
                      "links": {
                        "next": "next",
                        "prev": "prev",
                        "self": "self",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/me/comments",
              "request": {
                "name": "MeCommentsRequest",
                "query-parameters": {
                  "limit": {
                    "default": 20,
                    "docs": "Maximum items to return in each paginated response",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Number of items to skip in order to deliver paginated results",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": undefined,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "relationship": {
                    "default": "any",
                    "docs": "Whether to get comments you have received, given, or both",
                    "type": "MeCommentsRequestRelationship",
                  },
                  "since": {
                    "docs": "Include items created after this date",
                    "type": "optional<datetime>",
                  },
                  "until": {
                    "docs": "Include items created before this date",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "A paginated result set",
                "status-code": 200,
                "type": "MeCommentsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": false,
              "docs": "Get profile information for the current user",
              "examples": [
                {
                  "response": {
                    "body": {
                      "bio": "Hello world",
                      "email": "example@example.com",
                      "id": "00000000-0000-0000-0000-000000000000",
                      "links": {
                        "self": "self",
                      },
                      "profileImageUrl": "profileImageUrl",
                      "tier": "pro",
                      "url": "url",
                      "username": "tmcw",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/me",
              "response": {
                "docs": "Your user information, with tier and email included",
                "status-code": 200,
                "type": "MeGetResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "likes": {
              "auth": false,
              "docs": "Get vals liked by the current user",
              "examples": [
                {
                  "query-parameters": {
                    "limit": 1,
                    "offset": 1,
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "author": {
                            "id": "00000000-0000-0000-0000-000000000000",
                            "username": "tmcw",
                          },
                          "code": "export const count = 1;",
                          "createdAt": "2024-06-11T22:05:12Z",
                          "id": "00000000-0000-0000-0000-000000000000",
                          "links": {
                            "module": "module",
                            "self": "self",
                            "versions": "versions",
                          },
                          "name": "counter",
                          "privacy": "public",
                          "public": true,
                          "type": "script",
                          "url": "https://val.town/v/tmcw/counter",
                          "version": 0,
                        },
                      ],
                      "links": {
                        "next": "next",
                        "prev": "prev",
                        "self": "self",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/me/likes",
              "request": {
                "name": "MeLikesRequest",
                "query-parameters": {
                  "limit": {
                    "default": 20,
                    "docs": "Maximum items to return in each paginated response",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Number of items to skip in order to deliver paginated results",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": undefined,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "A paginated result set",
                "status-code": 200,
                "type": "MeLikesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "references": {
              "auth": false,
              "docs": "Get vals that depend on any of the user's vals",
              "examples": [
                {
                  "query-parameters": {
                    "limit": 1,
                    "offset": 1,
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "dependsOn": {
                            "id": "id",
                            "name": "name",
                          },
                          "reference": {
                            "id": "id",
                            "name": "name",
                          },
                          "referencedAt": "2024-01-15T09:30:00Z",
                        },
                      ],
                      "links": {
                        "next": "next",
                        "prev": "prev",
                        "self": "self",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/me/references",
              "request": {
                "name": "MeReferencesRequest",
                "query-parameters": {
                  "limit": {
                    "default": 20,
                    "docs": "Maximum items to return in each paginated response",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Number of items to skip in order to deliver paginated results",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": undefined,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "since": {
                    "docs": "Include items created after this date",
                    "type": "optional<datetime>",
                  },
                  "until": {
                    "docs": "Include items created before this date",
                    "type": "optional<datetime>",
                  },
                },
              },
              "response": {
                "docs": "A paginated result set",
                "status-code": 200,
                "type": "MeReferencesResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "MeCommentsRequestRelationship": {
            "default": "any",
            "enum": [
              "any",
              "received",
              "given",
            ],
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeCommentsResponse": {
            "docs": "A paginated result set",
            "inline": undefined,
            "properties": {
              "data": "list<MeCommentsResponseDataItem>",
              "links": "root.PaginationLinks",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeCommentsResponseDataItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "author": "MeCommentsResponseDataItemAuthor",
              "comment": {
                "docs": "Text of the given comment, in Markdown",
                "type": "string",
              },
              "createdAt": "datetime",
              "id": {
                "docs": "The comment’s id",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "val": "MeCommentsResponseDataItemVal",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeCommentsResponseDataItemAuthor": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeCommentsResponseDataItemVal": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "author": {
                "docs": "The user who created this val",
                "type": "optional<MeCommentsResponseDataItemValAuthor>",
              },
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "name": {
                "docs": "Name of the val that is being commented on",
                "type": "string",
              },
              "privacy": {
                "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                "type": "MeCommentsResponseDataItemValPrivacy",
              },
              "version": {
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeCommentsResponseDataItemValAuthor": {
            "docs": "The user who created this val",
            "inline": true,
            "properties": {
              "id": {
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "username": "optional<string>",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeCommentsResponseDataItemValPrivacy": {
            "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
            "enum": [
              "public",
              "unlisted",
              "private",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeGetResponse": {
            "docs": "Your user information, with tier and email included",
            "inline": undefined,
            "properties": {
              "bio": {
                "docs": "The user’s biography, if they have provided one",
                "type": "optional<string>",
              },
              "email": {
                "docs": "Your email address",
                "type": "string",
              },
              "id": {
                "docs": "The ID of this user",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "links": "MeGetResponseLinks",
              "profileImageUrl": {
                "docs": "URL that points to the user’s profile image, if one exists",
                "type": "optional<string>",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "tier": {
                "docs": "Your account tier",
                "type": "optional<MeGetResponseTier>",
              },
              "url": {
                "docs": "URL of this user’s profile on Val Town’s website",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "username": {
                "docs": "The user’s handle that they chose for themselves. Does not include the @ symbol",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeGetResponseLinks": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "self": {
                "docs": "URL of this user on this API",
                "type": "string",
                "validation": {
                  "format": "uri",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeGetResponseTier": {
            "docs": "Your account tier",
            "enum": [
              "free",
              "pro",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeLikesResponse": {
            "docs": "A paginated result set",
            "inline": undefined,
            "properties": {
              "data": "list<root.BasicVal>",
              "links": "root.PaginationLinks",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeReferencesResponse": {
            "docs": "A paginated result set",
            "inline": undefined,
            "properties": {
              "data": "list<MeReferencesResponseDataItem>",
              "links": "root.PaginationLinks",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeReferencesResponseDataItem": {
            "docs": "A description of a dependency from one val (reference) to another (dependsOn) that was introduced at a particular time.",
            "inline": true,
            "properties": {
              "dependsOn": {
                "docs": "A val in a dependency relationship",
                "type": "MeReferencesResponseDataItemDependsOn",
              },
              "reference": {
                "docs": "A val in a dependency relationship",
                "type": "MeReferencesResponseDataItemReference",
              },
              "referencedAt": "datetime",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeReferencesResponseDataItemDependsOn": {
            "docs": "A val in a dependency relationship",
            "inline": true,
            "properties": {
              "author_id": {
                "docs": "The ID of the person who authored this val",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "The id of this val",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "name": {
                "docs": "The name of this val",
                "type": "string",
              },
              "username": {
                "docs": "The username of the person who authored this val",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "MeReferencesResponseDataItemReference": {
            "docs": "A val in a dependency relationship",
            "inline": true,
            "properties": {
              "author_id": {
                "docs": "The ID of the person who authored this val",
                "type": "optional<string>",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "id": {
                "docs": "The id of this val",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "name": {
                "docs": "The name of this val",
                "type": "string",
              },
              "username": {
                "docs": "The username of the person who authored this val",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  MeGetResponseLinks:
    properties:
      self:
        type: string
        docs: URL of this user on this API
        validation:
          format: uri
    source:
      openapi: ../openapi.yml
    inline: true
  MeGetResponseTier:
    enum:
      - free
      - pro
    docs: Your account tier
    inline: true
    source:
      openapi: ../openapi.yml
  MeGetResponse:
    docs: Your user information, with tier and email included
    properties:
      id:
        type: string
        docs: The ID of this user
        validation:
          format: uuid
      bio:
        type: optional<string>
        docs: The user’s biography, if they have provided one
      username:
        type: optional<string>
        docs: >-
          The user’s handle that they chose for themselves. Does not include the
          @ symbol
      profileImageUrl:
        type: optional<string>
        docs: URL that points to the user’s profile image, if one exists
        validation:
          format: uri
      url:
        type: string
        docs: URL of this user’s profile on Val Town’s website
        validation:
          format: uri
      links: MeGetResponseLinks
      tier:
        type: optional<MeGetResponseTier>
        docs: Your account tier
      email:
        type: string
        docs: Your email address
    source:
      openapi: ../openapi.yml
  MeLikesResponse:
    docs: A paginated result set
    properties:
      data: list<root.BasicVal>
      links: root.PaginationLinks
    source:
      openapi: ../openapi.yml
  MeCommentsRequestRelationship:
    enum:
      - any
      - received
      - given
    default: any
    source:
      openapi: ../openapi.yml
  MeCommentsResponseDataItemAuthor:
    properties:
      id:
        type: string
        validation:
          format: uuid
      username: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  MeCommentsResponseDataItemValPrivacy:
    enum:
      - public
      - unlisted
      - private
    docs: >-
      This val’s privacy setting. Unlisted vals do not appear on profile pages
      or elsewhere, but you can link to them.
    inline: true
    source:
      openapi: ../openapi.yml
  MeCommentsResponseDataItemValAuthor:
    docs: The user who created this val
    properties:
      id:
        type: string
        validation:
          format: uuid
      username: optional<string>
    source:
      openapi: ../openapi.yml
    inline: true
  MeCommentsResponseDataItemVal:
    properties:
      name:
        type: string
        docs: Name of the val that is being commented on
      id:
        type: string
        validation:
          format: uuid
      version:
        type: integer
        validation:
          min: 0
      privacy:
        type: MeCommentsResponseDataItemValPrivacy
        docs: >-
          This val’s privacy setting. Unlisted vals do not appear on profile
          pages or elsewhere, but you can link to them.
      author:
        type: optional<MeCommentsResponseDataItemValAuthor>
        docs: The user who created this val
    source:
      openapi: ../openapi.yml
    inline: true
  MeCommentsResponseDataItem:
    properties:
      comment:
        type: string
        docs: Text of the given comment, in Markdown
      id:
        type: string
        docs: The comment’s id
        validation:
          format: uuid
      createdAt: datetime
      author: MeCommentsResponseDataItemAuthor
      val: MeCommentsResponseDataItemVal
    source:
      openapi: ../openapi.yml
    inline: true
  MeCommentsResponse:
    docs: A paginated result set
    properties:
      data: list<MeCommentsResponseDataItem>
      links: root.PaginationLinks
    source:
      openapi: ../openapi.yml
  MeReferencesResponseDataItemReference:
    docs: A val in a dependency relationship
    properties:
      id:
        type: string
        docs: The id of this val
        validation:
          format: uuid
      username:
        type: optional<string>
        docs: The username of the person who authored this val
      author_id:
        type: optional<string>
        docs: The ID of the person who authored this val
        validation:
          format: uuid
      name:
        type: string
        docs: The name of this val
    source:
      openapi: ../openapi.yml
    inline: true
  MeReferencesResponseDataItemDependsOn:
    docs: A val in a dependency relationship
    properties:
      id:
        type: string
        docs: The id of this val
        validation:
          format: uuid
      username:
        type: optional<string>
        docs: The username of the person who authored this val
      author_id:
        type: optional<string>
        docs: The ID of the person who authored this val
        validation:
          format: uuid
      name:
        type: string
        docs: The name of this val
    source:
      openapi: ../openapi.yml
    inline: true
  MeReferencesResponseDataItem:
    docs: >-
      A description of a dependency from one val (reference) to another
      (dependsOn) that was introduced at a particular time.
    properties:
      reference:
        type: MeReferencesResponseDataItemReference
        docs: A val in a dependency relationship
      dependsOn:
        type: MeReferencesResponseDataItemDependsOn
        docs: A val in a dependency relationship
      referencedAt: datetime
    source:
      openapi: ../openapi.yml
    inline: true
  MeReferencesResponse:
    docs: A paginated result set
    properties:
      data: list<MeReferencesResponseDataItem>
      links: root.PaginationLinks
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get:
      path: /v1/me
      method: GET
      auth: false
      docs: Get profile information for the current user
      source:
        openapi: ../openapi.yml
      response:
        docs: Your user information, with tier and email included
        type: MeGetResponse
        status-code: 200
      examples:
        - response:
            body:
              id: 00000000-0000-0000-0000-000000000000
              bio: Hello world
              username: tmcw
              profileImageUrl: profileImageUrl
              url: url
              links:
                self: self
              tier: pro
              email: example@example.com
    likes:
      path: /v1/me/likes
      method: GET
      auth: false
      docs: Get vals liked by the current user
      source:
        openapi: ../openapi.yml
      request:
        name: MeLikesRequest
        query-parameters:
          offset:
            type: integer
            default: 0
            docs: Number of items to skip in order to deliver paginated results
            validation:
              min: 0
          limit:
            type: integer
            default: 20
            docs: Maximum items to return in each paginated response
            validation:
              min: 1
              max: 100
      response:
        docs: A paginated result set
        type: MeLikesResponse
        status-code: 200
      examples:
        - query-parameters:
            offset: 1
            limit: 1
          response:
            body:
              data:
                - name: counter
                  id: 00000000-0000-0000-0000-000000000000
                  version: 0
                  code: export const count = 1;
                  public: true
                  createdAt: '2024-06-11T22:05:12Z'
                  privacy: public
                  type: script
                  url: https://val.town/v/tmcw/counter
                  links:
                    self: self
                    versions: versions
                    module: module
                  author:
                    id: 00000000-0000-0000-0000-000000000000
                    username: tmcw
              links:
                self: self
                prev: prev
                next: next
    comments:
      path: /v1/me/comments
      method: GET
      auth: false
      docs: Get comments related to current user, either given or received
      source:
        openapi: ../openapi.yml
      request:
        name: MeCommentsRequest
        query-parameters:
          offset:
            type: integer
            default: 0
            docs: Number of items to skip in order to deliver paginated results
            validation:
              min: 0
          limit:
            type: integer
            default: 20
            docs: Maximum items to return in each paginated response
            validation:
              min: 1
              max: 100
          since:
            type: optional<datetime>
            docs: Include items created after this date
          until:
            type: optional<datetime>
            docs: Include items created before this date
          relationship:
            type: MeCommentsRequestRelationship
            default: any
            docs: Whether to get comments you have received, given, or both
      response:
        docs: A paginated result set
        type: MeCommentsResponse
        status-code: 200
      examples:
        - query-parameters:
            offset: 1
            limit: 1
            relationship: any
          response:
            body:
              data:
                - comment: comment
                  id: id
                  createdAt: '2024-01-15T09:30:00Z'
                  author:
                    id: id
                  val:
                    name: name
                    id: id
                    version: 1
                    privacy: public
              links:
                self: self
                prev: prev
                next: next
    references:
      path: /v1/me/references
      method: GET
      auth: false
      docs: Get vals that depend on any of the user's vals
      source:
        openapi: ../openapi.yml
      request:
        name: MeReferencesRequest
        query-parameters:
          offset:
            type: integer
            default: 0
            docs: Number of items to skip in order to deliver paginated results
            validation:
              min: 0
          limit:
            type: integer
            default: 20
            docs: Maximum items to return in each paginated response
            validation:
              min: 1
              max: 100
          since:
            type: optional<datetime>
            docs: Include items created after this date
          until:
            type: optional<datetime>
            docs: Include items created before this date
      response:
        docs: A paginated result set
        type: MeReferencesResponse
        status-code: 200
      examples:
        - query-parameters:
            offset: 1
            limit: 1
          response:
            body:
              data:
                - reference:
                    id: id
                    name: name
                  dependsOn:
                    id: id
                    name: name
                  referencedAt: '2024-01-15T09:30:00Z'
              links:
                self: self
                prev: prev
                next: next
  source:
    openapi: ../openapi.yml
  display-name: me
docs: |-
  These endpoints
  give access to details and data from the requesting user.
imports:
  root: __package__.yml
",
    },
    "search.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Search",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "search",
          "endpoints": {
            "vals": {
              "auth": false,
              "docs": "Search for vals across the platform",
              "examples": [
                {
                  "query-parameters": {
                    "limit": 1,
                    "offset": 1,
                    "query": "query",
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "author": {
                            "id": "00000000-0000-0000-0000-000000000000",
                            "username": "tmcw",
                          },
                          "code": "export const count = 1;",
                          "createdAt": "2024-06-11T22:05:12Z",
                          "id": "00000000-0000-0000-0000-000000000000",
                          "links": {
                            "module": "module",
                            "self": "self",
                            "versions": "versions",
                          },
                          "name": "counter",
                          "privacy": "public",
                          "public": true,
                          "type": "script",
                          "url": "https://val.town/v/tmcw/counter",
                          "version": 0,
                        },
                      ],
                      "links": {
                        "next": "next",
                        "prev": "prev",
                        "self": "self",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/search/vals",
              "request": {
                "name": "SearchValsRequest",
                "query-parameters": {
                  "limit": {
                    "default": 20,
                    "docs": "Maximum items to return in each paginated response",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Number of items to skip in order to deliver paginated results",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": undefined,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                  "query": {
                    "docs": "Search query",
                    "type": "string",
                    "validation": {
                      "format": undefined,
                      "maxLength": 512,
                      "minLength": 1,
                      "pattern": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "A paginated result set",
                "status-code": 200,
                "type": "SearchValsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "SearchValsResponse": {
            "docs": "A paginated result set",
            "inline": undefined,
            "properties": {
              "data": "list<root.BasicVal>",
              "links": "root.PaginationLinks",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
types:
  SearchValsResponse:
    docs: A paginated result set
    properties:
      data: list<root.BasicVal>
      links: root.PaginationLinks
    source:
      openapi: ../openapi.yml
service:
  auth: false
  base-path: ''
  endpoints:
    vals:
      path: /v1/search/vals
      method: GET
      auth: false
      docs: Search for vals across the platform
      source:
        openapi: ../openapi.yml
      request:
        name: SearchValsRequest
        query-parameters:
          offset:
            type: integer
            default: 0
            docs: Number of items to skip in order to deliver paginated results
            validation:
              min: 0
          limit:
            type: integer
            default: 20
            docs: Maximum items to return in each paginated response
            validation:
              min: 1
              max: 100
          query:
            type: string
            docs: Search query
            validation:
              minLength: 1
              maxLength: 512
      response:
        docs: A paginated result set
        type: SearchValsResponse
        status-code: 200
      examples:
        - query-parameters:
            offset: 1
            limit: 1
            query: query
          response:
            body:
              data:
                - name: counter
                  id: 00000000-0000-0000-0000-000000000000
                  version: 0
                  code: export const count = 1;
                  public: true
                  createdAt: '2024-06-11T22:05:12Z'
                  privacy: public
                  type: script
                  url: https://val.town/v/tmcw/counter
                  links:
                    self: self
                    versions: versions
                    module: module
                  author:
                    id: 00000000-0000-0000-0000-000000000000
                    username: tmcw
              links:
                self: self
                prev: prev
                next: next
  source:
    openapi: ../openapi.yml
  display-name: search
docs: Search
",
    },
    "sqlite.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "SQLite",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "sqlite",
          "endpoints": {
            "batch": {
              "auth": true,
              "docs": "Execute a batch of SQLite statements and return results for all of them",
              "examples": [
                {
                  "request": {
                    "mode": "read",
                    "statements": [
                      "SELECT 1;",
                    ],
                  },
                  "response": {
                    "body": [
                      {
                        "columnTypes": [
                          "number",
                        ],
                        "columns": [
                          "id",
                        ],
                        "rows": [
                          [
                            1,
                          ],
                        ],
                        "rowsAffected": 0,
                      },
                    ],
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/sqlite/batch",
              "request": {
                "body": {
                  "properties": {
                    "mode": "optional<SqliteBatchRequestMode>",
                    "statements": "list<SqliteBatchRequestStatementsItem>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SqliteBatchRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Array of results from the statements executed",
                "status-code": 200,
                "type": "list<root.ResultSet>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "execute": {
              "auth": true,
              "docs": "Execute a single SQLite statement and return results",
              "examples": [
                {
                  "name": "example1",
                  "request": {
                    "statement": "SELECT 1;",
                  },
                  "response": {
                    "body": {
                      "columnTypes": [
                        "columnTypes",
                      ],
                      "columns": [
                        "columns",
                      ],
                      "lastInsertRowid": "lastInsertRowid",
                      "rows": [
                        [
                          {
                            "key": "value",
                          },
                        ],
                      ],
                      "rowsAffected": 1.1,
                    },
                  },
                },
                {
                  "name": "example2",
                  "request": {
                    "statement": {
                      "args": [
                        1,
                      ],
                      "sql": "SELECT * FROM table WHERE column = ?;",
                    },
                  },
                  "response": {
                    "body": {
                      "columnTypes": [
                        "columnTypes",
                      ],
                      "columns": [
                        "columns",
                      ],
                      "lastInsertRowid": "lastInsertRowid",
                      "rows": [
                        [
                          {
                            "key": "value",
                          },
                        ],
                      ],
                      "rowsAffected": 1.1,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/sqlite/execute",
              "request": {
                "body": {
                  "properties": {
                    "statement": "SqliteExecuteRequestStatement",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "SqliteExecuteRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "root.ResultSet",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "ParameterizedQuery": {
            "docs": "A parameterized SQL query. See https://docs.turso.tech/sdk/ts/reference#batch-transactions for reference",
            "inline": true,
            "properties": {
              "args": {
                "display-name": "StatementArg",
                "docs": "List of arguments to be used in the given statement",
                "type": "StatementArg",
              },
              "sql": {
                "docs": "SQL statement, with ? placeholders for arguments",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SqliteBatchRequestMode": {
            "enum": [
              "write",
              "read",
              "deferred",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "SqliteBatchRequestStatementsItem": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Simple SQL statement to run in SQLite",
                "type": "string",
              },
              {
                "docs": "A parameterized SQL query. See https://docs.turso.tech/sdk/ts/reference#batch-transactions for reference",
                "type": "ParameterizedQuery",
              },
            ],
          },
          "SqliteExecuteRequestStatement": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              {
                "docs": "Simple SQL statement to run in SQLite",
                "type": "string",
              },
              {
                "docs": "A parameterized SQL query. See https://docs.turso.tech/sdk/ts/reference#batch-transactions for reference",
                "type": "ParameterizedQuery",
              },
            ],
          },
          "StatementArg": {
            "discriminated": false,
            "docs": "List of arguments to be used in the given statement",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "list<optional<TursoValue>>",
              "map<string, optional<TursoValue>>",
            ],
          },
          "TursoValue": {
            "discriminated": false,
            "docs": "A value to be used as a parameter",
            "encoding": undefined,
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "double",
              "boolean",
            ],
          },
        },
      },
      "rawContents": "types:
  TursoValue:
    discriminated: false
    docs: A value to be used as a parameter
    union:
      - string
      - double
      - boolean
    source:
      openapi: ../openapi.yml
    inline: true
  StatementArg:
    discriminated: false
    docs: List of arguments to be used in the given statement
    union:
      - list<optional<TursoValue>>
      - map<string, optional<TursoValue>>
    source:
      openapi: ../openapi.yml
    inline: true
  ParameterizedQuery:
    docs: >-
      A parameterized SQL query. See
      https://docs.turso.tech/sdk/ts/reference#batch-transactions for reference
    properties:
      sql:
        type: string
        docs: SQL statement, with ? placeholders for arguments
      args:
        display-name: StatementArg
        type: StatementArg
        docs: List of arguments to be used in the given statement
    source:
      openapi: ../openapi.yml
    inline: true
  SqliteExecuteRequestStatement:
    discriminated: false
    union:
      - type: string
        docs: Simple SQL statement to run in SQLite
      - type: ParameterizedQuery
        docs: >-
          A parameterized SQL query. See
          https://docs.turso.tech/sdk/ts/reference#batch-transactions for
          reference
    source:
      openapi: ../openapi.yml
    inline: true
  SqliteBatchRequestStatementsItem:
    discriminated: false
    union:
      - type: string
        docs: Simple SQL statement to run in SQLite
      - type: ParameterizedQuery
        docs: >-
          A parameterized SQL query. See
          https://docs.turso.tech/sdk/ts/reference#batch-transactions for
          reference
    source:
      openapi: ../openapi.yml
    inline: true
  SqliteBatchRequestMode:
    enum:
      - write
      - read
      - deferred
    inline: true
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    execute:
      path: /v1/sqlite/execute
      method: POST
      auth: true
      docs: Execute a single SQLite statement and return results
      source:
        openapi: ../openapi.yml
      request:
        name: SqliteExecuteRequest
        body:
          properties:
            statement: SqliteExecuteRequestStatement
        content-type: application/json
      response:
        docs: Default Response
        type: root.ResultSet
        status-code: 200
      examples:
        - name: example1
          request:
            statement: SELECT 1;
          response:
            body:
              columns:
                - columns
              columnTypes:
                - columnTypes
              rows:
                - - key: value
              rowsAffected: 1.1
              lastInsertRowid: lastInsertRowid
        - name: example2
          request:
            statement:
              sql: SELECT * FROM table WHERE column = ?;
              args:
                - 1
          response:
            body:
              columns:
                - columns
              columnTypes:
                - columnTypes
              rows:
                - - key: value
              rowsAffected: 1.1
              lastInsertRowid: lastInsertRowid
    batch:
      path: /v1/sqlite/batch
      method: POST
      auth: true
      docs: Execute a batch of SQLite statements and return results for all of them
      source:
        openapi: ../openapi.yml
      request:
        name: SqliteBatchRequest
        body:
          properties:
            statements: list<SqliteBatchRequestStatementsItem>
            mode: optional<SqliteBatchRequestMode>
        content-type: application/json
      response:
        docs: Array of results from the statements executed
        type: list<root.ResultSet>
        status-code: 200
      examples:
        - request:
            statements:
              - SELECT 1;
            mode: read
          response:
            body:
              - columns:
                  - id
                columnTypes:
                  - number
                rows:
                  - - 1
                rowsAffected: 0
  source:
    openapi: ../openapi.yml
  display-name: sqlite
docs: SQLite
",
    },
    "users.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "Users",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "users",
          "endpoints": {
            "get": {
              "auth": false,
              "docs": "Get basic information about a user",
              "examples": [
                {
                  "path-parameters": {
                    "user_id": "user_id",
                  },
                  "response": {
                    "body": {
                      "bio": "Hello world",
                      "id": "00000000-0000-0000-0000-000000000000",
                      "links": {
                        "self": "self",
                      },
                      "profileImageUrl": "profileImageUrl",
                      "url": "https://val.town/u/tmcw",
                      "username": "tmcw",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/users/{user_id}",
              "path-parameters": {
                "user_id": {
                  "docs": "User Id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "root.User",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "vals": {
              "auth": false,
              "docs": "List a user's vals",
              "examples": [
                {
                  "path-parameters": {
                    "user_id": "user_id",
                  },
                  "query-parameters": {
                    "limit": 1,
                    "offset": 1,
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "author": {
                            "id": "00000000-0000-0000-0000-000000000000",
                            "username": "tmcw",
                          },
                          "code": "export const count = 1;",
                          "createdAt": "2024-06-11T22:05:12Z",
                          "id": "00000000-0000-0000-0000-000000000000",
                          "links": {
                            "module": "module",
                            "self": "self",
                            "versions": "versions",
                          },
                          "name": "counter",
                          "privacy": "public",
                          "public": true,
                          "type": "script",
                          "url": "https://val.town/v/tmcw/counter",
                          "version": 0,
                        },
                      ],
                      "links": {
                        "next": "next",
                        "prev": "prev",
                        "self": "self",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/users/{user_id}/vals",
              "path-parameters": {
                "user_id": {
                  "docs": "User Id",
                  "type": "string",
                },
              },
              "request": {
                "name": "UsersValsRequest",
                "query-parameters": {
                  "limit": {
                    "default": 20,
                    "docs": "Maximum items to return in each paginated response",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Number of items to skip in order to deliver paginated results",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": undefined,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "A paginated result set",
                "status-code": 200,
                "type": "UsersValsResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "UsersValsResponse": {
            "docs": "A paginated result set",
            "inline": undefined,
            "properties": {
              "data": "list<root.BasicVal>",
              "links": "root.PaginationLinks",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    get:
      path: /v1/users/{user_id}
      method: GET
      auth: false
      docs: Get basic information about a user
      source:
        openapi: ../openapi.yml
      path-parameters:
        user_id:
          type: string
          docs: User Id
      response:
        docs: Default Response
        type: root.User
        status-code: 200
      examples:
        - path-parameters:
            user_id: user_id
          response:
            body:
              id: 00000000-0000-0000-0000-000000000000
              bio: Hello world
              username: tmcw
              profileImageUrl: profileImageUrl
              url: https://val.town/u/tmcw
              links:
                self: self
    vals:
      path: /v1/users/{user_id}/vals
      method: GET
      auth: false
      docs: List a user's vals
      source:
        openapi: ../openapi.yml
      path-parameters:
        user_id:
          type: string
          docs: User Id
      request:
        name: UsersValsRequest
        query-parameters:
          offset:
            type: integer
            default: 0
            docs: Number of items to skip in order to deliver paginated results
            validation:
              min: 0
          limit:
            type: integer
            default: 20
            docs: Maximum items to return in each paginated response
            validation:
              min: 1
              max: 100
      response:
        docs: A paginated result set
        type: UsersValsResponse
        status-code: 200
      examples:
        - path-parameters:
            user_id: user_id
          query-parameters:
            offset: 1
            limit: 1
          response:
            body:
              data:
                - name: counter
                  id: 00000000-0000-0000-0000-000000000000
                  version: 0
                  code: export const count = 1;
                  public: true
                  createdAt: '2024-06-11T22:05:12Z'
                  privacy: public
                  type: script
                  url: https://val.town/v/tmcw/counter
                  links:
                    self: self
                    versions: versions
                    module: module
                  author:
                    id: 00000000-0000-0000-0000-000000000000
                    username: tmcw
              links:
                self: self
                prev: prev
                next: next
  source:
    openapi: ../openapi.yml
  display-name: users
docs: Users
types:
  UsersValsResponse:
    docs: A paginated result set
    properties:
      data: list<root.BasicVal>
      links: root.PaginationLinks
    source:
      openapi: ../openapi.yml
",
    },
    "vals.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "docs": "These endpoints
let you get, create, and run vals.",
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "display-name": "vals",
          "endpoints": {
            "cancel": {
              "auth": true,
              "docs": "Cancel a running val",
              "errors": [
                "root.ValsCancelRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "evaluation_id": "evaluation_id",
                    "val_id": "val_id",
                  },
                  "response": {
                    "body": {
                      "found": true,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}/evaluations/{evaluation_id}/cancel",
              "path-parameters": {
                "evaluation_id": {
                  "docs": "The ID of the evaluation - the specific time that a val was run - that you want to cancel",
                  "type": "string",
                },
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
              },
              "response": {
                "docs": "The evaluation_id was successfully searched for and the evaluation was either already done or now has been cancelled",
                "status-code": 200,
                "type": "ValsCancelResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "create": {
              "auth": true,
              "docs": "Create a new val",
              "examples": [
                {
                  "request": {
                    "code": "console.log(1);",
                    "name": "myVal",
                    "privacy": "public",
                    "readme": "# My Val",
                    "type": "script",
                  },
                  "response": {
                    "body": {
                      "author": {
                        "id": "id",
                        "username": "username",
                      },
                      "code": "code",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "likeCount": 1,
                      "links": {
                        "module": "module",
                        "self": "self",
                        "versions": "versions",
                      },
                      "name": "name",
                      "privacy": "public",
                      "public": true,
                      "readme": "readme",
                      "referenceCount": 1,
                      "type": "interval",
                      "url": "url",
                      "version": 1,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/vals",
              "request": {
                "body": {
                  "properties": {
                    "code": {
                      "docs": "Val source code as TypeScript",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 256000,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "This val’s name",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 48,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "privacy": {
                      "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                      "type": "optional<ValsCreateRequestPrivacy>",
                    },
                    "readme": {
                      "docs": "Readme contents, as Markdown",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 8192,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "type": {
                      "default": "script",
                      "docs": "The type of the val you want to create. Note that this does not include interval vals, because they cannot be created through the API yet.",
                      "type": "optional<ValsCreateRequestType>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ValsCreateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "root.ExtendedVal",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "createVersion": {
              "auth": true,
              "docs": "Create a new version of a val",
              "examples": [
                {
                  "path-parameters": {
                    "val_id": "val_id",
                  },
                  "request": {
                    "code": "console.log(1);",
                    "name": "myVal",
                    "privacy": "public",
                    "readme": "# My Val",
                    "type": "script",
                  },
                  "response": {
                    "body": {
                      "author": {
                        "id": "id",
                        "username": "username",
                      },
                      "code": "code",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "likeCount": 1,
                      "links": {
                        "module": "module",
                        "self": "self",
                        "versions": "versions",
                      },
                      "name": "name",
                      "privacy": "public",
                      "public": true,
                      "readme": "readme",
                      "referenceCount": 1,
                      "type": "interval",
                      "url": "url",
                      "version": 1,
                    },
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}/versions",
              "path-parameters": {
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "code": {
                      "docs": "Val source code as TypeScript",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 256000,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "This val’s name",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 48,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "privacy": {
                      "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                      "type": "optional<ValsCreateVersionRequestPrivacy>",
                    },
                    "readme": {
                      "docs": "Readme contents, as Markdown",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 8192,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "type": {
                      "default": "script",
                      "docs": "The type of the val you want to create. Note that this does not include interval vals, because they cannot be created through the API yet.",
                      "type": "optional<ValsCreateVersionRequestType>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ValsCreateVersionRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Default Response",
                "status-code": 201,
                "type": "root.ExtendedVal",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "delete": {
              "auth": true,
              "docs": "Delete a val",
              "errors": [
                "root.ValsDeleteRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "val_id": "val_id",
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}",
              "path-parameters": {
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "deleteVersion": {
              "auth": true,
              "docs": "Delete a specific version of a val",
              "errors": [
                "root.ValsDeleteVersionRequestNotFoundError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "val_id": "val_id",
                    "version": 1,
                  },
                },
              ],
              "method": "DELETE",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}/versions/{version}",
              "path-parameters": {
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
                "version": {
                  "docs": "The val version",
                  "type": "integer",
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "evalGet": {
              "auth": false,
              "docs": "Run JavaScript or TypeScript without saving it permanently as a val",
              "errors": [
                "root.EvalGetRequestBadRequestError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "code": "code",
                  },
                  "response": {
                    "body": "string",
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/eval/{code}",
              "path-parameters": {
                "code": {
                  "docs": "TypeScript source code",
                  "type": "string",
                },
              },
              "request": {
                "name": "EvalGetRequest",
                "query-parameters": {
                  "args": "optional<string>",
                },
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "optional<EvalGetResponse>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "evalPost": {
              "auth": false,
              "docs": "Run JavaScript or TypeScript without saving it permanently as a val",
              "errors": [
                "root.EvalPostRequestBadRequestError",
              ],
              "examples": [
                {
                  "name": "example1",
                  "request": {
                    "code": "export default 1",
                  },
                  "response": {
                    "body": "string",
                  },
                },
                {
                  "name": "example2",
                  "request": {
                    "args": [
                      1,
                    ],
                    "code": "export default function main(value: number) { return value; }",
                  },
                  "response": {
                    "body": "string",
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/eval",
              "request": {
                "body": {
                  "properties": {
                    "args": {
                      "docs": "Array of arguments passed to the given function. If this is present, the default export should be a function and will be called with these arguments, and the function result will be returned. If `args` is not present, no function calls are made, but you can still return a value using `export default myVariable`.",
                      "type": "optional<list<unknown>>",
                    },
                    "code": {
                      "docs": "TypeScript source code",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 8192,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "EvalPostRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "optional<EvalPostResponse>",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "get": {
              "auth": false,
              "docs": "Get a val by id",
              "examples": [
                {
                  "path-parameters": {
                    "val_id": "val_id",
                  },
                  "response": {
                    "body": {
                      "author": {
                        "id": "id",
                        "username": "username",
                      },
                      "code": "code",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "likeCount": 1,
                      "links": {
                        "module": "module",
                        "self": "self",
                        "versions": "versions",
                      },
                      "name": "name",
                      "privacy": "public",
                      "public": true,
                      "readme": "readme",
                      "referenceCount": 1,
                      "type": "interval",
                      "url": "url",
                      "version": 1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}",
              "path-parameters": {
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "root.ExtendedVal",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "getVersion": {
              "auth": false,
              "docs": "Get a specific version of a val",
              "examples": [
                {
                  "path-parameters": {
                    "val_id": "val_id",
                    "version": 1,
                  },
                  "query-parameters": {
                    "limit": 1,
                    "offset": 1,
                  },
                  "response": {
                    "body": {
                      "author": {
                        "id": "id",
                        "username": "username",
                      },
                      "code": "code",
                      "createdAt": "2024-01-15T09:30:00Z",
                      "id": "id",
                      "likeCount": 1,
                      "links": {
                        "module": "module",
                        "self": "self",
                        "versions": "versions",
                      },
                      "name": "name",
                      "privacy": "public",
                      "public": true,
                      "readme": "readme",
                      "referenceCount": 1,
                      "type": "interval",
                      "url": "url",
                      "version": 1,
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}/versions/{version}",
              "path-parameters": {
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
                "version": {
                  "docs": "The val version",
                  "type": "integer",
                },
              },
              "request": {
                "name": "ValsGetVersionRequest",
                "query-parameters": {
                  "limit": {
                    "default": 20,
                    "docs": "Maximum items to return in each paginated response",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Number of items to skip in order to deliver paginated results",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": undefined,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "Default Response",
                "status-code": 200,
                "type": "root.ExtendedVal",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "list": {
              "auth": false,
              "docs": "List versions of a val",
              "examples": [
                {
                  "path-parameters": {
                    "val_id": "val_id",
                  },
                  "query-parameters": {
                    "limit": 1,
                    "offset": 1,
                  },
                  "response": {
                    "body": {
                      "data": [
                        {
                          "createdAt": "2024-01-15T09:30:00Z",
                          "val_id": "val_id",
                          "version": 1,
                        },
                      ],
                      "links": {
                        "next": "next",
                        "prev": "prev",
                        "self": "self",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}/versions",
              "path-parameters": {
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
              },
              "request": {
                "name": "ValsListRequest",
                "query-parameters": {
                  "limit": {
                    "default": 20,
                    "docs": "Maximum items to return in each paginated response",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                  "offset": {
                    "default": 0,
                    "docs": "Number of items to skip in order to deliver paginated results",
                    "type": "integer",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": undefined,
                      "min": 0,
                      "multipleOf": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "A paginated result set",
                "status-code": 200,
                "type": "ValsListResponse",
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "put": {
              "auth": true,
              "docs": "Run an existing val or create a new one",
              "examples": [
                {
                  "request": {
                    "code": "console.log(1);",
                    "name": "myVal",
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/v1/vals",
              "request": {
                "body": {
                  "properties": {
                    "code": {
                      "docs": "Val source code as TypeScript",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 256000,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "name": {
                      "docs": "This val’s name",
                      "type": "string",
                      "validation": {
                        "format": undefined,
                        "maxLength": 48,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ValsPutRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "runGet": {
              "auth": false,
              "availability": "deprecated",
              "docs": "Run a val, specify any parameters in a querystring",
              "examples": [
                {
                  "path-parameters": {
                    "valname": "valname",
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/v1/run/{valname}",
              "path-parameters": {
                "valname": {
                  "docs": "Name of the val, in concatenated style, like username.valname",
                  "type": "string",
                },
              },
              "request": {
                "name": "RunGetRequest",
                "query-parameters": {
                  "args": {
                    "docs": "An argument that will be passed to the function as a JavaScript value",
                    "type": "optional<string>",
                  },
                },
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "runPost": {
              "auth": false,
              "availability": "deprecated",
              "docs": "Run a val, with arguments in the request body",
              "examples": [
                {
                  "path-parameters": {
                    "valname": "valname",
                  },
                  "request": {
                    "args": [
                      1,
                    ],
                  },
                },
              ],
              "method": "POST",
              "pagination": undefined,
              "path": "/v1/run/{valname}",
              "path-parameters": {
                "valname": {
                  "docs": "Name of the val, in concatenated style, like username.valname",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "args": "optional<list<unknown>>",
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "RunPostRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
            "update": {
              "auth": true,
              "docs": "Update an existing val",
              "examples": [
                {
                  "name": "example1",
                  "path-parameters": {
                    "val_id": "val_id",
                  },
                  "request": {
                    "name": "myVal",
                    "readme": "# Updated readme",
                  },
                },
                {
                  "name": "example2",
                  "path-parameters": {
                    "val_id": "val_id",
                  },
                  "request": {
                    "type": "http",
                  },
                },
              ],
              "method": "PUT",
              "pagination": undefined,
              "path": "/v1/vals/{val_id}",
              "path-parameters": {
                "val_id": {
                  "docs": "Id of a val",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "name": {
                      "docs": "This val’s name",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 48,
                        "minLength": 1,
                        "pattern": undefined,
                      },
                    },
                    "privacy": {
                      "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                      "type": "optional<ValsUpdateRequestPrivacy>",
                    },
                    "readme": {
                      "docs": "Readme contents, as Markdown",
                      "type": "optional<string>",
                      "validation": {
                        "format": undefined,
                        "maxLength": 8192,
                        "minLength": undefined,
                        "pattern": undefined,
                      },
                    },
                    "type": {
                      "docs": "The type of the val you want to update. Note that this does not include interval vals, because they cannot be created through the API yet.",
                      "type": "optional<ValsUpdateRequestType>",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "ValsUpdateRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "source": {
                "openapi": "../openapi.yml",
              },
            },
          },
          "source": {
            "openapi": "../openapi.yml",
          },
        },
        "types": {
          "EvalGetResponse": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "double",
              "map<string, unknown>",
              "list<unknown>",
              "boolean",
            ],
          },
          "EvalPostResponse": {
            "discriminated": false,
            "docs": undefined,
            "encoding": undefined,
            "inline": undefined,
            "source": {
              "openapi": "../openapi.yml",
            },
            "union": [
              "string",
              "double",
              "map<string, unknown>",
              "list<unknown>",
              "boolean",
            ],
          },
          "ValsCancelResponse": {
            "docs": "The evaluation_id was successfully searched for and the evaluation was either already done or now has been cancelled",
            "inline": undefined,
            "properties": {
              "found": {
                "docs": "True if the evaluation was found and cancelled",
                "type": "boolean",
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsCreateRequestPrivacy": {
            "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
            "enum": [
              "public",
              "unlisted",
              "private",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsCreateRequestType": {
            "default": "script",
            "docs": "The type of the val you want to create. Note that this does not include interval vals, because they cannot be created through the API yet.",
            "enum": [
              "http",
              "script",
              "email",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsCreateVersionRequestPrivacy": {
            "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
            "enum": [
              "public",
              "unlisted",
              "private",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsCreateVersionRequestType": {
            "default": "script",
            "docs": "The type of the val you want to create. Note that this does not include interval vals, because they cannot be created through the API yet.",
            "enum": [
              "http",
              "script",
              "email",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsListResponse": {
            "docs": "A paginated result set",
            "inline": undefined,
            "properties": {
              "data": "list<ValsListResponseDataItem>",
              "links": "root.PaginationLinks",
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsListResponseDataItem": {
            "docs": undefined,
            "inline": true,
            "properties": {
              "createdAt": "datetime",
              "val_id": {
                "docs": "Id of a val",
                "type": "string",
                "validation": {
                  "format": "uuid",
                  "maxLength": undefined,
                  "minLength": undefined,
                  "pattern": undefined,
                },
              },
              "version": {
                "docs": "Version of the val",
                "type": "integer",
                "validation": {
                  "exclusiveMax": undefined,
                  "exclusiveMin": undefined,
                  "max": undefined,
                  "min": 0,
                  "multipleOf": undefined,
                },
              },
            },
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsUpdateRequestPrivacy": {
            "docs": "This val’s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
            "enum": [
              "public",
              "unlisted",
              "private",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
          "ValsUpdateRequestType": {
            "docs": "The type of the val you want to update. Note that this does not include interval vals, because they cannot be created through the API yet.",
            "enum": [
              "http",
              "script",
              "email",
            ],
            "inline": true,
            "source": {
              "openapi": "../openapi.yml",
            },
          },
        },
      },
      "rawContents": "types:
  EvalPostResponse:
    discriminated: false
    union:
      - string
      - double
      - map<string, unknown>
      - list<unknown>
      - boolean
    source:
      openapi: ../openapi.yml
  EvalGetResponse:
    discriminated: false
    union:
      - string
      - double
      - map<string, unknown>
      - list<unknown>
      - boolean
    source:
      openapi: ../openapi.yml
  ValsCreateRequestPrivacy:
    enum:
      - public
      - unlisted
      - private
    docs: >-
      This val’s privacy setting. Unlisted vals do not appear on profile pages
      or elsewhere, but you can link to them.
    inline: true
    source:
      openapi: ../openapi.yml
  ValsCreateRequestType:
    enum:
      - http
      - script
      - email
    docs: >-
      The type of the val you want to create. Note that this does not include
      interval vals, because they cannot be created through the API yet.
    default: script
    inline: true
    source:
      openapi: ../openapi.yml
  ValsUpdateRequestPrivacy:
    enum:
      - public
      - unlisted
      - private
    docs: >-
      This val’s privacy setting. Unlisted vals do not appear on profile pages
      or elsewhere, but you can link to them.
    inline: true
    source:
      openapi: ../openapi.yml
  ValsUpdateRequestType:
    enum:
      - http
      - script
      - email
    docs: >-
      The type of the val you want to update. Note that this does not include
      interval vals, because they cannot be created through the API yet.
    inline: true
    source:
      openapi: ../openapi.yml
  ValsListResponseDataItem:
    properties:
      val_id:
        type: string
        docs: Id of a val
        validation:
          format: uuid
      version:
        type: integer
        docs: Version of the val
        validation:
          min: 0
      createdAt: datetime
    source:
      openapi: ../openapi.yml
    inline: true
  ValsListResponse:
    docs: A paginated result set
    properties:
      data: list<ValsListResponseDataItem>
      links: root.PaginationLinks
    source:
      openapi: ../openapi.yml
  ValsCreateVersionRequestPrivacy:
    enum:
      - public
      - unlisted
      - private
    docs: >-
      This val’s privacy setting. Unlisted vals do not appear on profile pages
      or elsewhere, but you can link to them.
    inline: true
    source:
      openapi: ../openapi.yml
  ValsCreateVersionRequestType:
    enum:
      - http
      - script
      - email
    docs: >-
      The type of the val you want to create. Note that this does not include
      interval vals, because they cannot be created through the API yet.
    default: script
    inline: true
    source:
      openapi: ../openapi.yml
  ValsCancelResponse:
    docs: >-
      The evaluation_id was successfully searched for and the evaluation was
      either already done or now has been cancelled
    properties:
      found:
        type: boolean
        docs: True if the evaluation was found and cancelled
    source:
      openapi: ../openapi.yml
imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    evalPost:
      path: /v1/eval
      method: POST
      auth: false
      docs: Run JavaScript or TypeScript without saving it permanently as a val
      source:
        openapi: ../openapi.yml
      request:
        name: EvalPostRequest
        body:
          properties:
            code:
              type: string
              docs: TypeScript source code
              validation:
                maxLength: 8192
            args:
              type: optional<list<unknown>>
              docs: >-
                Array of arguments passed to the given function. If this is
                present, the default export should be a function and will be
                called with these arguments, and the function result will be
                returned. If `args` is not present, no function calls are made,
                but you can still return a value using `export default
                myVariable`.
        content-type: application/json
      response:
        docs: Default Response
        type: optional<EvalPostResponse>
        status-code: 200
      errors:
        - root.EvalPostRequestBadRequestError
      examples:
        - name: example1
          request:
            code: export default 1
          response:
            body: string
        - name: example2
          request:
            code: 'export default function main(value: number) { return value; }'
            args:
              - 1
          response:
            body: string
    evalGet:
      path: /v1/eval/{code}
      method: GET
      auth: false
      docs: Run JavaScript or TypeScript without saving it permanently as a val
      source:
        openapi: ../openapi.yml
      path-parameters:
        code:
          type: string
          docs: TypeScript source code
      request:
        name: EvalGetRequest
        query-parameters:
          args: optional<string>
      response:
        docs: Default Response
        type: optional<EvalGetResponse>
        status-code: 200
      errors:
        - root.EvalGetRequestBadRequestError
      examples:
        - path-parameters:
            code: code
          response:
            body: string
    runGet:
      path: /v1/run/{valname}
      method: GET
      auth: false
      docs: Run a val, specify any parameters in a querystring
      source:
        openapi: ../openapi.yml
      path-parameters:
        valname:
          type: string
          docs: Name of the val, in concatenated style, like username.valname
      request:
        name: RunGetRequest
        query-parameters:
          args:
            type: optional<string>
            docs: >-
              An argument that will be passed to the function as a JavaScript
              value
      availability: deprecated
      examples:
        - path-parameters:
            valname: valname
    runPost:
      path: /v1/run/{valname}
      method: POST
      auth: false
      docs: Run a val, with arguments in the request body
      source:
        openapi: ../openapi.yml
      path-parameters:
        valname:
          type: string
          docs: Name of the val, in concatenated style, like username.valname
      request:
        name: RunPostRequest
        body:
          properties:
            args: optional<list<unknown>>
        content-type: application/json
      availability: deprecated
      examples:
        - path-parameters:
            valname: valname
          request:
            args:
              - 1
    create:
      path: /v1/vals
      method: POST
      auth: true
      docs: Create a new val
      source:
        openapi: ../openapi.yml
      request:
        name: ValsCreateRequest
        body:
          properties:
            code:
              type: string
              docs: Val source code as TypeScript
              validation:
                minLength: 1
                maxLength: 256000
            name:
              type: optional<string>
              docs: This val’s name
              validation:
                minLength: 1
                maxLength: 48
            readme:
              type: optional<string>
              docs: Readme contents, as Markdown
              validation:
                maxLength: 8192
            privacy:
              type: optional<ValsCreateRequestPrivacy>
              docs: >-
                This val’s privacy setting. Unlisted vals do not appear on
                profile pages or elsewhere, but you can link to them.
            type:
              type: optional<ValsCreateRequestType>
              docs: >-
                The type of the val you want to create. Note that this does not
                include interval vals, because they cannot be created through
                the API yet.
              default: script
        content-type: application/json
      response:
        docs: Default Response
        type: root.ExtendedVal
        status-code: 200
      examples:
        - request:
            code: console.log(1);
            name: myVal
            readme: '# My Val'
            privacy: public
            type: script
          response:
            body:
              name: name
              id: id
              version: 1
              code: code
              public: true
              createdAt: '2024-01-15T09:30:00Z'
              privacy: public
              type: interval
              url: url
              links:
                self: self
                versions: versions
                module: module
              author:
                id: id
                username: username
              likeCount: 1
              referenceCount: 1
              readme: readme
    put:
      path: /v1/vals
      method: PUT
      auth: true
      docs: Run an existing val or create a new one
      source:
        openapi: ../openapi.yml
      request:
        name: ValsPutRequest
        body:
          properties:
            code:
              type: string
              docs: Val source code as TypeScript
              validation:
                minLength: 1
                maxLength: 256000
            name:
              type: string
              docs: This val’s name
              validation:
                minLength: 1
                maxLength: 48
        content-type: application/json
      examples:
        - request:
            code: console.log(1);
            name: myVal
    get:
      path: /v1/vals/{val_id}
      method: GET
      auth: false
      docs: Get a val by id
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
      response:
        docs: Default Response
        type: root.ExtendedVal
        status-code: 200
      examples:
        - path-parameters:
            val_id: val_id
          response:
            body:
              name: name
              id: id
              version: 1
              code: code
              public: true
              createdAt: '2024-01-15T09:30:00Z'
              privacy: public
              type: interval
              url: url
              links:
                self: self
                versions: versions
                module: module
              author:
                id: id
                username: username
              likeCount: 1
              referenceCount: 1
              readme: readme
    update:
      path: /v1/vals/{val_id}
      method: PUT
      auth: true
      docs: Update an existing val
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
      request:
        name: ValsUpdateRequest
        body:
          properties:
            name:
              type: optional<string>
              docs: This val’s name
              validation:
                minLength: 1
                maxLength: 48
            readme:
              type: optional<string>
              docs: Readme contents, as Markdown
              validation:
                maxLength: 8192
            privacy:
              type: optional<ValsUpdateRequestPrivacy>
              docs: >-
                This val’s privacy setting. Unlisted vals do not appear on
                profile pages or elsewhere, but you can link to them.
            type:
              type: optional<ValsUpdateRequestType>
              docs: >-
                The type of the val you want to update. Note that this does not
                include interval vals, because they cannot be created through
                the API yet.
        content-type: application/json
      examples:
        - name: example1
          path-parameters:
            val_id: val_id
          request:
            name: myVal
            readme: '# Updated readme'
        - name: example2
          path-parameters:
            val_id: val_id
          request:
            type: http
    delete:
      path: /v1/vals/{val_id}
      method: DELETE
      auth: true
      docs: Delete a val
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
      errors:
        - root.ValsDeleteRequestNotFoundError
      examples:
        - path-parameters:
            val_id: val_id
    list:
      path: /v1/vals/{val_id}/versions
      method: GET
      auth: false
      docs: List versions of a val
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
      request:
        name: ValsListRequest
        query-parameters:
          offset:
            type: integer
            default: 0
            docs: Number of items to skip in order to deliver paginated results
            validation:
              min: 0
          limit:
            type: integer
            default: 20
            docs: Maximum items to return in each paginated response
            validation:
              min: 1
              max: 100
      response:
        docs: A paginated result set
        type: ValsListResponse
        status-code: 200
      examples:
        - path-parameters:
            val_id: val_id
          query-parameters:
            offset: 1
            limit: 1
          response:
            body:
              data:
                - val_id: val_id
                  version: 1
                  createdAt: '2024-01-15T09:30:00Z'
              links:
                self: self
                prev: prev
                next: next
    createVersion:
      path: /v1/vals/{val_id}/versions
      method: POST
      auth: true
      docs: Create a new version of a val
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
      request:
        name: ValsCreateVersionRequest
        body:
          properties:
            code:
              type: string
              docs: Val source code as TypeScript
              validation:
                minLength: 1
                maxLength: 256000
            name:
              type: optional<string>
              docs: This val’s name
              validation:
                minLength: 1
                maxLength: 48
            readme:
              type: optional<string>
              docs: Readme contents, as Markdown
              validation:
                maxLength: 8192
            privacy:
              type: optional<ValsCreateVersionRequestPrivacy>
              docs: >-
                This val’s privacy setting. Unlisted vals do not appear on
                profile pages or elsewhere, but you can link to them.
            type:
              type: optional<ValsCreateVersionRequestType>
              docs: >-
                The type of the val you want to create. Note that this does not
                include interval vals, because they cannot be created through
                the API yet.
              default: script
        content-type: application/json
      response:
        docs: Default Response
        type: root.ExtendedVal
        status-code: 201
      examples:
        - path-parameters:
            val_id: val_id
          request:
            code: console.log(1);
            name: myVal
            readme: '# My Val'
            privacy: public
            type: script
          response:
            body:
              name: name
              id: id
              version: 1
              code: code
              public: true
              createdAt: '2024-01-15T09:30:00Z'
              privacy: public
              type: interval
              url: url
              links:
                self: self
                versions: versions
                module: module
              author:
                id: id
                username: username
              likeCount: 1
              referenceCount: 1
              readme: readme
    getVersion:
      path: /v1/vals/{val_id}/versions/{version}
      method: GET
      auth: false
      docs: Get a specific version of a val
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
        version:
          type: integer
          docs: The val version
      request:
        name: ValsGetVersionRequest
        query-parameters:
          offset:
            type: integer
            default: 0
            docs: Number of items to skip in order to deliver paginated results
            validation:
              min: 0
          limit:
            type: integer
            default: 20
            docs: Maximum items to return in each paginated response
            validation:
              min: 1
              max: 100
      response:
        docs: Default Response
        type: root.ExtendedVal
        status-code: 200
      examples:
        - path-parameters:
            val_id: val_id
            version: 1
          query-parameters:
            offset: 1
            limit: 1
          response:
            body:
              name: name
              id: id
              version: 1
              code: code
              public: true
              createdAt: '2024-01-15T09:30:00Z'
              privacy: public
              type: interval
              url: url
              links:
                self: self
                versions: versions
                module: module
              author:
                id: id
                username: username
              likeCount: 1
              referenceCount: 1
              readme: readme
    deleteVersion:
      path: /v1/vals/{val_id}/versions/{version}
      method: DELETE
      auth: true
      docs: Delete a specific version of a val
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
        version:
          type: integer
          docs: The val version
      errors:
        - root.ValsDeleteVersionRequestNotFoundError
      examples:
        - path-parameters:
            val_id: val_id
            version: 1
    cancel:
      path: /v1/vals/{val_id}/evaluations/{evaluation_id}/cancel
      method: POST
      auth: true
      docs: Cancel a running val
      source:
        openapi: ../openapi.yml
      path-parameters:
        val_id:
          type: string
          docs: Id of a val
        evaluation_id:
          type: string
          docs: >-
            The ID of the evaluation - the specific time that a val was run -
            that you want to cancel
      response:
        docs: >-
          The evaluation_id was successfully searched for and the evaluation was
          either already done or now has been cancelled
        type: ValsCancelResponse
        status-code: 200
      errors:
        - root.ValsCancelRequestNotFoundError
      examples:
        - path-parameters:
            val_id: val_id
            evaluation_id: evaluation_id
          response:
            body:
              found: true
  source:
    openapi: ../openapi.yml
  display-name: vals
docs: |-
  These endpoints
  let you get, create, and run vals.
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Production",
      "display-name": "Val Town API",
      "environments": {
        "Production": "https://api.val.town",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: Val Town API
default-environment: Production
environments:
  Production: https://api.val.town
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}