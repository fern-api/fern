{
  "type": "openapi",
  "value": {
    "openapi": "3.0.0",
    "info": {
      "description": "",
      "title": "Flagright API",
      "contact": {},
      "version": "1.0"
    },
    "servers": [
      {
        "url": "https://sandbox.api.flagright.com",
        "variables": {}
      }
    ],
    "paths": {
      "/transactions": {
        "post": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Verify a Transaction",
          "description": "## POST Transactions\n\n`/transactions` endpoint allows you to operate on the [Transaction entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction)\n\nIn order to pass the payload of a transaction to Flagright and verify the transaciton, you will need to call this endpoint with the transaction payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup. \n\n\n### Payload\n\nHere are some of the most used payload fields explained (you can find the full payload [schema below](https://docs.flagright.com/docs/flagright-api/87742ed31b30e-verify-a-transaction#request-body) with 1 line descriptions):\n\n* `type`: Type of transaction (Ex: `WITHDRAWAL`, `DEPOSIT`, `TRANSFER` etc). \n* `transactionId` - Unique Identifier for the transaction. Flagright API will generate a `transactionId` if this field is left empty\n* `timestamp` - UNIX timestamp in *milliseconds* of when the transaction took place\n* `transactionState` - The state of the transaction, set to `CREATED` by default. [More details here](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships-in-the-api#transaction-lifecycle-through-transaction-events)\n* `originUserId` - Unique identifier (if any) of the user who is sending the money. This user must be created within the Flagright system before using the [create a consumer user](https://docs.flagright.com/docs/flagright-api/18132cd454603-create-a-consumer-user) or [create a business user](https://docs.flagright.com/docs/flagright-api/f651463db29d8-create-a-business-user) endpoint\n* `destinationUserId` - Unique identifier (if any) of the user who is receiving the money. This user must be created within the Flagright system before using the [create a consumer user](https://docs.flagright.com/docs/flagright-api/18132cd454603-create-a-consumer-user) or [create a business user](https://docs.flagright.com/docs/flagright-api/f651463db29d8-create-a-business-user) endpoint\n* `originAmountDetails` - Details of the amount being sent from the origin\n* `destinationAmountDetails` - Details of the amount being received at the destination\n* `originPaymentDetails` - Payment details (if any) used at the origin (ex: `CARD`, `IBAN`, `WALLET` etc). You can click on the dropdown next to the field in the schema below to view all supported payment types.\n* `destinationPaymentDetails` - Payment details (if any) used at the destination (ex: `CARD`, `IBAN`, `WALLET` etc). You can click on the dropdown next to the field in the schema below to view all supported payment types.",
          "operationId": "post-consumer-transaction",
          "parameters": [
            {
              "schema": {
                "type": "string"
              },
              "in": "query",
              "name": "validateOriginUserId",
              "description": "Boolean string whether Flagright should validate if provided originUserId exist. True by default"
            },
            {
              "schema": {
                "type": "string"
              },
              "in": "query",
              "description": "Boolean string whether Flagright should validate if provided destinationUserId exist. True by default",
              "name": "validateDestinationUserId"
            }
          ],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                      "originUserId": "8650a2611d0771cba03310f74bf6",
                      "destinationUserId": "9350a2611e0771cba03310f74bf6",
                      "originAmountDetails": {
                        "country": "DE",
                        "transactionAmount": 800,
                        "transactionCurrency": "EUR"
                      },
                      "destinationAmountDetails": {
                        "country": "IN",
                        "transactionAmount": 68351.34,
                        "transactionCurrency": "INR"
                      },
                      "promotionCodeUsed": true,
                      "timestamp": 1641654664000,
                      "originPaymentDetails": {
                        "method": "CARD",
                        "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                        "cardIssuedCountry": "US",
                        "transactionReferenceField": "Deposit",
                        "3dsDone": true
                      },
                      "destinationPaymentDetails": {
                        "method": "CARD",
                        "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                        "cardIssuedCountry": "IN",
                        "transactionReferenceField": "Deposit",
                        "3dsDone": true
                      },
                      "reference": "loan repayment",
                      "deviceData": {
                        "batteryLevel": 95,
                        "deviceLatitude": 13.0033,
                        "deviceLongitude": 76.1004,
                        "ipAddress": "10.23.191.2",
                        "deviceIdentifier": "3c49f915d04485e34caba",
                        "vpnUsed": false,
                        "operatingSystem": "Android 11.2",
                        "deviceMaker": "ASUS",
                        "deviceModel": "Zenphone M2 Pro Max",
                        "deviceYear": "2018",
                        "appVersion": "1.1.0"
                      },
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/TransactionMonitoringResult"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "examples": {
                    "example-1": {
                      "value": {
                        "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                        "executedRules": [
                          {
                            "ruleId": "R-1a",
                            "ruleName": "Proof of funds for high value transactions",
                            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "ruleAction": "BLOCK",
                            "ruleHit": true
                          }
                        ],
                        "hitRules": [
                          {
                            "ruleId": "R-1a",
                            "ruleName": "Proof of funds for high value transactions",
                            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "ruleAction": "BLOCK"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "headers": {},
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": []
        }
      },
      "/transactions/{transactionId}": {
        "get": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Retrieve a Transaction",
          "description": "### GET Transactions\n\n`/transactions` endpoint allows you to operate on the [Transaction entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction).\n\nCalling `GET /transactions/{transactionId}` will return the entire transaction payload and rule execution results for the transaction with the corresponding `transactionId`",
          "operationId": "get-consumer-transaction",
          "parameters": [
            {
              "name": "transactionId",
              "in": "path",
              "description": "Unique Transaction Identifier",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionWithRulesResult"
                  },
                  "examples": {
                    "example-1": {
                      "value": {
                        "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                        "originUserId": "8650a2611d0771cba03310f74bf6",
                        "destinationUserId": "9350a2611e0771cba03310f74bf6",
                        "originAmountDetails": {
                          "country": "DE",
                          "transactionAmount": 800,
                          "transactionCurrency": "EUR"
                        },
                        "destinationAmountDetails": {
                          "country": "IN",
                          "transactionAmount": 68351.34,
                          "transactionCurrency": "INR"
                        },
                        "promotionCodeUsed": true,
                        "timestamp": 1641654664000,
                        "originPaymentDetails": {
                          "method": "CARD",
                          "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                          "cardIssuedCountry": "US",
                          "transactionReferenceField": "Deposit",
                          "3dsDone": true
                        },
                        "destinationPaymentDetails": {
                          "method": "CARD",
                          "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                          "cardIssuedCountry": "IN",
                          "transactionReferenceField": "Deposit",
                          "3dsDone": true
                        },
                        "reference": "loan repayment",
                        "deviceData": {
                          "batteryLevel": 95,
                          "deviceLatitude": 13.0033,
                          "deviceLongitude": 76.1004,
                          "ipAddress": "10.23.191.2",
                          "deviceIdentifier": "3c49f915d04485e34caba",
                          "vpnUsed": false,
                          "operatingSystem": "Android 11.2",
                          "deviceMaker": "ASUS",
                          "deviceModel": "Zenphone M2 Pro Max",
                          "deviceYear": "2018",
                          "appVersion": "1.1.0"
                        },
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ],
                        "executedRules": [
                          {
                            "ruleId": "R-1a",
                            "ruleName": "Proof of funds for high value transactions",
                            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "ruleAction": "BLOCK",
                            "ruleHit": true
                          }
                        ],
                        "hitRules": [
                          {
                            "ruleId": "R-1a",
                            "ruleName": "Proof of funds for high value transactions",
                            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "ruleAction": "BLOCK"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": []
        }
      },
      "/events/transaction": {
        "post": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Create a Transaction Event",
          "description": "## POST Transaction Events\n\n`/events/transaction` endpoint allows you to operate on the [Transaction Events entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction-event)\n\nTransaction events are created after the initial `POST /transactions` call (which creates a transaction) and are used to:\n\n* Update the STATE of the transaction, using the `transactionState` field and manage the [Transaction Lifecycle](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#transaction-lifecycle-through-transaction-events)\n* Update the transaction details, using the `updatedTransactionAttributes` field.\n\n> If you have neither of the above two use cases, you do not need to use transaction events. \n\n### Payload\n\nEach transaction event needs three mandatory fields:\n\n* `transactionState` - STATE of the transaction -> value is set to `CREATED` after `POST /transactions` call\n* `timestamp`- the timestamp of when the event was created or occured in your system\n* `transactionId` - The ID of the transaction for which this event is generated. \n\nIn order to make individual events retrievable, you also need to pass in a unique `eventId` to the request body.\n",
          "operationId": "post-transaction-event",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TransactionEvent"
                },
                "examples": {
                  "example-2": {
                    "value": {
                      "timestamp": 1431231244001,
                      "transactionId": "443dea26147a406b957d9ee3a1247b11",
                      "transactionState": "SUCCESSFUL",
                      "eventId": "aaeeb166147a406b957dd9147a406b957",
                      "eventDescription": "Transaction created",
                      "metaData": {
                        "batteryLevel": 76.3,
                        "deviceLatitude": 13.009711,
                        "deviceLongitude": 76.102898,
                        "ipAddress": "79.144.2.20",
                        "vpnUsed": true
                      }
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/TransactionEventMonitoringResult"
                  },
                  "examples": {
                    "example-1": {
                      "value": {
                        "eventId": "7b80a539eea6e78acbd6d458e5971482",
                        "transaction": {
                          "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                          "originUserId": "8650a2611d0771cba03310f74bf6",
                          "destinationUserId": "9350a2611e0771cba03310f74bf6",
                          "originAmountDetails": {
                            "country": "DE",
                            "transactionAmount": 800,
                            "transactionCurrency": "EUR"
                          },
                          "destinationAmountDetails": {
                            "country": "IN",
                            "transactionAmount": 68351.34,
                            "transactionCurrency": "INR"
                          },
                          "promotionCodeUsed": true,
                          "timestamp": 1641654664000,
                          "originPaymentDetails": {
                            "method": "CARD",
                            "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                            "cardIssuedCountry": "US",
                            "transactionReferenceField": "Deposit",
                            "3dsDone": true
                          },
                          "destinationPaymentDetails": {
                            "method": "CARD",
                            "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                            "cardIssuedCountry": "IN",
                            "transactionReferenceField": "Deposit",
                            "3dsDone": true
                          },
                          "reference": "loan repayment",
                          "deviceData": {
                            "batteryLevel": 95,
                            "deviceLatitude": 13.0033,
                            "deviceLongitude": 76.1004,
                            "ipAddress": "10.23.191.2",
                            "deviceIdentifier": "3c49f915d04485e34caba",
                            "vpnUsed": false,
                            "operatingSystem": "Android 11.2",
                            "deviceMaker": "ASUS",
                            "deviceModel": "Zenphone M2 Pro Max",
                            "deviceYear": "2018",
                            "appVersion": "1.1.0"
                          },
                          "tags": [
                            {
                              "key": "customKey",
                              "value": "customValue"
                            }
                          ]
                        },
                        "executedRules": [
                          {
                            "ruleId": "R-1a",
                            "ruleName": "Proof of funds for high value transactions",
                            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "ruleAction": "BLOCK",
                            "ruleHit": true
                          }
                        ],
                        "hitRules": [
                          {
                            "ruleId": "R-1a",
                            "ruleName": "Proof of funds for high value transactions",
                            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                            "ruleAction": "BLOCK"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "headers": {},
              "content": {}
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": [],
          "x-internal": false
        }
      },
      "/consumer/users": {
        "post": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Create a Consumer User",
          "description": "## POST Consumer User\n\n`/consumer/user` endpoint allows you to operate on the [Consumer user entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user)\n\nIn order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.\n\n### Payload\n\nEach consumer User entity needs three mandatory fields:\n\n* `userId` - Unique identifier for the user\n* `createdTimestamp` - UNIX timestamp in *milliseconds* for when the User is created in your system\n",
          "operationId": "post-consumer-user",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "createdTimestamp": 1641654664000,
                      "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                      "userDetails": {
                        "name": {
                          "firstName": "Baran",
                          "middleName": "Realblood",
                          "lastName": "Ozkan"
                        },
                        "dateOfBirth": "1991-01-01",
                        "countryOfResidence": "US",
                        "countryOfNationality": "DE"
                      },
                      "legalDocuments": [
                        {
                          "documentType": "passport",
                          "documentNumber": "Z9431P",
                          "documentIssuedDate": 1639939034000,
                          "documentExpirationDate": 1839939034000,
                          "documentIssuedCountry": "DE",
                          "tags": [
                            {
                              "key": "customerType",
                              "value": "wallet"
                            }
                          ]
                        }
                      ],
                      "contactDetails": {
                        "emailIds": [
                          "baran@flagright.com"
                        ],
                        "contactNumbers": [
                          "+37112345432"
                        ],
                        "websites": [
                          "flagright.com"
                        ],
                        "addresses": [
                          {
                            "addressLines": [
                              "Klara-Franke Str 20"
                            ],
                            "postcode": "10557",
                            "city": "Berlin",
                            "state": "Berlin",
                            "country": "Germany",
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue"
                              }
                            ]
                          }
                        ]
                      },
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  }
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/ConsumerUsersResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserMonitoringResult"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "examples": {
                    "example-1": {
                      "value": {
                        "userId": "96647cfd9e8fe66ee0f3362e011e34e8"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": []
        }
      },
      "/consumer/users/{userId}": {
        "get": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Retrieve a Consumer User",
          "description": "### GET Consumer User\n\n`/consumer/user` endpoint allows you to operate on the [Consumer User entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user).\n\nCalling `GET /consumer/user/{userId}` will return the entire user payload and rule execution results for the user with the corresponding `userId`",
          "operationId": "get-consumer-user",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/User"
                  },
                  "examples": {
                    "example-1": {
                      "value": {
                        "createdTimestamp": 1641654664000,
                        "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                        "userDetails": {
                          "name": {
                            "firstName": "Baran",
                            "middleName": "Realblood",
                            "lastName": "Ozkan"
                          },
                          "dateOfBirth": "1991-01-01",
                          "countryOfResidence": "US",
                          "countryOfNationality": "DE"
                        },
                        "legalDocuments": [
                          {
                            "documentType": "passport",
                            "documentNumber": "Z9431P",
                            "documentIssuedDate": 1639939034000,
                            "documentExpirationDate": 1839939034000,
                            "documentIssuedCountry": "DE",
                            "tags": [
                              {
                                "key": "customerType",
                                "value": "wallet"
                              }
                            ]
                          }
                        ],
                        "contactDetails": {
                          "emailIds": [
                            "baran@flagright.com"
                          ],
                          "contactNumbers": [
                            "+37112345432"
                          ],
                          "websites": [
                            "flagright.com"
                          ],
                          "addresses": [
                            {
                              "addressLines": [
                                "Klara-Franke Str 20"
                              ],
                              "postcode": "10557",
                              "city": "Berlin",
                              "state": "Berlin",
                              "country": "Germany",
                              "tags": [
                                {
                                  "key": "customKey",
                                  "value": "customValue"
                                }
                              ]
                            }
                          ]
                        },
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": []
        }
      },
      "/business/users": {
        "post": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Create a Business User",
          "description": "## POST Business User\n\n`/business/user` endpoint allows you to operate on the [Business user entity.](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user)\n\nIn order to pass the payload of a User to Flagright and verify the User, you will need to call this endpoint with the User payload. Not all fields are mandatory, you will only need to pass in the fields that you have and are relevant for your compliance setup.\n\n### Payload\n\n\nEach consumer Business entity needs three mandatory fields:\n\n* `userId` - Unique identifier for the user\n* `legalEntity` - Details of the business legal entity (CompanyGeneralDetails, FinancialDetails etc) - only `legalName`in `CompanyGeneralDetails` is mandatory\n* `createdTimestamp` - UNIX timestamp in *milliseconds* for when the User is created in your system",
          "operationId": "post-business-user",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Business"
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/BusinessUsersResponse"
                      },
                      {
                        "$ref": "#/components/schemas/UserMonitoringResult"
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "examples": {
                    "example-1": {
                      "value": {
                        "userId": "96647cfd9e8fe66ee0f3362e011e34e8"
                      }
                    }
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": []
        }
      },
      "/business/users/{userId}": {
        "get": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Retrieve a Business User",
          "description": "### GET Business User\n\n`/business/user` endpoint allows you to operate on the [Business User entity](https://docs.flagright.com/docs/flagright-api/8c06ae6a3231a-entities-and-relationships#user).\n\nCalling `GET /business/user/{userId}` will return the entire User payload and rule execution results for the User with the corresponding `userId`",
          "operationId": "get-business-user-userId",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "description": "",
              "required": true,
              "style": "simple",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/Business"
                  },
                  "examples": {
                    "example-2": {
                      "value": {
                        "createdTimestamp": 1641654664000,
                        "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                        "legalEntity": {
                          "companyGeneralDetails": {
                            "legalName": "Ozkan Hazelnut Export JSC",
                            "businessIndustry": [
                              "Farming"
                            ],
                            "mainProductsServicesSold": [
                              "Hazelnut"
                            ]
                          },
                          "companyFinancialDetails": {
                            "expectedTransactionAmountPerMonth": {
                              "amountValue": 800,
                              "amountCurrency": "GBP"
                            },
                            "expectedTurnoverPerMonth": {
                              "amountValue": 8000,
                              "amountCurrency": "USD"
                            }
                          },
                          "companyRegistrationDetails": {
                            "registrationIdentifier": "PSJ554342",
                            "registrationCountry": "DE"
                          },
                          "reasonForAccountOpening": [
                            "string"
                          ],
                          "contactDetails": {
                            "addresses": [
                              {
                                "addressLines": [
                                  "Klara-Franke Str 20"
                                ],
                                "postcode": "10557",
                                "city": "Berlin",
                                "state": "Berlin",
                                "country": "Germany",
                                "tags": [
                                  {
                                    "key": "customKey",
                                    "value": "customValue"
                                  }
                                ]
                              }
                            ]
                          }
                        },
                        "shareHolders": [
                          {
                            "generalDetails": {
                              "name": {
                                "firstName": "Baran",
                                "middleName": "Realblood",
                                "lastName": "Ozkan"
                              },
                              "dateOfBirth": "1991-01-01",
                              "countryOfResidence": "US",
                              "countryOfNationality": "DE"
                            },
                            "legalDocuments": [
                              {
                                "documentType": "passport",
                                "documentNumber": "Z9431P",
                                "documentIssuedDate": 1639939034000,
                                "documentExpirationDate": 1839939034000,
                                "documentIssuedCountry": "DE",
                                "tags": [
                                  {
                                    "key": "customerType",
                                    "value": "wallet"
                                  }
                                ]
                              }
                            ],
                            "contactDetails": {
                              "emailIds": [
                                "baran@flagright.com"
                              ],
                              "contactNumbers": [
                                "+371 123132"
                              ],
                              "websites": [
                                "flagright.com"
                              ],
                              "addresses": [
                                {
                                  "addressLines": [
                                    "Klara-Franke Str 20"
                                  ],
                                  "postcode": "10557",
                                  "city": "Berlin",
                                  "state": "Berlin",
                                  "country": "Germany",
                                  "tags": [
                                    {
                                      "key": "customKey",
                                      "value": "customValue"
                                    }
                                  ]
                                }
                              ]
                            },
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue"
                              }
                            ]
                          }
                        ],
                        "directors": [
                          {
                            "generalDetails": {
                              "name": {
                                "firstName": "Baran",
                                "middleName": "Realblood",
                                "lastName": "Ozkan"
                              },
                              "dateOfBirth": "1991-01-01",
                              "countryOfResidence": "US",
                              "countryOfNationality": "DE"
                            },
                            "legalDocuments": [
                              {
                                "documentType": "passport",
                                "documentNumber": "Z9431P",
                                "documentIssuedDate": 1639939034000,
                                "documentExpirationDate": 1839939034000,
                                "documentIssuedCountry": "DE",
                                "tags": [
                                  {
                                    "key": "customerType",
                                    "value": "wallet"
                                  }
                                ]
                              }
                            ],
                            "contactDetails": {
                              "emailIds": [
                                "baran@flagright.com"
                              ],
                              "contactNumbers": [
                                "+371 123132"
                              ],
                              "websites": [
                                "flagright.com"
                              ],
                              "addresses": [
                                {
                                  "addressLines": [
                                    "Klara-Franke Str 20"
                                  ],
                                  "postcode": "10557",
                                  "city": "Berlin",
                                  "state": "Berlin",
                                  "country": "Germany",
                                  "tags": [
                                    {
                                      "key": "customKey",
                                      "value": "customValue"
                                    }
                                  ]
                                }
                              ]
                            },
                            "tags": [
                              {
                                "key": "customKey",
                                "value": "customValue"
                              }
                            ]
                          }
                        ],
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": []
        }
      },
      "/events/consumer/user": {
        "post": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Create a Consumer User Event",
          "description": "## POST Consumer User Events\n\n`/events/consumer/user` endpoint allows you to operate on the Consumer User Events entity.\n\nUser events are created after the initial `POST /consumer/users` call (which creates a user) and are used to:\n\n* Update the STATE and KYC Status of the user, using the `userStateDetails` or `kycStatusDetails` field\n* Update the user details, using the `updatedConsumerUserAttributes` field.\n\n> If you have neither of the above two use cases, you do not need to use user events. \n\n### Payload\n\nEach user event needs three mandatory fields:\n\n* `timestamp`- the timestamp of when the event was created or occured in your system\n* `userId` - The ID of the transaction for which this event is generated. \n\nIn order to make individual events retrievable, you also need to pass in a unique `eventId` to the request body.\n",
          "operationId": "post-user-event",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsumerUserEvent"
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/UserWithRulesResult"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": [],
          "x-internal": false
        }
      },
      "/events/business/user": {
        "post": {
          "security": [
            {
              "x-api-key": []
            }
          ],
          "summary": "Create a Business User Event",
          "description": "## POST Business User Events\n\n`/events/business/user` endpoint allows you to operate on the Business User Events entity.\n\nUser events are created after the initial `POST /business/users` call (which creates a user) and are used to:\n\n* Update the STATE and KYC Status of the user, using the `userStateDetails` or `kycStatusDetails` field\n* Update the user details, using the `updatedBusinessUserAttributes` field.\n\n> If you have neither of the above two use cases, you do not need to use user events. \n\n### Payload\n\nEach user event needs three mandatory fields:\n\n* `timestamp`- the timestamp of when the event was created or occured in your system\n* `userId` - The ID of the transaction for which this event is generated. \n\nIn order to make individual events retrievable, you also need to pass in a unique `eventId` to the request body.\n",
          "operationId": "post-business-user-event",
          "parameters": [],
          "requestBody": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BusinessUserEvent"
                }
              }
            },
            "required": false
          },
          "responses": {
            "201": {
              "description": "Created",
              "headers": {},
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/BusinessWithRulesResult"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Unauthorized",
              "headers": {},
              "content": {}
            },
            "429": {
              "description": "Too Many Requests",
              "headers": {},
              "content": {}
            }
          },
          "deprecated": false,
          "tags": [],
          "x-internal": false
        }
      }
    },
    "components": {
      "schemas": {
        "Address": {
          "title": "Address",
          "required": [
            "addressLines",
            "postcode",
            "city",
            "country"
          ],
          "type": "object",
          "properties": {
            "addressLines": {
              "type": "array",
              "items": {},
              "description": "Address lines of the user's residence address"
            },
            "postcode": {
              "minLength": 1,
              "type": "string",
              "description": "Post code of the user's residence address"
            },
            "city": {
              "minLength": 1,
              "type": "string",
              "description": "City of the user's residence address"
            },
            "state": {
              "minLength": 1,
              "type": "string",
              "description": "State of the user's residence address"
            },
            "country": {
              "minLength": 1,
              "type": "string",
              "description": "User's country of residence"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Tag"
              },
              "description": "Additional information that can be added via tags"
            }
          },
          "description": "Model for standardized address",
          "example": {
            "addressLines": [
              "Klara-Franke Str 20"
            ],
            "postcode": "10557",
            "city": "Berlin",
            "state": "Berlin",
            "country": "Germany",
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          }
        },
        "UserBase": {
          "title": "UserBase",
          "type": "object",
          "description": "Model for User details",
          "example": {
            "createdTimestamp": 1641654664000,
            "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
            "userDetails": {
              "name": {
                "firstName": "Baran",
                "middleName": "Realblood",
                "lastName": "Ozkan"
              },
              "dateOfBirth": "1991-01-01",
              "countryOfResidence": "US",
              "countryOfNationality": "DE"
            },
            "legalDocuments": [
              {
                "documentType": "passport",
                "documentNumber": "Z9431P",
                "documentIssuedDate": 1639939034000,
                "documentExpirationDate": 1839939034000,
                "documentIssuedCountry": "DE",
                "tags": [
                  {
                    "key": "customerType",
                    "value": "wallet"
                  }
                ]
              }
            ],
            "contactDetails": {
              "emailIds": [
                "baran@flagright.com"
              ],
              "contactNumbers": [
                "+37112345432"
              ],
              "websites": [
                "flagright.com"
              ],
              "addresses": [
                {
                  "addressLines": [
                    "Klara-Franke Str 20"
                  ],
                  "postcode": "10557",
                  "city": "Berlin",
                  "state": "Berlin",
                  "country": "Germany",
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ]
            },
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          },
          "x-examples": {
            "example-1": {
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "userDetails": {
                "name": {
                  "firstName": "Baran",
                  "middleName": "Realblood",
                  "lastName": "Ozkan"
                },
                "dateOfBirth": {
                  "day": 1,
                  "month": 1,
                  "year": 1990
                },
                "countryOfResidence": "US",
                "countryOfNationality": "DE"
              },
              "legalDocuments": [
                {
                  "documentType": "passport",
                  "documentNumber": "Z9431P",
                  "documentIssuedDate": 1639939034000,
                  "documentExpirationDate": 1839939034000,
                  "documentIssuedCountry": "DE",
                  "tags": [
                    {
                      "key": "customerType",
                      "value": "wallet"
                    }
                  ]
                }
              ],
              "contactDetails": {
                "emailIds": [
                  "baran@flagright.com"
                ],
                "contactNumbers": [
                  "+37112345432"
                ],
                "websites": [
                  "flagright.com"
                ],
                "addresses": [
                  {
                    "addressLines": [
                      "Klara-Franke Str 20"
                    ],
                    "postcode": "10557",
                    "city": "Berlin",
                    "state": "Berlin",
                    "country": "Germany",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue"
                      }
                    ]
                  }
                ]
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          },
          "properties": {
            "userId": {
              "minLength": 1,
              "type": "string",
              "description": "Unique user ID"
            },
            "userDetails": {
              "$ref": "#/components/schemas/UserDetails"
            },
            "createdTimestamp": {
              "type": "number",
              "minimum": 1262300400000,
              "description": "Timestamp when userId is created",
              "maximum": 4133890801000
            }
          },
          "required": [
            "userId",
            "createdTimestamp"
          ]
        },
        "UserOptional": {
          "title": "UserOptional",
          "type": "object",
          "description": "Model for User details",
          "example": {
            "createdTimestamp": 1641654664000,
            "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
            "userDetails": {
              "name": {
                "firstName": "Baran",
                "middleName": "Realblood",
                "lastName": "Ozkan"
              },
              "dateOfBirth": "1991-01-01",
              "countryOfResidence": "US",
              "countryOfNationality": "DE"
            },
            "legalDocuments": [
              {
                "documentType": "passport",
                "documentNumber": "Z9431P",
                "documentIssuedDate": 1639939034000,
                "documentExpirationDate": 1839939034000,
                "documentIssuedCountry": "DE",
                "tags": [
                  {
                    "key": "customerType",
                    "value": "wallet"
                  }
                ]
              }
            ],
            "contactDetails": {
              "emailIds": [
                "baran@flagright.com"
              ],
              "contactNumbers": [
                "+37112345432"
              ],
              "websites": [
                "flagright.com"
              ],
              "addresses": [
                {
                  "addressLines": [
                    "Klara-Franke Str 20"
                  ],
                  "postcode": "10557",
                  "city": "Berlin",
                  "state": "Berlin",
                  "country": "Germany",
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ]
            },
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          },
          "x-examples": {
            "example-1": {
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "userDetails": {
                "name": {
                  "firstName": "Baran",
                  "middleName": "Realblood",
                  "lastName": "Ozkan"
                },
                "dateOfBirth": {
                  "day": 1,
                  "month": 1,
                  "year": 1990
                },
                "countryOfResidence": "US",
                "countryOfNationality": "DE"
              },
              "legalDocuments": [
                {
                  "documentType": "passport",
                  "documentNumber": "Z9431P",
                  "documentIssuedDate": 1639939034000,
                  "documentExpirationDate": 1839939034000,
                  "documentIssuedCountry": "DE",
                  "tags": [
                    {
                      "key": "customerType",
                      "value": "wallet"
                    }
                  ]
                }
              ],
              "contactDetails": {
                "emailIds": [
                  "baran@flagright.com"
                ],
                "contactNumbers": [
                  "+37112345432"
                ],
                "websites": [
                  "flagright.com"
                ],
                "addresses": [
                  {
                    "addressLines": [
                      "Klara-Franke Str 20"
                    ],
                    "postcode": "10557",
                    "city": "Berlin",
                    "state": "Berlin",
                    "country": "Germany",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue"
                      }
                    ]
                  }
                ]
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          },
          "properties": {
            "userStateDetails": {
              "$ref": "#/components/schemas/UserStateDetails"
            },
            "kycStatusDetails": {
              "$ref": "#/components/schemas/KYCStatusDetails"
            },
            "legalDocuments": {
              "type": "array",
              "description": "User's legal identity documents - See Document Model for details",
              "items": {
                "$ref": "#/components/schemas/LegalDocument"
              }
            },
            "contactDetails": {
              "$ref": "#/components/schemas/ContactDetails"
            },
            "transactionLimits": {
              "$ref": "#/components/schemas/TransactionLimits"
            },
            "riskLevel": {
              "$ref": "#/components/schemas/RiskLevel"
            },
            "acquisitionChannel": {
              "$ref": "#/components/schemas/AcquisitionChannel"
            },
            "reasonForAccountOpening": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "userSegment": {
              "type": "string",
              "enum": [
                "RETAIL",
                "PROFESSIONAL"
              ]
            },
            "pepStatus": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PEPStatus"
              }
            },
            "tags": {
              "type": "array",
              "description": "Additional information that can be added via tags",
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "User": {
          "title": "User",
          "description": "Model for User details",
          "example": {
            "createdTimestamp": 1641654664000,
            "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
            "userDetails": {
              "name": {
                "firstName": "Baran",
                "middleName": "Realblood",
                "lastName": "Ozkan"
              },
              "dateOfBirth": "1991-01-01",
              "countryOfResidence": "US",
              "countryOfNationality": "DE"
            },
            "legalDocuments": [
              {
                "documentType": "passport",
                "documentNumber": "Z9431P",
                "documentIssuedDate": 1639939034000,
                "documentExpirationDate": 1839939034000,
                "documentIssuedCountry": "DE",
                "tags": [
                  {
                    "key": "customerType",
                    "value": "wallet"
                  }
                ]
              }
            ],
            "contactDetails": {
              "emailIds": [
                "baran@flagright.com"
              ],
              "contactNumbers": [
                "+37112345432"
              ],
              "websites": [
                "flagright.com"
              ],
              "addresses": [
                {
                  "addressLines": [
                    "Klara-Franke Str 20"
                  ],
                  "postcode": "10557",
                  "city": "Berlin",
                  "state": "Berlin",
                  "country": "Germany",
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ]
            },
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          },
          "x-examples": {
            "example-1": {
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "userDetails": {
                "name": {
                  "firstName": "Baran",
                  "middleName": "Realblood",
                  "lastName": "Ozkan"
                },
                "dateOfBirth": {
                  "day": 1,
                  "month": 1,
                  "year": 1990
                },
                "countryOfResidence": "US",
                "countryOfNationality": "DE"
              },
              "legalDocuments": [
                {
                  "documentType": "passport",
                  "documentNumber": "Z9431P",
                  "documentIssuedDate": 1639939034000,
                  "documentExpirationDate": 1839939034000,
                  "documentIssuedCountry": "DE",
                  "tags": [
                    {
                      "key": "customerType",
                      "value": "wallet"
                    }
                  ]
                }
              ],
              "contactDetails": {
                "emailIds": [
                  "baran@flagright.com"
                ],
                "contactNumbers": [
                  "+37112345432"
                ],
                "websites": [
                  "flagright.com"
                ],
                "addresses": [
                  {
                    "addressLines": [
                      "Klara-Franke Str 20"
                    ],
                    "postcode": "10557",
                    "city": "Berlin",
                    "state": "Berlin",
                    "country": "Germany",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue"
                      }
                    ]
                  }
                ]
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          },
          "allOf": [
            {
              "$ref": "#/components/schemas/UserBase"
            },
            {
              "$ref": "#/components/schemas/UserOptional"
            }
          ]
        },
        "Person": {
          "title": "Person",
          "type": "object",
          "properties": {
            "generalDetails": {
              "$ref": "#/components/schemas/UserDetails"
            },
            "legalDocuments": {
              "type": "array",
              "description": "User's legal identity documents - See Document Model for details",
              "items": {
                "$ref": "#/components/schemas/LegalDocument"
              }
            },
            "contactDetails": {
              "$ref": "#/components/schemas/ContactDetails"
            },
            "pepStatus": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PEPStatus"
              }
            },
            "tags": {
              "type": "array",
              "description": "Additional information that can be added via tags",
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          },
          "required": [
            "generalDetails"
          ],
          "description": "Model for a generic individual - different from User model by not having userId field",
          "example": {
            "generalDetails": {
              "name": {
                "firstName": "Baran",
                "middleName": "Realblood",
                "lastName": "Ozkan"
              },
              "dateOfBirth": "1991-01-01",
              "countryOfResidence": "US",
              "countryOfNationality": "DE"
            },
            "legalDocuments": [
              {
                "documentType": "passport",
                "documentNumber": "Z9431P",
                "documentIssuedDate": 1639939034000,
                "documentExpirationDate": 1839939034000,
                "documentIssuedCountry": "DE",
                "tags": [
                  {
                    "key": "customerType",
                    "value": "wallet"
                  }
                ]
              }
            ],
            "contactDetails": {
              "emailIds": [
                "baran@flagright.com"
              ],
              "contactNumbers": [
                "+371 123132"
              ],
              "websites": [
                "flagright.com"
              ],
              "addresses": [
                {
                  "addressLines": [
                    "Klara-Franke Str 20"
                  ],
                  "postcode": "10557",
                  "city": "Berlin",
                  "state": "Berlin",
                  "country": "Germany",
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ]
            },
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          }
        },
        "LegalDocument": {
          "title": "LegalDocument",
          "required": [
            "documentType",
            "documentNumber",
            "documentIssuedCountry"
          ],
          "type": "object",
          "properties": {
            "documentType": {
              "minLength": 1,
              "type": "string",
              "description": "User's identity document type such as passport, national ID etc."
            },
            "documentNumber": {
              "minLength": 1,
              "type": "string",
              "description": "User's unique identity document number such as passport number"
            },
            "documentIssuedDate": {
              "type": "number",
              "description": "User's identity document issuance date (UNIX timestamp in milliseconds)"
            },
            "documentExpirationDate": {
              "type": "number",
              "description": "User's identity document expiration date (UNIX timestamp in milliseconds)"
            },
            "documentIssuedCountry": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "tags": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Tag"
              },
              "description": "Additional information that can be added via tags"
            },
            "nameOnDocument": {
              "$ref": "#/components/schemas/ConsumerName"
            }
          },
          "description": "LegalDocument model generalizes User's identity document type (ex: Passport)",
          "example": {
            "documentType": "passport",
            "documentNumber": "Z9431P",
            "documentIssuedDate": 1639939034000,
            "documentExpirationDate": 1839939034000,
            "documentIssuedCountry": "DE",
            "tags": [
              {
                "key": "customerType",
                "value": "wallet"
              }
            ]
          }
        },
        "Tag": {
          "title": "Tag",
          "required": [
            "key",
            "value"
          ],
          "type": "object",
          "properties": {
            "key": {
              "minLength": 1,
              "type": "string",
              "description": "Key value when you are creating a custom variable"
            },
            "value": {
              "minLength": 1,
              "type": "string",
              "description": "Value for a given key when you are creating a custom variable"
            }
          },
          "description": "Generic key-value pair model to append a custom variable being sent to Flagright API",
          "example": {
            "key": "customKey",
            "value": "customValue"
          }
        },
        "Transaction": {
          "allOf": [
            {
              "$ref": "#/components/schemas/TransactionBase"
            },
            {
              "$ref": "#/components/schemas/TransactionUpdatable"
            }
          ]
        },
        "TransactionUpdatable": {
          "title": "TransactionUpdatable",
          "type": "object",
          "description": "Model for transaction additional payload",
          "example": {
            "originAmountDetails": {
              "country": "DE",
              "transactionAmount": 800,
              "transactionCurrency": "EUR"
            },
            "destinationAmountDetails": {
              "country": "IN",
              "transactionAmount": 68351.34,
              "transactionCurrency": "INR"
            },
            "promotionCodeUsed": true,
            "timestamp": 1641654664000,
            "originPaymentDetails": {
              "method": "CARD",
              "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
              "cardIssuedCountry": "US",
              "transactionReferenceField": "Deposit",
              "3dsDone": true
            },
            "destinationPaymentDetails": {
              "method": "CARD",
              "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
              "cardIssuedCountry": "IN",
              "transactionReferenceField": "Deposit",
              "3dsDone": true
            },
            "reference": "loan repayment",
            "deviceData": {
              "batteryLevel": 95,
              "deviceLatitude": 13.0033,
              "deviceLongitude": 76.1004,
              "ipAddress": "10.23.191.2",
              "deviceIdentifier": "3c49f915d04485e34caba",
              "vpnUsed": false,
              "operatingSystem": "Android 11.2",
              "deviceMaker": "ASUS",
              "deviceModel": "Zenphone M2 Pro Max",
              "deviceYear": "2018",
              "appVersion": "1.1.0"
            },
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          },
          "x-examples": {
            "example-1": {
              "originAmountDetails": {
                "country": "DE",
                "transactionAmount": 800,
                "transactionCurrency": "EUR"
              },
              "destinationAmountDetails": {
                "country": "IN",
                "transactionAmount": 68351.34,
                "transactionCurrency": "INR"
              },
              "promotionCodeUsed": true,
              "timestamp": 1641654664,
              "originPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "US",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "destinationPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "IN",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "reference": "loan repayment",
              "deviceData": {
                "batteryLevel": 95,
                "deviceLatitude": 13.0033,
                "deviceLongitude": 76.1004,
                "ipAddress": "10.23.191.2",
                "deviceIdentifier": "3c49f915d04485e34caba",
                "vpnUsed": false,
                "operatingSystem": "Android 11.2",
                "deviceMaker": "ASUS",
                "deviceModel": "Zenphone M2 Pro Max",
                "deviceYear": "2018",
                "appVersion": "1.1.0"
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          },
          "properties": {
            "transactionState": {
              "$ref": "#/components/schemas/TransactionState"
            },
            "originAmountDetails": {
              "$ref": "#/components/schemas/TransactionAmountDetails"
            },
            "destinationAmountDetails": {
              "$ref": "#/components/schemas/TransactionAmountDetails"
            },
            "originPaymentDetails": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CardDetails"
                },
                {
                  "$ref": "#/components/schemas/GenericBankAccountDetails"
                },
                {
                  "$ref": "#/components/schemas/IBANDetails"
                },
                {
                  "$ref": "#/components/schemas/ACHDetails"
                },
                {
                  "$ref": "#/components/schemas/SWIFTDetails"
                },
                {
                  "$ref": "#/components/schemas/MpesaDetails"
                },
                {
                  "$ref": "#/components/schemas/UPIDetails"
                },
                {
                  "$ref": "#/components/schemas/WalletDetails"
                },
                {
                  "$ref": "#/components/schemas/CheckDetails"
                }
              ],
              "description": "Payment details of the origin. It can be a bank account number, wallet ID, card fingerprint etc."
            },
            "destinationPaymentDetails": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/CardDetails"
                },
                {
                  "$ref": "#/components/schemas/GenericBankAccountDetails"
                },
                {
                  "$ref": "#/components/schemas/IBANDetails"
                },
                {
                  "$ref": "#/components/schemas/ACHDetails"
                },
                {
                  "$ref": "#/components/schemas/UPIDetails"
                },
                {
                  "$ref": "#/components/schemas/WalletDetails"
                },
                {
                  "$ref": "#/components/schemas/SWIFTDetails"
                },
                {
                  "$ref": "#/components/schemas/MpesaDetails"
                },
                {
                  "$ref": "#/components/schemas/CheckDetails"
                }
              ],
              "example": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "TR",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "description": "Payment details of the destination. It can be a bank account number, wallet ID, card fingerprint etc."
            },
            "relatedTransactionIds": {
              "type": "array",
              "description": "IDs of transactions related to this transaction. Ex: refund, split bills",
              "items": {
                "type": "string"
              }
            },
            "productType": {
              "type": "string",
              "description": "Type of produce being used by the consumer (ex wallets, payments etc)"
            },
            "promotionCodeUsed": {
              "type": "boolean",
              "description": "Whether a promotion code was used or not the transaction"
            },
            "reference": {
              "minLength": 1,
              "type": "string",
              "description": "Reference field for the transaction indicating the purpose of the transaction etc."
            },
            "deviceData": {
              "$ref": "#/components/schemas/DeviceData"
            },
            "tags": {
              "type": "array",
              "description": "Additional information that can be added via tags",
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "TransactionBase": {
          "title": "TransactionBase",
          "type": "object",
          "description": "Model for transaction base Payload",
          "example": {
            "transactionId": "7b80a539eea6e78acbd6d458e5971482",
            "originUserId": "8650a2611d0771cba03310f74bf6",
            "destinationUserId": "9350a2611e0771cba03310f74bf6",
            "timestamp": 1262300400111
          },
          "x-examples": {
            "example-1": {
              "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              "originUserId": "8650a2611d0771cba03310f74bf6",
              "destinationUserId": "9350a2611e0771cba03310f74bf6"
            }
          },
          "properties": {
            "type": {
              "$ref": "#/components/schemas/TransactionType"
            },
            "transactionId": {
              "minLength": 1,
              "type": "string",
              "description": "Unique transaction identifier"
            },
            "timestamp": {
              "type": "number",
              "minimum": 1262300400000,
              "description": "Timestamp of when transaction took place",
              "maximum": 4133890801000
            },
            "originUserId": {
              "type": "string",
              "description": "UserId for where the transaction originates from"
            },
            "destinationUserId": {
              "type": "string",
              "description": "UserId for transaction's destination. In other words, where the value is being transferred to."
            }
          },
          "required": [
            "transactionId",
            "timestamp"
          ]
        },
        "TransactionWithRulesResult": {
          "title": "TransactionWithRulesResult",
          "description": "Model for transaction payload with rules result",
          "example": {
            "transactionId": "7b80a539eea6e78acbd6d458e5971482",
            "originUserId": "8650a2611d0771cba03310f74bf6",
            "destinationUserId": "9350a2611e0771cba03310f74bf6",
            "originAmountDetails": {
              "country": "DE",
              "transactionAmount": 800,
              "transactionCurrency": "EUR"
            },
            "destinationAmountDetails": {
              "country": "IN",
              "transactionAmount": 68351.34,
              "transactionCurrency": "INR"
            },
            "promotionCodeUsed": true,
            "timestamp": 1641654664,
            "originPaymentDetails": {
              "method": "CARD",
              "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
              "cardIssuedCountry": "US",
              "transactionReferenceField": "Deposit",
              "3dsDone": true
            },
            "destinationPaymentDetails": {
              "method": "CARD",
              "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
              "cardIssuedCountry": "IN",
              "transactionReferenceField": "Deposit",
              "3dsDone": true
            },
            "reference": "loan repayment",
            "deviceData": {
              "batteryLevel": 95,
              "deviceLatitude": 13.0033,
              "deviceLongitude": 76.1004,
              "ipAddress": "10.23.191.2",
              "deviceIdentifier": "3c49f915d04485e34caba",
              "vpnUsed": false,
              "operatingSystem": "Android 11.2",
              "deviceMaker": "ASUS",
              "deviceModel": "Zenphone M2 Pro Max",
              "deviceYear": "2018",
              "appVersion": "1.1.0"
            },
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          },
          "allOf": [
            {
              "$ref": "#/components/schemas/Transaction"
            },
            {
              "type": "object",
              "properties": {
                "executedRules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExecutedRulesResult"
                  }
                },
                "hitRules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HitRulesDetails"
                  }
                }
              },
              "required": [
                "executedRules",
                "hitRules"
              ]
            }
          ],
          "x-examples": {
            "example-1": {
              "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              "originUserId": "8650a2611d0771cba03310f74bf6",
              "destinationUserId": "9350a2611e0771cba03310f74bf6",
              "originAmountDetails": {
                "country": "DE",
                "transactionAmount": 800,
                "transactionCurrency": "EUR"
              },
              "destinationAmountDetails": {
                "country": "IN",
                "transactionAmount": 68351.34,
                "transactionCurrency": "INR"
              },
              "promotionCodeUsed": true,
              "timestamp": 1641654664,
              "originPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "US",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "destinationPaymentDetails": {
                "method": "CARD",
                "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                "cardIssuedCountry": "IN",
                "transactionReferenceField": "Deposit",
                "3dsDone": true
              },
              "reference": "loan repayment",
              "deviceData": {
                "batteryLevel": 95,
                "deviceLatitude": 13.0033,
                "deviceLongitude": 76.1004,
                "ipAddress": "10.23.191.2",
                "deviceIdentifier": "3c49f915d04485e34caba",
                "vpnUsed": false,
                "operatingSystem": "Android 11.2",
                "deviceMaker": "ASUS",
                "deviceModel": "Zenphone M2 Pro Max",
                "deviceYear": "2018",
                "appVersion": "1.1.0"
              },
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ],
              "executedRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK",
                  "ruleHit": true
                }
              ],
              "hitRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK"
                }
              ]
            }
          }
        },
        "DeviceData": {
          "title": "DeviceData",
          "type": "object",
          "properties": {
            "batteryLevel": {
              "type": "number",
              "description": "Battery level of the device used for a transaction or event at a given timestamp"
            },
            "deviceLatitude": {
              "type": "number",
              "description": "Device latitude at a give timestamp for an event or transaction"
            },
            "deviceLongitude": {
              "type": "number",
              "description": "Device longitude at a give timestamp for an event or transaction"
            },
            "ipAddress": {
              "minLength": 1,
              "type": "string",
              "description": "IP address of the device at a given timestamp for an event or transaction"
            },
            "deviceIdentifier": {
              "minLength": 1,
              "type": "string",
              "description": "Device identifier number"
            },
            "vpnUsed": {
              "type": "boolean",
              "description": "Whether VPN was used at a given timestamp for an event or transaction"
            },
            "operatingSystem": {
              "minLength": 1,
              "type": "string",
              "description": "Operating system of the device at a given timestamp for an event or transaction"
            },
            "deviceMaker": {
              "minLength": 1,
              "type": "string",
              "description": "The maker of the device at a given timestamp for an event or transaction"
            },
            "deviceModel": {
              "minLength": 1,
              "type": "string",
              "description": "The model of the device at a given timestamp for an event or transaction"
            },
            "deviceYear": {
              "minLength": 1,
              "type": "string",
              "description": "The year the device was manufactured at a given timestamp for an event or transaction"
            },
            "appVersion": {
              "minLength": 1,
              "type": "string",
              "description": "The version of the app your user is using on their device at a given timestamp for an event or transaction"
            }
          },
          "description": "Model for device data"
        },
        "TransactionMonitoringResult": {
          "allOf": [
            {
              "type": "object",
              "description": "Model to convey the results of transaction monitoring",
              "properties": {
                "transactionId": {
                  "type": "string",
                  "description": "Transaction ID that the results pertain to"
                }
              },
              "required": [
                "transactionId"
              ]
            },
            {
              "$ref": "#/components/schemas/RulesResults"
            }
          ],
          "x-examples": {
            "example-1": {
              "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              "executedRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK",
                  "ruleHit": true
                }
              ],
              "hitRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK"
                }
              ]
            }
          }
        },
        "TransactionEventMonitoringResult": {
          "allOf": [
            {
              "type": "object",
              "description": "Model to convey the results of transaction monitoring",
              "properties": {
                "eventId": {
                  "type": "string"
                },
                "transaction": {
                  "$ref": "#/components/schemas/Transaction"
                }
              },
              "required": [
                "eventId",
                "transaction"
              ]
            },
            {
              "$ref": "#/components/schemas/RulesResults"
            }
          ],
          "x-examples": {
            "example-1": {
              "eventId": "7b80a539eea6e78acbd6d458e5971482",
              "transaction": {
                "transactionId": "7b80a539eea6e78acbd6d458e5971482",
                "originUserId": "8650a2611d0771cba03310f74bf6",
                "destinationUserId": "9350a2611e0771cba03310f74bf6",
                "originAmountDetails": {
                  "country": "DE",
                  "transactionAmount": 800,
                  "transactionCurrency": "EUR"
                },
                "destinationAmountDetails": {
                  "country": "IN",
                  "transactionAmount": 68351.34,
                  "transactionCurrency": "INR"
                },
                "promotionCodeUsed": true,
                "timestamp": 1641654664,
                "originPaymentDetails": {
                  "method": "CARD",
                  "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                  "cardIssuedCountry": "US",
                  "transactionReferenceField": "Deposit",
                  "3dsDone": true
                },
                "destinationPaymentDetails": {
                  "method": "CARD",
                  "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
                  "cardIssuedCountry": "IN",
                  "transactionReferenceField": "Deposit",
                  "3dsDone": true
                },
                "reference": "loan repayment",
                "deviceData": {
                  "batteryLevel": 95,
                  "deviceLatitude": 13.0033,
                  "deviceLongitude": 76.1004,
                  "ipAddress": "10.23.191.2",
                  "deviceIdentifier": "3c49f915d04485e34caba",
                  "vpnUsed": false,
                  "operatingSystem": "Android 11.2",
                  "deviceMaker": "ASUS",
                  "deviceModel": "Zenphone M2 Pro Max",
                  "deviceYear": "2018",
                  "appVersion": "1.1.0"
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              },
              "executedRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK",
                  "ruleHit": true
                }
              ],
              "hitRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK"
                }
              ]
            }
          },
          "title": ""
        },
        "UserMonitoringResult": {
          "allOf": [
            {
              "type": "object",
              "description": "Model to convey the results of user monitoring",
              "properties": {
                "userId": {
                  "type": "string",
                  "description": "User ID that the results pertain to"
                }
              },
              "required": [
                "userId"
              ]
            },
            {
              "$ref": "#/components/schemas/RulesResults"
            }
          ]
        },
        "RulesResults": {
          "title": "RulesResults",
          "type": "object",
          "example": {
            "transactionId": "7b80a539eea6e78acbd6d458e5971482",
            "executedRules": [
              {
                "ruleId": "R-1a",
                "ruleName": "Proof of funds for high value transactions",
                "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                "ruleAction": "BLOCK",
                "ruleHit": true
              }
            ],
            "hitRules": [
              {
                "ruleId": "R-1a",
                "ruleName": "Proof of funds for high value transactions",
                "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                "ruleAction": "BLOCK"
              }
            ]
          },
          "x-examples": {
            "example-1": {
              "transactionId": "7b80a539eea6e78acbd6d458e5971482",
              "executedRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK",
                  "ruleHit": true
                }
              ],
              "hitRules": [
                {
                  "ruleId": "R-1a",
                  "ruleName": "Proof of funds for high value transactions",
                  "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
                  "ruleAction": "BLOCK"
                }
              ]
            }
          },
          "properties": {
            "executedRules": {
              "type": "array",
              "description": "Unique transaction identifier",
              "items": {
                "$ref": "#/components/schemas/ExecutedRulesResult"
              }
            },
            "hitRules": {
              "type": "array",
              "description": "Unique transaction identifier",
              "items": {
                "$ref": "#/components/schemas/HitRulesDetails"
              }
            }
          },
          "required": [
            "executedRules",
            "hitRules"
          ]
        },
        "ExecutedRulesResult": {
          "title": "ExecutedRulesResult",
          "type": "object",
          "example": {
            "ruleId": "R-1a",
            "ruleName": "Proof of funds for high value transactions",
            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
            "ruleAction": "BLOCK",
            "ruleHit": true
          },
          "description": "Model for list of executed rules",
          "properties": {
            "ruleId": {
              "minLength": 1,
              "type": "string",
              "description": "Unique rule identifier"
            },
            "ruleInstanceId": {
              "type": "string"
            },
            "ruleName": {
              "minLength": 1,
              "type": "string",
              "description": "Name of the rule"
            },
            "ruleDescription": {
              "minLength": 1,
              "type": "string",
              "description": "Description of the rule"
            },
            "ruleAction": {
              "$ref": "#/components/schemas/RuleAction"
            },
            "ruleHit": {
              "type": "boolean"
            },
            "ruleHitMeta": {
              "$ref": "#/components/schemas/RuleHitMeta"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RuleLabels"
              }
            },
            "nature": {
              "$ref": "#/components/schemas/RuleNature"
            }
          },
          "required": [
            "ruleId",
            "ruleInstanceId",
            "ruleName",
            "ruleDescription",
            "ruleAction",
            "ruleHit"
          ]
        },
        "HitRulesDetails": {
          "title": "HitRulesDetails",
          "type": "object",
          "example": {
            "ruleId": "R-1a",
            "ruleName": "Proof of funds for high value transactions",
            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
            "ruleAction": "BLOCK",
            "ruleHit": true,
            "nature": "FRAUD"
          },
          "description": "Model for list of hit rules",
          "properties": {
            "ruleId": {
              "minLength": 1,
              "type": "string",
              "description": "Unique rule identifier"
            },
            "ruleInstanceId": {
              "type": "string"
            },
            "ruleName": {
              "minLength": 1,
              "type": "string",
              "description": "Name of the rule"
            },
            "ruleDescription": {
              "minLength": 1,
              "type": "string",
              "description": "Description of the rule"
            },
            "ruleAction": {
              "$ref": "#/components/schemas/RuleAction"
            },
            "ruleHitMeta": {
              "$ref": "#/components/schemas/RuleHitMeta"
            },
            "labels": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RuleLabels"
              }
            },
            "nature": {
              "$ref": "#/components/schemas/RuleNature"
            }
          },
          "required": [
            "ruleId",
            "ruleInstanceId",
            "ruleName",
            "ruleDescription",
            "ruleAction"
          ]
        },
        "FailedRulesResult": {
          "title": "FailedRulesResult",
          "type": "object",
          "example": {
            "ruleId": "R-1a",
            "ruleName": "Proof of funds for high value transactions",
            "ruleDescription": "If a user makes a remittance transaction >= 1800 in EUR - ask for proof of funds",
            "failureException": {
              "exceptionName": "MISSING_DATA",
              "exceptionDescription": "Some data is missing"
            }
          },
          "description": "Model for list of rules failed execution. It means rules could not be run",
          "properties": {
            "ruleId": {
              "minLength": 1,
              "type": "string",
              "description": "Unique rule identifier"
            },
            "ruleName": {
              "minLength": 1,
              "type": "string",
              "description": "Name of the rule"
            },
            "ruleDescription": {
              "minLength": 1,
              "type": "string",
              "description": "Description of the rule"
            },
            "failureException": {
              "$ref": "#/components/schemas/RuleFailureException"
            }
          },
          "required": [
            "ruleId",
            "ruleName",
            "ruleDescription",
            "failureException"
          ]
        },
        "RuleFailureException": {
          "title": "RuleFailureException",
          "required": [
            "exceptionName",
            "exceptionDescription"
          ],
          "type": "object",
          "properties": {
            "exceptionName": {
              "minLength": 1,
              "type": "string",
              "description": "Unique rule identifier"
            },
            "exceptionDescription": {
              "minLength": 1,
              "type": "string",
              "description": "Name of the rule"
            }
          },
          "example": {
            "exceptionName": "MISSING_DATA",
            "exceptionDescription": "Some data is missing"
          }
        },
        "RiskScoringResult": {
          "title": "RiskScoringResult",
          "required": [
            "kycRiskScore",
            "transactionRiskScore"
          ],
          "type": "object",
          "properties": {
            "kycRiskScore": {
              "type": "number",
              "description": "Quantified KYC risk score"
            },
            "transactionRiskScore": {
              "type": "number",
              "description": "Quantified action risk score"
            },
            "customerRiskAssessment": {
              "type": "number",
              "description": "Quantified dynamic risk score"
            }
          },
          "description": "Model for results from Risk Scoring",
          "example": {
            "kycRiskScore": 87.5,
            "transactionRiskScore": 58.33,
            "customerRiskAssessment": 73.92
          }
        },
        "ConsumerName": {
          "title": "ConsumerName",
          "required": [
            "firstName"
          ],
          "type": "object",
          "properties": {
            "firstName": {
              "minLength": 1,
              "type": "string",
              "description": "First name of the user"
            },
            "middleName": {
              "minLength": 1,
              "type": "string",
              "description": "Middle name of the user"
            },
            "lastName": {
              "minLength": 1,
              "type": "string",
              "description": "Last name of the user"
            }
          },
          "description": "Model for a generic consumer name",
          "example": {
            "firstName": "Baran",
            "middleName": "Realblood",
            "lastName": "Ozkan"
          }
        },
        "TransactionAmountDetails": {
          "title": "TransactionAmountDetails",
          "type": "object",
          "example": {
            "country": "DE",
            "transactionAmount": 800,
            "transactionCurrency": "EUR"
          },
          "description": "Model for transaction amount details",
          "properties": {
            "transactionAmount": {
              "type": "number",
              "description": "Amount of the transaction"
            },
            "transactionCurrency": {
              "$ref": "#/components/schemas/CurrencyCode"
            },
            "country": {
              "$ref": "#/components/schemas/CountryCode"
            }
          },
          "required": [
            "transactionAmount",
            "transactionCurrency"
          ]
        },
        "Amount": {
          "title": "Amount",
          "type": "object",
          "example": {
            "amountValue": 800,
            "amountCurrency": "GBP"
          },
          "description": "Model for amount",
          "properties": {
            "amountValue": {
              "type": "number",
              "description": "Numerical value of the transaction"
            },
            "amountCurrency": {
              "$ref": "#/components/schemas/CurrencyCode"
            }
          },
          "required": [
            "amountValue",
            "amountCurrency"
          ]
        },
        "LegalEntity": {
          "title": "LegalEntity",
          "type": "object",
          "description": "Model for business user legal entity details",
          "properties": {
            "companyGeneralDetails": {
              "$ref": "#/components/schemas/CompanyGeneralDetails"
            },
            "companyFinancialDetails": {
              "$ref": "#/components/schemas/CompanyFinancialDetails"
            },
            "companyRegistrationDetails": {
              "$ref": "#/components/schemas/CompanyRegistrationDetails"
            },
            "reasonForAccountOpening": {
              "type": "array",
              "description": "Reason for opening the account at financial institution",
              "items": {
                "type": "string"
              }
            },
            "contactDetails": {
              "$ref": "#/components/schemas/ContactDetails"
            }
          },
          "required": [
            "companyGeneralDetails"
          ]
        },
        "ContactDetails": {
          "title": "ContactDetails",
          "type": "object",
          "description": "Model for business user contact information details",
          "properties": {
            "emailIds": {
              "type": "array",
              "description": "Email addresses of the contacts for a given business customer",
              "items": {
                "type": "string"
              }
            },
            "contactNumbers": {
              "type": "array",
              "description": "Phone numbers to contact a given business customer",
              "items": {
                "type": "string"
              }
            },
            "faxNumbers": {
              "type": "array",
              "description": "Fax numbers to contact a business customer",
              "items": {
                "type": "string"
              }
            },
            "websites": {
              "type": "array",
              "description": "Website of the company",
              "items": {
                "type": "string"
              }
            },
            "addresses": {
              "type": "array",
              "description": "Address(es) of the company",
              "items": {
                "$ref": "#/components/schemas/Address"
              }
            }
          }
        },
        "CompanyFinancialDetails": {
          "title": "CompanyFinancialDetails",
          "type": "object",
          "example": {
            "expectedTransactionAmountPerMonth": {
              "amountValue": 800,
              "amountCurrency": "GBP"
            },
            "expectedTurnoverPerMonth": {
              "amountValue": 8000,
              "amountCurrency": "USD"
            }
          },
          "description": "Model for business user company financial details",
          "properties": {
            "expectedTransactionAmountPerMonth": {
              "$ref": "#/components/schemas/Amount"
            },
            "expectedTurnoverPerMonth": {
              "$ref": "#/components/schemas/Amount"
            },
            "tags": {
              "type": "array",
              "description": "Additional information that can be added via tags",
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "UserDetails": {
          "title": "UserDetails",
          "type": "object",
          "example": {
            "name": {
              "firstName": "Baran",
              "middleName": "Realblood",
              "lastName": "Ozkan"
            },
            "dateOfBirth": "1991-01-01",
            "countryOfResidence": "US",
            "countryOfNationality": "DE"
          },
          "description": "Model for consumer user personal details",
          "properties": {
            "name": {
              "$ref": "#/components/schemas/ConsumerName"
            },
            "dateOfBirth": {
              "type": "string",
              "pattern": "^(\\d{4}-\\d{2}-\\d{2})*$",
              "description": "Date of birth of the user (YYYY-MM-DD)"
            },
            "countryOfResidence": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "countryOfNationality": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "gender": {
              "type": "string",
              "enum": [
                "M",
                "F",
                "NB"
              ],
              "description": "Gender of the individual - Male, Female or Non-Binary"
            }
          },
          "required": [
            "name"
          ]
        },
        "UserRegistrationStatus": {
          "title": "UserRegistrationStatus",
          "type": "string",
          "enum": [
            "REGISTERED",
            "UNREGISTERED"
          ]
        },
        "CompanyGeneralDetails": {
          "title": "CompanyGeneralDetails",
          "type": "object",
          "example": {
            "legalName": "Ozkan Hazelnut Export JSC",
            "businessIndustry": [
              "Farming"
            ],
            "mainProductsServicesSold": [
              "Hazelnut"
            ]
          },
          "description": "Model for business user company general details",
          "properties": {
            "legalName": {
              "minLength": 1,
              "type": "string",
              "description": "Legal name of the company"
            },
            "businessIndustry": {
              "type": "array",
              "description": "The industry the business operates in for a business customer",
              "items": {
                "type": "string"
              }
            },
            "mainProductsServicesSold": {
              "type": "array",
              "description": "The key products and services provided by the company",
              "items": {
                "type": "string"
              }
            },
            "userSegment": {
              "type": "string",
              "description": "Segmentation of the business user",
              "enum": [
                "SOLE_PROPRIETORSHIP",
                "SMB",
                "SMALL",
                "MEDIUM",
                "LARGE",
                "UNKNOWN"
              ]
            },
            "userRegistrationStatus": {
              "$ref": "#/components/schemas/UserRegistrationStatus"
            },
            "tags": {
              "type": "array",
              "description": "Additional information that can be added via tags",
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          },
          "required": [
            "legalName"
          ]
        },
        "CompanyRegistrationDetails": {
          "title": "CompanyRegistrationDetails",
          "type": "object",
          "example": {
            "registrationIdentifier": "PSJ554342",
            "registrationCountry": "DE"
          },
          "description": "Model for business user company registration details",
          "properties": {
            "registrationIdentifier": {
              "minLength": 1,
              "type": "string",
              "description": "Commercial registry registration number for the company in its registration country"
            },
            "registrationCountry": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "taxIdentifier": {
              "type": "string",
              "description": "Tax ID number of the registered entity"
            },
            "legalEntityType": {
              "type": "string",
              "description": "Type of legal entity. Ex: Limited Liability"
            },
            "dateOfRegistration": {
              "type": "string",
              "pattern": "^(\\d{4}-\\d{2}-\\d{2})*$"
            },
            "tags": {
              "type": "array",
              "description": "Additional information that can be added via tags",
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          },
          "required": [
            "registrationIdentifier",
            "registrationCountry"
          ]
        },
        "Business": {
          "allOf": [
            {
              "$ref": "#/components/schemas/BusinessBase"
            },
            {
              "$ref": "#/components/schemas/BusinessOptional"
            }
          ]
        },
        "BusinessBase": {
          "title": "BusinessBase",
          "type": "object",
          "example": {
            "createdTimestamp": 1641654664000,
            "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
            "legalEntity": {
              "companyGeneralDetails": {
                "legalName": "Ozkan Hazelnut Export JSC",
                "businessIndustry": [
                  "Farming"
                ],
                "mainProductsServicesSold": [
                  "Hazelnut"
                ]
              },
              "companyFinancialDetails": {
                "expectedTransactionAmountPerMonth": {
                  "amountValue": 800,
                  "amountCurrency": "GBP"
                },
                "expectedTurnoverPerMonth": {
                  "amountValue": 8000,
                  "amountCurrency": "USD"
                }
              },
              "companyRegistrationDetails": {
                "registrationIdentifier": "PSJ554342",
                "registrationCountry": "DE"
              },
              "reasonForAccountOpening": [
                "string"
              ],
              "contactDetails": {
                "addresses": [
                  {
                    "addressLines": [
                      "Klara-Franke Str 20"
                    ],
                    "postcode": "10557",
                    "city": "Berlin",
                    "state": "Berlin",
                    "country": "Germany",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue"
                      }
                    ]
                  }
                ]
              }
            },
            "shareHolders": [
              {
                "generalDetails": {
                  "name": {
                    "firstName": "Baran",
                    "middleName": "Realblood",
                    "lastName": "Ozkan"
                  },
                  "dateOfBirth": "1991-01-01",
                  "countryOfResidence": "US",
                  "countryOfNationality": "DE"
                },
                "legalDocuments": [
                  {
                    "documentType": "passport",
                    "documentNumber": "Z9431P",
                    "documentIssuedDate": 1639939034000,
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet"
                      }
                    ]
                  }
                ],
                "contactDetails": {
                  "emailIds": [
                    "baran@flagright.com"
                  ],
                  "contactNumbers": [
                    "+371 123132"
                  ],
                  "websites": [
                    "flagright.com"
                  ],
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              }
            ],
            "directors": [
              {
                "generalDetails": {
                  "name": {
                    "firstName": "Baran",
                    "middleName": "Realblood",
                    "lastName": "Ozkan"
                  },
                  "dateOfBirth": "1991-01-01",
                  "countryOfResidence": "US",
                  "countryOfNationality": "DE"
                },
                "legalDocuments": [
                  {
                    "documentType": "passport",
                    "documentNumber": "Z9431P",
                    "documentIssuedDate": 1639939034000,
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet"
                      }
                    ]
                  }
                ],
                "contactDetails": {
                  "emailIds": [
                    "baran@flagright.com"
                  ],
                  "contactNumbers": [
                    "+371 123132"
                  ],
                  "websites": [
                    "flagright.com"
                  ],
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              }
            ],
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          },
          "x-examples": {
            "example-1": {
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "legalEntity": {
                "companyGeneralDetails": {
                  "legalName": "Ozkan Hazelnut Export JSC",
                  "businessIndustry": [
                    "Farming"
                  ],
                  "mainProductsServicesSold": [
                    "Hazelnut"
                  ]
                },
                "companyFinancialDetails": {
                  "expectedTransactionAmountPerMonth": {
                    "amountValue": 800,
                    "amountCurrency": "GBP"
                  },
                  "expectedTurnoverPerMonth": {
                    "amountValue": 8000,
                    "amountCurrency": "USD"
                  }
                },
                "companyRegistrationDetails": {
                  "registrationIdentifier": "PSJ554342",
                  "registrationCountry": "DE"
                },
                "reasonForAccountOpening": [
                  "string"
                ],
                "contactDetails": {
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                }
              },
              "shareHolders": [
                {
                  "generalDetails": {
                    "name": {
                      "firstName": "Baran",
                      "middleName": "Realblood",
                      "lastName": "Ozkan"
                    },
                    "dateOfBirth": {
                      "day": 1,
                      "month": 1,
                      "year": 1990
                    },
                    "countryOfResidence": "US",
                    "countryOfNationality": "DE"
                  },
                  "legalDocuments": [
                    {
                      "documentType": "passport",
                      "documentNumber": "Z9431P",
                      "documentIssuedDate": 1639939034000,
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet"
                        }
                      ]
                    }
                  ],
                  "contactDetails": {
                    "emailIds": [
                      "baran@flagright.com"
                    ],
                    "contactNumbers": [
                      "+371 123132"
                    ],
                    "websites": [
                      "flagright.com"
                    ],
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20"
                        ],
                        "postcode": "10557",
                        "city": "Berlin",
                        "state": "Berlin",
                        "country": "Germany",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    ]
                  },
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ],
              "directors": [
                {
                  "generalDetails": {
                    "name": {
                      "firstName": "Baran",
                      "middleName": "Realblood",
                      "lastName": "Ozkan"
                    },
                    "dateOfBirth": {
                      "day": 1,
                      "month": 1,
                      "year": 1990
                    },
                    "countryOfResidence": "US",
                    "countryOfNationality": "DE"
                  },
                  "legalDocuments": [
                    {
                      "documentType": "passport",
                      "documentNumber": "Z9431P",
                      "documentIssuedDate": 1639939034000,
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet"
                        }
                      ]
                    }
                  ],
                  "contactDetails": {
                    "emailIds": [
                      "baran@flagright.com"
                    ],
                    "contactNumbers": [
                      "+371 123132"
                    ],
                    "websites": [
                      "flagright.com"
                    ],
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20"
                        ],
                        "postcode": "10557",
                        "city": "Berlin",
                        "state": "Berlin",
                        "country": "Germany",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    ]
                  },
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ],
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          },
          "description": "Model for a business user base fields",
          "properties": {
            "userId": {
              "minLength": 1,
              "type": "string",
              "description": "Unique user ID for the user"
            },
            "createdTimestamp": {
              "type": "number",
              "minimum": 1262300400000,
              "description": "Timestamp when the user was created",
              "maximum": 4133890801000
            }
          },
          "required": [
            "userId",
            "legalEntity",
            "createdTimestamp"
          ]
        },
        "BusinessOptional": {
          "title": "BusinessOptional",
          "type": "object",
          "example": {
            "createdTimestamp": 1641654664000,
            "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
            "legalEntity": {
              "companyGeneralDetails": {
                "legalName": "Ozkan Hazelnut Export JSC",
                "businessIndustry": [
                  "Farming"
                ],
                "mainProductsServicesSold": [
                  "Hazelnut"
                ]
              },
              "companyFinancialDetails": {
                "expectedTransactionAmountPerMonth": {
                  "amountValue": 800,
                  "amountCurrency": "GBP"
                },
                "expectedTurnoverPerMonth": {
                  "amountValue": 8000,
                  "amountCurrency": "USD"
                }
              },
              "companyRegistrationDetails": {
                "registrationIdentifier": "PSJ554342",
                "registrationCountry": "DE"
              },
              "reasonForAccountOpening": [
                "string"
              ],
              "contactDetails": {
                "addresses": [
                  {
                    "addressLines": [
                      "Klara-Franke Str 20"
                    ],
                    "postcode": "10557",
                    "city": "Berlin",
                    "state": "Berlin",
                    "country": "Germany",
                    "tags": [
                      {
                        "key": "customKey",
                        "value": "customValue"
                      }
                    ]
                  }
                ]
              }
            },
            "shareHolders": [
              {
                "generalDetails": {
                  "name": {
                    "firstName": "Baran",
                    "middleName": "Realblood",
                    "lastName": "Ozkan"
                  },
                  "dateOfBirth": "1991-01-01",
                  "countryOfResidence": "US",
                  "countryOfNationality": "DE"
                },
                "legalDocuments": [
                  {
                    "documentType": "passport",
                    "documentNumber": "Z9431P",
                    "documentIssuedDate": 1639939034000,
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet"
                      }
                    ]
                  }
                ],
                "contactDetails": {
                  "emailIds": [
                    "baran@flagright.com"
                  ],
                  "contactNumbers": [
                    "+371 123132"
                  ],
                  "websites": [
                    "flagright.com"
                  ],
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              }
            ],
            "directors": [
              {
                "generalDetails": {
                  "name": {
                    "firstName": "Baran",
                    "middleName": "Realblood",
                    "lastName": "Ozkan"
                  },
                  "dateOfBirth": "1991-01-01",
                  "countryOfResidence": "US",
                  "countryOfNationality": "DE"
                },
                "legalDocuments": [
                  {
                    "documentType": "passport",
                    "documentNumber": "Z9431P",
                    "documentIssuedDate": 1639939034000,
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet"
                      }
                    ]
                  }
                ],
                "contactDetails": {
                  "emailIds": [
                    "baran@flagright.com"
                  ],
                  "contactNumbers": [
                    "+371 123132"
                  ],
                  "websites": [
                    "flagright.com"
                  ],
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              }
            ],
            "tags": [
              {
                "key": "customKey",
                "value": "customValue"
              }
            ]
          },
          "x-examples": {
            "example-1": {
              "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
              "legalEntity": {
                "companyGeneralDetails": {
                  "legalName": "Ozkan Hazelnut Export JSC",
                  "businessIndustry": [
                    "Farming"
                  ],
                  "mainProductsServicesSold": [
                    "Hazelnut"
                  ]
                },
                "companyFinancialDetails": {
                  "expectedTransactionAmountPerMonth": {
                    "amountValue": 800,
                    "amountCurrency": "GBP"
                  },
                  "expectedTurnoverPerMonth": {
                    "amountValue": 8000,
                    "amountCurrency": "USD"
                  }
                },
                "companyRegistrationDetails": {
                  "registrationIdentifier": "PSJ554342",
                  "registrationCountry": "DE"
                },
                "reasonForAccountOpening": [
                  "string"
                ],
                "contactDetails": {
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                }
              },
              "shareHolders": [
                {
                  "generalDetails": {
                    "name": {
                      "firstName": "Baran",
                      "middleName": "Realblood",
                      "lastName": "Ozkan"
                    },
                    "dateOfBirth": {
                      "day": 1,
                      "month": 1,
                      "year": 1990
                    },
                    "countryOfResidence": "US",
                    "countryOfNationality": "DE"
                  },
                  "legalDocuments": [
                    {
                      "documentType": "passport",
                      "documentNumber": "Z9431P",
                      "documentIssuedDate": 1639939034000,
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet"
                        }
                      ]
                    }
                  ],
                  "contactDetails": {
                    "emailIds": [
                      "baran@flagright.com"
                    ],
                    "contactNumbers": [
                      "+371 123132"
                    ],
                    "websites": [
                      "flagright.com"
                    ],
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20"
                        ],
                        "postcode": "10557",
                        "city": "Berlin",
                        "state": "Berlin",
                        "country": "Germany",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    ]
                  },
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ],
              "directors": [
                {
                  "generalDetails": {
                    "name": {
                      "firstName": "Baran",
                      "middleName": "Realblood",
                      "lastName": "Ozkan"
                    },
                    "dateOfBirth": {
                      "day": 1,
                      "month": 1,
                      "year": 1990
                    },
                    "countryOfResidence": "US",
                    "countryOfNationality": "DE"
                  },
                  "legalDocuments": [
                    {
                      "documentType": "passport",
                      "documentNumber": "Z9431P",
                      "documentIssuedDate": 1639939034000,
                      "documentExpirationDate": 1839939034000,
                      "documentIssuedCountry": "DE",
                      "tags": [
                        {
                          "key": "customerType",
                          "value": "wallet"
                        }
                      ]
                    }
                  ],
                  "contactDetails": {
                    "emailIds": [
                      "baran@flagright.com"
                    ],
                    "contactNumbers": [
                      "+371 123132"
                    ],
                    "websites": [
                      "flagright.com"
                    ],
                    "addresses": [
                      {
                        "addressLines": [
                          "Klara-Franke Str 20"
                        ],
                        "postcode": "10557",
                        "city": "Berlin",
                        "state": "Berlin",
                        "country": "Germany",
                        "tags": [
                          {
                            "key": "customKey",
                            "value": "customValue"
                          }
                        ]
                      }
                    ]
                  },
                  "tags": [
                    {
                      "key": "customKey",
                      "value": "customValue"
                    }
                  ]
                }
              ],
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          },
          "description": "Model for a business user - optional fields",
          "properties": {
            "userStateDetails": {
              "$ref": "#/components/schemas/UserStateDetails"
            },
            "kycStatusDetails": {
              "$ref": "#/components/schemas/KYCStatusDetails"
            },
            "legalEntity": {
              "$ref": "#/components/schemas/LegalEntity"
            },
            "shareHolders": {
              "type": "array",
              "description": "Shareholders (beneficiaries) of the company that hold at least 25% ownership. Can be another company or an individual",
              "items": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "directors": {
              "type": "array",
              "description": "Director(s) of the company. Must be at least one",
              "items": {
                "$ref": "#/components/schemas/Person"
              }
            },
            "transactionLimits": {
              "$ref": "#/components/schemas/TransactionLimits"
            },
            "riskLevel": {
              "$ref": "#/components/schemas/RiskLevel"
            },
            "allowedPaymentMethods": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/PaymentMethod"
              }
            },
            "linkedEntities": {
              "$ref": "#/components/schemas/BusinessEntityLink"
            },
            "acquisitionChannel": {
              "$ref": "#/components/schemas/AcquisitionChannel"
            },
            "savedPaymentDetails": {
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/CardDetails"
                  },
                  {
                    "$ref": "#/components/schemas/GenericBankAccountDetails"
                  },
                  {
                    "$ref": "#/components/schemas/IBANDetails"
                  },
                  {
                    "$ref": "#/components/schemas/ACHDetails"
                  },
                  {
                    "$ref": "#/components/schemas/SWIFTDetails"
                  },
                  {
                    "$ref": "#/components/schemas/MpesaDetails"
                  },
                  {
                    "$ref": "#/components/schemas/UPIDetails"
                  },
                  {
                    "$ref": "#/components/schemas/WalletDetails"
                  },
                  {
                    "$ref": "#/components/schemas/CheckDetails"
                  }
                ]
              }
            },
            "mccDetails": {
              "$ref": "#/components/schemas/MCCDetails"
            },
            "tags": {
              "type": "array",
              "description": "Additional information that can be added via tags",
              "items": {
                "$ref": "#/components/schemas/Tag"
              }
            }
          }
        },
        "BusinessUsersResponse": {
          "title": "BusinessUsersResponse",
          "type": "object",
          "description": "Model for business user risk score response",
          "properties": {
            "userId": {
              "minLength": 1,
              "type": "string",
              "description": "user ID the risk score pertains to"
            }
          },
          "required": [
            "userId"
          ]
        },
        "ConsumerUsersResponse": {
          "title": "ConsumerUsersResponse",
          "type": "object",
          "x-examples": {
            "example-1": {
              "userId": "string",
              "userRiskScoreDetails": {
                "kycRiskScore": 87.5,
                "transactionRiskScore": 58.33,
                "customerRiskAssessment": 73.92
              }
            }
          },
          "description": "Model for consumer user risk score response",
          "properties": {
            "userId": {
              "minLength": 1,
              "type": "string",
              "description": "user ID the risk score pertains to"
            }
          },
          "required": [
            "userId"
          ]
        },
        "CardDetails": {
          "title": "CardDetails",
          "type": "object",
          "description": "Model for credit or debit card details",
          "example": {
            "method": "CARD",
            "cardFingerprint": "20ac00fed8ef913aefb17cfae1097cce",
            "cardIssuedCountry": "TR",
            "transactionReferenceField": "Deposit",
            "3dsDone": true
          },
          "properties": {
            "method": {
              "$ref": "#/components/schemas/CardPaymentMethod"
            },
            "cardFingerprint": {
              "minLength": 1,
              "type": "string",
              "description": "Unique card fingerprint that helps identify a specific card without having to use explicit card number. This is likely available at your card payment scheme provider"
            },
            "cardIssuedCountry": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "transactionReferenceField": {
              "minLength": 1,
              "type": "string",
              "description": "Reference for the transaction"
            },
            "3dsDone": {
              "type": "boolean",
              "description": "Whether 3ds was successfully enforced for the transaction"
            },
            "nameOnCard": {
              "$ref": "#/components/schemas/ConsumerName"
            },
            "cardExpiry": {
              "$ref": "#/components/schemas/CardExpiry"
            },
            "cardLast4Digits": {
              "type": "string",
              "minLength": 4,
              "maxLength": 4,
              "description": "Last 4 digits of Card"
            },
            "cardBrand": {
              "type": "string",
              "description": "Brand of Card",
              "enum": [
                "VISA",
                "MASTERCARD",
                "AMERICAN_EXPRESS",
                "DISCOVER",
                "UNIONPAY",
                "RUPAY",
                "JCB"
              ]
            },
            "cardFunding": {
              "type": "string",
              "description": "Funding of Card",
              "enum": [
                "CREDIT",
                "DEBIT",
                "PREPAID"
              ]
            },
            "cardAuthenticated": {
              "type": "boolean",
              "description": "Authentication of Card"
            },
            "paymentChannel": {
              "type": "string"
            },
            "cardType": {
              "type": "string",
              "enum": [
                "VIRTUAL",
                "PHYSICAL"
              ]
            },
            "merchantDetails": {
              "$ref": "#/components/schemas/CardMerchantDetails"
            }
          },
          "required": [
            "method"
          ]
        },
        "IBANDetails": {
          "title": "IBANDetails",
          "type": "object",
          "description": "Standardized model for Bank Details",
          "example": {
            "method": "IBAN",
            "BIC": "DE761234561",
            "bankName": "Merryl Lynch",
            "IBAN": "1234321",
            "bankAddress": {
              "addressLines": [
                "Klara-Franke Str 20"
              ],
              "postcode": "10557",
              "city": "Berlin",
              "state": "Berlin",
              "country": "Germany",
              "tags": [
                {
                  "key": "customKey",
                  "value": "customValue"
                }
              ]
            }
          },
          "x-examples": {
            "example-1": {
              "method": "IBAN",
              "bankIdentifierType": "IBAN",
              "bankIdentifier": "DE761234561",
              "bankName": "Merryl Lynch",
              "accountNumber": "1234321",
              "bankAddress": {
                "addressLines": [
                  "Klara-Franke Str 20"
                ],
                "postcode": "10557",
                "city": "Berlin",
                "state": "Berlin",
                "country": "Germany",
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              }
            }
          },
          "properties": {
            "method": {
              "$ref": "#/components/schemas/IBANPaymentMethod"
            },
            "BIC": {
              "minLength": 1,
              "type": "string",
              "description": "Identifier for the bank. Can be routing number, BIK number, SWIFT code, BIC number etc."
            },
            "bankName": {
              "minLength": 1,
              "type": "string",
              "description": "Name of the bank"
            },
            "bankAddress": {
              "$ref": "#/components/schemas/Address"
            },
            "country": {
              "$ref": "#/components/schemas/CountryCode"
            },
            "IBAN": {
              "type": "string",
              "description": "Account number of the user. Can be account number, IBAN number etc."
            },
            "name": {
              "type": "string",
              "description": "Name of the bank account holder"
            },
            "tags": {
              "$ref": "#/components/schemas/Tag"
            },
            "bankBranchCode": {
              "type": "string",
              "description": "Branch code of the bank. In some countries, this can be the same as the bank's SWIFT code"
            },
            "paymentChannel": {
              "type": "string"
            }
          },
          "required": [
            "method"
          ]
        },
        "WalletDetails": {
          "title": "WalletDetails",
          "type": "object",
          "description": "Standardized model for a Generic wallet transaction",
          "x-examples": {},
          "properties": {
            "method": {
              "$ref": "#/components/schemas/WalletPaymentMethod"
            },
            "walletType": {
              "type": "string",
              "description": "Wallet type if there are various types of wallets belonging to the same user. E.g. Checking, savings, vault, different currency wallets etc."
            },
            "walletId": {
              "minLength": 1,
              "type": "string",
              "description": "Unique ID of the wallet"
            },
            "paymentChannel": {
              "type": "string",
              "description": "Payment Channel used through wallet"
            },
            "name": {
              "type": "string",
              "description": "Name of the account holder for a specific wallet"
            },
            "tags": {
              "$ref": "#/components/schemas/Tag"
            },
            "walletPhoneNumber": {
              "type": "string",
              "description": "Phone number associated with the wallet, if any"
            }
          },
          "required": [
            "method",
            "walletType"
          ]
        },
        "ACHDetails": {
          "description": "Model for ACH payment method",
          "type": "object",
          "x-examples": {
            "example-2": {
              "method": "ACH",
              "routingNumber": "1231241",
              "accountNumber": "543456675",
              "bankName": "Wells Fargo",
              "name": {
                "firstName": "Baran",
                "middleName": "Realblood",
                "lastName": "Ozkan"
              },
              "bankAddress": {
                "addressLines": [
                  "1201 N Monroe St"
                ],
                "postcode": "32303",
                "city": "Tallahassee",
                "state": "FL",
                "country": "United States of America",
                "tags": [
                  {
                    "key": "userType",
                    "value": "customValue"
                  }
                ]
              }
            }
          },
          "title": "ACHDetails",
          "properties": {
            "method": {
              "$ref": "#/components/schemas/ACHPaymentMethod"
            },
            "routingNumber": {
              "type": "string",
              "minLength": 1,
              "description": "Routing number of the bank"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 1,
              "description": "Bank account number of the individual"
            },
            "bankName": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the bank"
            },
            "name": {
              "type": "string",
              "description": "Name of the account holder"
            },
            "bankAddress": {
              "$ref": "#/components/schemas/Address"
            },
            "beneficiaryName": {
              "type": "string",
              "description": "Beneficiary name of the account"
            }
          },
          "required": [
            "method"
          ]
        },
        "SWIFTDetails": {
          "description": "Model for SWIFT payment method",
          "type": "object",
          "x-examples": {},
          "title": "SWIFTDetails",
          "properties": {
            "method": {
              "$ref": "#/components/schemas/SWIFTPaymentMethod"
            },
            "swiftCode": {
              "type": "string",
              "minLength": 1,
              "description": "SWIFT code of the financial institution"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 1,
              "description": "Account number"
            },
            "accountType": {
              "type": "string",
              "description": "Account type. E.g. Checking, Savings etc."
            },
            "bankName": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the bank"
            },
            "name": {
              "type": "string",
              "description": "Name of the account holder"
            },
            "bankAddress": {
              "$ref": "#/components/schemas/Address"
            },
            "specialInstructions": {
              "type": "string",
              "description": "Special instructions if any"
            }
          },
          "required": [
            "method"
          ]
        },
        "MpesaDetails": {
          "description": "Model for Mpesa payment method",
          "type": "object",
          "x-examples": {},
          "title": "MpesaDetails",
          "properties": {
            "method": {
              "$ref": "#/components/schemas/MpesaPaymentMethod"
            },
            "businessShortCode": {
              "type": "string",
              "minLength": 1,
              "description": "Business code"
            },
            "transactionType": {
              "type": "string",
              "enum": [
                "CustomerPayBillOnline",
                "CustomerBuyGoodsOnline",
                "SalaryPayment",
                "BusinessPayment",
                "PromotionPayment"
              ],
              "description": "Type of transaction"
            },
            "phoneNumber": {
              "type": "string",
              "description": "Contact Number of the account holder"
            }
          },
          "required": [
            "method",
            "businessShortCode",
            "transactionType",
            "phoneNumber"
          ]
        },
        "GenericBankAccountDetails": {
          "description": "Model for any generic bank account",
          "type": "object",
          "x-examples": {},
          "title": "GenericBankAccountDetails",
          "properties": {
            "method": {
              "$ref": "#/components/schemas/GeneralBankAccountPaymentMethod"
            },
            "accountNumber": {
              "type": "string",
              "minLength": 1,
              "description": "Bank account number"
            },
            "accountType": {
              "type": "string",
              "description": "Bank account type. E.g. Checking, Savings etc."
            },
            "bankName": {
              "type": "string",
              "minLength": 1,
              "description": "Name of the bank"
            },
            "bankCode": {
              "type": "string",
              "description": "Unique identifier of the bank. In some countries, this can be the same as the bank's SWIFT code"
            },
            "name": {
              "type": "string",
              "description": "Name of the account holder"
            },
            "bankAddress": {
              "$ref": "#/components/schemas/Address"
            },
            "specialInstructions": {
              "type": "string",
              "description": "Special instructions to be specified if any"
            },
            "paymentChannel": {
              "type": "string"
            }
          },
          "required": [
            "method"
          ]
        },
        "UPIDetails": {
          "description": "Model for UPI payment method",
          "type": "object",
          "x-examples": {
            "example-1": {
              "method": "UPI",
              "upiID": "user@okhdfcbank",
              "bankProvider": "HDFC Bank",
              "interfaceProvider": "PhonePe"
            }
          },
          "title": "UPIDetails",
          "properties": {
            "method": {
              "$ref": "#/components/schemas/UPIPaymentMethod"
            },
            "upiID": {
              "type": "string",
              "minLength": 1,
              "description": "UPI Id number"
            },
            "bankProvider": {
              "type": "string",
              "minLength": 1,
              "description": "Bank provider name"
            },
            "interfaceProvider": {
              "type": "string",
              "minLength": 1,
              "description": "Interface provider name"
            },
            "name": {
              "type": "string",
              "description": "Name of the account holder"
            }
          },
          "required": [
            "method",
            "upiID"
          ]
        },
        "TransactionLimits": {
          "title": "TransactionLimits",
          "type": "object",
          "x-examples": {
            "example-1": {
              "maximumDailyTransactionLimit": {
                "amountValue": 800,
                "amountCurrency": "EUR"
              },
              "maximumWeeklyTransactionLimit": {
                "amountValue": 800,
                "amountCurrency": "GBP"
              },
              "maximumMonthlyTransactionLimit": {
                "amountValue": 800,
                "amountCurrency": "EUR"
              },
              "maximumQuarterlyTransactionLimit": {
                "amountValue": 800,
                "amountCurrency": "GBP"
              },
              "maximumYearlyTransactionLimit": {
                "amountValue": 800,
                "amountCurrency": "GBP"
              },
              "paymentMethodLimits": {
                "CARD": {
                  "transactionCountLimit": {
                    "day": 100,
                    "month": 100
                  },
                  "transactionAmountLimit": {
                    "day": {
                      "amountValue": 100,
                      "amountCurrency": "GBP"
                    },
                    "month": {
                      "amountValue": 1000,
                      "amountCurrency": "GBP"
                    }
                  },
                  "averageTransactionAmountLimit": {
                    "day": {
                      "amountValue": 100,
                      "amountCurrency": "GBP"
                    },
                    "month": {
                      "amountValue": 1000,
                      "amountCurrency": "GBP"
                    }
                  }
                },
                "IBAN": {
                  "transactionCountLimit": {
                    "day": 50,
                    "month": 500
                  },
                  "transactionAmountLimit": {
                    "day": {
                      "amountValue": 500,
                      "amountCurrency": "EUR"
                    },
                    "month": {
                      "amountValue": 5000,
                      "amountCurrency": "EUR"
                    }
                  },
                  "averageTransactionAmountLimit": {
                    "day": {
                      "amountValue": 500,
                      "amountCurrency": "EUR"
                    },
                    "month": {
                      "amountValue": 5000,
                      "amountCurrency": "EUR"
                    }
                  }
                }
              }
            }
          },
          "description": "Model for transaction limits for a given user",
          "properties": {
            "maximumDailyTransactionLimit": {
              "$ref": "#/components/schemas/Amount"
            },
            "maximumWeeklyTransactionLimit": {
              "$ref": "#/components/schemas/Amount"
            },
            "maximumMonthlyTransactionLimit": {
              "$ref": "#/components/schemas/Amount"
            },
            "maximumQuarterlyTransactionLimit": {
              "$ref": "#/components/schemas/Amount"
            },
            "maximumTransactionLimit": {
              "$ref": "#/components/schemas/Amount"
            },
            "maximumYearlyTransactionLimit": {
              "$ref": "#/components/schemas/Amount"
            },
            "paymentMethodLimits": {
              "type": "object",
              "properties": {
                "ACH": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "CARD": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "IBAN": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "UPI": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "GENERIC_BANK_ACCOUNT": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "MPESA": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "SWIFT": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "WALLET": {
                  "$ref": "#/components/schemas/TransactionLimit"
                },
                "CHECK": {
                  "$ref": "#/components/schemas/TransactionLimit"
                }
              }
            }
          }
        },
        "RuleAction": {
          "type": "string",
          "title": "RuleAction",
          "enum": [
            "ALLOW",
            "FLAG",
            "BLOCK",
            "SUSPEND"
          ],
          "x-examples": {
            "example-1": "ALLOW"
          },
          "description": "Model for rule action if a rule is hit. This is returned in the API response and can be configured on Console by operational accounts like a Compliance Analyst"
        },
        "RuleHitMeta": {
          "type": "object",
          "description": "Details of rule execution, for internal purposes only",
          "properties": {
            "hitDirections": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/RuleHitDirection"
              }
            },
            "falsePositiveDetails": {
              "$ref": "#/components/schemas/FalsePositiveDetails"
            },
            "sanctionsDetails": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/SanctionsDetails"
              }
            }
          }
        },
        "RuleHitDirection": {
          "type": "string",
          "title": "RuleHitDirection",
          "enum": [
            "ORIGIN",
            "DESTINATION"
          ]
        },
        "RuleNature": {
          "type": "string",
          "title": "Rule nature type",
          "enum": [
            "AML",
            "FRAUD",
            "CTF",
            "SCREENING"
          ]
        },
        "RuleLabels": {
          "type": "string",
          "title": "RuleLabels",
          "enum": [
            "UNEXPECTED_BEHAVIOR",
            "ILLICIT_GAINS_CHECK",
            "RFI_TRIGGER",
            "EDD_TRIGGER",
            "KYC_TRIGGER",
            "SCAM",
            "ABUSE",
            "ACCOUNT_TAKEOVER",
            "DISPUTE",
            "SANCTIONS",
            "SANCTIONS_PEP",
            "SANCTIONS_PEP_ADVERSE_MEDIA"
          ]
        },
        "TransactionEvent": {
          "description": "Model for transaction-related events",
          "type": "object",
          "x-examples": {
            "example-1": {
              "transactionState": "CREATED",
              "timestamp": 1262300441294,
              "transactionId": "443dea26147a406b957d9ee3a1247b11",
              "eventId": "aaeeb166147a406b957dd9147a406b957",
              "eventDescription": "Transaction created",
              "metaData": {
                "batteryLevel": 76.3,
                "deviceLatitude": 13.009711,
                "deviceLongitude": 76.102898,
                "ipAddress": "79.144.2.20",
                "vpnUsed": true
              }
            }
          },
          "additionalProperties": false,
          "properties": {
            "transactionState": {
              "$ref": "#/components/schemas/TransactionState"
            },
            "timestamp": {
              "type": "number",
              "minimum": 1262300400000,
              "description": "Timestamp of the event",
              "maximum": 4133890801000
            },
            "transactionId": {
              "type": "string",
              "minLength": 1,
              "description": "Transaction ID the event pertains to"
            },
            "eventId": {
              "type": "string",
              "description": "Unique event ID"
            },
            "reason": {
              "type": "string",
              "description": "Reason for the event or a state change"
            },
            "eventDescription": {
              "type": "string",
              "description": "Event description"
            },
            "updatedTransactionAttributes": {
              "$ref": "#/components/schemas/TransactionUpdatable"
            },
            "metaData": {
              "$ref": "#/components/schemas/DeviceData"
            }
          },
          "required": [
            "transactionState",
            "timestamp",
            "transactionId"
          ]
        },
        "ConsumerUserEvent": {
          "description": "Model for consumer user-related events",
          "type": "object",
          "x-examples": {
            "example-1": {
              "timestamp": 1262300400000,
              "userId": "string",
              "userStateDetails": {
                "reason": "string",
                "state": "UNACCEPTABLE"
              },
              "eventId": "string",
              "reason": "string",
              "eventDescription": "string",
              "updatedConsumerUserAttributes": {
                "createdTimestamp": 1641654664000,
                "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                "userDetails": {
                  "name": {
                    "firstName": "Baran",
                    "middleName": "Realblood",
                    "lastName": "Ozkan"
                  },
                  "dateOfBirth": "1991-01-01",
                  "countryOfResidence": "US",
                  "countryOfNationality": "DE"
                },
                "legalDocuments": [
                  {
                    "documentType": "passport",
                    "documentNumber": "Z9431P",
                    "documentIssuedDate": 1639939034000,
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet"
                      }
                    ]
                  }
                ],
                "contactDetails": {
                  "emailIds": [
                    "baran@flagright.com"
                  ],
                  "contactNumbers": [
                    "+37112345432"
                  ],
                  "websites": [
                    "flagright.com"
                  ],
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              }
            }
          },
          "title": "ConsumerUserEvent",
          "additionalProperties": false,
          "properties": {
            "timestamp": {
              "type": "number",
              "minimum": 1262300400000,
              "description": "Timestamp of the event",
              "maximum": 4133890801000
            },
            "userId": {
              "type": "string",
              "minLength": 1,
              "description": "Transaction ID the event pertains to"
            },
            "eventId": {
              "type": "string",
              "description": "Unique event ID"
            },
            "reason": {
              "type": "string",
              "description": "Reason for the event or a state change"
            },
            "eventDescription": {
              "type": "string",
              "description": "Event description"
            },
            "updatedConsumerUserAttributes": {
              "$ref": "#/components/schemas/UserOptional"
            }
          },
          "required": [
            "timestamp",
            "userId"
          ]
        },
        "BusinessUserEvent": {
          "description": "Model for business user-related events",
          "type": "object",
          "x-examples": {
            "example-1": {
              "timestamp": 1262300400000,
              "userId": "string",
              "userStateDetails": {
                "reason": "string",
                "state": "UNACCEPTABLE"
              },
              "eventId": "string",
              "reason": "string",
              "eventDescription": "string",
              "updatedConsumerUserAttributes": {
                "createdTimestamp": 1641654664000,
                "userId": "96647cfd9e8fe66ee0f3362e011e34e8",
                "userDetails": {
                  "name": {
                    "firstName": "Baran",
                    "middleName": "Realblood",
                    "lastName": "Ozkan"
                  },
                  "dateOfBirth": "1991-01-01",
                  "countryOfResidence": "US",
                  "countryOfNationality": "DE"
                },
                "legalDocuments": [
                  {
                    "documentType": "passport",
                    "documentNumber": "Z9431P",
                    "documentIssuedDate": 1639939034000,
                    "documentExpirationDate": 1839939034000,
                    "documentIssuedCountry": "DE",
                    "tags": [
                      {
                        "key": "customerType",
                        "value": "wallet"
                      }
                    ]
                  }
                ],
                "contactDetails": {
                  "emailIds": [
                    "baran@flagright.com"
                  ],
                  "contactNumbers": [
                    "+37112345432"
                  ],
                  "websites": [
                    "flagright.com"
                  ],
                  "addresses": [
                    {
                      "addressLines": [
                        "Klara-Franke Str 20"
                      ],
                      "postcode": "10557",
                      "city": "Berlin",
                      "state": "Berlin",
                      "country": "Germany",
                      "tags": [
                        {
                          "key": "customKey",
                          "value": "customValue"
                        }
                      ]
                    }
                  ]
                },
                "tags": [
                  {
                    "key": "customKey",
                    "value": "customValue"
                  }
                ]
              }
            }
          },
          "title": "BusinessUserEvent",
          "additionalProperties": false,
          "properties": {
            "timestamp": {
              "type": "number",
              "minimum": 1262300400000,
              "description": "Timestamp of the event",
              "maximum": 4133890801000
            },
            "userId": {
              "type": "string",
              "minLength": 1,
              "description": "Transaction ID the event pertains to"
            },
            "eventId": {
              "type": "string",
              "description": "Unique event ID"
            },
            "reason": {
              "type": "string",
              "description": "Reason for the event or a state change"
            },
            "eventDescription": {
              "type": "string",
              "description": "Event description"
            },
            "updatedBusinessUserAttributes": {
              "$ref": "#/components/schemas/BusinessOptional"
            }
          },
          "required": [
            "timestamp",
            "userId"
          ]
        },
        "CaseManagementEvent": {
          "type": "object",
          "x-examples": {
            "example-1": {
              "caseStatus": "Unsuspended",
              "timestamp": 1262300441294,
              "transactionId": "443dea26147a406b957d9ee3a1247b11",
              "eventId": "aaeeb166147a406b957dd9147a406b957",
              "eventDescription": "Case Unsuspended"
            }
          },
          "title": "CaseManagementEvent",
          "description": "Model for case management events",
          "properties": {
            "caseStatus": {
              "type": "string",
              "minLength": 1,
              "enum": [
                "CLOSED",
                "HIT"
              ],
              "description": "Status of a case. E.g. Open, Closed etc."
            },
            "timestamp": {
              "type": "number",
              "minimum": 1262300400000,
              "description": "Timestamp of the event"
            },
            "caseStatusReason": {
              "type": "string",
              "enum": [
                "FALSE_POSITIVE",
                "INVESTIGATION_COMPLETED",
                "DOCUMENTS_COLLECTED",
                "OTHER"
              ],
              "description": "Case status reason. E.g. Closed & False Positive, Closed & Investigation Completed etc."
            },
            "transactionId": {
              "type": "string",
              "minLength": 1,
              "description": "Transaction ID the case pertains to"
            },
            "userId": {
              "type": "string",
              "description": "User ID the case pertains to"
            },
            "eventId": {
              "type": "string",
              "description": "Event ID the case pertains to"
            },
            "caseStatusReasonDescription": {
              "type": "string",
              "description": "Case status reason description"
            }
          },
          "required": [
            "caseStatus",
            "timestamp",
            "caseStatusReason"
          ],
          "additionalProperties": false
        },
        "Date": {
          "title": "Date",
          "type": "object",
          "description": "Model for date",
          "properties": {
            "day": {
              "type": "number",
              "description": "Day of date"
            },
            "month": {
              "type": "number",
              "description": "Month of date"
            },
            "year": {
              "type": "number",
              "description": "Year of date"
            }
          },
          "required": [
            "day",
            "month",
            "year"
          ]
        },
        "TransactionState": {
          "type": "string",
          "title": "TransactionState",
          "enum": [
            "CREATED",
            "PROCESSING",
            "SENT",
            "EXPIRED",
            "DECLINED",
            "SUSPENDED",
            "REFUNDED",
            "SUCCESSFUL"
          ],
          "minLength": 1,
          "description": "Model for transaction states. E.g. Processing, Refunded, Successful etc."
        },
        "AcquisitionChannel": {
          "type": "string",
          "title": "AcquisitionChannel",
          "minLength": 1,
          "description": "Model for User acquisition channel",
          "x-stoplight": {
            "id": "e7674363b9512"
          },
          "enum": [
            "ORGANIC",
            "PAID",
            "REFERRAL",
            "OFFLINE",
            "GATHERING",
            "UNKNOWN"
          ]
        },
        "UPIPaymentMethod": {
          "type": "string",
          "title": "UPIPaymentMethod",
          "enum": [
            "UPI"
          ],
          "description": "Classify the method of payment as \"UPI\" for UPIDetails"
        },
        "IBANPaymentMethod": {
          "type": "string",
          "title": "IBANPaymentMethod",
          "enum": [
            "IBAN"
          ],
          "description": "Classify the method of payment as \"IBAN\" for IBANDetails\n"
        },
        "CardPaymentMethod": {
          "type": "string",
          "title": "CardPaymentMethod",
          "enum": [
            "CARD"
          ],
          "description": "Classify the method of payment as \"Card\" for CardDetails\n"
        },
        "WalletPaymentMethod": {
          "type": "string",
          "title": "WalletPaymentMethod",
          "enum": [
            "WALLET"
          ],
          "description": "Classify the method of payment as \"Wallet\" for WalletDetails"
        },
        "ACHPaymentMethod": {
          "type": "string",
          "title": "ACHPaymentMethod",
          "enum": [
            "ACH"
          ],
          "description": "Classify the method of payment as \"ACH\" for ACHDetails"
        },
        "SWIFTPaymentMethod": {
          "type": "string",
          "title": "SWIFTPaymentMethod",
          "enum": [
            "SWIFT"
          ],
          "description": "Classify the method of payment as \"SWIFT\" for SWIFTDetails"
        },
        "CheckPaymentMethod": {
          "type": "string",
          "title": "CheckPaymentMethod",
          "description": "Classify the method of payment as \"CHECK\" for CheckDetails",
          "enum": [
            "CHECK"
          ]
        },
        "MpesaPaymentMethod": {
          "type": "string",
          "title": "MpesaPaymentMethod",
          "enum": [
            "MPESA"
          ],
          "description": "Classify the method of payment as \"Mpesa\" for MpesaDetails"
        },
        "GeneralBankAccountPaymentMethod": {
          "type": "string",
          "title": "GeneralBankAccountPaymentMethod",
          "enum": [
            "GENERIC_BANK_ACCOUNT"
          ],
          "description": "Classify the method of payment as \"GENERIC_BANK_ACCOUNT\" for GenericBankAccountDetails"
        },
        "UserState": {
          "type": "string",
          "title": "UserState",
          "enum": [
            "UNACCEPTABLE",
            "UNDECIDED",
            "TERMINATED",
            "ACTIVE",
            "INACTIVE",
            "DORMANT",
            "CREATED",
            "DELETED",
            "SUSPENDED",
            "BLOCKED"
          ],
          "x-examples": {
            "example-1": "UNACCEPTABLE",
            "example-2": "ACTIVE"
          }
        },
        "KYCStatus": {
          "type": "string",
          "title": "KYCStatus",
          "x-stoplight": {
            "id": "ha9qqemmdqu1y"
          },
          "enum": [
            "SUCCESSFUL",
            "FAILED",
            "NOT_STARTED",
            "IN_PROGRESS",
            "MANUAL_REVIEW"
          ]
        },
        "PEPStatus": {
          "type": "object",
          "title": "PEPStatus",
          "x-stoplight": {
            "id": "ha9qqemmdqu1y"
          },
          "properties": {
            "isPepHit": {
              "type": "boolean"
            },
            "pepCountry": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            }
          },
          "required": [
            "isPepHit"
          ]
        },
        "KYCStatusDetails": {
          "title": "KYCStatusDetails",
          "x-stoplight": {
            "id": "ev3mulr4s7fqf"
          },
          "type": "object",
          "properties": {
            "reason": {
              "type": "string"
            },
            "status": {
              "$ref": "#/components/schemas/KYCStatus"
            }
          }
        },
        "UserStateDetails": {
          "title": "UserStateDetails",
          "type": "object",
          "properties": {
            "userId": {
              "type": "string"
            },
            "reason": {
              "type": "string"
            },
            "state": {
              "$ref": "#/components/schemas/UserState"
            }
          },
          "required": [
            "state"
          ]
        },
        "CaseClosedDetails": {
          "title": "CaseClosedDetails",
          "type": "object",
          "x-stoplight": {
            "id": "ev3mslr5s7fqf"
          },
          "properties": {
            "caseId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "reasons": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reasonDescriptionForOther": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "comment": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "transactionIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "AlertClosedDetails": {
          "title": "AlertClosedDetails",
          "type": "object",
          "x-stoplight": {
            "id": "ev3mslr5skdfhg"
          },
          "properties": {
            "alertId": {
              "type": "string"
            },
            "status": {
              "type": "string"
            },
            "reasons": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "reasonDescriptionForOther": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "comment": {
              "type": "string"
            },
            "userId": {
              "type": "string"
            },
            "transactionIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "ruleName": {
              "type": "string"
            },
            "ruleDescription": {
              "type": "string"
            },
            "ruleId": {
              "type": "string"
            },
            "ruleInstanceId": {
              "type": "string"
            }
          }
        },
        "RiskLevel": {
          "type": "string",
          "title": "RiskLevel",
          "x-stoplight": {
            "id": "i5dg6voh82ds3"
          },
          "enum": [
            "VERY_HIGH",
            "HIGH",
            "MEDIUM",
            "LOW",
            "VERY_LOW"
          ]
        },
        "CardExpiry": {
          "title": "CardExpiry",
          "x-stoplight": {
            "id": "yzuf7hk7abyg6"
          },
          "type": "object",
          "properties": {
            "month": {
              "type": "number"
            },
            "year": {
              "type": "number"
            }
          },
          "x-examples": {
            "example-1": {
              "month": 1,
              "year": 1990
            }
          }
        },
        "TransactionType": {
          "type": "string",
          "title": "TransactionType",
          "x-stoplight": {
            "id": "ltkop9ozj12if"
          },
          "enum": [
            "DEPOSIT",
            "TRANSFER",
            "EXTERNAL_PAYMENT",
            "WITHDRAWAL",
            "REFUND",
            "OTHER"
          ]
        },
        "WebhookEvent": {
          "title": "WebhookEvent",
          "x-stoplight": {
            "id": "w7v0f2eqgzubk"
          },
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "type": {
              "$ref": "#/components/schemas/WebhookEventType"
            },
            "data": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/UserStateDetails"
                }
              ]
            },
            "createdTimestamp": {
              "type": "number",
              "minimum": 1262300400000
            }
          },
          "required": [
            "id",
            "type",
            "data",
            "createdTimestamp"
          ]
        },
        "WebhookEventType": {
          "type": "string",
          "title": "WebhookEventType",
          "x-stoplight": {
            "id": "5rtg1zffpod4f"
          },
          "enum": [
            "CASE_CLOSED",
            "USER_STATE_UPDATED",
            "ALERT_CLOSED"
          ]
        },
        "ListType": {
          "type": "string",
          "enum": [
            "WHITELIST",
            "BLACKLIST",
            "FLAGRIGHT_LIBRARY"
          ]
        },
        "ListSubtype": {
          "type": "string",
          "enum": [
            "USER_ID",
            "CARD_FINGERPRINT_NUMBER",
            "IBAN_NUMBER",
            "BANK_ACCOUNT_NUMBER",
            "ACH_ACCOUNT_NUMBER",
            "SWIFT_ACCOUNT_NUMBER",
            "BIC",
            "BANK_SWIFT_CODE",
            "UPI_IDENTIFYING_NUMBER",
            "IP_ADDRESS",
            "STRING"
          ]
        },
        "ListKeyMetadata": {
          "type": "object",
          "title": "ListKeyMetadata",
          "additionalProperties": {}
        },
        "ListData": {
          "type": "object",
          "title": "ListData",
          "description": "Payload of a list, new or existed",
          "properties": {
            "metadata": {
              "$ref": "#/components/schemas/ListMetadata"
            },
            "items": {
              "type": "array",
              "description": "List items",
              "items": {
                "$ref": "#/components/schemas/ListItem"
              }
            }
          }
        },
        "ListItem": {
          "type": "object",
          "title": "ListItem",
          "properties": {
            "key": {
              "type": "string"
            },
            "metadata": {
              "$ref": "#/components/schemas/ListKeyMetadata"
            }
          },
          "required": [
            "key"
          ]
        },
        "ListMetadata": {
          "title": "ListMetadata",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "List name"
            },
            "description": {
              "type": "string",
              "description": "List description"
            },
            "status": {
              "type": "boolean"
            },
            "checksum": {
              "type": "string"
            }
          },
          "additionalProperties": {}
        },
        "ListExisted": {
          "type": "object",
          "x-examples": {
            "example-1": {
              "header": {
                "listId": "worst_people",
                "createdTimestamp": 1661782207924
              },
              "metadata": {
                "name": "People I hate"
              },
              "values": [
                {
                  "key": "john",
                  "metadata": {
                    "fullName": "John Dow"
                  }
                }
              ]
            }
          },
          "title": "ListExisted",
          "description": "List with ID and header",
          "properties": {
            "listId": {
              "type": "string"
            },
            "header": {
              "$ref": "#/components/schemas/ListHeader"
            },
            "items": {
              "type": "array",
              "description": "List items",
              "items": {
                "$ref": "#/components/schemas/ListItem"
              }
            }
          },
          "required": [
            "listId",
            "header",
            "items"
          ]
        },
        "ListHeader": {
          "title": "ListHeader",
          "type": "object",
          "properties": {
            "listId": {
              "type": "string"
            },
            "listType": {
              "$ref": "#/components/schemas/ListType"
            },
            "subtype": {
              "$ref": "#/components/schemas/ListSubtype"
            },
            "metadata": {
              "$ref": "#/components/schemas/ListMetadata"
            },
            "createdTimestamp": {
              "type": "number"
            },
            "size": {
              "type": "number"
            }
          },
          "required": [
            "listId",
            "listType",
            "subtype",
            "size",
            "createdTimestamp"
          ]
        },
        "PaymentMethod": {
          "type": "string",
          "title": "PaymentMethod",
          "x-stoplight": {
            "id": "m0vgh0ergujca"
          },
          "enum": [
            "ACH",
            "CARD",
            "IBAN",
            "UPI",
            "GENERIC_BANK_ACCOUNT",
            "MPESA",
            "SWIFT",
            "WALLET",
            "CHECK"
          ]
        },
        "CardMerchantDetails": {
          "title": "CardMerchantDetails",
          "x-stoplight": {
            "id": "066ggphgour1t"
          },
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "category": {
              "type": "string"
            },
            "MCC": {
              "type": "string"
            },
            "city": {
              "type": "string"
            },
            "country": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            },
            "state": {
              "type": "string"
            },
            "postCode": {
              "type": "string"
            }
          }
        },
        "CheckDetails": {
          "title": "CheckDetails",
          "x-stoplight": {
            "id": "iuga8fruhbjdz"
          },
          "type": "object",
          "properties": {
            "method": {
              "$ref": "#/components/schemas/CheckPaymentMethod"
            },
            "checkNumber": {
              "type": "string"
            },
            "checkIdentifier": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "deliveryStatus": {
              "type": "string",
              "enum": [
                "COMPLETED",
                "PENDING",
                "SETTLED",
                "CANCELED",
                "REFUND",
                "DECLINED"
              ]
            },
            "etaTimestamp": {
              "type": "number",
              "minimum": 1262300400000
            },
            "shippingAddress": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "required": [
            "method"
          ]
        },
        "CountryCode": {
          "type": "string",
          "title": "CountryCode",
          "x-stoplight": {
            "id": "8uh01wccoglx5"
          },
          "enum": [
            "AF",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CD",
            "CG",
            "CK",
            "CR",
            "HR",
            "CU",
            "CW",
            "CY",
            "CZ",
            "CI",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "VA",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IR",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KP",
            "KR",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MK",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PS",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "RO",
            "RU",
            "RW",
            "RE",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "RS",
            "SC",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "SD",
            "SR",
            "SJ",
            "SE",
            "CH",
            "SY",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TM",
            "TC",
            "TV",
            "TR",
            "UG",
            "UA",
            "AE",
            "GB",
            "UM",
            "US",
            "UY",
            "UZ",
            "VU",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW",
            "AX",
            "N/A"
          ]
        },
        "CurrencyCode": {
          "type": "string",
          "title": "CurrencyCode",
          "enum": [
            "1INCH",
            "AAVE",
            "ADA",
            "AED",
            "AFN",
            "ALGO",
            "ALL",
            "AMD",
            "AMP",
            "ANG",
            "AOA",
            "AR",
            "ARS",
            "ATOM",
            "AUD",
            "AVAX",
            "AWG",
            "AXS",
            "AZN",
            "BAM",
            "BAT",
            "BBD",
            "BCH",
            "BDT",
            "BGN",
            "BHD",
            "BIF",
            "BMD",
            "BNB",
            "BND",
            "BOB",
            "BRL",
            "BSD",
            "BSV",
            "BTC",
            "BTCB",
            "BTG",
            "BTN",
            "BUSD",
            "BWP",
            "BYN",
            "BYR",
            "BZD",
            "CAD",
            "CAKE",
            "CDF",
            "CELO",
            "CHF",
            "CHZ",
            "CLF",
            "CLP",
            "CNY",
            "COMP",
            "COP",
            "CRC",
            "CRO",
            "CRV",
            "CUC",
            "CUP",
            "CVE",
            "CVX",
            "CZK",
            "DAI",
            "DASH",
            "DCR",
            "DFI",
            "DJF",
            "DKK",
            "DOGE",
            "DOP",
            "DOT",
            "DZD",
            "EGLD",
            "EGP",
            "ENJ",
            "EOS",
            "ERN",
            "ETB",
            "ETC",
            "ETH",
            "EUR",
            "FEI",
            "FIL",
            "FJD",
            "FKP",
            "FLOW",
            "FRAX",
            "FTM",
            "FTT",
            "GALA",
            "GBP",
            "GEL",
            "GGP",
            "GHS",
            "GIP",
            "GMD",
            "GNF",
            "GNO",
            "GRT",
            "GT",
            "GTQ",
            "GYD",
            "HBAR",
            "HKD",
            "HNL",
            "HNT",
            "HOT",
            "HRK",
            "HT",
            "HTG",
            "HUF",
            "ICP",
            "IDR",
            "ILS",
            "IMP",
            "INJ",
            "INR",
            "IQD",
            "IRR",
            "ISK",
            "JEP",
            "JMD",
            "JOD",
            "JPY",
            "KAVA",
            "KCS",
            "KDA",
            "KES",
            "KGS",
            "KHR",
            "KLAY",
            "KMF",
            "KNC",
            "KPW",
            "KRW",
            "KSM",
            "KWD",
            "KYD",
            "KZT",
            "LAK",
            "LBP",
            "LEO",
            "LINK",
            "LKR",
            "LRC",
            "LRD",
            "LSL",
            "LTC",
            "LTL",
            "LUNA",
            "LVL",
            "LYD",
            "MAD",
            "MANA",
            "MATIC",
            "MDL",
            "MGA",
            "MINA",
            "MIOTA",
            "MKD",
            "MKR",
            "MMK",
            "MNT",
            "MOP",
            "MRO",
            "MUR",
            "MVR",
            "MWK",
            "MXN",
            "MYR",
            "MZN",
            "NAD",
            "NEAR",
            "NEO",
            "NEXO",
            "NGN",
            "NIO",
            "NOK",
            "NPR",
            "NZD",
            "OKB",
            "OMR",
            "ONE",
            "PAB",
            "PAXG",
            "PEN",
            "PGK",
            "PHP",
            "PKR",
            "PLN",
            "PYG",
            "QAR",
            "QNT",
            "QTUM",
            "RON",
            "RSD",
            "RUB",
            "RUNE",
            "RWF",
            "SAND",
            "SAR",
            "SBD",
            "SCR",
            "SDG",
            "SEK",
            "SGD",
            "SHIB",
            "SHP",
            "SLE",
            "SLL",
            "SOL",
            "SOS",
            "SRD",
            "STD",
            "STX",
            "SVC",
            "SYP",
            "SZL",
            "THB",
            "THETA",
            "TJS",
            "TMT",
            "TND",
            "TOP",
            "TRX",
            "TRY",
            "TTD",
            "TTT",
            "TUSD",
            "TWD",
            "TZS",
            "UAH",
            "UGX",
            "UNI",
            "USD",
            "USDC",
            "USDP",
            "USDT",
            "UYU",
            "UZS",
            "VEF",
            "VET",
            "VND",
            "VUV",
            "WAVES",
            "WBTC",
            "WEMIX",
            "WST",
            "XAF",
            "XAG",
            "XAU",
            "XCD",
            "XCH",
            "XDC",
            "XDR",
            "XEC",
            "XEM",
            "XLM",
            "XMR",
            "XOF",
            "XPF",
            "XRP",
            "XTZ",
            "YER",
            "ZAR",
            "ZEC",
            "ZIL",
            "ZMK",
            "ZMW",
            "ZWL"
          ]
        },
        "MCCDetails": {
          "title": "MCCDetails",
          "x-stoplight": {
            "id": "bcfmwh6s5bbyq"
          },
          "type": "object",
          "properties": {
            "code": {
              "type": "number",
              "description": "Merchant code"
            },
            "description": {
              "type": "string",
              "description": "Merchant Description"
            }
          },
          "required": [
            "code"
          ]
        },
        "TransactionCountLimit": {
          "title": "TransactionCountLimit",
          "type": "object",
          "properties": {
            "day": {
              "type": "number"
            },
            "week": {
              "type": "number"
            },
            "month": {
              "type": "number"
            },
            "year": {
              "type": "number"
            }
          }
        },
        "TransactionAmountLimit": {
          "title": "TransactionAmountLimit",
          "type": "object",
          "properties": {
            "day": {
              "$ref": "#/components/schemas/Amount"
            },
            "week": {
              "$ref": "#/components/schemas/Amount"
            },
            "month": {
              "$ref": "#/components/schemas/Amount"
            },
            "year": {
              "$ref": "#/components/schemas/Amount"
            }
          }
        },
        "TransactionLimit": {
          "title": "TransactionLimit",
          "x-stoplight": {
            "id": "uu3baej63ppba"
          },
          "type": "object",
          "properties": {
            "transactionCountLimit": {
              "$ref": "#/components/schemas/TransactionCountLimit"
            },
            "transactionAmountLimit": {
              "$ref": "#/components/schemas/TransactionAmountLimit"
            },
            "averageTransactionAmountLimit": {
              "$ref": "#/components/schemas/TransactionAmountLimit"
            }
          }
        },
        "FalsePositiveDetails": {
          "title": "FalsePositiveDetails",
          "x-stoplight": {
            "id": "swgf3yejk9wep"
          },
          "type": "object",
          "properties": {
            "isFalsePositive": {
              "type": "boolean"
            },
            "confidenceScore": {
              "type": "number"
            }
          },
          "required": [
            "isFalsePositive",
            "confidenceScore"
          ]
        },
        "SanctionsDetails": {
          "title": "SanctionsDetails",
          "type": "object",
          "x-stoplight": {
            "id": "b3f3f522e84a3"
          },
          "properties": {
            "name": {
              "type": "string"
            },
            "searchId": {
              "type": "string"
            },
            "entityType": {
              "$ref": "#/components/schemas/SanctionsDetailsEntityType"
            }
          },
          "required": [
            "name",
            "searchId"
          ]
        },
        "SanctionsDetailsEntityType": {
          "title": "SanctionsDetailsEntityType",
          "type": "string",
          "enum": [
            "CONSUMER_NAME",
            "LEGAL_NAME",
            "SHAREHOLDER",
            "DIRECTOR",
            "NAME_ON_CARD",
            "PAYMENT_NAME",
            "PAYMENT_BENEFICIARY_NAME",
            "BANK_NAME"
          ]
        },
        "BusinessEntityLink": {
          "title": "BusinessEntityLink",
          "x-stoplight": {
            "id": "qqn80q54vrs3w"
          },
          "type": "object",
          "properties": {
            "parentUserId": {
              "type": "string"
            },
            "childUserIds": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        },
        "UserWithRulesResult": {
          "title": "UserWithRulesResult",
          "description": "Model for consumer user payload with rules result",
          "allOf": [
            {
              "$ref": "#/components/schemas/User"
            },
            {
              "type": "object",
              "properties": {
                "executedRules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExecutedRulesResult"
                  }
                },
                "hitRules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HitRulesDetails"
                  }
                }
              }
            }
          ]
        },
        "BusinessWithRulesResult": {
          "title": "BusinessWithRulesResult",
          "description": "Model for business payload with rules result",
          "allOf": [
            {
              "$ref": "#/components/schemas/Business"
            },
            {
              "type": "object",
              "properties": {
                "executedRules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ExecutedRulesResult"
                  }
                },
                "hitRules": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HitRulesDetails"
                  }
                }
              }
            }
          ]
        },
        "Thing": {
          "type": "object",
          "properties": {
            "publishedAt": {
              "format": "date-time",
              "readOnly": true,
              "description": "PublishedAt is the time at which the Thing was published.\n",
              "oneOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ]
            }
          },
          "required": [
            "publishedAt"
          ]
        }
      },
      "securitySchemes": {
        "x-api-key": {
          "name": "x-api-key",
          "type": "apiKey",
          "in": "header",
          "description": "API keys are used to authenticate the requests."
        }
      }
    },
    "tags": []
  }
}