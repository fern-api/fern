{
  "type": "openapi",
  "value": {
    "openapi": "3.0.0",
    "info": {
      "title": "Example API",
      "version": "1.0.0"
    },
    "paths": {
      "/example": {
        "get": {
          "summary": "Get Example",
          "responses": {
            "200": {
              "description": "Successful response",
              "content": {
                "application/json": {
                  "schema": {
                    "$ref": "#/components/schemas/ExampleResponse"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "ExampleResponse": {
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "enum": [
                "success",
                "failure"
              ]
            },
            "message": {
              "type": "string"
            },
            "custom_fields": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "GrantTypeEnum": {
          "type": "string",
          "enum": [
            "urn:devrev:params:oauth:grant-type:token-issue",
            "urn:ietf:params:oauth:grant-type:token-exchange"
          ],
          "x-fern-enum": {
            "urn:devrev:params:oauth:grant-type:token-issue": {
              "name": "urn-devrev-params-oauth-grant-type-token-issue"
            },
            "urn:ietf:params:oauth:grant-type:token-exchange": {
              "name": "urn-ietf-params-oauth-grant-type-token-exchange"
            }
          }
        }
      }
    }
  },
  "settings": {
    "disableExamples": false,
    "discriminatedUnionV2": false,
    "useTitlesAsName": true,
    "optionalAdditionalProperties": true,
    "coerceEnumsToLiterals": true,
    "respectReadonlySchemas": false,
    "respectNullableSchemas": false,
    "onlyIncludeReferencedSchemas": false,
    "inlinePathParameters": false,
    "preserveSchemaIds": false,
    "shouldUseUndiscriminatedUnionsWithLiterals": false,
    "shouldUseIdiomaticRequestNames": false,
    "objectQueryParameters": false,
    "asyncApiNaming": "v1",
    "useBytesForBinaryResponse": false,
    "respectForwardCompatibleEnums": false,
    "additionalPropertiesDefaultsTo": false,
    "typeDatesAsStrings": true,
    "preserveSingleSchemaOneOf": false
  }
}