{
  "absoluteFilePath": "/DUMMY_PATH",
  "importedDefinitions": {},
  "namedDefinitionFiles": {
    "__package__.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "errors": {
          "BadRequestError": {
            "docs": "Bad Request",
            "examples": [
              {
                "docs": undefined,
                "name": "BadRequestError",
                "value": {
                  "errors": [
                    {
                      "details": "{'profile': {'system_properties': ['Unknown field.']}}",
                      "msg": "bad_request",
                    },
                  ],
                },
              },
            ],
            "status-code": 400,
            "type": "Errors",
          },
          "ContentTooLargeError": {
            "docs": "Content Too Large",
            "examples": [
              {
                "docs": undefined,
                "name": "ContentTooLargeError",
                "value": {
                  "errors": [
                    {
                      "details": "Maximum request size of 4.0 MB exceeded. Content length: 5.0 MB.",
                      "msg": "content_too_large",
                    },
                  ],
                },
              },
            ],
            "status-code": 413,
            "type": "Errors",
          },
          "InternalServerError": {
            "docs": "Internal Server Error",
            "examples": [
              {
                "docs": undefined,
                "name": "InternalServerError",
                "value": {
                  "errors": [
                    {
                      "details": "An unknown error occurred. error_id: 91d435a7-e0b4-4c56-a097-8907e9ed851e",
                      "msg": "internal_server_error",
                    },
                  ],
                },
              },
            ],
            "status-code": 500,
            "type": "Errors",
          },
          "NotFoundError": {
            "docs": "Not Found",
            "examples": [
              {
                "docs": undefined,
                "name": "NotFoundError",
                "value": {
                  "errors": [
                    {
                      "details": "The requested resource with ID 5f7e0e2c1e7c7e000f0f9c3a was not found",
                      "msg": "resource_not_found",
                    },
                  ],
                },
              },
            ],
            "status-code": 404,
            "type": "Errors",
          },
          "TooManyRequestsError": {
            "docs": "Too Many Requests",
            "examples": [
              {
                "docs": undefined,
                "name": "TooManyRequestsError",
                "value": {
                  "errors": [
                    {
                      "details": "50 requests allowed per second",
                      "msg": "rate_limit_exceeded",
                    },
                  ],
                },
              },
            ],
            "status-code": 429,
            "type": "Errors",
          },
          "UnauthorizedError": {
            "docs": "Unauthorized",
            "examples": [
              {
                "docs": undefined,
                "name": "UnauthorizedError",
                "value": {
                  "errors": [
                    {
                      "details": "You are not authorized to access this resource",
                      "msg": "unauthorized",
                    },
                  ],
                },
              },
            ],
            "status-code": 401,
            "type": "Errors",
          },
        },
        "types": {
          "EndUser": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "created_at": {
                "docs": "The date and time the end user was created",
                "type": "optional<string>",
              },
              "end_user_id": {
                "docs": "The unique Ada-generated ID for the end user",
                "type": "optional<string>",
              },
              "profile": {
                "docs": "The end user's profile information",
                "type": "optional<EndUserProfile>",
              },
              "updated_at": {
                "docs": "The date and time the end user was updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUserCreatedWebhookPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "The webhook event data",
                "type": "optional<EndUserCreatedWebhookPayloadData>",
              },
              "timestamp": {
                "docs": "The timestamp for when the event was generated. Uses millisecond precision to help with event ordering needs.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The webhook event type description",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUserCreatedWebhookPayloadData": {
            "docs": "The webhook event data",
            "inline": true,
            "properties": {
              "created_at": {
                "docs": "The date and time the end user was created",
                "type": "optional<string>",
              },
              "end_user_id": {
                "docs": "The unique Ada-generated ID for the end user",
                "type": "optional<string>",
              },
              "profile": {
                "docs": "The end user's profile information",
                "type": "optional<EndUserProfile>",
              },
              "updated_at": {
                "docs": "The date and time the end user was updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUserProfile": {
            "docs": "The end user's profile information",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The end user's email address",
                "type": "optional<string>",
              },
              "first_name": {
                "docs": "The end user's first name",
                "type": "optional<string>",
              },
              "language": {
                "docs": "The end user's language in BCP 47 format",
                "type": "optional<string>",
              },
              "last_name": {
                "docs": "The end user's last name",
                "type": "optional<string>",
              },
              "metadata": {
                "docs": "A dictionary of arbitrary key, value pairs assigned to the end user                      - `metadata` keys may only be of type: `string`                      - `metadata` values may only be one of type: `string`, `boolean`, or `integer`                     ",
                "type": "optional<map<string, unknown>>",
              },
              "system_properties": {
                "docs": "Read-only profile information set by Ada",
                "type": "optional<EndUserProfileSystemProperties>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUserProfileSystemProperties": {
            "docs": "Read-only profile information set by Ada",
            "inline": true,
            "properties": {
              "browser": {
                "docs": "The end user's browser information captured by Ada",
                "type": "optional<string>",
              },
              "browser_version": {
                "docs": "The end user's browser version captured by Ada",
                "type": "optional<string>",
              },
              "device": {
                "docs": "The end user's device information captured by Ada",
                "type": "optional<string>",
              },
              "introshown": {
                "docs": "Whether the introductory message of a campaign has been displayed to the end user",
                "type": "optional<boolean>",
              },
              "last_answer_id": {
                "docs": "The ID for the last answer displayed to the end user during a conversation",
                "type": "optional<string>",
              },
              "last_question_asked": {
                "docs": "The last question asked by the end user",
                "type": "optional<string>",
              },
              "sunshine_conversation_id": {
                "docs": "The ID for the Sunshine Conversation for this end user",
                "type": "optional<string>",
              },
              "sunshine_end_user_channel": {
                "docs": "The channel used to communicate with the end user via Sunshine Conversations",
                "type": "optional<string>",
              },
              "sunshine_first_message_id": {
                "docs": "The ID for the first message sent to the end user via Sunshine Conversations",
                "type": "optional<string>",
              },
              "sunshine_signed_up_at": {
                "docs": "The date the end user signed up for Sunshine Conversations",
                "type": "optional<string>",
              },
              "sunshine_user_id": {
                "docs": "The Sunshine Conversations user ID for the end user",
                "type": "optional<string>",
              },
              "user_agent": {
                "docs": "The end user's browser user-agent information captured by Ada",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUserUpdatedWebhookPayload": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "data": {
                "docs": "The webhook event data",
                "type": "optional<EndUserUpdatedWebhookPayloadData>",
              },
              "timestamp": {
                "docs": "The timestamp for when the event was generated. Uses millisecond precision to help with event ordering needs.",
                "type": "optional<string>",
              },
              "type": {
                "docs": "The webhook event type description",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUserUpdatedWebhookPayloadData": {
            "docs": "The webhook event data",
            "inline": true,
            "properties": {
              "created_at": {
                "docs": "The date and time the end user was created",
                "type": "optional<string>",
              },
              "end_user_id": {
                "docs": "The unique Ada-generated ID for the end user",
                "type": "optional<string>",
              },
              "profile": {
                "docs": "The end user's profile information",
                "type": "optional<EndUserProfile>",
              },
              "updated_at": {
                "docs": "The date and time the end user was updated",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUsers": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "end_users": {
                "docs": "List of end user profiles",
                "type": "optional<list<EndUser>>",
              },
              "meta": {
                "docs": "Metadata returned with the results including but not limited to a link to the next page of data",
                "type": "optional<EndUsersMeta>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "EndUsersMeta": {
            "docs": "Metadata returned with the results including but not limited to a link to the next page of data",
            "inline": true,
            "properties": {
              "next_page_url": {
                "docs": "Link to the next page of data using a cursor value",
                "type": "optional<string>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "Error": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "details": {
                "docs": "Extra information about the error",
                "type": "string",
              },
              "msg": {
                "docs": "The error message",
                "type": "string",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
          "Errors": {
            "docs": undefined,
            "inline": undefined,
            "properties": {
              "errors": {
                "docs": "A list of errors",
                "type": "list<Error>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "errors:
  UnauthorizedError:
    status-code: 401
    type: Errors
    docs: Unauthorized
    examples:
      - value:
          errors:
            - msg: unauthorized
              details: You are not authorized to access this resource
        name: UnauthorizedError
  NotFoundError:
    status-code: 404
    type: Errors
    docs: Not Found
    examples:
      - value:
          errors:
            - msg: resource_not_found
              details: >-
                The requested resource with ID 5f7e0e2c1e7c7e000f0f9c3a was not
                found
        name: NotFoundError
  TooManyRequestsError:
    status-code: 429
    type: Errors
    docs: Too Many Requests
    examples:
      - value:
          errors:
            - msg: rate_limit_exceeded
              details: 50 requests allowed per second
        name: TooManyRequestsError
  InternalServerError:
    status-code: 500
    type: Errors
    docs: Internal Server Error
    examples:
      - value:
          errors:
            - msg: internal_server_error
              details: >-
                An unknown error occurred. error_id:
                91d435a7-e0b4-4c56-a097-8907e9ed851e
        name: InternalServerError
  BadRequestError:
    status-code: 400
    type: Errors
    docs: Bad Request
    examples:
      - value:
          errors:
            - msg: bad_request
              details: '{''profile'': {''system_properties'': [''Unknown field.'']}}'
        name: BadRequestError
  ContentTooLargeError:
    status-code: 413
    type: Errors
    docs: Content Too Large
    examples:
      - value:
          errors:
            - msg: content_too_large
              details: 'Maximum request size of 4.0 MB exceeded. Content length: 5.0 MB.'
        name: ContentTooLargeError
types:
  EndUserProfileSystemProperties:
    docs: Read-only profile information set by Ada
    properties:
      user_agent:
        type: optional<string>
        docs: The end user's browser user-agent information captured by Ada
      device:
        type: optional<string>
        docs: The end user's device information captured by Ada
      browser:
        type: optional<string>
        docs: The end user's browser information captured by Ada
      browser_version:
        type: optional<string>
        docs: The end user's browser version captured by Ada
      introshown:
        type: optional<boolean>
        docs: >-
          Whether the introductory message of a campaign has been displayed to
          the end user
      last_answer_id:
        type: optional<string>
        docs: >-
          The ID for the last answer displayed to the end user during a
          conversation
      last_question_asked:
        type: optional<string>
        docs: The last question asked by the end user
      sunshine_first_message_id:
        type: optional<string>
        docs: >-
          The ID for the first message sent to the end user via Sunshine
          Conversations
      sunshine_conversation_id:
        type: optional<string>
        docs: The ID for the Sunshine Conversation for this end user
      sunshine_end_user_channel:
        type: optional<string>
        docs: >-
          The channel used to communicate with the end user via Sunshine
          Conversations
      sunshine_signed_up_at:
        type: optional<string>
        docs: The date the end user signed up for Sunshine Conversations
      sunshine_user_id:
        type: optional<string>
        docs: The Sunshine Conversations user ID for the end user
    source:
      openapi: ../openapi.json
    inline: true
  EndUserProfile:
    docs: The end user's profile information
    properties:
      first_name:
        type: optional<string>
        docs: The end user's first name
      last_name:
        type: optional<string>
        docs: The end user's last name
      email:
        type: optional<string>
        docs: The end user's email address
      language:
        type: optional<string>
        docs: The end user's language in BCP 47 format
      metadata:
        type: optional<map<string, unknown>>
        docs: >-
          A dictionary of arbitrary key, value pairs assigned to the end
          user                      - `metadata` keys may only be of type:
          `string`                      - `metadata` values may only be one of
          type: `string`, `boolean`, or `integer`                     
      system_properties:
        type: optional<EndUserProfileSystemProperties>
        docs: Read-only profile information set by Ada
    source:
      openapi: ../openapi.json
    inline: true
  EndUser:
    properties:
      end_user_id:
        type: optional<string>
        docs: The unique Ada-generated ID for the end user
      profile:
        type: optional<EndUserProfile>
        docs: The end user's profile information
      created_at:
        type: optional<string>
        docs: The date and time the end user was created
      updated_at:
        type: optional<string>
        docs: The date and time the end user was updated
    source:
      openapi: ../openapi.json
  Error:
    properties:
      msg:
        type: string
        docs: The error message
      details:
        type: string
        docs: Extra information about the error
    source:
      openapi: ../openapi.json
  Errors:
    properties:
      errors:
        docs: A list of errors
        type: list<Error>
    source:
      openapi: ../openapi.json
  EndUsersMeta:
    docs: >-
      Metadata returned with the results including but not limited to a link to
      the next page of data
    properties:
      next_page_url:
        type: optional<string>
        docs: Link to the next page of data using a cursor value
    source:
      openapi: ../openapi.json
    inline: true
  EndUsers:
    properties:
      end_users:
        type: optional<list<EndUser>>
        docs: List of end user profiles
      meta:
        type: optional<EndUsersMeta>
        docs: >-
          Metadata returned with the results including but not limited to a link
          to the next page of data
    source:
      openapi: ../openapi.json
  EndUserCreatedWebhookPayloadData:
    docs: The webhook event data
    properties:
      end_user_id:
        type: optional<string>
        docs: The unique Ada-generated ID for the end user
      created_at:
        type: optional<string>
        docs: The date and time the end user was created
      updated_at:
        type: optional<string>
        docs: The date and time the end user was updated
      profile:
        type: optional<EndUserProfile>
        docs: The end user's profile information
    source:
      openapi: ../openapi.json
    inline: true
  EndUserCreatedWebhookPayload:
    properties:
      type:
        type: optional<string>
        docs: The webhook event type description
      timestamp:
        type: optional<string>
        docs: >-
          The timestamp for when the event was generated. Uses millisecond
          precision to help with event ordering needs.
      data:
        type: optional<EndUserCreatedWebhookPayloadData>
        docs: The webhook event data
    source:
      openapi: ../openapi.json
  EndUserUpdatedWebhookPayloadData:
    docs: The webhook event data
    properties:
      end_user_id:
        type: optional<string>
        docs: The unique Ada-generated ID for the end user
      created_at:
        type: optional<string>
        docs: The date and time the end user was created
      updated_at:
        type: optional<string>
        docs: The date and time the end user was updated
      profile:
        type: optional<EndUserProfile>
        docs: The end user's profile information
    source:
      openapi: ../openapi.json
    inline: true
  EndUserUpdatedWebhookPayload:
    properties:
      type:
        type: optional<string>
        docs: The webhook event type description
      timestamp:
        type: optional<string>
        docs: >-
          The timestamp for when the event was generated. Uses millisecond
          precision to help with event ordering needs.
      data:
        type: optional<EndUserUpdatedWebhookPayloadData>
        docs: The webhook event data
    source:
      openapi: ../openapi.json
",
    },
    "endUsers.yml": {
      "absoluteFilepath": "/DUMMY_PATH",
      "contents": {
        "imports": {
          "root": "__package__.yml",
        },
        "service": {
          "auth": false,
          "base-path": "",
          "endpoints": {
            "getEndUserById": {
              "auth": true,
              "display-name": "Get an end user by ID",
              "docs": "Get a specific end user",
              "errors": [
                "root.UnauthorizedError",
                "root.NotFoundError",
                "root.TooManyRequestsError",
                "root.InternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "end_user_id": "end_user_id",
                  },
                  "response": {
                    "body": {
                      "created_at": "2023-12-08T19:06:04.890000",
                      "end_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                      "profile": {
                        "email": "ada.lovelace@ada.cx",
                        "first_name": "Ada",
                        "language": "en-US",
                        "last_name": "Lovelace",
                        "metadata": {
                          "example_key1": "example_string_value",
                          "example_key2": true,
                          "example_key3": 123,
                        },
                        "system_properties": {
                          "browser": "Chrome",
                          "browser_version": "119.0.0.0",
                          "device": "macos",
                          "introshown": false,
                          "last_answer_id": "650071321ef45533437f6f29",
                          "last_question_asked": "What is my account balance?",
                          "sunshine_conversation_id": "12345abc",
                          "sunshine_end_user_channel": "whatsapp",
                          "sunshine_first_message_id": "65736922f17d0bf841d8eeb4",
                          "sunshine_signed_up_at": "2023-12-08T19:06:04.890000",
                          "sunshine_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                          "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
                        },
                      },
                      "updated_at": "2023-12-08T19:06:04.890000",
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/end-users/v1/{end_user_id}",
              "path-parameters": {
                "end_user_id": {
                  "docs": "The end_user_id",
                  "type": "string",
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.EndUser",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "getEndUsers": {
              "auth": true,
              "display-name": "Get multiple end users by ID",
              "docs": "Get multiple end users",
              "errors": [
                "root.BadRequestError",
                "root.UnauthorizedError",
                "root.TooManyRequestsError",
                "root.InternalServerError",
              ],
              "examples": [
                {
                  "query-parameters": {
                    "cursor": "65a17e3f43bec88e2792d0eb",
                    "limit": 8,
                  },
                  "response": {
                    "body": {
                      "end_users": [
                        {
                          "created_at": "2023-12-08T19:06:04.890000",
                          "end_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                          "profile": {
                            "email": "ada.lovelace@ada.cx",
                            "first_name": "Ada",
                            "language": "en-US",
                            "last_name": "Lovelace",
                            "metadata": {
                              "example_key1": "example_string_value",
                              "example_key2": true,
                              "example_key3": 123,
                            },
                            "system_properties": {
                              "browser": "Chrome",
                              "browser_version": "119.0.0.0",
                              "device": "macos",
                              "introshown": false,
                              "last_answer_id": "650071321ef45533437f6f29",
                              "last_question_asked": "What is my account balance?",
                              "sunshine_conversation_id": "12345abc",
                              "sunshine_end_user_channel": "whatsapp",
                              "sunshine_first_message_id": "65736922f17d0bf841d8eeb4",
                              "sunshine_signed_up_at": "2023-12-08T19:06:04.890000",
                              "sunshine_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                              "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
                            },
                          },
                          "updated_at": "2023-12-08T19:06:04.890000",
                        },
                      ],
                      "meta": {
                        "next_page_url": "https://example.ada.support/api/end-users/v1?cursor=65a17e3f43bec88e2792d0eb",
                      },
                    },
                  },
                },
              ],
              "method": "GET",
              "pagination": undefined,
              "path": "/end-users/v1",
              "request": {
                "name": "GetEndUsersRequest",
                "query-parameters": {
                  "cursor": {
                    "docs": "The end user ID that marks the start or beginning of the returned profile records.",
                    "type": "optional<string>",
                  },
                  "limit": {
                    "docs": "The number of end user profile records to return",
                    "type": "optional<integer>",
                    "validation": {
                      "exclusiveMax": undefined,
                      "exclusiveMin": undefined,
                      "max": 100,
                      "min": 1,
                      "multipleOf": undefined,
                    },
                  },
                },
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.EndUsers",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
            "updateEndUserById": {
              "auth": true,
              "display-name": "Update an end user by ID",
              "docs": "Update an end user. Request data is limited to 4KB in size total.",
              "errors": [
                "root.BadRequestError",
                "root.UnauthorizedError",
                "root.NotFoundError",
                "root.ContentTooLargeError",
                "root.TooManyRequestsError",
                "root.InternalServerError",
              ],
              "examples": [
                {
                  "path-parameters": {
                    "end_user_id": "end_user_id",
                  },
                  "request": {
                    "profile": {
                      "email": "ada.lovelace@ada.cx",
                      "first_name": "Ada",
                      "language": "en-US",
                      "last_name": "Lovelace",
                      "metadata": {
                        "example_key1": "example_string_value",
                        "example_key2": true,
                        "example_key3": 123,
                      },
                    },
                  },
                  "response": {
                    "body": {
                      "created_at": "2023-12-08T19:06:04.890000",
                      "end_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                      "profile": {
                        "email": "ada.lovelace@ada.cx",
                        "first_name": "Ada",
                        "language": "en-US",
                        "last_name": "Lovelace",
                        "metadata": {
                          "example_key1": "example_string_value",
                          "example_key2": true,
                          "example_key3": 123,
                        },
                        "system_properties": {
                          "browser": "Chrome",
                          "browser_version": "119.0.0.0",
                          "device": "macos",
                          "introshown": false,
                          "last_answer_id": "650071321ef45533437f6f29",
                          "last_question_asked": "What is my account balance?",
                          "sunshine_conversation_id": "12345abc",
                          "sunshine_end_user_channel": "whatsapp",
                          "sunshine_first_message_id": "65736922f17d0bf841d8eeb4",
                          "sunshine_signed_up_at": "2023-12-08T19:06:04.890000",
                          "sunshine_user_id": "5f7e0e2c1e7c7e000f0f9c3a",
                          "user_agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36",
                        },
                      },
                      "updated_at": "2023-12-08T19:06:04.890000",
                    },
                  },
                },
              ],
              "method": "PATCH",
              "pagination": undefined,
              "path": "/end-users/v1/{end_user_id}",
              "path-parameters": {
                "end_user_id": {
                  "docs": "The end_user_id",
                  "type": "string",
                },
              },
              "request": {
                "body": {
                  "properties": {
                    "profile": {
                      "docs": "The end user's profile information",
                      "type": "EndUserRequestProfile",
                    },
                  },
                },
                "content-type": "application/json",
                "headers": undefined,
                "name": "EndUserRequest",
                "path-parameters": undefined,
                "query-parameters": undefined,
              },
              "response": {
                "docs": "OK",
                "status-code": 200,
                "type": "root.EndUser",
              },
              "source": {
                "openapi": "../openapi.json",
              },
            },
          },
          "source": {
            "openapi": "../openapi.json",
          },
        },
        "types": {
          "EndUserRequestProfile": {
            "docs": "The end user's profile information",
            "inline": true,
            "properties": {
              "email": {
                "docs": "The end user's email address",
                "type": "optional<string>",
              },
              "first_name": {
                "docs": "The end user's first name",
                "type": "optional<string>",
              },
              "language": {
                "docs": "The end user's language in BCP 47 format",
                "type": "optional<string>",
              },
              "last_name": {
                "docs": "The end user's last name",
                "type": "optional<string>",
              },
              "metadata": {
                "docs": "A dictionary of arbitrary key, value pairs assigned to the end user                      - `metadata` keys may only be of type: `string`                      - `metadata` values may only be one of type: `string`, `boolean`, or `integer`                     ",
                "type": "optional<map<string, unknown>>",
              },
            },
            "source": {
              "openapi": "../openapi.json",
            },
          },
        },
      },
      "rawContents": "imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    getEndUserById:
      path: /end-users/v1/{end_user_id}
      method: GET
      auth: true
      docs: Get a specific end user
      source:
        openapi: ../openapi.json
      path-parameters:
        end_user_id:
          type: string
          docs: The end_user_id
      display-name: Get an end user by ID
      response:
        docs: OK
        type: root.EndUser
        status-code: 200
      errors:
        - root.UnauthorizedError
        - root.NotFoundError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            end_user_id: end_user_id
          response:
            body:
              end_user_id: 5f7e0e2c1e7c7e000f0f9c3a
              profile:
                first_name: Ada
                last_name: Lovelace
                email: ada.lovelace@ada.cx
                language: en-US
                metadata:
                  example_key1: example_string_value
                  example_key2: true
                  example_key3: 123
                system_properties:
                  user_agent: >-
                    Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)
                    AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0
                    Safari/537.36
                  device: macos
                  browser: Chrome
                  browser_version: 119.0.0.0
                  introshown: false
                  last_answer_id: 650071321ef45533437f6f29
                  last_question_asked: What is my account balance?
                  sunshine_first_message_id: 65736922f17d0bf841d8eeb4
                  sunshine_conversation_id: 12345abc
                  sunshine_end_user_channel: whatsapp
                  sunshine_signed_up_at: '2023-12-08T19:06:04.890000'
                  sunshine_user_id: 5f7e0e2c1e7c7e000f0f9c3a
              created_at: '2023-12-08T19:06:04.890000'
              updated_at: '2023-12-08T19:06:04.890000'
    updateEndUserById:
      path: /end-users/v1/{end_user_id}
      method: PATCH
      auth: true
      docs: Update an end user. Request data is limited to 4KB in size total.
      source:
        openapi: ../openapi.json
      path-parameters:
        end_user_id:
          type: string
          docs: The end_user_id
      display-name: Update an end user by ID
      request:
        name: EndUserRequest
        body:
          properties:
            profile:
              type: EndUserRequestProfile
              docs: The end user's profile information
        content-type: application/json
      response:
        docs: OK
        type: root.EndUser
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.NotFoundError
        - root.ContentTooLargeError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - path-parameters:
            end_user_id: end_user_id
          request:
            profile:
              first_name: Ada
              last_name: Lovelace
              email: ada.lovelace@ada.cx
              language: en-US
              metadata:
                example_key1: example_string_value
                example_key2: true
                example_key3: 123
          response:
            body:
              end_user_id: 5f7e0e2c1e7c7e000f0f9c3a
              profile:
                first_name: Ada
                last_name: Lovelace
                email: ada.lovelace@ada.cx
                language: en-US
                metadata:
                  example_key1: example_string_value
                  example_key2: true
                  example_key3: 123
                system_properties:
                  user_agent: >-
                    Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)
                    AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0
                    Safari/537.36
                  device: macos
                  browser: Chrome
                  browser_version: 119.0.0.0
                  introshown: false
                  last_answer_id: 650071321ef45533437f6f29
                  last_question_asked: What is my account balance?
                  sunshine_first_message_id: 65736922f17d0bf841d8eeb4
                  sunshine_conversation_id: 12345abc
                  sunshine_end_user_channel: whatsapp
                  sunshine_signed_up_at: '2023-12-08T19:06:04.890000'
                  sunshine_user_id: 5f7e0e2c1e7c7e000f0f9c3a
              created_at: '2023-12-08T19:06:04.890000'
              updated_at: '2023-12-08T19:06:04.890000'
    getEndUsers:
      path: /end-users/v1
      method: GET
      auth: true
      docs: Get multiple end users
      source:
        openapi: ../openapi.json
      display-name: Get multiple end users by ID
      request:
        name: GetEndUsersRequest
        query-parameters:
          cursor:
            type: optional<string>
            docs: >-
              The end user ID that marks the start or beginning of the returned
              profile records.
          limit:
            type: optional<integer>
            docs: The number of end user profile records to return
            validation:
              min: 1
              max: 100
      response:
        docs: OK
        type: root.EndUsers
        status-code: 200
      errors:
        - root.BadRequestError
        - root.UnauthorizedError
        - root.TooManyRequestsError
        - root.InternalServerError
      examples:
        - query-parameters:
            cursor: 65a17e3f43bec88e2792d0eb
            limit: 8
          response:
            body:
              end_users:
                - end_user_id: 5f7e0e2c1e7c7e000f0f9c3a
                  profile:
                    first_name: Ada
                    last_name: Lovelace
                    email: ada.lovelace@ada.cx
                    language: en-US
                    metadata:
                      example_key1: example_string_value
                      example_key2: true
                      example_key3: 123
                    system_properties:
                      user_agent: >-
                        Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7)
                        AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0
                        Safari/537.36
                      device: macos
                      browser: Chrome
                      browser_version: 119.0.0.0
                      introshown: false
                      last_answer_id: 650071321ef45533437f6f29
                      last_question_asked: What is my account balance?
                      sunshine_first_message_id: 65736922f17d0bf841d8eeb4
                      sunshine_conversation_id: 12345abc
                      sunshine_end_user_channel: whatsapp
                      sunshine_signed_up_at: '2023-12-08T19:06:04.890000'
                      sunshine_user_id: 5f7e0e2c1e7c7e000f0f9c3a
                  created_at: '2023-12-08T19:06:04.890000'
                  updated_at: '2023-12-08T19:06:04.890000'
              meta:
                next_page_url: >-
                  https://example.ada.support/api/end-users/v1?cursor=65a17e3f43bec88e2792d0eb
  source:
    openapi: ../openapi.json
types:
  EndUserRequestProfile:
    docs: The end user's profile information
    properties:
      first_name:
        type: optional<string>
        docs: The end user's first name
      last_name:
        type: optional<string>
        docs: The end user's last name
      email:
        type: optional<string>
        docs: The end user's email address
      language:
        type: optional<string>
        docs: The end user's language in BCP 47 format
      metadata:
        type: optional<map<string, unknown>>
        docs: >-
          A dictionary of arbitrary key, value pairs assigned to the end
          user                      - `metadata` keys may only be of type:
          `string`                      - `metadata` values may only be one of
          type: `string`, `boolean`, or `integer`                     
    source:
      openapi: ../openapi.json
    inline: true
",
    },
  },
  "packageMarkers": {},
  "rootApiFile": {
    "contents": {
      "auth": "BearerAuthScheme",
      "auth-schemes": {
        "BearerAuthScheme": {
          "scheme": "bearer",
        },
      },
      "default-environment": "Default",
      "display-name": "End Users API",
      "environments": {
        "Default": "https://example.ada.support/api",
      },
      "error-discrimination": {
        "strategy": "status-code",
      },
      "name": "api",
    },
    "defaultUrl": undefined,
    "rawContents": "name: api
error-discrimination:
  strategy: status-code
display-name: End Users API
environments:
  Default: https://example.ada.support/api
default-environment: Default
auth-schemes:
  BearerAuthScheme:
    scheme: bearer
auth: BearerAuthScheme
",
  },
}