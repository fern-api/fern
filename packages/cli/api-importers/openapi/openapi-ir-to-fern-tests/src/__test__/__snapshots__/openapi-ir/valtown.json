{
  "title": "Val Town API",
  "description": "Val Townâ€™s public API\n\nOpenAPI JSON endpoint:\n\nhttps://api.val.town/openapi.json",
  "servers": [
    {
      "url": "https://api.val.town",
      "description": "Production",
      "name": "Production"
    }
  ],
  "tags": {
    "tagsById": {
      "vals": {
        "id": "vals",
        "description": "These endpoints\nlet you get, create, and run vals."
      },
      "alias": {
        "id": "alias",
        "description": "Many API endpoints\naccept IDs instead of user-facing names. The alias\nendpoints let you convert between the user-facing name of a\nval or another object into an ID that can be used with other\nAPI endpoints"
      },
      "me": {
        "id": "me",
        "description": "These endpoints\ngive access to details and data from the requesting user."
      },
      "users": {
        "id": "users",
        "description": "Users"
      },
      "sqlite": {
        "id": "sqlite",
        "description": "SQLite"
      },
      "blobs": {
        "id": "blobs",
        "description": "Blobs"
      },
      "search": {
        "id": "search",
        "description": "Search"
      },
      "emails": {
        "id": "emails",
        "description": "Emails"
      }
    },
    "orderedTagIds": [
      "vals",
      "alias",
      "me",
      "users",
      "sqlite",
      "blobs",
      "search",
      "emails"
    ]
  },
  "hasEndpointsMarkedInternal": false,
  "endpoints": [
    {
      "audiences": [],
      "operationId": "searchVals",
      "tags": [
        "search"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Number of items to skip in order to deliver paginated results",
          "name": "offset",
          "schema": {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "SearchValsRequestOffset",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Maximum items to return in each paginated response",
          "name": "limit",
          "schema": {
            "schema": {
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "type": "int"
            },
            "generatedName": "SearchValsRequestLimit",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Search query",
          "name": "query",
          "schema": {
            "schema": {
              "minLength": 1,
              "maxLength": 512,
              "type": "string"
            },
            "generatedName": "SearchValsRequestQuery",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "SearchValsRequest",
      "response": {
        "description": "A paginated result set",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "searchValsResponseData",
              "key": "data",
              "schema": {
                "value": {
                  "generatedName": "SearchValsResponseDataItem",
                  "schema": "BasicVal",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "SearchValsResponseData",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "searchValsResponseLinks",
              "key": "links",
              "schema": {
                "generatedName": "SearchValsResponseLinks",
                "schema": "PaginationLinks",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A paginated result set",
          "generatedName": "SearchValsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Search for vals across the platform",
      "authed": false,
      "method": "GET",
      "path": "/v1/search/vals",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "offset",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "limit",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "query",
              "value": {
                "value": {
                  "value": "query",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "counter",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "00000000-0000-0000-0000-000000000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "code": {
                          "value": {
                            "value": "export const count = 1;",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "public": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "createdAt": {
                          "value": {
                            "value": "2024-06-11T22:05:12.585Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "privacy": {
                          "value": "public",
                          "type": "enum"
                        },
                        "type": {
                          "value": "script",
                          "type": "enum"
                        },
                        "url": {
                          "value": {
                            "value": "https://val.town/v/tmcw/counter",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "links": {
                          "properties": {
                            "self": {
                              "value": {
                                "value": "self",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "versions": {
                              "value": {
                                "value": "versions",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "module": {
                              "value": {
                                "value": "module",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "author": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "00000000-0000-0000-0000-000000000000",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "username": {
                              "value": {
                                "value": "tmcw",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "prev": {
                      "value": {
                        "value": "prev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "next": {
                      "value": {
                        "value": "next",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "aliasUsername",
      "tags": [
        "alias"
      ],
      "pathParameters": [
        {
          "description": "Username of the user who you are looking for",
          "name": "username",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AliasUsernameRequestUsername",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AliasUsernameRequest",
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "AliasUsernameResponse",
          "schema": "User",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get basic details about a user, given their username",
      "authed": false,
      "method": "GET",
      "path": "/v1/alias/{username}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "username",
              "value": {
                "value": {
                  "value": "username",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "00000000-0000-0000-0000-000000000000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "bio": {
                  "value": {
                    "value": "Hello world",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "username": {
                  "value": {
                    "value": "tmcw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "profileImageUrl": {
                  "value": {
                    "value": "profileImageUrl",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "url": {
                  "value": {
                    "value": "https://val.town/u/tmcw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "aliasVal",
      "tags": [
        "alias"
      ],
      "pathParameters": [
        {
          "description": "Username of the user whose val you are looking for",
          "name": "username",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AliasValRequestUsername",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Name of the val youâ€™re looking for",
          "name": "val_name",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "AliasValRequestValName",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "AliasValRequest",
      "response": {
        "description": "A Val",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "aliasValResponseName",
              "key": "name",
              "schema": {
                "description": "The name of this val",
                "schema": {
                  "type": "string"
                },
                "generatedName": "AliasValResponseName",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseId",
              "key": "id",
              "schema": {
                "description": "This valâ€™s id",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "AliasValResponseId",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseVersion",
              "key": "version",
              "schema": {
                "description": "The version of this val, starting at zero",
                "schema": {
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "AliasValResponseVersion",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseCode",
              "key": "code",
              "schema": {
                "generatedName": "AliasValResponseCode",
                "value": {
                  "description": "TypeScript code associated with this val",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AliasValResponseCode",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponsePublic",
              "key": "public",
              "schema": {
                "description": "Whether this val is available publicly on Val Town",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "AliasValResponsePublic",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseCreatedAt",
              "key": "createdAt",
              "schema": {
                "schema": {
                  "type": "datetime"
                },
                "generatedName": "AliasValResponseCreatedAt",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponsePrivacy",
              "key": "privacy",
              "schema": {
                "description": "This valâ€™s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                "generatedName": "AliasValResponsePrivacy",
                "values": [
                  {
                    "generatedName": "public",
                    "value": "public",
                    "casing": {}
                  },
                  {
                    "generatedName": "unlisted",
                    "value": "unlisted",
                    "casing": {}
                  },
                  {
                    "generatedName": "private",
                    "value": "private",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseType",
              "key": "type",
              "schema": {
                "description": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
                "generatedName": "AliasValResponseType",
                "values": [
                  {
                    "generatedName": "interval",
                    "value": "interval",
                    "casing": {}
                  },
                  {
                    "generatedName": "http",
                    "value": "http",
                    "casing": {}
                  },
                  {
                    "generatedName": "express",
                    "value": "express",
                    "casing": {}
                  },
                  {
                    "generatedName": "email",
                    "value": "email",
                    "casing": {}
                  },
                  {
                    "generatedName": "script",
                    "value": "script",
                    "casing": {}
                  },
                  {
                    "generatedName": "rpc",
                    "value": "rpc",
                    "casing": {}
                  },
                  {
                    "generatedName": "httpnext",
                    "value": "httpnext",
                    "casing": {}
                  }
                ],
                "groupName": [],
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "enum"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseUrl",
              "key": "url",
              "schema": {
                "description": "The URL of this val on the Val Town website",
                "schema": {
                  "format": "uri",
                  "type": "string"
                },
                "generatedName": "AliasValResponseUrl",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseLinks",
              "key": "links",
              "schema": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "aliasValResponseLinksSelf",
                    "key": "self",
                    "schema": {
                      "description": "The URL of this val on this API",
                      "schema": {
                        "format": "uri",
                        "type": "string"
                      },
                      "generatedName": "AliasValResponseLinksSelf",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "aliasValResponseLinksVersions",
                    "key": "versions",
                    "schema": {
                      "description": "The endpoint to retrieve this valâ€™s versions",
                      "schema": {
                        "format": "uri",
                        "type": "string"
                      },
                      "generatedName": "AliasValResponseLinksVersions",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "aliasValResponseLinksModule",
                    "key": "module",
                    "schema": {
                      "description": "The URL of this Valâ€™s source code as a module",
                      "schema": {
                        "format": "uri",
                        "type": "string"
                      },
                      "generatedName": "AliasValResponseLinksModule",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "AliasValResponseLinks",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseAuthor",
              "key": "author",
              "schema": {
                "generatedName": "AliasValResponseAuthor",
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "aliasValResponseAuthorId",
                      "key": "id",
                      "schema": {
                        "schema": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "generatedName": "AliasValResponseAuthorId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "aliasValResponseAuthorUsername",
                      "key": "username",
                      "schema": {
                        "generatedName": "AliasValResponseAuthorUsername",
                        "value": {
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "AliasValResponseAuthorUsername",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "groupName": [],
                        "type": "nullable"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "description": "The user who created this val",
                  "generatedName": "AliasValResponseAuthor",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "groupName": [],
                "type": "nullable"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseLikeCount",
              "key": "likeCount",
              "schema": {
                "description": "How many likes this val has received",
                "schema": {
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "AliasValResponseLikeCount",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseReferenceCount",
              "key": "referenceCount",
              "schema": {
                "schema": {
                  "minimum": 0,
                  "type": "int"
                },
                "generatedName": "AliasValResponseReferenceCount",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "aliasValResponseReadme",
              "key": "readme",
              "schema": {
                "generatedName": "AliasValResponseReadme",
                "value": {
                  "description": "This valâ€™s readme, as Markdown",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "AliasValResponseReadme",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A Val",
          "generatedName": "AliasValResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get a val",
      "authed": false,
      "method": "GET",
      "path": "/v1/alias/{username}/{val_name}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "username",
              "value": {
                "value": {
                  "value": "username",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "val_name",
              "value": {
                "value": {
                  "value": "val_name",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "code": {
                  "value": {
                    "value": "code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "public": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "createdAt": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "privacy": {
                  "value": "public",
                  "type": "enum"
                },
                "type": {
                  "value": "interval",
                  "type": "enum"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "versions": {
                      "value": {
                        "value": "versions",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "module": {
                      "value": {
                        "value": "module",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "author": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "likeCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "referenceCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "readme": {
                  "value": {
                    "value": "readme",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "meGet",
      "tags": [
        "me"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "MeGetRequest",
      "response": {
        "description": "Your user information, with tier and email included",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "meGetResponseId",
              "key": "id",
              "schema": {
                "description": "The ID of this user",
                "schema": {
                  "format": "uuid",
                  "type": "string"
                },
                "generatedName": "MeGetResponseId",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meGetResponseBio",
              "key": "bio",
              "schema": {
                "generatedName": "MeGetResponseBio",
                "value": {
                  "description": "The userâ€™s biography, if they have provided one",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MeGetResponseBio",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meGetResponseUsername",
              "key": "username",
              "schema": {
                "generatedName": "MeGetResponseUsername",
                "value": {
                  "description": "The userâ€™s handle that they chose for themselves. Does not include the @ symbol",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "MeGetResponseUsername",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meGetResponseProfileImageUrl",
              "key": "profileImageUrl",
              "schema": {
                "generatedName": "MeGetResponseProfileImageUrl",
                "value": {
                  "description": "URL that points to the userâ€™s profile image, if one exists",
                  "schema": {
                    "format": "uri",
                    "type": "string"
                  },
                  "generatedName": "MeGetResponseProfileImageUrl",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "nullable"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meGetResponseUrl",
              "key": "url",
              "schema": {
                "description": "URL of this userâ€™s profile on Val Townâ€™s website",
                "schema": {
                  "format": "uri",
                  "type": "string"
                },
                "generatedName": "MeGetResponseUrl",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meGetResponseLinks",
              "key": "links",
              "schema": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "meGetResponseLinksSelf",
                    "key": "self",
                    "schema": {
                      "description": "URL of this user on this API",
                      "schema": {
                        "format": "uri",
                        "type": "string"
                      },
                      "generatedName": "MeGetResponseLinksSelf",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "generatedName": "MeGetResponseLinks",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meGetResponseTier",
              "key": "tier",
              "schema": {
                "generatedName": "MeGetResponseTier",
                "value": {
                  "description": "Your account tier",
                  "generatedName": "MeGetResponseTier",
                  "values": [
                    {
                      "generatedName": "free",
                      "value": "free",
                      "casing": {}
                    },
                    {
                      "generatedName": "pro",
                      "value": "pro",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "nullable"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meGetResponseEmail",
              "key": "email",
              "schema": {
                "description": "Your email address",
                "schema": {
                  "type": "string"
                },
                "generatedName": "MeGetResponseEmail",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Your user information, with tier and email included",
          "generatedName": "MeGetResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [
          {
            "value": {
              "id": "00000000-0000-0000-0000-000000000000",
              "bio": "Hello world",
              "username": "tmcw",
              "email": "example@example.com",
              "profileImageUrl": null,
              "tier": "pro"
            }
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get profile information for the current user",
      "authed": false,
      "method": "GET",
      "path": "/v1/me",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "00000000-0000-0000-0000-000000000000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "bio": {
                  "value": {
                    "value": "Hello world",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "username": {
                  "value": {
                    "value": "tmcw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "profileImageUrl": {
                  "value": {
                    "value": "profileImageUrl",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "tier": {
                  "value": "pro",
                  "type": "enum"
                },
                "email": {
                  "value": {
                    "value": "example@example.com",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "meLikes",
      "tags": [
        "me"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Number of items to skip in order to deliver paginated results",
          "name": "offset",
          "schema": {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "MeLikesRequestOffset",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Maximum items to return in each paginated response",
          "name": "limit",
          "schema": {
            "schema": {
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "type": "int"
            },
            "generatedName": "MeLikesRequestLimit",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "MeLikesRequest",
      "response": {
        "description": "A paginated result set",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "meLikesResponseData",
              "key": "data",
              "schema": {
                "value": {
                  "generatedName": "MeLikesResponseDataItem",
                  "schema": "BasicVal",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "MeLikesResponseData",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meLikesResponseLinks",
              "key": "links",
              "schema": {
                "generatedName": "MeLikesResponseLinks",
                "schema": "PaginationLinks",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A paginated result set",
          "generatedName": "MeLikesResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get vals liked by the current user",
      "authed": false,
      "method": "GET",
      "path": "/v1/me/likes",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "offset",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "limit",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "counter",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "00000000-0000-0000-0000-000000000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "code": {
                          "value": {
                            "value": "export const count = 1;",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "public": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "createdAt": {
                          "value": {
                            "value": "2024-06-11T22:05:12.585Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "privacy": {
                          "value": "public",
                          "type": "enum"
                        },
                        "type": {
                          "value": "script",
                          "type": "enum"
                        },
                        "url": {
                          "value": {
                            "value": "https://val.town/v/tmcw/counter",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "links": {
                          "properties": {
                            "self": {
                              "value": {
                                "value": "self",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "versions": {
                              "value": {
                                "value": "versions",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "module": {
                              "value": {
                                "value": "module",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "author": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "00000000-0000-0000-0000-000000000000",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "username": {
                              "value": {
                                "value": "tmcw",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "prev": {
                      "value": {
                        "value": "prev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "next": {
                      "value": {
                        "value": "next",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "meComments",
      "tags": [
        "me"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Number of items to skip in order to deliver paginated results",
          "name": "offset",
          "schema": {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "MeCommentsRequestOffset",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Maximum items to return in each paginated response",
          "name": "limit",
          "schema": {
            "schema": {
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "type": "int"
            },
            "generatedName": "MeCommentsRequestLimit",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Include items created after this date",
          "name": "since",
          "schema": {
            "generatedName": "MeCommentsRequestSince",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "MeCommentsRequestSince",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Include items created before this date",
          "name": "until",
          "schema": {
            "generatedName": "MeCommentsRequestUntil",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "MeCommentsRequestUntil",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Whether to get comments you have received, given, or both",
          "name": "relationship",
          "schema": {
            "generatedName": "MeCommentsRequestRelationship",
            "values": [
              {
                "generatedName": "any",
                "value": "any",
                "casing": {}
              },
              {
                "generatedName": "received",
                "value": "received",
                "casing": {}
              },
              {
                "generatedName": "given",
                "value": "given",
                "casing": {}
              }
            ],
            "default": {
              "generatedName": "any",
              "value": "any",
              "casing": {}
            },
            "groupName": [],
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "enum"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "MeCommentsRequest",
      "response": {
        "description": "A paginated result set",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "meCommentsResponseData",
              "key": "data",
              "schema": {
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "meCommentsResponseDataItemComment",
                      "key": "comment",
                      "schema": {
                        "description": "Text of the given comment, in Markdown",
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "MeCommentsResponseDataItemComment",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "meCommentsResponseDataItemId",
                      "key": "id",
                      "schema": {
                        "description": "The commentâ€™s id",
                        "schema": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "generatedName": "MeCommentsResponseDataItemId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "meCommentsResponseDataItemCreatedAt",
                      "key": "createdAt",
                      "schema": {
                        "schema": {
                          "type": "datetime"
                        },
                        "generatedName": "MeCommentsResponseDataItemCreatedAt",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "meCommentsResponseDataItemAuthor",
                      "key": "author",
                      "schema": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "meCommentsResponseDataItemAuthorId",
                            "key": "id",
                            "schema": {
                              "schema": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "generatedName": "MeCommentsResponseDataItemAuthorId",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meCommentsResponseDataItemAuthorUsername",
                            "key": "username",
                            "schema": {
                              "generatedName": "MeCommentsResponseDataItemAuthorUsername",
                              "value": {
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "MeCommentsResponseDataItemAuthorUsername",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "nullable"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "MeCommentsResponseDataItemAuthor",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "meCommentsResponseDataItemVal",
                      "key": "val",
                      "schema": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "meCommentsResponseDataItemValName",
                            "key": "name",
                            "schema": {
                              "description": "Name of the val that is being commented on",
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "MeCommentsResponseDataItemValName",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meCommentsResponseDataItemValId",
                            "key": "id",
                            "schema": {
                              "schema": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "generatedName": "MeCommentsResponseDataItemValId",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meCommentsResponseDataItemValVersion",
                            "key": "version",
                            "schema": {
                              "schema": {
                                "minimum": 0,
                                "type": "int"
                              },
                              "generatedName": "MeCommentsResponseDataItemValVersion",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meCommentsResponseDataItemValPrivacy",
                            "key": "privacy",
                            "schema": {
                              "description": "This valâ€™s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                              "generatedName": "MeCommentsResponseDataItemValPrivacy",
                              "values": [
                                {
                                  "generatedName": "public",
                                  "value": "public",
                                  "casing": {}
                                },
                                {
                                  "generatedName": "unlisted",
                                  "value": "unlisted",
                                  "casing": {}
                                },
                                {
                                  "generatedName": "private",
                                  "value": "private",
                                  "casing": {}
                                }
                              ],
                              "groupName": [],
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "enum"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meCommentsResponseDataItemValAuthor",
                            "key": "author",
                            "schema": {
                              "generatedName": "MeCommentsResponseDataItemValAuthor",
                              "value": {
                                "allOf": [],
                                "properties": [
                                  {
                                    "conflict": {},
                                    "generatedName": "meCommentsResponseDataItemValAuthorId",
                                    "key": "id",
                                    "schema": {
                                      "schema": {
                                        "format": "uuid",
                                        "type": "string"
                                      },
                                      "generatedName": "MeCommentsResponseDataItemValAuthorId",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "audiences": []
                                  },
                                  {
                                    "conflict": {},
                                    "generatedName": "meCommentsResponseDataItemValAuthorUsername",
                                    "key": "username",
                                    "schema": {
                                      "generatedName": "MeCommentsResponseDataItemValAuthorUsername",
                                      "value": {
                                        "schema": {
                                          "type": "string"
                                        },
                                        "generatedName": "MeCommentsResponseDataItemValAuthorUsername",
                                        "groupName": [],
                                        "type": "primitive"
                                      },
                                      "groupName": [],
                                      "type": "nullable"
                                    },
                                    "audiences": []
                                  }
                                ],
                                "allOfPropertyConflicts": [],
                                "description": "The user who created this val",
                                "generatedName": "MeCommentsResponseDataItemValAuthor",
                                "groupName": [],
                                "additionalProperties": false,
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "object"
                              },
                              "groupName": [],
                              "type": "nullable"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "generatedName": "MeCommentsResponseDataItemVal",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "MeCommentsResponseDataItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "MeCommentsResponseData",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meCommentsResponseLinks",
              "key": "links",
              "schema": {
                "generatedName": "MeCommentsResponseLinks",
                "schema": "PaginationLinks",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A paginated result set",
          "generatedName": "MeCommentsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get comments related to current user, either given or received",
      "authed": false,
      "method": "GET",
      "path": "/v1/me/comments",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "offset",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "limit",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "relationship",
              "value": {
                "value": "any",
                "type": "enum"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "comment": {
                          "value": {
                            "value": "comment",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "createdAt": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "author": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "val": {
                          "properties": {
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "version": {
                              "value": {
                                "value": 1,
                                "type": "int"
                              },
                              "type": "primitive"
                            },
                            "privacy": {
                              "value": "public",
                              "type": "enum"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "prev": {
                      "value": {
                        "value": "prev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "next": {
                      "value": {
                        "value": "next",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "meReferences",
      "tags": [
        "me"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "Number of items to skip in order to deliver paginated results",
          "name": "offset",
          "schema": {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "MeReferencesRequestOffset",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Maximum items to return in each paginated response",
          "name": "limit",
          "schema": {
            "schema": {
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "type": "int"
            },
            "generatedName": "MeReferencesRequestLimit",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Include items created after this date",
          "name": "since",
          "schema": {
            "generatedName": "MeReferencesRequestSince",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "MeReferencesRequestSince",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Include items created before this date",
          "name": "until",
          "schema": {
            "generatedName": "MeReferencesRequestUntil",
            "value": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "MeReferencesRequestUntil",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "MeReferencesRequest",
      "response": {
        "description": "A paginated result set",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "meReferencesResponseData",
              "key": "data",
              "schema": {
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "meReferencesResponseDataItemReference",
                      "key": "reference",
                      "schema": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemReferenceId",
                            "key": "id",
                            "schema": {
                              "description": "The id of this val",
                              "schema": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "generatedName": "MeReferencesResponseDataItemReferenceId",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemReferenceUsername",
                            "key": "username",
                            "schema": {
                              "generatedName": "MeReferencesResponseDataItemReferenceUsername",
                              "value": {
                                "description": "The username of the person who authored this val",
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "MeReferencesResponseDataItemReferenceUsername",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "nullable"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemReferenceAuthorId",
                            "key": "author_id",
                            "schema": {
                              "generatedName": "MeReferencesResponseDataItemReferenceAuthorId",
                              "value": {
                                "description": "The ID of the person who authored this val",
                                "schema": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "generatedName": "MeReferencesResponseDataItemReferenceAuthorId",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "nullable"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemReferenceName",
                            "key": "name",
                            "schema": {
                              "description": "The name of this val",
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "MeReferencesResponseDataItemReferenceName",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "description": "A val in a dependency relationship",
                        "generatedName": "MeReferencesResponseDataItemReference",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "meReferencesResponseDataItemDependsOn",
                      "key": "dependsOn",
                      "schema": {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemDependsOnId",
                            "key": "id",
                            "schema": {
                              "description": "The id of this val",
                              "schema": {
                                "format": "uuid",
                                "type": "string"
                              },
                              "generatedName": "MeReferencesResponseDataItemDependsOnId",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemDependsOnUsername",
                            "key": "username",
                            "schema": {
                              "generatedName": "MeReferencesResponseDataItemDependsOnUsername",
                              "value": {
                                "description": "The username of the person who authored this val",
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "MeReferencesResponseDataItemDependsOnUsername",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "nullable"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemDependsOnAuthorId",
                            "key": "author_id",
                            "schema": {
                              "generatedName": "MeReferencesResponseDataItemDependsOnAuthorId",
                              "value": {
                                "description": "The ID of the person who authored this val",
                                "schema": {
                                  "format": "uuid",
                                  "type": "string"
                                },
                                "generatedName": "MeReferencesResponseDataItemDependsOnAuthorId",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "nullable"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "meReferencesResponseDataItemDependsOnName",
                            "key": "name",
                            "schema": {
                              "description": "The name of this val",
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "MeReferencesResponseDataItemDependsOnName",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "description": "A val in a dependency relationship",
                        "generatedName": "MeReferencesResponseDataItemDependsOn",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "meReferencesResponseDataItemReferencedAt",
                      "key": "referencedAt",
                      "schema": {
                        "schema": {
                          "type": "datetime"
                        },
                        "generatedName": "MeReferencesResponseDataItemReferencedAt",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "description": "A description of a dependency from one val (reference) to another (dependsOn) that was introduced at a particular time.",
                  "generatedName": "MeReferencesResponseDataItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "MeReferencesResponseData",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "meReferencesResponseLinks",
              "key": "links",
              "schema": {
                "generatedName": "MeReferencesResponseLinks",
                "schema": "PaginationLinks",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A paginated result set",
          "generatedName": "MeReferencesResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get vals that depend on any of the user's vals",
      "authed": false,
      "method": "GET",
      "path": "/v1/me/references",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [
            {
              "name": "offset",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "limit",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "reference": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "dependsOn": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "id",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "name": {
                              "value": {
                                "value": "name",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "referencedAt": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "prev": {
                      "value": {
                        "value": "prev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "next": {
                      "value": {
                        "value": "next",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "blobsList",
      "tags": [
        "blobs"
      ],
      "pathParameters": [],
      "queryParameters": [
        {
          "description": "If specified, only include blobs that start with this string",
          "name": "prefix",
          "schema": {
            "generatedName": "BlobsListRequestPrefix",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "BlobsListRequestPrefix",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "BlobsListRequest",
      "response": {
        "description": "List of blobs that youâ€™ve stored",
        "schema": {
          "description": "List of blobs that youâ€™ve stored",
          "value": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "blobsListResponseItemKey",
                "key": "key",
                "schema": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BlobsListResponseItemKey",
                  "groupName": [],
                  "type": "primitive"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "blobsListResponseItemSize",
                "key": "size",
                "schema": {
                  "generatedName": "blobsListResponseItemSize",
                  "nameOverride": "BlobListingItem",
                  "title": "BlobListingItem",
                  "value": {
                    "description": "Size in bytes of the object",
                    "schema": {
                      "type": "int"
                    },
                    "generatedName": "BlobsListResponseItemSize",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "blobsListResponseItemLastModified",
                "key": "lastModified",
                "schema": {
                  "generatedName": "blobsListResponseItemLastModified",
                  "nameOverride": "BlobListingItem",
                  "title": "BlobListingItem",
                  "value": {
                    "description": "Creation date of the object",
                    "schema": {
                      "type": "datetime"
                    },
                    "generatedName": "BlobsListResponseItemLastModified",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "groupName": [],
                  "type": "optional"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BlobsListResponseItem",
            "nameOverride": "BlobListingItem",
            "title": "BlobListingItem",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "generatedName": "BlobsListResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [
          {
            "value": [
              {
                "key": "hello_world",
                "size": 20,
                "lastModified": "2024-06-24T20:00:59.702Z"
              }
            ]
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "List blobs in your account",
      "authed": false,
      "method": "GET",
      "path": "/v1/blob",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "key": {
                      "value": {
                        "value": "hello_world",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "size": {
                      "value": {
                        "value": 20,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "lastModified": {
                      "value": {
                        "value": "2024-06-24T20:00:59.702Z",
                        "type": "datetime"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "blobsGet",
      "tags": [
        "blobs"
      ],
      "pathParameters": [
        {
          "description": "Key that uniquely identifies this blob",
          "name": "key",
          "schema": {
            "schema": {
              "minLength": 1,
              "maxLength": 512,
              "type": "string"
            },
            "generatedName": "BlobsGetRequestKey",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BlobsGetRequest",
      "response": {
        "description": "Binary contents of the returned file",
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "file"
      },
      "errors": {},
      "server": [],
      "description": "Get a blobâ€™s contents.",
      "authed": false,
      "method": "GET",
      "path": "/v1/blob/{key}",
      "examples": [],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "blobsStore",
      "tags": [
        "blobs"
      ],
      "pathParameters": [
        {
          "description": "Key that uniquely identifies this blob",
          "name": "key",
          "schema": {
            "schema": {
              "minLength": 1,
              "maxLength": 512,
              "type": "string"
            },
            "generatedName": "BlobsStoreRequestKey",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BlobsStoreRequest",
      "request": {
        "schema": {
          "description": "Binary input data",
          "schema": {
            "format": "binary",
            "type": "string"
          },
          "generatedName": "BlobsStoreRequest",
          "groupName": [],
          "type": "primitive"
        },
        "contentType": "application/json",
        "fullExamples": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Store data in blob storage",
      "authed": true,
      "method": "POST",
      "path": "/v1/blob/{key}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "key",
              "value": {
                "value": {
                  "value": "key",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "value": {
              "value": "string",
              "type": "string"
            },
            "type": "primitive"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "blobsDelete",
      "tags": [
        "blobs"
      ],
      "pathParameters": [
        {
          "description": "Key that uniquely identifies this blob",
          "name": "key",
          "schema": {
            "schema": {
              "minLength": 1,
              "maxLength": 512,
              "type": "string"
            },
            "generatedName": "BlobsDeleteRequestKey",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "BlobsDeleteRequest",
      "errors": {},
      "server": [],
      "description": "Delete a blob",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/blob/{key}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "key",
              "value": {
                "value": {
                  "value": "key",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "usersGet",
      "tags": [
        "users"
      ],
      "pathParameters": [
        {
          "description": "User Id",
          "name": "user_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UsersGetRequestUserId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "UsersGetRequest",
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "UsersGetResponse",
          "schema": "User",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get basic information about a user",
      "authed": false,
      "method": "GET",
      "path": "/v1/users/{user_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "id": {
                  "value": {
                    "value": "00000000-0000-0000-0000-000000000000",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "bio": {
                  "value": {
                    "value": "Hello world",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "username": {
                  "value": {
                    "value": "tmcw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "profileImageUrl": {
                  "value": {
                    "value": "profileImageUrl",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "url": {
                  "value": {
                    "value": "https://val.town/u/tmcw",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "usersVals",
      "tags": [
        "users"
      ],
      "pathParameters": [
        {
          "description": "User Id",
          "name": "user_id",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "UsersValsRequestUserId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Number of items to skip in order to deliver paginated results",
          "name": "offset",
          "schema": {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "UsersValsRequestOffset",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Maximum items to return in each paginated response",
          "name": "limit",
          "schema": {
            "schema": {
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "type": "int"
            },
            "generatedName": "UsersValsRequestLimit",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "UsersValsRequest",
      "response": {
        "description": "A paginated result set",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "usersValsResponseData",
              "key": "data",
              "schema": {
                "value": {
                  "generatedName": "UsersValsResponseDataItem",
                  "schema": "BasicVal",
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "reference"
                },
                "generatedName": "UsersValsResponseData",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "usersValsResponseLinks",
              "key": "links",
              "schema": {
                "generatedName": "UsersValsResponseLinks",
                "schema": "PaginationLinks",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A paginated result set",
          "generatedName": "UsersValsResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "List a user's vals",
      "authed": false,
      "method": "GET",
      "path": "/v1/users/{user_id}/vals",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "user_id",
              "value": {
                "value": {
                  "value": "user_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "offset",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "limit",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "name": {
                          "value": {
                            "value": "counter",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "id": {
                          "value": {
                            "value": "00000000-0000-0000-0000-000000000000",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 0,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "code": {
                          "value": {
                            "value": "export const count = 1;",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "public": {
                          "value": {
                            "value": true,
                            "type": "boolean"
                          },
                          "type": "primitive"
                        },
                        "createdAt": {
                          "value": {
                            "value": "2024-06-11T22:05:12.585Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        },
                        "privacy": {
                          "value": "public",
                          "type": "enum"
                        },
                        "type": {
                          "value": "script",
                          "type": "enum"
                        },
                        "url": {
                          "value": {
                            "value": "https://val.town/v/tmcw/counter",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "links": {
                          "properties": {
                            "self": {
                              "value": {
                                "value": "self",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "versions": {
                              "value": {
                                "value": "versions",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "module": {
                              "value": {
                                "value": "module",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        },
                        "author": {
                          "properties": {
                            "id": {
                              "value": {
                                "value": "00000000-0000-0000-0000-000000000000",
                                "type": "string"
                              },
                              "type": "primitive"
                            },
                            "username": {
                              "value": {
                                "value": "tmcw",
                                "type": "string"
                              },
                              "type": "primitive"
                            }
                          },
                          "type": "object"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "prev": {
                      "value": {
                        "value": "prev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "next": {
                      "value": {
                        "value": "next",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "sqliteExecute",
      "tags": [
        "sqlite"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SqliteExecuteRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "sqliteExecuteRequestStatement",
              "key": "statement",
              "schema": {
                "value": {
                  "generatedName": "SqliteExecuteRequestStatement",
                  "schemas": [
                    {
                      "description": "Simple SQL statement to run in SQLite",
                      "schema": {
                        "type": "string"
                      },
                      "generatedName": "SqliteExecuteRequestStatement",
                      "groupName": [],
                      "type": "primitive"
                    },
                    {
                      "allOf": [],
                      "properties": [
                        {
                          "conflict": {},
                          "generatedName": "sqliteExecuteRequestStatementArgsSql",
                          "key": "sql",
                          "schema": {
                            "description": "SQL statement, with ? placeholders for arguments",
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "SqliteExecuteRequestStatementArgsSql",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "audiences": []
                        },
                        {
                          "conflict": {},
                          "generatedName": "sqliteExecuteRequestStatementArgsArgs",
                          "key": "args",
                          "schema": {
                            "value": {
                              "description": "List of arguments to be used in the given statement",
                              "generatedName": "SqliteExecuteRequestStatementArgsArgs",
                              "title": "StatementArg",
                              "nameOverride": "StatementArg",
                              "schemas": [
                                {
                                  "value": {
                                    "generatedName": "SqliteExecuteRequestStatementArgsArgsItem",
                                    "nameOverride": "TursoValue",
                                    "title": "TursoValue",
                                    "description": "A value to be used as a parameter",
                                    "value": {
                                      "value": {
                                        "description": "A value to be used as a parameter",
                                        "generatedName": "SqliteExecuteRequestStatementArgsArgsItem",
                                        "title": "TursoValue",
                                        "nameOverride": "TursoValue",
                                        "schemas": [
                                          {
                                            "schema": {
                                              "type": "string"
                                            },
                                            "generatedName": "SqliteExecuteRequestStatementArgsArgsItem",
                                            "groupName": [],
                                            "type": "primitive"
                                          },
                                          {
                                            "schema": {
                                              "type": "double"
                                            },
                                            "generatedName": "SqliteExecuteRequestStatementArgsArgsItem",
                                            "groupName": [],
                                            "type": "primitive"
                                          },
                                          {
                                            "schema": {
                                              "type": "boolean"
                                            },
                                            "generatedName": "SqliteExecuteRequestStatementArgsArgsItem",
                                            "groupName": [],
                                            "type": "primitive"
                                          }
                                        ],
                                        "groupName": [],
                                        "source": {
                                          "file": "../openapi.yml",
                                          "type": "openapi"
                                        },
                                        "type": "undiscriminated"
                                      },
                                      "type": "oneOf"
                                    },
                                    "groupName": [],
                                    "type": "nullable"
                                  },
                                  "generatedName": "SqliteExecuteRequestStatementArgsArgs",
                                  "groupName": [],
                                  "type": "array"
                                },
                                {
                                  "key": {
                                    "schema": {
                                      "type": "string"
                                    },
                                    "generatedName": "SqliteExecuteRequestStatementArgsArgsOneKey",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "value": {
                                    "generatedName": "SqliteExecuteRequestStatementArgsArgsOneValue",
                                    "nameOverride": "TursoValue",
                                    "title": "TursoValue",
                                    "description": "A value to be used as a parameter",
                                    "value": {
                                      "value": {
                                        "description": "A value to be used as a parameter",
                                        "generatedName": "SqliteExecuteRequestStatementArgsArgsOneValue",
                                        "title": "TursoValue",
                                        "nameOverride": "TursoValue",
                                        "schemas": [
                                          {
                                            "schema": {
                                              "type": "string"
                                            },
                                            "generatedName": "SqliteExecuteRequestStatementArgsArgsOneValue",
                                            "groupName": [],
                                            "type": "primitive"
                                          },
                                          {
                                            "schema": {
                                              "type": "double"
                                            },
                                            "generatedName": "SqliteExecuteRequestStatementArgsArgsOneValue",
                                            "groupName": [],
                                            "type": "primitive"
                                          },
                                          {
                                            "schema": {
                                              "type": "boolean"
                                            },
                                            "generatedName": "SqliteExecuteRequestStatementArgsArgsOneValue",
                                            "groupName": [],
                                            "type": "primitive"
                                          }
                                        ],
                                        "groupName": [],
                                        "source": {
                                          "file": "../openapi.yml",
                                          "type": "openapi"
                                        },
                                        "inline": true,
                                        "type": "undiscriminated"
                                      },
                                      "type": "oneOf"
                                    },
                                    "groupName": [],
                                    "inline": true,
                                    "type": "nullable"
                                  },
                                  "generatedName": "SqliteExecuteRequestStatementArgsArgsOne",
                                  "groupName": [],
                                  "type": "map"
                                }
                              ],
                              "groupName": [],
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "undiscriminated"
                            },
                            "type": "oneOf"
                          },
                          "audiences": []
                        }
                      ],
                      "allOfPropertyConflicts": [],
                      "description": "A parameterized SQL query. See https://docs.turso.tech/sdk/ts/reference#batch-transactions for reference",
                      "generatedName": "SqliteExecuteRequestStatementArgs",
                      "nameOverride": "ParameterizedQuery",
                      "title": "ParameterizedQuery",
                      "groupName": [],
                      "additionalProperties": false,
                      "source": {
                        "file": "../openapi.yml",
                        "type": "openapi"
                      },
                      "type": "object"
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "undiscriminated"
                },
                "type": "oneOf"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A single statement to run",
          "generatedName": "SqliteExecuteRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "example1",
            "value": {
              "statement": "SELECT 1;"
            }
          },
          {
            "name": "example2",
            "value": {
              "statement": {
                "sql": "SELECT * FROM table WHERE column = ?;",
                "args": [
                  1
                ]
              }
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "SqliteExecuteResponse",
          "schema": "ResultSet",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Execute a single SQLite statement and return results",
      "authed": true,
      "method": "POST",
      "path": "/v1/sqlite/execute",
      "examples": [
        {
          "name": "example1",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "statement": {
                "value": {
                  "value": "SELECT 1;",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "columns": {
                  "value": [
                    {
                      "value": {
                        "value": "columns",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "columnTypes": {
                  "value": [
                    {
                      "value": {
                        "value": "columnTypes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "rows": {
                  "value": [
                    {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  ],
                  "type": "array"
                },
                "rowsAffected": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "lastInsertRowid": {
                  "value": {
                    "value": "lastInsertRowid",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        },
        {
          "name": "example2",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "statement": {
                "properties": {
                  "sql": {
                    "value": {
                      "value": "SELECT * FROM table WHERE column = ?;",
                      "type": "string"
                    },
                    "type": "primitive"
                  },
                  "args": {
                    "value": [
                      {
                        "value": {
                          "value": 1,
                          "type": "double"
                        },
                        "type": "primitive"
                      }
                    ],
                    "type": "array"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "columns": {
                  "value": [
                    {
                      "value": {
                        "value": "columns",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "columnTypes": {
                  "value": [
                    {
                      "value": {
                        "value": "columnTypes",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  ],
                  "type": "array"
                },
                "rows": {
                  "value": [
                    {
                      "value": [
                        {
                          "value": [
                            {
                              "key": {
                                "value": "key",
                                "type": "string"
                              },
                              "value": {
                                "value": {
                                  "value": "value",
                                  "type": "string"
                                },
                                "type": "primitive"
                              }
                            }
                          ],
                          "type": "map"
                        }
                      ],
                      "type": "array"
                    }
                  ],
                  "type": "array"
                },
                "rowsAffected": {
                  "value": {
                    "value": 1.1,
                    "type": "double"
                  },
                  "type": "primitive"
                },
                "lastInsertRowid": {
                  "value": {
                    "value": "lastInsertRowid",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "sqliteBatch",
      "tags": [
        "sqlite"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "SqliteBatchRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "sqliteBatchRequestStatements",
              "key": "statements",
              "schema": {
                "value": {
                  "value": {
                    "generatedName": "SqliteBatchRequestStatementsItem",
                    "schemas": [
                      {
                        "description": "Simple SQL statement to run in SQLite",
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "SqliteBatchRequestStatementsItem",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "sqliteBatchRequestStatementsItemArgsSql",
                            "key": "sql",
                            "schema": {
                              "description": "SQL statement, with ? placeholders for arguments",
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "SqliteBatchRequestStatementsItemArgsSql",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "sqliteBatchRequestStatementsItemArgsArgs",
                            "key": "args",
                            "schema": {
                              "value": {
                                "description": "List of arguments to be used in the given statement",
                                "generatedName": "SqliteBatchRequestStatementsItemArgsArgs",
                                "title": "StatementArg",
                                "nameOverride": "StatementArg",
                                "schemas": [
                                  {
                                    "value": {
                                      "generatedName": "SqliteBatchRequestStatementsItemArgsArgsItem",
                                      "nameOverride": "TursoValue",
                                      "title": "TursoValue",
                                      "description": "A value to be used as a parameter",
                                      "value": {
                                        "value": {
                                          "description": "A value to be used as a parameter",
                                          "generatedName": "SqliteBatchRequestStatementsItemArgsArgsItem",
                                          "title": "TursoValue",
                                          "nameOverride": "TursoValue",
                                          "schemas": [
                                            {
                                              "schema": {
                                                "type": "string"
                                              },
                                              "generatedName": "SqliteBatchRequestStatementsItemArgsArgsItem",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            {
                                              "schema": {
                                                "type": "double"
                                              },
                                              "generatedName": "SqliteBatchRequestStatementsItemArgsArgsItem",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            {
                                              "schema": {
                                                "type": "boolean"
                                              },
                                              "generatedName": "SqliteBatchRequestStatementsItemArgsArgsItem",
                                              "groupName": [],
                                              "type": "primitive"
                                            }
                                          ],
                                          "groupName": [],
                                          "source": {
                                            "file": "../openapi.yml",
                                            "type": "openapi"
                                          },
                                          "type": "undiscriminated"
                                        },
                                        "type": "oneOf"
                                      },
                                      "groupName": [],
                                      "type": "nullable"
                                    },
                                    "generatedName": "SqliteBatchRequestStatementsItemArgsArgs",
                                    "groupName": [],
                                    "type": "array"
                                  },
                                  {
                                    "key": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "SqliteBatchRequestStatementsItemArgsArgsOneKey",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "value": {
                                      "generatedName": "SqliteBatchRequestStatementsItemArgsArgsOneValue",
                                      "nameOverride": "TursoValue",
                                      "title": "TursoValue",
                                      "description": "A value to be used as a parameter",
                                      "value": {
                                        "value": {
                                          "description": "A value to be used as a parameter",
                                          "generatedName": "SqliteBatchRequestStatementsItemArgsArgsOneValue",
                                          "title": "TursoValue",
                                          "nameOverride": "TursoValue",
                                          "schemas": [
                                            {
                                              "schema": {
                                                "type": "string"
                                              },
                                              "generatedName": "SqliteBatchRequestStatementsItemArgsArgsOneValue",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            {
                                              "schema": {
                                                "type": "double"
                                              },
                                              "generatedName": "SqliteBatchRequestStatementsItemArgsArgsOneValue",
                                              "groupName": [],
                                              "type": "primitive"
                                            },
                                            {
                                              "schema": {
                                                "type": "boolean"
                                              },
                                              "generatedName": "SqliteBatchRequestStatementsItemArgsArgsOneValue",
                                              "groupName": [],
                                              "type": "primitive"
                                            }
                                          ],
                                          "groupName": [],
                                          "source": {
                                            "file": "../openapi.yml",
                                            "type": "openapi"
                                          },
                                          "inline": true,
                                          "type": "undiscriminated"
                                        },
                                        "type": "oneOf"
                                      },
                                      "groupName": [],
                                      "inline": true,
                                      "type": "nullable"
                                    },
                                    "generatedName": "SqliteBatchRequestStatementsItemArgsArgsOne",
                                    "groupName": [],
                                    "type": "map"
                                  }
                                ],
                                "groupName": [],
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "undiscriminated"
                              },
                              "type": "oneOf"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "description": "A parameterized SQL query. See https://docs.turso.tech/sdk/ts/reference#batch-transactions for reference",
                        "generatedName": "SqliteBatchRequestStatementsItemArgs",
                        "nameOverride": "ParameterizedQuery",
                        "title": "ParameterizedQuery",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "generatedName": "SqliteBatchRequestStatements",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "sqliteBatchRequestMode",
              "key": "mode",
              "schema": {
                "generatedName": "sqliteBatchRequestMode",
                "value": {
                  "generatedName": "SqliteBatchRequestMode",
                  "values": [
                    {
                      "generatedName": "write",
                      "value": "write",
                      "casing": {}
                    },
                    {
                      "generatedName": "read",
                      "value": "read",
                      "casing": {}
                    },
                    {
                      "generatedName": "deferred",
                      "value": "deferred",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A set of statements to be run in a single batch",
          "generatedName": "SqliteBatchRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "value": {
              "statements": [
                "SELECT 1;"
              ],
              "mode": "read"
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Array of results from the statements executed",
        "schema": {
          "description": "Array of results from the statements executed",
          "value": {
            "generatedName": "SqliteBatchResponseItem",
            "schema": "ResultSet",
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "reference"
          },
          "generatedName": "SqliteBatchResponse",
          "groupName": [],
          "type": "array"
        },
        "fullExamples": [
          {
            "value": [
              {
                "columns": [
                  "id"
                ],
                "columnTypes": [
                  "number"
                ],
                "rows": [
                  [
                    1
                  ]
                ],
                "rowsAffected": 0,
                "lastInsertRowid": null
              }
            ]
          }
        ],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Execute a batch of SQLite statements and return results for all of them",
      "authed": true,
      "method": "POST",
      "path": "/v1/sqlite/batch",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "statements": {
                "value": [
                  {
                    "value": {
                      "value": "SELECT 1;",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                ],
                "type": "array"
              },
              "mode": {
                "value": "read",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": [
                {
                  "properties": {
                    "columns": {
                      "value": [
                        {
                          "value": {
                            "value": "id",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "columnTypes": {
                      "value": [
                        {
                          "value": {
                            "value": "number",
                            "type": "string"
                          },
                          "type": "primitive"
                        }
                      ],
                      "type": "array"
                    },
                    "rows": {
                      "value": [
                        {
                          "value": [
                            {
                              "value": {
                                "value": {
                                  "value": 1,
                                  "type": "int"
                                },
                                "type": "primitive"
                              },
                              "type": "unknown"
                            }
                          ],
                          "type": "array"
                        }
                      ],
                      "type": "array"
                    },
                    "rowsAffected": {
                      "value": {
                        "value": 0,
                        "type": "double"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              ],
              "type": "array"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "evalPost",
      "tags": [
        "vals"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EvalPostRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "evalPostRequestCode",
              "key": "code",
              "schema": {
                "description": "TypeScript source code",
                "schema": {
                  "maxLength": 8192,
                  "type": "string"
                },
                "generatedName": "EvalPostRequestCode",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "evalPostRequestArgs",
              "key": "args",
              "schema": {
                "generatedName": "evalPostRequestArgs",
                "value": {
                  "description": "Array of arguments passed to the given function. If this is present, the default export should be a function and will be called with these arguments, and the function result will be returned. If `args` is not present, no function calls are made, but you can still return a value using `export default myVariable`.",
                  "value": {
                    "generatedName": "EvalPostRequestArgsItem",
                    "type": "unknown"
                  },
                  "generatedName": "EvalPostRequestArgs",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "generatedName": "EvalPostRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "example1",
            "value": {
              "code": "export default 1"
            }
          },
          {
            "name": "example2",
            "value": {
              "code": "export default function main(value: number) { return value; }",
              "args": [
                1
              ]
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "EvalPostResponse",
          "value": {
            "value": {
              "generatedName": "EvalPostResponse",
              "schemas": [
                {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EvalPostResponse",
                  "groupName": [],
                  "type": "primitive"
                },
                {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "EvalPostResponse",
                  "groupName": [],
                  "type": "primitive"
                },
                {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EvalPostResponseTwoKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EvalPostResponseTwoValue",
                    "type": "unknown"
                  },
                  "generatedName": "EvalPostResponseTwo",
                  "groupName": [],
                  "type": "map"
                },
                {
                  "value": {
                    "generatedName": "EvalPostResponse",
                    "type": "unknown"
                  },
                  "generatedName": "EvalPostResponse",
                  "groupName": [],
                  "type": "array"
                },
                {
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "EvalPostResponse",
                  "groupName": [],
                  "type": "primitive"
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "undiscriminated"
            },
            "type": "oneOf"
          },
          "groupName": [],
          "type": "nullable"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyType",
                "key": "type",
                "schema": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "generatedName": "BadRequestErrorBodyType",
                  "groupName": [],
                  "type": "literal"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyError",
                "key": "error",
                "schema": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BadRequestErrorBodyError",
                  "groupName": [],
                  "type": "primitive"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Default Response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "type": {
                    "value": {
                      "value": "error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "error": {
                    "value": {
                      "value": "error",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Run JavaScript or TypeScript without saving it permanently as a val",
      "authed": false,
      "method": "POST",
      "path": "/v1/eval",
      "examples": [
        {
          "name": "example1",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "code": {
                "value": {
                  "value": "export default 1",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": {
                "value": "string",
                "type": "string"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        },
        {
          "name": "example2",
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "code": {
                "value": {
                  "value": "export default function main(value: number) { return value; }",
                  "type": "string"
                },
                "type": "primitive"
              },
              "args": {
                "value": [
                  {
                    "value": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "value": {
                "value": "string",
                "type": "string"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "evalGet",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "TypeScript source code",
          "name": "code",
          "schema": {
            "schema": {
              "maxLength": 8192,
              "type": "string"
            },
            "generatedName": "EvalGetRequestCode",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "name": "args",
          "schema": {
            "generatedName": "EvalGetRequestArgs",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "EvalGetRequestArgs",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "EvalGetRequest",
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "EvalGetResponse",
          "value": {
            "value": {
              "generatedName": "EvalGetResponse",
              "schemas": [
                {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EvalGetResponse",
                  "groupName": [],
                  "type": "primitive"
                },
                {
                  "schema": {
                    "type": "double"
                  },
                  "generatedName": "EvalGetResponse",
                  "groupName": [],
                  "type": "primitive"
                },
                {
                  "key": {
                    "schema": {
                      "type": "string"
                    },
                    "generatedName": "EvalGetResponseTwoKey",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "value": {
                    "generatedName": "EvalGetResponseTwoValue",
                    "type": "unknown"
                  },
                  "generatedName": "EvalGetResponseTwo",
                  "groupName": [],
                  "type": "map"
                },
                {
                  "value": {
                    "generatedName": "EvalGetResponse",
                    "type": "unknown"
                  },
                  "generatedName": "EvalGetResponse",
                  "groupName": [],
                  "type": "array"
                },
                {
                  "schema": {
                    "type": "boolean"
                  },
                  "generatedName": "EvalGetResponse",
                  "groupName": [],
                  "type": "primitive"
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "undiscriminated"
            },
            "type": "oneOf"
          },
          "groupName": [],
          "type": "nullable"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "400": {
          "generatedName": "BadRequestError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyType",
                "key": "type",
                "schema": {
                  "value": {
                    "value": "error",
                    "type": "string"
                  },
                  "generatedName": "BadRequestErrorBodyType",
                  "groupName": [],
                  "type": "literal"
                },
                "audiences": []
              },
              {
                "conflict": {},
                "generatedName": "badRequestErrorBodyError",
                "key": "error",
                "schema": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "BadRequestErrorBodyError",
                  "groupName": [],
                  "type": "primitive"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "description": "The function throw an error or had invalid syntax",
            "generatedName": "BadRequestErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "The function throw an error or had invalid syntax",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "type": {
                    "value": {
                      "value": "error",
                      "type": "string"
                    },
                    "type": "literal"
                  },
                  "error": {
                    "value": {
                      "value": "error",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Run JavaScript or TypeScript without saving it permanently as a val",
      "authed": false,
      "method": "GET",
      "path": "/v1/eval/{code}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "code",
              "value": {
                "value": {
                  "value": "code",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "value": {
                "value": "string",
                "type": "string"
              },
              "type": "primitive"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "runGet",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Name of the val, in concatenated style, like username.valname",
          "name": "valname",
          "schema": {
            "schema": {
              "pattern": "^[^.]+.[^.]+$",
              "type": "string"
            },
            "generatedName": "RunGetRequestValname",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "An argument that will be passed to the function as a JavaScript value",
          "name": "args",
          "schema": {
            "generatedName": "RunGetRequestArgs",
            "value": {
              "schema": {
                "type": "string"
              },
              "generatedName": "RunGetRequestArgs",
              "groupName": [],
              "type": "primitive"
            },
            "groupName": [],
            "type": "nullable"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "RunGetRequest",
      "errors": {},
      "server": [],
      "description": "Run a val, specify any parameters in a querystring",
      "authed": false,
      "availability": "Deprecated",
      "method": "GET",
      "path": "/v1/run/{valname}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "valname",
              "value": {
                "value": {
                  "value": "valname",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "runPost",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Name of the val, in concatenated style, like username.valname",
          "name": "valname",
          "schema": {
            "schema": {
              "pattern": "^[^.]+.[^.]+$",
              "type": "string"
            },
            "generatedName": "RunPostRequestValname",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "RunPostRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "runPostRequestArgs",
              "key": "args",
              "schema": {
                "generatedName": "runPostRequestArgs",
                "value": {
                  "value": {
                    "generatedName": "RunPostRequestArgsItem",
                    "type": "unknown"
                  },
                  "generatedName": "RunPostRequestArgs",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Arguments to call the method with",
          "generatedName": "RunPostRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "value": {
              "args": [
                1
              ]
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Run a val, with arguments in the request body",
      "authed": false,
      "availability": "Deprecated",
      "method": "POST",
      "path": "/v1/run/{valname}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "valname",
              "value": {
                "value": {
                  "value": "valname",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "args": {
                "value": [
                  {
                    "value": {
                      "value": {
                        "value": 1,
                        "type": "int"
                      },
                      "type": "primitive"
                    },
                    "type": "unknown"
                  }
                ],
                "type": "array"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "emailsSend",
      "tags": [
        "emails"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "EmailsSendRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailsSendRequestSubject",
              "key": "subject",
              "schema": {
                "generatedName": "emailsSendRequestSubject",
                "value": {
                  "description": "The subject line of the email",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EmailsSendRequestSubject",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestFrom",
              "key": "from",
              "schema": {
                "generatedName": "emailsSendRequestFrom",
                "value": {
                  "value": {
                    "generatedName": "EmailsSendRequestFrom",
                    "title": "EmailData",
                    "nameOverride": "EmailData",
                    "schemas": [
                      {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "EmailsSendRequestFrom",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "emailsSendRequestFromEmailName",
                            "key": "name",
                            "schema": {
                              "generatedName": "emailsSendRequestFromEmailName",
                              "nameOverride": "EmailNameAndAddress",
                              "title": "EmailNameAndAddress",
                              "value": {
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "EmailsSendRequestFromEmailName",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "emailsSendRequestFromEmailEmail",
                            "key": "email",
                            "schema": {
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "EmailsSendRequestFromEmailEmail",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "description": "An email address and name",
                        "generatedName": "EmailsSendRequestFromEmail",
                        "nameOverride": "EmailNameAndAddress",
                        "title": "EmailNameAndAddress",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestTo",
              "key": "to",
              "schema": {
                "generatedName": "emailsSendRequestTo",
                "value": {
                  "value": {
                    "description": "A single email or list of emails for one of the address fields",
                    "generatedName": "EmailsSendRequestTo",
                    "title": "EmailDataInput",
                    "nameOverride": "EmailDataInput",
                    "schemas": [
                      {
                        "value": {
                          "generatedName": "EmailsSendRequestToZero",
                          "title": "EmailData",
                          "nameOverride": "EmailData",
                          "schemas": [
                            {
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "EmailsSendRequestToZero",
                              "groupName": [],
                              "type": "primitive"
                            },
                            {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "emailsSendRequestToZeroEmailName",
                                  "key": "name",
                                  "schema": {
                                    "generatedName": "emailsSendRequestToZeroEmailName",
                                    "nameOverride": "EmailNameAndAddress",
                                    "title": "EmailNameAndAddress",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "EmailsSendRequestToZeroEmailName",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "emailsSendRequestToZeroEmailEmail",
                                  "key": "email",
                                  "schema": {
                                    "schema": {
                                      "type": "string"
                                    },
                                    "generatedName": "EmailsSendRequestToZeroEmailEmail",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "description": "An email address and name",
                              "generatedName": "EmailsSendRequestToZeroEmail",
                              "nameOverride": "EmailNameAndAddress",
                              "title": "EmailNameAndAddress",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            }
                          ],
                          "groupName": [],
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "undiscriminated"
                        },
                        "type": "oneOf"
                      },
                      {
                        "value": {
                          "value": {
                            "generatedName": "EmailsSendRequestToItem",
                            "title": "EmailData",
                            "nameOverride": "EmailData",
                            "schemas": [
                              {
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "EmailsSendRequestToItem",
                                "groupName": [],
                                "type": "primitive"
                              },
                              {
                                "allOf": [],
                                "properties": [
                                  {
                                    "conflict": {},
                                    "generatedName": "emailsSendRequestToItemEmailName",
                                    "key": "name",
                                    "schema": {
                                      "generatedName": "emailsSendRequestToItemEmailName",
                                      "nameOverride": "EmailNameAndAddress",
                                      "title": "EmailNameAndAddress",
                                      "value": {
                                        "schema": {
                                          "type": "string"
                                        },
                                        "generatedName": "EmailsSendRequestToItemEmailName",
                                        "groupName": [],
                                        "type": "primitive"
                                      },
                                      "groupName": [],
                                      "type": "optional"
                                    },
                                    "audiences": []
                                  },
                                  {
                                    "conflict": {},
                                    "generatedName": "emailsSendRequestToItemEmailEmail",
                                    "key": "email",
                                    "schema": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "EmailsSendRequestToItemEmailEmail",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "audiences": []
                                  }
                                ],
                                "allOfPropertyConflicts": [],
                                "description": "An email address and name",
                                "generatedName": "EmailsSendRequestToItemEmail",
                                "nameOverride": "EmailNameAndAddress",
                                "title": "EmailNameAndAddress",
                                "groupName": [],
                                "additionalProperties": false,
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "object"
                              }
                            ],
                            "groupName": [],
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "undiscriminated"
                          },
                          "type": "oneOf"
                        },
                        "generatedName": "EmailsSendRequestTo",
                        "nameOverride": "EmailDataList",
                        "title": "EmailDataList",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestCc",
              "key": "cc",
              "schema": {
                "generatedName": "emailsSendRequestCc",
                "value": {
                  "value": {
                    "description": "A single email or list of emails for one of the address fields",
                    "generatedName": "EmailsSendRequestCc",
                    "title": "EmailDataInput",
                    "nameOverride": "EmailDataInput",
                    "schemas": [
                      {
                        "value": {
                          "generatedName": "EmailsSendRequestCcZero",
                          "title": "EmailData",
                          "nameOverride": "EmailData",
                          "schemas": [
                            {
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "EmailsSendRequestCcZero",
                              "groupName": [],
                              "type": "primitive"
                            },
                            {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "emailsSendRequestCcZeroEmailName",
                                  "key": "name",
                                  "schema": {
                                    "generatedName": "emailsSendRequestCcZeroEmailName",
                                    "nameOverride": "EmailNameAndAddress",
                                    "title": "EmailNameAndAddress",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "EmailsSendRequestCcZeroEmailName",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "emailsSendRequestCcZeroEmailEmail",
                                  "key": "email",
                                  "schema": {
                                    "schema": {
                                      "type": "string"
                                    },
                                    "generatedName": "EmailsSendRequestCcZeroEmailEmail",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "description": "An email address and name",
                              "generatedName": "EmailsSendRequestCcZeroEmail",
                              "nameOverride": "EmailNameAndAddress",
                              "title": "EmailNameAndAddress",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            }
                          ],
                          "groupName": [],
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "undiscriminated"
                        },
                        "type": "oneOf"
                      },
                      {
                        "value": {
                          "value": {
                            "generatedName": "EmailsSendRequestCcItem",
                            "title": "EmailData",
                            "nameOverride": "EmailData",
                            "schemas": [
                              {
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "EmailsSendRequestCcItem",
                                "groupName": [],
                                "type": "primitive"
                              },
                              {
                                "allOf": [],
                                "properties": [
                                  {
                                    "conflict": {},
                                    "generatedName": "emailsSendRequestCcItemEmailName",
                                    "key": "name",
                                    "schema": {
                                      "generatedName": "emailsSendRequestCcItemEmailName",
                                      "nameOverride": "EmailNameAndAddress",
                                      "title": "EmailNameAndAddress",
                                      "value": {
                                        "schema": {
                                          "type": "string"
                                        },
                                        "generatedName": "EmailsSendRequestCcItemEmailName",
                                        "groupName": [],
                                        "type": "primitive"
                                      },
                                      "groupName": [],
                                      "type": "optional"
                                    },
                                    "audiences": []
                                  },
                                  {
                                    "conflict": {},
                                    "generatedName": "emailsSendRequestCcItemEmailEmail",
                                    "key": "email",
                                    "schema": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "EmailsSendRequestCcItemEmailEmail",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "audiences": []
                                  }
                                ],
                                "allOfPropertyConflicts": [],
                                "description": "An email address and name",
                                "generatedName": "EmailsSendRequestCcItemEmail",
                                "nameOverride": "EmailNameAndAddress",
                                "title": "EmailNameAndAddress",
                                "groupName": [],
                                "additionalProperties": false,
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "object"
                              }
                            ],
                            "groupName": [],
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "undiscriminated"
                          },
                          "type": "oneOf"
                        },
                        "generatedName": "EmailsSendRequestCc",
                        "nameOverride": "EmailDataList",
                        "title": "EmailDataList",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestBcc",
              "key": "bcc",
              "schema": {
                "generatedName": "emailsSendRequestBcc",
                "value": {
                  "value": {
                    "description": "A single email or list of emails for one of the address fields",
                    "generatedName": "EmailsSendRequestBcc",
                    "title": "EmailDataInput",
                    "nameOverride": "EmailDataInput",
                    "schemas": [
                      {
                        "value": {
                          "generatedName": "EmailsSendRequestBccZero",
                          "title": "EmailData",
                          "nameOverride": "EmailData",
                          "schemas": [
                            {
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "EmailsSendRequestBccZero",
                              "groupName": [],
                              "type": "primitive"
                            },
                            {
                              "allOf": [],
                              "properties": [
                                {
                                  "conflict": {},
                                  "generatedName": "emailsSendRequestBccZeroEmailName",
                                  "key": "name",
                                  "schema": {
                                    "generatedName": "emailsSendRequestBccZeroEmailName",
                                    "nameOverride": "EmailNameAndAddress",
                                    "title": "EmailNameAndAddress",
                                    "value": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "EmailsSendRequestBccZeroEmailName",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "groupName": [],
                                    "type": "optional"
                                  },
                                  "audiences": []
                                },
                                {
                                  "conflict": {},
                                  "generatedName": "emailsSendRequestBccZeroEmailEmail",
                                  "key": "email",
                                  "schema": {
                                    "schema": {
                                      "type": "string"
                                    },
                                    "generatedName": "EmailsSendRequestBccZeroEmailEmail",
                                    "groupName": [],
                                    "type": "primitive"
                                  },
                                  "audiences": []
                                }
                              ],
                              "allOfPropertyConflicts": [],
                              "description": "An email address and name",
                              "generatedName": "EmailsSendRequestBccZeroEmail",
                              "nameOverride": "EmailNameAndAddress",
                              "title": "EmailNameAndAddress",
                              "groupName": [],
                              "additionalProperties": false,
                              "source": {
                                "file": "../openapi.yml",
                                "type": "openapi"
                              },
                              "type": "object"
                            }
                          ],
                          "groupName": [],
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "undiscriminated"
                        },
                        "type": "oneOf"
                      },
                      {
                        "value": {
                          "value": {
                            "generatedName": "EmailsSendRequestBccItem",
                            "title": "EmailData",
                            "nameOverride": "EmailData",
                            "schemas": [
                              {
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "EmailsSendRequestBccItem",
                                "groupName": [],
                                "type": "primitive"
                              },
                              {
                                "allOf": [],
                                "properties": [
                                  {
                                    "conflict": {},
                                    "generatedName": "emailsSendRequestBccItemEmailName",
                                    "key": "name",
                                    "schema": {
                                      "generatedName": "emailsSendRequestBccItemEmailName",
                                      "nameOverride": "EmailNameAndAddress",
                                      "title": "EmailNameAndAddress",
                                      "value": {
                                        "schema": {
                                          "type": "string"
                                        },
                                        "generatedName": "EmailsSendRequestBccItemEmailName",
                                        "groupName": [],
                                        "type": "primitive"
                                      },
                                      "groupName": [],
                                      "type": "optional"
                                    },
                                    "audiences": []
                                  },
                                  {
                                    "conflict": {},
                                    "generatedName": "emailsSendRequestBccItemEmailEmail",
                                    "key": "email",
                                    "schema": {
                                      "schema": {
                                        "type": "string"
                                      },
                                      "generatedName": "EmailsSendRequestBccItemEmailEmail",
                                      "groupName": [],
                                      "type": "primitive"
                                    },
                                    "audiences": []
                                  }
                                ],
                                "allOfPropertyConflicts": [],
                                "description": "An email address and name",
                                "generatedName": "EmailsSendRequestBccItemEmail",
                                "nameOverride": "EmailNameAndAddress",
                                "title": "EmailNameAndAddress",
                                "groupName": [],
                                "additionalProperties": false,
                                "source": {
                                  "file": "../openapi.yml",
                                  "type": "openapi"
                                },
                                "type": "object"
                              }
                            ],
                            "groupName": [],
                            "source": {
                              "file": "../openapi.yml",
                              "type": "openapi"
                            },
                            "type": "undiscriminated"
                          },
                          "type": "oneOf"
                        },
                        "generatedName": "EmailsSendRequestBcc",
                        "nameOverride": "EmailDataList",
                        "title": "EmailDataList",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestText",
              "key": "text",
              "schema": {
                "generatedName": "emailsSendRequestText",
                "value": {
                  "description": "Text content of the email, for email clients that may not support HTML",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EmailsSendRequestText",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestHtml",
              "key": "html",
              "schema": {
                "generatedName": "emailsSendRequestHtml",
                "value": {
                  "description": "HTML content of the email. Can be specified alongside text",
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "EmailsSendRequestHtml",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestAttachments",
              "key": "attachments",
              "schema": {
                "generatedName": "emailsSendRequestAttachments",
                "value": {
                  "description": "A list of attachments to add to the email",
                  "value": {
                    "allOf": [],
                    "properties": [
                      {
                        "conflict": {},
                        "generatedName": "emailsSendRequestAttachmentsItemContent",
                        "key": "content",
                        "schema": {
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "EmailsSendRequestAttachmentsItemContent",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "emailsSendRequestAttachmentsItemFilename",
                        "key": "filename",
                        "schema": {
                          "schema": {
                            "type": "string"
                          },
                          "generatedName": "EmailsSendRequestAttachmentsItemFilename",
                          "groupName": [],
                          "type": "primitive"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "emailsSendRequestAttachmentsItemType",
                        "key": "type",
                        "schema": {
                          "generatedName": "emailsSendRequestAttachmentsItemType",
                          "nameOverride": "AttachmentObject",
                          "title": "AttachmentObject",
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "EmailsSendRequestAttachmentsItemType",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "emailsSendRequestAttachmentsItemDisposition",
                        "key": "disposition",
                        "schema": {
                          "generatedName": "emailsSendRequestAttachmentsItemDisposition",
                          "nameOverride": "AttachmentObject",
                          "title": "AttachmentObject",
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "EmailsSendRequestAttachmentsItemDisposition",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      },
                      {
                        "conflict": {},
                        "generatedName": "emailsSendRequestAttachmentsItemContentId",
                        "key": "contentId",
                        "schema": {
                          "generatedName": "emailsSendRequestAttachmentsItemContentId",
                          "nameOverride": "AttachmentObject",
                          "title": "AttachmentObject",
                          "value": {
                            "schema": {
                              "type": "string"
                            },
                            "generatedName": "EmailsSendRequestAttachmentsItemContentId",
                            "groupName": [],
                            "type": "primitive"
                          },
                          "groupName": [],
                          "type": "optional"
                        },
                        "audiences": []
                      }
                    ],
                    "allOfPropertyConflicts": [],
                    "generatedName": "EmailsSendRequestAttachmentsItem",
                    "nameOverride": "AttachmentObject",
                    "title": "AttachmentObject",
                    "groupName": [],
                    "additionalProperties": false,
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "object"
                  },
                  "generatedName": "EmailsSendRequestAttachments",
                  "groupName": [],
                  "type": "array"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "emailsSendRequestReplyToList",
              "key": "replyToList",
              "schema": {
                "generatedName": "emailsSendRequestReplyToList",
                "value": {
                  "value": {
                    "description": "A reply-to list of email addresses",
                    "generatedName": "EmailsSendRequestReplyToList",
                    "title": "ReplyToList",
                    "nameOverride": "ReplyToList",
                    "schemas": [
                      {
                        "allOf": [],
                        "properties": [
                          {
                            "conflict": {},
                            "generatedName": "emailsSendRequestReplyToListEmailName",
                            "key": "name",
                            "schema": {
                              "generatedName": "emailsSendRequestReplyToListEmailName",
                              "nameOverride": "EmailNameAndAddress",
                              "title": "EmailNameAndAddress",
                              "value": {
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "EmailsSendRequestReplyToListEmailName",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "groupName": [],
                              "type": "optional"
                            },
                            "audiences": []
                          },
                          {
                            "conflict": {},
                            "generatedName": "emailsSendRequestReplyToListEmailEmail",
                            "key": "email",
                            "schema": {
                              "schema": {
                                "type": "string"
                              },
                              "generatedName": "EmailsSendRequestReplyToListEmailEmail",
                              "groupName": [],
                              "type": "primitive"
                            },
                            "audiences": []
                          }
                        ],
                        "allOfPropertyConflicts": [],
                        "description": "An email address and name",
                        "generatedName": "EmailsSendRequestReplyToListEmail",
                        "nameOverride": "EmailNameAndAddress",
                        "title": "EmailNameAndAddress",
                        "groupName": [],
                        "additionalProperties": false,
                        "source": {
                          "file": "../openapi.yml",
                          "type": "openapi"
                        },
                        "type": "object"
                      },
                      {
                        "value": {
                          "allOf": [],
                          "properties": [
                            {
                              "conflict": {},
                              "generatedName": "emailsSendRequestReplyToListItemName",
                              "key": "name",
                              "schema": {
                                "generatedName": "emailsSendRequestReplyToListItemName",
                                "nameOverride": "EmailNameAndAddress",
                                "title": "EmailNameAndAddress",
                                "value": {
                                  "schema": {
                                    "type": "string"
                                  },
                                  "generatedName": "EmailsSendRequestReplyToListItemName",
                                  "groupName": [],
                                  "type": "primitive"
                                },
                                "groupName": [],
                                "type": "optional"
                              },
                              "audiences": []
                            },
                            {
                              "conflict": {},
                              "generatedName": "emailsSendRequestReplyToListItemEmail",
                              "key": "email",
                              "schema": {
                                "schema": {
                                  "type": "string"
                                },
                                "generatedName": "EmailsSendRequestReplyToListItemEmail",
                                "groupName": [],
                                "type": "primitive"
                              },
                              "audiences": []
                            }
                          ],
                          "allOfPropertyConflicts": [],
                          "description": "An email address and name",
                          "generatedName": "EmailsSendRequestReplyToListItem",
                          "nameOverride": "EmailNameAndAddress",
                          "title": "EmailNameAndAddress",
                          "groupName": [],
                          "additionalProperties": false,
                          "source": {
                            "file": "../openapi.yml",
                            "type": "openapi"
                          },
                          "type": "object"
                        },
                        "generatedName": "EmailsSendRequestReplyToList",
                        "nameOverride": "EmailList",
                        "title": "EmailList",
                        "groupName": [],
                        "type": "array"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Fields for an email to be sent",
          "generatedName": "EmailsSendRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "value": {
              "subject": "An important message",
              "text": "Hello world",
              "html": "Hello <strong>world</strong>"
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Successfully sent email",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "emailsSendResponseMessage",
              "key": "message",
              "schema": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "EmailsSendResponseMessage",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Successfully sent email",
          "generatedName": "EmailsSendResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "500": {
          "generatedName": "InternalServerError",
          "schema": {
            "allOf": [],
            "properties": [
              {
                "conflict": {},
                "generatedName": "internalServerErrorBodyError",
                "key": "error",
                "schema": {
                  "schema": {
                    "type": "string"
                  },
                  "generatedName": "InternalServerErrorBodyError",
                  "groupName": [],
                  "type": "primitive"
                },
                "audiences": []
              }
            ],
            "allOfPropertyConflicts": [],
            "generatedName": "InternalServerErrorBody",
            "groupName": [],
            "additionalProperties": false,
            "source": {
              "file": "../openapi.yml",
              "type": "openapi"
            },
            "type": "object"
          },
          "description": "Default Response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "properties": {
                  "error": {
                    "value": {
                      "value": "error",
                      "type": "string"
                    },
                    "type": "primitive"
                  }
                },
                "type": "object"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Send emails",
      "authed": true,
      "method": "POST",
      "path": "/v1/email",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "subject": {
                "value": {
                  "value": "An important message",
                  "type": "string"
                },
                "type": "primitive"
              },
              "text": {
                "value": {
                  "value": "Hello world",
                  "type": "string"
                },
                "type": "primitive"
              },
              "html": {
                "value": {
                  "value": "Hello <strong>world</strong>",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "message": {
                  "value": {
                    "value": "message",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsCreate",
      "tags": [
        "vals"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsCreateRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "valsCreateRequestCode",
              "key": "code",
              "schema": {
                "description": "Val source code as TypeScript",
                "schema": {
                  "minLength": 1,
                  "maxLength": 256000,
                  "type": "string"
                },
                "generatedName": "ValsCreateRequestCode",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateRequestName",
              "key": "name",
              "schema": {
                "generatedName": "valsCreateRequestName",
                "value": {
                  "description": "This valâ€™s name",
                  "schema": {
                    "minLength": 1,
                    "maxLength": 48,
                    "type": "string"
                  },
                  "generatedName": "ValsCreateRequestName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateRequestReadme",
              "key": "readme",
              "schema": {
                "generatedName": "valsCreateRequestReadme",
                "value": {
                  "description": "Readme contents, as Markdown",
                  "schema": {
                    "maxLength": 8192,
                    "type": "string"
                  },
                  "generatedName": "ValsCreateRequestReadme",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateRequestPrivacy",
              "key": "privacy",
              "schema": {
                "generatedName": "valsCreateRequestPrivacy",
                "value": {
                  "description": "This valâ€™s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                  "generatedName": "ValsCreateRequestPrivacy",
                  "values": [
                    {
                      "generatedName": "public",
                      "value": "public",
                      "casing": {}
                    },
                    {
                      "generatedName": "unlisted",
                      "value": "unlisted",
                      "casing": {}
                    },
                    {
                      "generatedName": "private",
                      "value": "private",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateRequestType",
              "key": "type",
              "schema": {
                "generatedName": "valsCreateRequestType",
                "value": {
                  "description": "The type of the val you want to create. Note that this does not include interval vals, because they cannot be created through the API yet.",
                  "generatedName": "ValsCreateRequestType",
                  "values": [
                    {
                      "generatedName": "http",
                      "value": "http",
                      "casing": {}
                    },
                    {
                      "generatedName": "script",
                      "value": "script",
                      "casing": {}
                    },
                    {
                      "generatedName": "email",
                      "value": "email",
                      "casing": {}
                    }
                  ],
                  "default": {
                    "generatedName": "script",
                    "value": "script",
                    "casing": {}
                  },
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Val information provided to create a new val",
          "generatedName": "ValsCreateRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "value": {
              "code": "console.log(1);",
              "name": "myVal",
              "readme": "# My Val",
              "privacy": "public",
              "type": "script"
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "ValsCreateResponse",
          "schema": "ExtendedVal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Create a new val",
      "authed": true,
      "method": "POST",
      "path": "/v1/vals",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "code": {
                "value": {
                  "value": "console.log(1);",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "myVal",
                  "type": "string"
                },
                "type": "primitive"
              },
              "readme": {
                "value": {
                  "value": "# My Val",
                  "type": "string"
                },
                "type": "primitive"
              },
              "privacy": {
                "value": "public",
                "type": "enum"
              },
              "type": {
                "value": "script",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "code": {
                  "value": {
                    "value": "code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "public": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "createdAt": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "privacy": {
                  "value": "public",
                  "type": "enum"
                },
                "type": {
                  "value": "interval",
                  "type": "enum"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "versions": {
                      "value": {
                        "value": "versions",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "module": {
                      "value": {
                        "value": "module",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "author": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "likeCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "referenceCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "readme": {
                  "value": {
                    "value": "readme",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsPut",
      "tags": [
        "vals"
      ],
      "pathParameters": [],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsPutRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "valsPutRequestCode",
              "key": "code",
              "schema": {
                "description": "Val source code as TypeScript",
                "schema": {
                  "minLength": 1,
                  "maxLength": 256000,
                  "type": "string"
                },
                "generatedName": "ValsPutRequestCode",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsPutRequestName",
              "key": "name",
              "schema": {
                "description": "This valâ€™s name",
                "schema": {
                  "minLength": 1,
                  "maxLength": 48,
                  "type": "string"
                },
                "generatedName": "ValsPutRequestName",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Create a new val, or version of a val, with new code",
          "generatedName": "ValsPutRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "value": {
              "code": "console.log(1);",
              "name": "myVal"
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Run an existing val or create a new one",
      "authed": true,
      "method": "PUT",
      "path": "/v1/vals",
      "examples": [
        {
          "pathParameters": [],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "code": {
                "value": {
                  "value": "console.log(1);",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "myVal",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsGet",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsGetRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsGetRequest",
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "ValsGetResponse",
          "schema": "ExtendedVal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get a val by id",
      "authed": false,
      "method": "GET",
      "path": "/v1/vals/{val_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "code": {
                  "value": {
                    "value": "code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "public": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "createdAt": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "privacy": {
                  "value": "public",
                  "type": "enum"
                },
                "type": {
                  "value": "interval",
                  "type": "enum"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "versions": {
                      "value": {
                        "value": "versions",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "module": {
                      "value": {
                        "value": "module",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "author": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "likeCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "referenceCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "readme": {
                  "value": {
                    "value": "readme",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsUpdate",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsUpdateRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsUpdateRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "valsUpdateRequestName",
              "key": "name",
              "schema": {
                "generatedName": "valsUpdateRequestName",
                "value": {
                  "description": "This valâ€™s name",
                  "schema": {
                    "minLength": 1,
                    "maxLength": 48,
                    "type": "string"
                  },
                  "generatedName": "ValsUpdateRequestName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsUpdateRequestReadme",
              "key": "readme",
              "schema": {
                "generatedName": "valsUpdateRequestReadme",
                "value": {
                  "description": "Readme contents, as Markdown",
                  "schema": {
                    "maxLength": 8192,
                    "type": "string"
                  },
                  "generatedName": "ValsUpdateRequestReadme",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsUpdateRequestPrivacy",
              "key": "privacy",
              "schema": {
                "generatedName": "valsUpdateRequestPrivacy",
                "value": {
                  "description": "This valâ€™s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                  "generatedName": "ValsUpdateRequestPrivacy",
                  "values": [
                    {
                      "generatedName": "public",
                      "value": "public",
                      "casing": {}
                    },
                    {
                      "generatedName": "unlisted",
                      "value": "unlisted",
                      "casing": {}
                    },
                    {
                      "generatedName": "private",
                      "value": "private",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsUpdateRequestType",
              "key": "type",
              "schema": {
                "generatedName": "valsUpdateRequestType",
                "value": {
                  "description": "The type of the val you want to update. Note that this does not include interval vals, because they cannot be created through the API yet.",
                  "generatedName": "ValsUpdateRequestType",
                  "values": [
                    {
                      "generatedName": "http",
                      "value": "http",
                      "casing": {}
                    },
                    {
                      "generatedName": "script",
                      "value": "script",
                      "casing": {}
                    },
                    {
                      "generatedName": "email",
                      "value": "email",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Note: you must supply at least one of the keys in this object in order to update a val",
          "generatedName": "ValsUpdateRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "name": "example1",
            "value": {
              "readme": "# Updated readme",
              "name": "myVal"
            }
          },
          {
            "name": "example2",
            "value": {
              "type": "http"
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Update an existing val",
      "authed": true,
      "method": "PUT",
      "path": "/v1/vals/{val_id}",
      "examples": [
        {
          "name": "example1",
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "name": {
                "value": {
                  "value": "myVal",
                  "type": "string"
                },
                "type": "primitive"
              },
              "readme": {
                "value": {
                  "value": "# Updated readme",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        },
        {
          "name": "example2",
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "type": {
                "value": "http",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsDelete",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsDeleteRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsDeleteRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "The val was not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Delete a val",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/vals/{val_id}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsList",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsListRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Number of items to skip in order to deliver paginated results",
          "name": "offset",
          "schema": {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "ValsListRequestOffset",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Maximum items to return in each paginated response",
          "name": "limit",
          "schema": {
            "schema": {
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "type": "int"
            },
            "generatedName": "ValsListRequestLimit",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ValsListRequest",
      "response": {
        "description": "A paginated result set",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "valsListResponseData",
              "key": "data",
              "schema": {
                "value": {
                  "allOf": [],
                  "properties": [
                    {
                      "conflict": {},
                      "generatedName": "valsListResponseDataItemValId",
                      "key": "val_id",
                      "schema": {
                        "description": "Id of a val",
                        "schema": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "generatedName": "ValsListResponseDataItemValId",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "valsListResponseDataItemVersion",
                      "key": "version",
                      "schema": {
                        "description": "Version of the val",
                        "schema": {
                          "minimum": 0,
                          "type": "int"
                        },
                        "generatedName": "ValsListResponseDataItemVersion",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    },
                    {
                      "conflict": {},
                      "generatedName": "valsListResponseDataItemCreatedAt",
                      "key": "createdAt",
                      "schema": {
                        "schema": {
                          "type": "datetime"
                        },
                        "generatedName": "ValsListResponseDataItemCreatedAt",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "audiences": []
                    }
                  ],
                  "allOfPropertyConflicts": [],
                  "generatedName": "ValsListResponseDataItem",
                  "groupName": [],
                  "additionalProperties": false,
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "object"
                },
                "generatedName": "ValsListResponseData",
                "groupName": [],
                "type": "array"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsListResponseLinks",
              "key": "links",
              "schema": {
                "generatedName": "ValsListResponseLinks",
                "schema": "PaginationLinks",
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "reference"
              },
              "audiences": [],
              "readonly": false
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "A paginated result set",
          "generatedName": "ValsListResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "List versions of a val",
      "authed": false,
      "method": "GET",
      "path": "/v1/vals/{val_id}/versions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "offset",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "limit",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "data": {
                  "value": [
                    {
                      "properties": {
                        "val_id": {
                          "value": {
                            "value": "val_id",
                            "type": "string"
                          },
                          "type": "primitive"
                        },
                        "version": {
                          "value": {
                            "value": 1,
                            "type": "int"
                          },
                          "type": "primitive"
                        },
                        "createdAt": {
                          "value": {
                            "value": "2024-01-15T09:30:00Z",
                            "type": "datetime"
                          },
                          "type": "primitive"
                        }
                      },
                      "type": "object"
                    }
                  ],
                  "type": "array"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "prev": {
                      "value": {
                        "value": "prev",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "next": {
                      "value": {
                        "value": "next",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsCreateVersion",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsCreateVersionRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsCreateVersionRequest",
      "request": {
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "valsCreateVersionRequestCode",
              "key": "code",
              "schema": {
                "description": "Val source code as TypeScript",
                "schema": {
                  "minLength": 1,
                  "maxLength": 256000,
                  "type": "string"
                },
                "generatedName": "ValsCreateVersionRequestCode",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateVersionRequestName",
              "key": "name",
              "schema": {
                "generatedName": "valsCreateVersionRequestName",
                "value": {
                  "description": "This valâ€™s name",
                  "schema": {
                    "minLength": 1,
                    "maxLength": 48,
                    "type": "string"
                  },
                  "generatedName": "ValsCreateVersionRequestName",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateVersionRequestReadme",
              "key": "readme",
              "schema": {
                "generatedName": "valsCreateVersionRequestReadme",
                "value": {
                  "description": "Readme contents, as Markdown",
                  "schema": {
                    "maxLength": 8192,
                    "type": "string"
                  },
                  "generatedName": "ValsCreateVersionRequestReadme",
                  "groupName": [],
                  "type": "primitive"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateVersionRequestPrivacy",
              "key": "privacy",
              "schema": {
                "generatedName": "valsCreateVersionRequestPrivacy",
                "value": {
                  "description": "This valâ€™s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
                  "generatedName": "ValsCreateVersionRequestPrivacy",
                  "values": [
                    {
                      "generatedName": "public",
                      "value": "public",
                      "casing": {}
                    },
                    {
                      "generatedName": "unlisted",
                      "value": "unlisted",
                      "casing": {}
                    },
                    {
                      "generatedName": "private",
                      "value": "private",
                      "casing": {}
                    }
                  ],
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            },
            {
              "conflict": {},
              "generatedName": "valsCreateVersionRequestType",
              "key": "type",
              "schema": {
                "generatedName": "valsCreateVersionRequestType",
                "value": {
                  "description": "The type of the val you want to create. Note that this does not include interval vals, because they cannot be created through the API yet.",
                  "generatedName": "ValsCreateVersionRequestType",
                  "values": [
                    {
                      "generatedName": "http",
                      "value": "http",
                      "casing": {}
                    },
                    {
                      "generatedName": "script",
                      "value": "script",
                      "casing": {}
                    },
                    {
                      "generatedName": "email",
                      "value": "email",
                      "casing": {}
                    }
                  ],
                  "default": {
                    "generatedName": "script",
                    "value": "script",
                    "casing": {}
                  },
                  "groupName": [],
                  "source": {
                    "file": "../openapi.yml",
                    "type": "openapi"
                  },
                  "type": "enum"
                },
                "groupName": [],
                "type": "optional"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "Val information provided to create a new val",
          "generatedName": "ValsCreateVersionRequest",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "contentType": "application/json",
        "fullExamples": [
          {
            "value": {
              "code": "console.log(1);",
              "name": "myVal",
              "readme": "# My Val",
              "privacy": "public",
              "type": "script"
            }
          }
        ],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "json"
      },
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "ValsCreateVersionResponse",
          "schema": "ExtendedVal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 201,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Create a new version of a val",
      "authed": true,
      "method": "POST",
      "path": "/v1/vals/{val_id}/versions",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "request": {
            "properties": {
              "code": {
                "value": {
                  "value": "console.log(1);",
                  "type": "string"
                },
                "type": "primitive"
              },
              "name": {
                "value": {
                  "value": "myVal",
                  "type": "string"
                },
                "type": "primitive"
              },
              "readme": {
                "value": {
                  "value": "# My Val",
                  "type": "string"
                },
                "type": "primitive"
              },
              "privacy": {
                "value": "public",
                "type": "enum"
              },
              "type": {
                "value": "script",
                "type": "enum"
              }
            },
            "type": "object"
          },
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "code": {
                  "value": {
                    "value": "code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "public": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "createdAt": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "privacy": {
                  "value": "public",
                  "type": "enum"
                },
                "type": {
                  "value": "interval",
                  "type": "enum"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "versions": {
                      "value": {
                        "value": "versions",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "module": {
                      "value": {
                        "value": "module",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "author": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "likeCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "referenceCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "readme": {
                  "value": {
                    "value": "readme",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsGetVersion",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsGetVersionRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The val version",
          "name": "version",
          "schema": {
            "schema": {
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "ValsGetVersionRequestVersion",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [
        {
          "description": "Number of items to skip in order to deliver paginated results",
          "name": "offset",
          "schema": {
            "schema": {
              "default": 0,
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "ValsGetVersionRequestOffset",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "Maximum items to return in each paginated response",
          "name": "limit",
          "schema": {
            "schema": {
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "type": "int"
            },
            "generatedName": "ValsGetVersionRequestLimit",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "headers": [],
      "generatedRequestName": "ValsGetVersionRequest",
      "response": {
        "description": "Default Response",
        "schema": {
          "generatedName": "ValsGetVersionResponse",
          "schema": "ExtendedVal",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "reference"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {},
      "server": [],
      "description": "Get a specific version of a val",
      "authed": false,
      "method": "GET",
      "path": "/v1/vals/{val_id}/versions/{version}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [
            {
              "name": "offset",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            },
            {
              "name": "limit",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "name": {
                  "value": {
                    "value": "name",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "id": {
                  "value": {
                    "value": "id",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "version": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "code": {
                  "value": {
                    "value": "code",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "public": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                },
                "createdAt": {
                  "value": {
                    "value": "2024-01-15T09:30:00Z",
                    "type": "datetime"
                  },
                  "type": "primitive"
                },
                "privacy": {
                  "value": "public",
                  "type": "enum"
                },
                "type": {
                  "value": "interval",
                  "type": "enum"
                },
                "url": {
                  "value": {
                    "value": "url",
                    "type": "string"
                  },
                  "type": "primitive"
                },
                "links": {
                  "properties": {
                    "self": {
                      "value": {
                        "value": "self",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "versions": {
                      "value": {
                        "value": "versions",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "module": {
                      "value": {
                        "value": "module",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "author": {
                  "properties": {
                    "id": {
                      "value": {
                        "value": "id",
                        "type": "string"
                      },
                      "type": "primitive"
                    },
                    "username": {
                      "value": {
                        "value": "username",
                        "type": "string"
                      },
                      "type": "primitive"
                    }
                  },
                  "type": "object"
                },
                "likeCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "referenceCount": {
                  "value": {
                    "value": 1,
                    "type": "int"
                  },
                  "type": "primitive"
                },
                "readme": {
                  "value": {
                    "value": "readme",
                    "type": "string"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsDeleteVersion",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsDeleteVersionRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The val version",
          "name": "version",
          "schema": {
            "schema": {
              "minimum": 0,
              "type": "int"
            },
            "generatedName": "ValsDeleteVersionRequestVersion",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsDeleteVersionRequest",
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "generatedName": "NotFoundErrorBody",
            "type": "unknown"
          },
          "description": "The val was not found",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      },
      "server": [],
      "description": "Delete a specific version of a val",
      "authed": true,
      "method": "DELETE",
      "path": "/v1/vals/{val_id}/versions/{version}",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "version",
              "value": {
                "value": {
                  "value": 1,
                  "type": "int"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    },
    {
      "audiences": [],
      "operationId": "valsCancel",
      "tags": [
        "vals"
      ],
      "pathParameters": [
        {
          "description": "Id of a val",
          "name": "val_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsCancelRequestValId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        },
        {
          "description": "The ID of the evaluation - the specific time that a val was run - that you want to cancel",
          "name": "evaluation_id",
          "schema": {
            "schema": {
              "format": "uuid",
              "type": "string"
            },
            "generatedName": "ValsCancelRequestEvaluationId",
            "groupName": [],
            "type": "primitive"
          },
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          }
        }
      ],
      "queryParameters": [],
      "headers": [],
      "generatedRequestName": "ValsCancelRequest",
      "response": {
        "description": "The evaluation_id was successfully searched for and the evaluation was either already done or now has been cancelled",
        "schema": {
          "allOf": [],
          "properties": [
            {
              "conflict": {},
              "generatedName": "valsCancelResponseFound",
              "key": "found",
              "schema": {
                "description": "True if the evaluation was found and cancelled",
                "schema": {
                  "type": "boolean"
                },
                "generatedName": "ValsCancelResponseFound",
                "groupName": [],
                "type": "primitive"
              },
              "audiences": []
            }
          ],
          "allOfPropertyConflicts": [],
          "description": "The evaluation_id was successfully searched for and the evaluation was either already done or now has been cancelled",
          "generatedName": "ValsCancelResponse",
          "groupName": [],
          "additionalProperties": false,
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "type": "object"
        },
        "fullExamples": [],
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "statusCode": 200,
        "type": "json"
      },
      "errors": {
        "404": {
          "generatedName": "NotFoundError",
          "schema": {
            "schema": {
              "type": "string"
            },
            "generatedName": "NotFoundErrorBody",
            "groupName": [],
            "type": "primitive"
          },
          "description": "Default Response",
          "source": {
            "file": "../openapi.yml",
            "type": "openapi"
          },
          "examples": [
            {
              "example": {
                "value": {
                  "value": "string",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ]
        }
      },
      "server": [],
      "description": "Cancel a running val",
      "authed": true,
      "method": "POST",
      "path": "/v1/vals/{val_id}/evaluations/{evaluation_id}/cancel",
      "examples": [
        {
          "pathParameters": [
            {
              "name": "val_id",
              "value": {
                "value": {
                  "value": "val_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            },
            {
              "name": "evaluation_id",
              "value": {
                "value": {
                  "value": "evaluation_id",
                  "type": "string"
                },
                "type": "primitive"
              }
            }
          ],
          "queryParameters": [],
          "headers": [],
          "response": {
            "value": {
              "properties": {
                "found": {
                  "value": {
                    "value": true,
                    "type": "boolean"
                  },
                  "type": "primitive"
                }
              },
              "type": "object"
            },
            "type": "withoutStreaming"
          },
          "codeSamples": [],
          "type": "full"
        }
      ],
      "source": {
        "file": "../openapi.yml",
        "type": "openapi"
      }
    }
  ],
  "webhooks": [],
  "channel": [],
  "groupedSchemas": {
    "rootSchemas": {
      "User": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "userId",
            "key": "id",
            "schema": {
              "description": "The ID of this user",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "UserId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userBio",
            "key": "bio",
            "schema": {
              "generatedName": "UserBio",
              "value": {
                "description": "The userâ€™s biography, if they have provided one",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserBio",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userUsername",
            "key": "username",
            "schema": {
              "generatedName": "UserUsername",
              "value": {
                "description": "The userâ€™s handle that they chose for themselves. Does not include the @ symbol",
                "schema": {
                  "type": "string"
                },
                "generatedName": "UserUsername",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userProfileImageUrl",
            "key": "profileImageUrl",
            "schema": {
              "generatedName": "UserProfileImageUrl",
              "value": {
                "description": "URL that points to the userâ€™s profile image, if one exists",
                "schema": {
                  "format": "uri",
                  "type": "string"
                },
                "generatedName": "UserProfileImageUrl",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userUrl",
            "key": "url",
            "schema": {
              "description": "URL of this userâ€™s profile on Val Townâ€™s website",
              "schema": {
                "format": "uri",
                "type": "string"
              },
              "generatedName": "UserUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "userLinks",
            "key": "links",
            "schema": {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "userLinksSelf",
                  "key": "self",
                  "schema": {
                    "description": "URL of this user on this API",
                    "schema": {
                      "format": "uri",
                      "type": "string"
                    },
                    "generatedName": "UserLinksSelf",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "UserLinks",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "User object",
        "generatedName": "User",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ResultSet": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "resultSetColumns",
            "key": "columns",
            "schema": {
              "description": "Names of columns.\n\nNames of columns can be defined using the `AS` keyword in SQL:\n\n```sql\nSELECT author AS author, COUNT(*) AS count FROM books GROUP BY author\n```",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResultSetColumnsItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ResultSetColumns",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resultSetColumnTypes",
            "key": "columnTypes",
            "schema": {
              "description": "Types of columns.\n\nThe types are currently shown for types declared in a SQL table. For column types of function calls, for example, an empty string is returned.",
              "value": {
                "schema": {
                  "type": "string"
                },
                "generatedName": "ResultSetColumnTypesItem",
                "groupName": [],
                "type": "primitive"
              },
              "generatedName": "ResultSetColumnTypes",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resultSetRows",
            "key": "rows",
            "schema": {
              "description": "Rows produced by the statement.",
              "value": {
                "value": {
                  "generatedName": "ResultSetRowsItemItem",
                  "type": "unknown"
                },
                "generatedName": "ResultSetRowsItem",
                "nameOverride": "TursoRow",
                "title": "TursoRow",
                "groupName": [],
                "type": "array"
              },
              "generatedName": "ResultSetRows",
              "groupName": [],
              "type": "array"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resultSetRowsAffected",
            "key": "rowsAffected",
            "schema": {
              "description": "Number of rows that were affected by an UPDATE, INSERT or DELETE operation.\n\nThis value is not specified for other SQL statements.",
              "schema": {
                "type": "double"
              },
              "generatedName": "ResultSetRowsAffected",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "resultSetLastInsertRowid",
            "key": "lastInsertRowid",
            "schema": {
              "generatedName": "resultSetLastInsertRowid",
              "nameOverride": "ResultSet",
              "title": "ResultSet",
              "value": {
                "generatedName": "ResultSetLastInsertRowid",
                "description": "ROWID of the last inserted row.\n\nThis value is not specified if the SQL statement was not an INSERT or if the table was not a ROWID table.",
                "value": {
                  "value": {
                    "description": "ROWID of the last inserted row.\n\nThis value is not specified if the SQL statement was not an INSERT or if the table was not a ROWID table.",
                    "generatedName": "ResultSetLastInsertRowid",
                    "schemas": [
                      {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "ResultSetLastInsertRowid",
                        "groupName": [],
                        "type": "primitive"
                      },
                      {
                        "schema": {
                          "type": "double"
                        },
                        "generatedName": "ResultSetLastInsertRowid",
                        "groupName": [],
                        "type": "primitive"
                      }
                    ],
                    "groupName": [],
                    "source": {
                      "file": "../openapi.yml",
                      "type": "openapi"
                    },
                    "type": "undiscriminated"
                  },
                  "type": "oneOf"
                },
                "groupName": [],
                "type": "nullable"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Result of executing an SQL statement.",
        "generatedName": "ResultSet",
        "nameOverride": "ResultSet",
        "title": "ResultSet",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "ExtendedVal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "extendedValName",
            "key": "name",
            "schema": {
              "description": "The name of this val",
              "schema": {
                "type": "string"
              },
              "generatedName": "ExtendedValName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValId",
            "key": "id",
            "schema": {
              "description": "This valâ€™s id",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "ExtendedValId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValVersion",
            "key": "version",
            "schema": {
              "description": "The version of this val, starting at zero",
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "ExtendedValVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValCode",
            "key": "code",
            "schema": {
              "generatedName": "ExtendedValCode",
              "value": {
                "description": "TypeScript code associated with this val",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ExtendedValCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValPublic",
            "key": "public",
            "schema": {
              "description": "Whether this val is available publicly on Val Town",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "ExtendedValPublic",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValCreatedAt",
            "key": "createdAt",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "ExtendedValCreatedAt",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValPrivacy",
            "key": "privacy",
            "schema": {
              "description": "This valâ€™s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
              "generatedName": "ExtendedValPrivacy",
              "values": [
                {
                  "generatedName": "public",
                  "value": "public",
                  "casing": {}
                },
                {
                  "generatedName": "unlisted",
                  "value": "unlisted",
                  "casing": {}
                },
                {
                  "generatedName": "private",
                  "value": "private",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValType",
            "key": "type",
            "schema": {
              "description": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
              "generatedName": "ExtendedValType",
              "values": [
                {
                  "generatedName": "interval",
                  "value": "interval",
                  "casing": {}
                },
                {
                  "generatedName": "http",
                  "value": "http",
                  "casing": {}
                },
                {
                  "generatedName": "express",
                  "value": "express",
                  "casing": {}
                },
                {
                  "generatedName": "email",
                  "value": "email",
                  "casing": {}
                },
                {
                  "generatedName": "script",
                  "value": "script",
                  "casing": {}
                },
                {
                  "generatedName": "rpc",
                  "value": "rpc",
                  "casing": {}
                },
                {
                  "generatedName": "httpnext",
                  "value": "httpnext",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValUrl",
            "key": "url",
            "schema": {
              "description": "The URL of this val on the Val Town website",
              "schema": {
                "format": "uri",
                "type": "string"
              },
              "generatedName": "ExtendedValUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValLinks",
            "key": "links",
            "schema": {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "extendedValLinksSelf",
                  "key": "self",
                  "schema": {
                    "description": "The URL of this val on this API",
                    "schema": {
                      "format": "uri",
                      "type": "string"
                    },
                    "generatedName": "ExtendedValLinksSelf",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "extendedValLinksVersions",
                  "key": "versions",
                  "schema": {
                    "description": "The endpoint to retrieve this valâ€™s versions",
                    "schema": {
                      "format": "uri",
                      "type": "string"
                    },
                    "generatedName": "ExtendedValLinksVersions",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "extendedValLinksModule",
                  "key": "module",
                  "schema": {
                    "description": "The URL of this Valâ€™s source code as a module",
                    "schema": {
                      "format": "uri",
                      "type": "string"
                    },
                    "generatedName": "ExtendedValLinksModule",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "ExtendedValLinks",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValAuthor",
            "key": "author",
            "schema": {
              "generatedName": "ExtendedValAuthor",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "extendedValAuthorId",
                    "key": "id",
                    "schema": {
                      "schema": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "generatedName": "ExtendedValAuthorId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "extendedValAuthorUsername",
                    "key": "username",
                    "schema": {
                      "generatedName": "ExtendedValAuthorUsername",
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "ExtendedValAuthorUsername",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "nullable"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "description": "The user who created this val",
                "generatedName": "ExtendedValAuthor",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValLikeCount",
            "key": "likeCount",
            "schema": {
              "description": "How many likes this val has received",
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "ExtendedValLikeCount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValReferenceCount",
            "key": "referenceCount",
            "schema": {
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "ExtendedValReferenceCount",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "extendedValReadme",
            "key": "readme",
            "schema": {
              "generatedName": "ExtendedValReadme",
              "value": {
                "description": "This valâ€™s readme, as Markdown",
                "schema": {
                  "type": "string"
                },
                "generatedName": "ExtendedValReadme",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A Val",
        "generatedName": "ExtendedVal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "BasicVal": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "basicValName",
            "key": "name",
            "schema": {
              "description": "The name of this val",
              "schema": {
                "type": "string"
              },
              "generatedName": "BasicValName",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValId",
            "key": "id",
            "schema": {
              "description": "This valâ€™s id",
              "schema": {
                "format": "uuid",
                "type": "string"
              },
              "generatedName": "BasicValId",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValVersion",
            "key": "version",
            "schema": {
              "description": "The version of this val, starting at zero",
              "schema": {
                "minimum": 0,
                "type": "int"
              },
              "generatedName": "BasicValVersion",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValCode",
            "key": "code",
            "schema": {
              "generatedName": "BasicValCode",
              "value": {
                "description": "TypeScript code associated with this val",
                "schema": {
                  "type": "string"
                },
                "generatedName": "BasicValCode",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValPublic",
            "key": "public",
            "schema": {
              "description": "Whether this val is available publicly on Val Town",
              "schema": {
                "type": "boolean"
              },
              "generatedName": "BasicValPublic",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValCreatedAt",
            "key": "createdAt",
            "schema": {
              "schema": {
                "type": "datetime"
              },
              "generatedName": "BasicValCreatedAt",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValPrivacy",
            "key": "privacy",
            "schema": {
              "description": "This valâ€™s privacy setting. Unlisted vals do not appear on profile pages or elsewhere, but you can link to them.",
              "generatedName": "BasicValPrivacy",
              "values": [
                {
                  "generatedName": "public",
                  "value": "public",
                  "casing": {}
                },
                {
                  "generatedName": "unlisted",
                  "value": "unlisted",
                  "casing": {}
                },
                {
                  "generatedName": "private",
                  "value": "private",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValType",
            "key": "type",
            "schema": {
              "description": "The type of a val. HTTP can receive web requests, Email can receive emails, Cron runs periodically, and Script can be used for libraries or one-off calculations",
              "generatedName": "BasicValType",
              "values": [
                {
                  "generatedName": "interval",
                  "value": "interval",
                  "casing": {}
                },
                {
                  "generatedName": "http",
                  "value": "http",
                  "casing": {}
                },
                {
                  "generatedName": "express",
                  "value": "express",
                  "casing": {}
                },
                {
                  "generatedName": "email",
                  "value": "email",
                  "casing": {}
                },
                {
                  "generatedName": "script",
                  "value": "script",
                  "casing": {}
                },
                {
                  "generatedName": "rpc",
                  "value": "rpc",
                  "casing": {}
                },
                {
                  "generatedName": "httpnext",
                  "value": "httpnext",
                  "casing": {}
                }
              ],
              "groupName": [],
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "enum"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValUrl",
            "key": "url",
            "schema": {
              "description": "The URL of this val on the Val Town website",
              "schema": {
                "format": "uri",
                "type": "string"
              },
              "generatedName": "BasicValUrl",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValLinks",
            "key": "links",
            "schema": {
              "allOf": [],
              "properties": [
                {
                  "conflict": {},
                  "generatedName": "basicValLinksSelf",
                  "key": "self",
                  "schema": {
                    "description": "The URL of this val on this API",
                    "schema": {
                      "format": "uri",
                      "type": "string"
                    },
                    "generatedName": "BasicValLinksSelf",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "basicValLinksVersions",
                  "key": "versions",
                  "schema": {
                    "description": "The endpoint to retrieve this valâ€™s versions",
                    "schema": {
                      "format": "uri",
                      "type": "string"
                    },
                    "generatedName": "BasicValLinksVersions",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                },
                {
                  "conflict": {},
                  "generatedName": "basicValLinksModule",
                  "key": "module",
                  "schema": {
                    "description": "The URL of this Valâ€™s source code as a module",
                    "schema": {
                      "format": "uri",
                      "type": "string"
                    },
                    "generatedName": "BasicValLinksModule",
                    "groupName": [],
                    "type": "primitive"
                  },
                  "audiences": []
                }
              ],
              "allOfPropertyConflicts": [],
              "generatedName": "BasicValLinks",
              "groupName": [],
              "additionalProperties": false,
              "source": {
                "file": "../openapi.yml",
                "type": "openapi"
              },
              "type": "object"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "basicValAuthor",
            "key": "author",
            "schema": {
              "generatedName": "BasicValAuthor",
              "value": {
                "allOf": [],
                "properties": [
                  {
                    "conflict": {},
                    "generatedName": "basicValAuthorId",
                    "key": "id",
                    "schema": {
                      "schema": {
                        "format": "uuid",
                        "type": "string"
                      },
                      "generatedName": "BasicValAuthorId",
                      "groupName": [],
                      "type": "primitive"
                    },
                    "audiences": []
                  },
                  {
                    "conflict": {},
                    "generatedName": "basicValAuthorUsername",
                    "key": "username",
                    "schema": {
                      "generatedName": "BasicValAuthorUsername",
                      "value": {
                        "schema": {
                          "type": "string"
                        },
                        "generatedName": "BasicValAuthorUsername",
                        "groupName": [],
                        "type": "primitive"
                      },
                      "groupName": [],
                      "type": "nullable"
                    },
                    "audiences": []
                  }
                ],
                "allOfPropertyConflicts": [],
                "description": "The user who created this val",
                "generatedName": "BasicValAuthor",
                "groupName": [],
                "additionalProperties": false,
                "source": {
                  "file": "../openapi.yml",
                  "type": "openapi"
                },
                "type": "object"
              },
              "groupName": [],
              "type": "nullable"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "A Val",
        "generatedName": "BasicVal",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      },
      "PaginationLinks": {
        "allOf": [],
        "properties": [
          {
            "conflict": {},
            "generatedName": "paginationLinksSelf",
            "key": "self",
            "schema": {
              "description": "URL of this page",
              "schema": {
                "format": "uri",
                "type": "string"
              },
              "generatedName": "PaginationLinksSelf",
              "groupName": [],
              "type": "primitive"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginationLinksPrev",
            "key": "prev",
            "schema": {
              "generatedName": "paginationLinksPrev",
              "value": {
                "description": "URL of the previous page, if any",
                "schema": {
                  "format": "uri",
                  "type": "string"
                },
                "generatedName": "PaginationLinksPrev",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          },
          {
            "conflict": {},
            "generatedName": "paginationLinksNext",
            "key": "next",
            "schema": {
              "generatedName": "paginationLinksNext",
              "value": {
                "description": "URL of the next page, if any",
                "schema": {
                  "format": "uri",
                  "type": "string"
                },
                "generatedName": "PaginationLinksNext",
                "groupName": [],
                "type": "primitive"
              },
              "groupName": [],
              "type": "optional"
            },
            "audiences": []
          }
        ],
        "allOfPropertyConflicts": [],
        "description": "Links to use for pagination",
        "generatedName": "PaginationLinks",
        "groupName": [],
        "additionalProperties": false,
        "source": {
          "file": "../openapi.yml",
          "type": "openapi"
        },
        "type": "object"
      }
    },
    "namespacedSchemas": {}
  },
  "variables": {},
  "nonRequestReferencedSchemas": {},
  "securitySchemes": {
    "bearerAuth": {
      "type": "bearer"
    }
  },
  "globalHeaders": [],
  "idempotencyHeaders": [],
  "groups": {}
}